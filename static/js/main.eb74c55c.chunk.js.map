{"version":3,"sources":["firebase.js","images/Logo3.svg","components/Loading/LoadingData.jsx","functions/other/normalizeString.js","functions/find/findVariantsOfName.js","contexts/AuthContext.jsx","contexts/ScreenContext.jsx","shared/ui/molecules/add-to-list-circle.jsx","functions/display/displayDate.js","components/Basic/LastSeen.jsx","components/Basic/PersonTiny.jsx","functions/add/addSongToHistory.js","functions/other/shuffleSongs.js","hooks/useConditionFunc.js","shared/lib/check-number.js","shared/lib/fetch-item-list.js","contexts/ModalContext.jsx","contexts/SongContext.jsx","functions/check/checkKaraoke.js","components/Basic/NotificationCircle.jsx","functions/other/shortWord.js","functions/display/displayAuthorsStr.js","functions/find/findLenOfAuthors.js","functions/other/correctTimeDisplay.js","components/FullScreenPlayer/colorCircles.jsx","components/FullScreenPlayer/Player.jsx","components/Basic/Hint.jsx","features/song/lib/add-song-to-library.js","functions/other/filterArrayWithArray.js","functions/other/deleteSongFromLibrary.js","components/FullScreenPlayer/AddOrDeleteSongButton.jsx","hooks/useAddOrDeleteSong.js","components/Playlist/AddToPlaylistItem.jsx","components/FullScreenPlayer/AddToPlaylists.jsx","functions/other/getUID.js","shared/lib/create-—Åhat.js","shared/lib/find-chat-url.js","functions/other/sendMessage.js","functions/other/shareWithManyFriends.js","components/Loading/LoadingCircle.jsx","features/search/lib/hooks/use-search.jsx","features/search/lib/rank-current-hint.js","features/search/ui/molecules/search-bar-buttons.jsx","features/search/ui/atoms/search-filter-item.jsx","features/search/ui/molecules/search-filters.jsx","features/search/lib/find-search-hints.js","features/search/lib/translite-word.js","features/search/lib/hooks/use-load-hints.jsx","shared/lib/find-right-icon.js","features/search/ui/atoms/search-hint-item.jsx","features/search/ui/organisms/search-hints.jsx","shared/ui/organisms/search-bar.jsx","shared/ui/atoms/button.jsx","shared/ui/atoms/input.jsx","shared/ui/atoms/submit-button.jsx","components/Lists/TinyPersonsList.jsx","components/Lists/FriendsListToShareWith.jsx","components/AuthorPage/PersonTinyVerticalItem.jsx","components/Buttons/SeeMoreRoundButton.jsx","components/Info/SongInfo.jsx","components/FullScreenPlayer/AuthorsList.jsx","components/MessagePlates/ErrorPlate.jsx","functions/other/transformLyricsToArrayOfObject.js","components/AdminAndAuthor/EditSong.jsx","components/Windows/SongItemMobileMoreWindow.jsx","components/Windows/SongItemMoreWindow.jsx","shared/lib/hooks/use-outside-click.js","features/search/lib/save-search-history.js","features/song/lib/hooks/use-add-or-delete-song.js","features/song/ui/molecules/add-or-delete-button.jsx","functions/other/rightFormatForBigNumber.js","features/song/ui/molecules/show-additional-info.jsx","features/song/ui/organisms/song-item.jsx","shared/ui/atoms/download-button.jsx","components/Loading/FullScreenLoading.jsx","components/SignIn-Up/RadioBtn.jsx","components/AddWindow/AddPlaylist.jsx","components/LibraryPage/CreatePlaylistPage.jsx","utils/consts.js","data/leftSideBar.js","features/leftside-bar/ui/atoms/NavigationItem.jsx","components/Basic/IsUserOnlineCircle.jsx","features/leftside-bar/ui/molecules/Person.jsx","hooks/usePlaylistSongs.js","features/leftside-bar/ui/molecules/TinyPlaylist.jsx","features/leftside-bar/ui/organisms/leftside-bar.jsx","hooks/useMediaMetadata.js","components/Buttons/MoreBtn.jsx","components/Tools/TitleWithMoreBtn.jsx","components/Lists/SongList.jsx","features/album/ui/organisms/customize-album.jsx","features/author/lib/add-author-to-library.js","features/author/lib/add-friend.js","features/author/lib/delete-author-from-library.js","features/author/ui/molecules/chat-with-friend-button.jsx","features/author/ui/organisms/customize-author.jsx","functions/add/addPlaylistToLibrary.js","functions/other/removePlaylistFromLibrary.js","hooks/useAlbumAuthors.js","shared/ui/atoms/go-back-button.jsx","components/Info/AlbumInfo.jsx","components/Info/AuthorInfo.jsx","components/Windows/AuthorMoreWindow.jsx","components/AuthorPage/SmallImages.jsx","components/AuthorPage/Header.jsx","functions/delete/deletePlaylist.js","functions/other/quitPlaylist.js","features/author/lib/delete-friend.js","components/Containers/ContentContainer.jsx","pages/album/index.jsx","components/AddWindow/AddSong.jsx","components/Tools/Slider.jsx","components/AdminAndAuthor/AddWindow.jsx","components/AuthorPage/PersonTinyList.jsx","functions/find/findAuthorsAlbums.js","components/Playlist/DeletedPlaylist.jsx","components/AuthorPage/PlaylistItem.jsx","components/Lists/AlbumList.jsx","components/AuthorPage/Playlists.jsx","features/author/ui/atoms/friend-request-item.jsx","features/author/lib/hooks/use-friend-request.jsx","features/author/ui/molecules/friend-request.jsx","functions/find/findIfSongIsNew.js","features/author/ui/molecules/top-songs.jsx","features/author/ui/molecules/author-item-big.jsx","components/Lists/AuthorsList.jsx","shared/lib/find-similar-artists.js","features/author/ui/organisms/similar-artists.jsx","pages/author/index.jsx","features/chats/ui/atoms/amount-of-unseen-messages.jsx","features/dialogue/ui/atoms/seen-by-circle.jsx","features/dialogue/ui/atoms/typing-animation.jsx","features/chats/ui/molecules/last-sent-message.jsx","features/chats/ui/organisms/chat-item.jsx","features/chats/lib/amount-of-unseen-messages.js","features/chats/lib/hooks/use-create-chat.jsx","features/chats/ui/organisms/create-chat.jsx","pages/chats/index.jsx","features/dialogue/ui/atoms/date-on-top.jsx","features/dialogue/lib/leave-chat.js","features/dialogue/ui/atoms/leave-chat-button.jsx","features/dialogue/ui/molecules/attachment-list.jsx","shared/lib/filter-array-of-objects-with-array.js","features/dialogue/lib/add-people-to-chat.js","features/dialogue/ui/organisms/add-people-to-chat.jsx","features/dialogue/ui/organisms/chat-info.jsx","features/dialogue/ui/atoms/wallpaper-item.jsx","features/dialogue/ui/molecules/wallpapers.jsx","hooks/fetchFirebaseData.js","features/dialogue/ui/molecules/chat-more-button.jsx","features/dialogue/ui/organisms/chat-header.jsx","features/dialogue/lib/what-to-write-in-response-item.js","features/dialogue/ui/molecules/attached-items-in-chat-input.jsx","features/dialogue/ui/organisms/chat-input.jsx","hooks/useOnScreen.js","features/dialogue/lib/hooks/use-mark-message-read.js","components/Loading/SongItemLoading.jsx","features/dialogue/ui/molecules/message-item.jsx","features/dialogue/ui/organisms/message-field.jsx","features/dialogue/ui/molecules/system-message.jsx","features/dialogue/ui/molecules/display-chat-messages.jsx","features/dialogue/ui/organisms/chat-messages-window.jsx","pages/dialogue/index.jsx","hooks/useRealTimeMessages.js","pages/history/index.jsx","features/home/ui/organisms/main-banner.jsx","features/home/ui/organisms/recent-songs.jsx","features/home/ui/organisms/recommended-authors.jsx","components/MessagePlates/ImportantMessage.jsx","features/home/ui/organisms/recommended-songs.jsx","features/home/ui/organisms/top-15-Songs.jsx","pages/home/index.jsx","images/wave2.svg","components/LibraryPage/LibraryPlaylistItem.jsx","functions/find/findVisiblePlaylists.js","components/LibraryPage/SongsPage.jsx","components/LibraryPage/PlaylistsPage.jsx","components/LibraryPage/AuthorsPage.jsx","pages/library/index.jsx","components/SignIn-Up/BlurredBg.jsx","components/SignIn-Up/TitleAndLogo.jsx","pages/login/index.jsx","components/FullScreenPlayer/Loading.jsx","components/FullScreenPlayer/LyricsParagraph.jsx","features/lyrics-editing/ui/molecules/lyrics.jsx","features/lyrics-editing/ui/molecules/song-image-and-name.jsx","pages/lyrics-editing/index.jsx","pages/page-not-found/index.jsx","features/search/lib/hooks/use-search-history.jsx","features/search/ui/organisms/search-history.jsx","pages/search/index.jsx","pages/settings/index.jsx","routes.js","pages/signup/index.jsx","routers/ContentRouter.js","shared/lib/hooks/use-chat-notifications.js","components/BottomControlBar/MobileControlBarItem.js","components/Mobile/BottomControlBar.jsx","components/Mobile/FullBottomSide.jsx","music/notification.mp3","components/Windows/chat-notification-window.jsx","components/Windows/ConfirmWindow.jsx","components/Windows/MessageWindow.jsx","components/Windows/ModalWindow.jsx","data/playerRightSide.js","components/FullScreenPlayer/Share.jsx","components/FullScreenPlayer/Options.jsx","components/FullScreenPlayer/Lyrics.jsx","components/FullScreenPlayer/Queue.jsx","components/Basic/FullScreenPlayer.jsx","components/Basic/ContentWrapper.jsx","hooks/useUpdateListenCount.js","routers/AppRouter.js","app/index.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","storage","firestore","LoadingData","className","loading","src","Logo","alt","normalizeString","str","replace","toLowerCase","findVariantsOfName","name","variantsOfName","personName","i","length","push","substr","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","userId","setUserId","setLoading","searchValue","setSearchValue","useEffect","collection","doc","onSnapshot","user","data","undefined","uid","onAuthStateChanged","a","value","login","email","password","setError","signInWithEmailAndPassword","then","catch","err","message","signup","role","photoURL","imageColors","createUserWithEmailAndPassword","result","set","displayName","isAuthor","parseInt","isVerified","numberOfListenersPerMonth","ownSongs","ownPlaylists","addedSongs","addedPlaylists","addedAuthors","lastSongPlayed","chats","friends","subscribers","regDate","FieldValue","serverTimestamp","place","rank","history","logout","signOut","Provider","ScreenContext","useScreen","ScreenProvider","window","innerWidth","screenWidth","setScreenWidth","innerHeight","screenHeight","setScreenHeight","isMobile","setIsMobile","handleResize","addEventListener","removeEventListener","AddToListCircle","listOfChosenItems","setListOfChosenItems","itemId","onClick","e","preventDefault","style","width","includes","type","filteredList","filter","el","color","prev","amountOfZeros","number","toDateTime","secs","t","Date","setSeconds","displayDate","stringDate","displayMode","Months","newDate","isNaN","seconds","getMonth","getDate","getFullYear","getHours","getMinutes","LastSeen","userUID","lastSeen","setLastSeen","isOnline","setIsOnline","unsubscribe","fiveMinutesAgo","getTime","online","RightIconWrapper","styled","div","PersonTiny","chosenArray","setChosenArray","rightButton","restProps","addSongToHistory","songId","get","res","songsList","unshift","update","shuffleSongs","songsArray","randomIndexesArray","newSongsNumbersArray","Array","counter","randNum","Math","floor","random","useConditionFunc","fetchFunc","changeCondition","dep","JSON","stringify","checkNumber","max","min","fetchItemList","list","setList","resManipulation","lastFunc","lengthRestrict","assignMode","tempArray","map","Promise","all","finalResult","temp","forEach","item","find","ModalContext","useModal","ModalClassProvider","openModal","setOpenModal","content","setContent","isOpenned","bottomMessage","setBottomMessage","isOpenConfirm","setIsOpenConfirm","confirmText","rejectText","onConfirmL","onReject","confirmContent","setConfirmContent","closeConfirm","toggleModal","openConfirm","question","onConfirm","openBottomMessage","time","setTimeout","SongContext","useSong","SongProvider","yourSongs","setYourSongs","yourPlaylists","setYourPlaylists","yourAuthors","setYourAuthors","yourFriends","setYourFriends","currentSongQueue","setCurrentSongQueue","currentSong","setCurrentSong","currentSongInQueue","setCurrentSongInQueue","currentSongPlaylistSource","setCurrentSongPlaylistSource","inputRange","setInputRange","id","currentSongData","setCurrentSongData","imgColors","setImgColors","play","setPlay","currentTime","setCurrentTime","songDuration","setSongDuration","repeatMode","setRepeatMode","shuffleMode","setShuffleMode","currentParagraph","setCurrentParagraph","isThereKaraoke","setIsThereKaraoke","openFullScreenPlayer","setOpenFullScreenPlayer","songRef","useRef","currentParagraphRef","inputRef","leftSideBarInputRef","rightSideCurrentPage","setRightSideCurrentPage","openMenu","setOpenMenu","fetchQueue","lastQueue","findIndex","fetchYourSongs","slice","reverse","fetchCurrentSongInitial","tempSongObject","songSrc","authors","cover","listens","releaseDate","lyrics","curSong","curQueue","source","image","docRef","exists","songData","error","console","log","defineCurrentParagraph","first","last","roundedTime","parseFloat","current","toFixed","midPoint","blockStartTime","startTime","nextBlockStartTime","correctSongNumber","currentSongId","playlistId","String","concat","friend","status","obj","shuffledSongsArray","song","document","title","nextSong","prevSong","playSong","pause","playing","event","target","defineCurrentParagraphLight","changeCurrentTime","localName","displayAuthors","authorsList","separatingSign","to","stopPropagation","displayAuthorsFull","loadSongData","duration","NotificationCircle","shortWord","word","len","displayAuthorsStr","authorslist","separator","lenLimit","authorsString","author","join","findLenOfAuthors","correctTimeDisplay","ColorCircles","opacity","transform","Player","textLimit","linkToAuthors","overflow","animation","whiteSpace","ref","step","onChange","background","Hint","text","direction","addSongToLibrary","songAuthorsUIDS","finalAuthorsUIDS","authorId","newList","filterArrayWithArray","whatToFilter","withWhatToFilter","this","indexOf","deleteSongFromLibrary","songNum","songObj","filtered","finalFilteredAuthors","AddOrDeleteButtonFull","useAddOrDeleteSong","playlistSongs","setPlaylistSongs","isAdded","setIsAdded","response","songs","newSongsList","sortedPlaylists","AddToPlaylistItem","playlist","addFunc","AddToPlaylists","setSongData","display","flexDirection","key","getUID","c","piece","toString","createChat","participants","chatUID","chatName","chatImage","admins","messages","wallpaper","typing","personId","chatInfo","findChatURL","allParticipants","setShouldCreate","setFriendChatId","foundChat","chatId","where","docs","chat","count","every","sendMessage","chatData","sender","messageText","attachedSongs","attachedAlbums","attachedAuthors","inResponseToMessage","trim","tempMessages","sentTime","seenBy","shareWithFriends","shareList","whatToShare","setCompleted","sortedFriends","resolve","LoadingCircle","top","useSearch","setAllFoundSongs","setResultAuthorList","setResultPlaylists","defaultSearchMode","searchMode","defaultSongsListValue","defaultAuthorsListValue","defaultPlaylistsListValue","setMessage","foundAnything","setFoundAnything","inputValue","setInputValue","findItem","defaultList","foundItemTempArray","normalizedSearch","itemData","realData","isPrivate","authorsIdsArray","sort","b","songsIdsArray","albumsIdsArray","findSomething","rankCurrentHint","hintName","hintUid","SearchBarButtons","props","setValue","visibility","cursor","SearchFilterItem","setSearchMode","index","SearchFilters","findSearchHints","hints","hint","transliteWord","dictionaryRuToEn","dictionaryEnToRu","'","split","reduce","acc","letter","useLoadHints","setCurrentHint","inputFocused","setSearchHints","sortedHints","findRightIcon","SearcHintItem","currentHint","height","marginLeft","SearchHints","searchHints","SearchBar","focus","inputText","setInputFocused","marginTop","onFocus","onBlur","borderRadius","placeholder","onKeyDown","handleCurrentHint","position","ButtonWrapper","button","textLen","Button","icon","visible","Wrapper","InputWrapper","input","Input","required","SubmitButtonWrapper","isLoading","isActive","completed","SubmitButton","action","TinyPersonsList","listOfPeople","marginBottom","person","FriendsListToShareWith","chosenFriends","setChosenFriends","setMessageText","foundPeople","setFoundPeople","maxHeight","overflowY","margin","PersonTinyVerticalItem","SeeMoreRoundButton","SongInfo","friendsThatHaveThisSong","setFriendsThatHaveThisSong","findFriendsThatHaveThisSong","backgroundImage","alignItems","fontSize","marginRight","minHeight","AuthorsList","listOfAuthors","ErrorPlate","errorMessage","transformLyricsToArrayOfObjects","arrayOfParagraphs","startSubstr","fixedLyrics","EditSong","songName","setSongName","songAuthors","setSongAuthors","songCover","setSongCover","setImageColors","setLyrics","foundAuthors","setFoundAuthors","setErrorMessage","removeAuthorFromList","people","justifyContent","padding","manuallyChangeColor","isAdmin","some","addAuthor","fontWeight","authorRef","authorData","authorSongs","filteredSongs","SongItemMobileMoreWindow","SongItemMoreWindow","openMoreWindow","moreWindowPosRelativeToViewport","bottom","useOutsideClick","setFunc","handleClickOutside","contains","saveSearchHistory","itemType","newItemSaved","AddOrDeleteButton","addSong","removeSong","rightFormanForBigNumber","ShowAdditionInfo","showListens","isNewSong","SongItem","localIndex","listOfChosenSongs","setListOfSongs","shouldSaveSearchHistory","setOpenMoreWindow","setMoreWindowPosRelativeToViewport","currentItemRef","getBoundingClientRect","DownloadButtonWrapper","DownloadButton","setItemSrc","setImageLocalPath","isImage","file","files","isValid","validExtensions","ext","ex","URL","createObjectURL","storageRef","fileRef","child","put","getDownloadURL","onFileChange","FullScreenLoading","RadioBtn","currentActive","label","AddPlaylist","playlistName","setPlaylistName","playlistCover","setPlaylistCover","authorsInputValue","setAuthorsInputValue","allAuthors","setAllAuthors","chosenAuthors","setChosenAuthors","setReleaseDate","songsSearch","setSongsSearch","allSongs","setAllSongs","chosenSongs","setChosenSongs","playlistStatus","setPlaylistStatus","isPlaylistPrivate","setIsPlaylistPrivate","imageLocalPath","loadingPlaylist","setLoadingPlaylist","creationDate","isAlbum","authorPlaylists","getColors","colors","removeSongFromList","CreatePlaylistPage","LOGIN_ROUTE","SIGNUP_ROUTE","HOME_ROUTE","LIBRARY_ROUTE","SEARCH_ROUTE","CHAT_ROUTE","HISTORY_ROUTE","leftSideBar","link","NavigationItem","currentPage","setCurrentPage","IsUserOnlineCircle","Person","friendChatId","shouldCreate","sendAnimation","setSendAnimation","loadingSendSong","setLoadingSendSong","shareWithManyFriends","pointerEvents","usePlaylistSongs","listSongsIds","albumSong","TinyPlaylist","playSongsInPlaylist","useHistory","backgroundPosition","backgroundSize","left","LeftsideBar","currentFriendToPlaylistPage","setCurrentFriendToPlaylistPage","page","location","hash","alignSelf","useMediaMetadata","updatePositionState","navigator","mediaSession","setPositionState","playbackRate","pauseSong","metadata","MediaMetadata","artist","album","artwork","sizes","setActionHandler","MoreBtn","func","lenOfList","maxLen","boolVal","TitleWithMoreBtn","SongList","listOfSongs","showCount","showSearch","displayIfEmpty","showhistory","isHorizontal","showMoreSongs","setShowMoreSongs","localSearchValue","setLocalSearchValue","displaySongs","setDisplaySongs","allFoundSongs","CustomizeAlbum","loadingAuthors","loadingSongs","setLoadingSongs","filteredPlaylists","addAuthorToLibrary","addFriend","friendData","updatedDataForFriend","updatedDataForCurrentUser","deleteAuthorFromLibrary","ChatWithFriendButton","textDecoration","CustomizeAuthor","authorName","authorCover","setAuthorCover","onSubmit","addPlaylistToLibrary","playlistData","removePlaylistFromLibrary","useAlbumAuthors","albumAuthors","setAlbumAuthors","authorsImages","setAuthorsImages","ids","authrorsData","tempArrayAuthors","tempArrayImages","fetchAuthorsData","GoBackBtn","goBack","AlbumInfo","friendsThatHaveThisAlbum","setFriendsThatHaveThisAlbum","findFriendsThatHaveThisAlbum","AuthorInfo","setFriendsThatHaveThisAuthor","findFriendsThatHaveThisAuthor","AuthorMoreWindow","SmallImages","imagesList","borderColor","border","Header","headerColors","isFriend","moreWindowRef","personFilteredPlaylists","pId","delete","quitPlaylist","filteredUserFriends","filteredOtherUserFriends","deleteFriend","backgroundColor","ContentContainer","AlbumPage","match","useRouteMatch","setHeaderColors","albumId","params","albumData","setAlbumData","fetchAlbumsData","fetchSongsInAlbum","flex","boxShadow","AddSong","setSongSrc","loadingSong","setLoadingSong","Slider","pages","pageName","AddWindow","openAddSongWindow","setOpenAddSongWindow","currentSliderPage","setCurrentSliderPage","sliderPages","PersonTinyList","setListOfPeople","scrollLeft","setScrollLeft","wrapperRef","shouldRenderRightArrow","setShouldRenderRightArrow","scrollWidth","offsetWidth","personObj","personData","onScroll","findAuthorsAlbums","authorsData","setAuthorsPlaylists","currentUserUID","DeletedPlaylist","PlaylistItem","listOfChosenAlbums","setListOfChosenAlbums","playlistDate","AlbumList","listOfAlbums","Playlists","authorsPlaylists","FriendRequestItem","rejectFriend","useFriendRequest","friendRequests","setFriendRequests","friendObj","fetchFriendRequests","friendsList","otherUserFriendList","arrOfReqs","FriendRequest","findIfSongIsNew","songReleaseDate","TopSongs","popularSongs","setPopularSongs","newSongs","setNewSongs","prevSongs","findAuthorsSongs","AuthorItemBig","listOfChosenAuthors","setListOfChosenAuthors","findSimilarArtistsNames","authorsSongsArr","setSimilarAuthors","peopleArray","newAuthors","flat","uniqueAuthorsSet","Set","uniqueAuthorsIdsArray","from","uniqueAuthorsDataArray","j","findSimilarArtists","authorsSongsArray","SimilarArtists","similarArtists","setSimilarArtists","AuthorPage","setAuthorsData","AmountOfUnseenMessages","amountOfUnseen","SeenByCircle","listOfSeen","TypingAnimation","typingPeople","typingPeopleData","setTypingPeopleData","LastSentMessage","isGroup","showUnseenCircle","messageLen","lastAttachedItem","setLastAttachedItem","shouldPutDot","setShouldPutDot","lastMessage","setLastMessage","messageIcons","lastIcon","setLastIcon","setTyping","snapshot","docChanges","findWhatToWriteUnderName","ChatItem","otherPerson","setOtherPerson","setAmountOfUnseen","otherPersonId","accum","amountOfUnseenMessages","fetchOtherPerson","now","useCreateChat","foundFriends","setFoundFriends","chatCover","setChatCover","setChatName","allowedToCreate","setAllowedToCreate","handleCreateChat","CreateChat","ChatPage","yourChats","setYourChats","DateOnTop","date","leaveChat","newParticipants","participantId","LeaveChatButton","isCurrentUserLeaving","AttachmentList","attachmentList","setAttachmentList","sliderCurrentPage","setSliderCurrentPage","attachmentContent","fetchAttachedData","attachedType","firebaseCollection","filterArrayOfObjectsWithArray","filterParametr","isInverted","addPeopleToChat","AddPeopleToChat","filteredFriends","ChatInfo","setParticipants","chatNameValue","setChatNameValue","newChatPhoto","setNewChatPhoto","newImageLocalPath","setNewImageLocalPath","newImageColors","setNewImageColors","participantsPage","setParticipantsPage","showUpdateBtn","setShowUpdateBtn","WallpaperItem","currentWallpaper","Wallpapers","wallpaperList","setWallpaperList","setState","sortCondition","whereCondFP","whereCondSP","whereCondTP","deps","fetchData","useFetchFirebaseData","ChatMoreBtn","chatMoreBtnRef","ChatHeader","whatToWriteInResponseToItem","referedMessage","AttachedItemsInChatInput","attachedItems","setAttachedItems","setItems","removeItemFromAttached","ChatInput","setInResponseToMessage","otherMessages","openAttachWindow","setOpenAttachWindow","setAttachedSongs","setAttachedAlbums","setAttachedAuthors","resultPlaylists","resultAuthorList","inResponseNames","setInResponseNames","attachedSongsNames","setAttachedSongsNames","attachWindowRef","sendMessageFull","transition","messageId","outline","useOnScreen","isIntersecting","setIntersecting","observer","IntersectionObserver","entry","observe","disconnect","useMarkMessageRead","messageData","messageRef","isVisible","SongItemLoading","MessageItem","scrollToMessageRef","setScrollToMessageId","scrollToMessageId","showPhoto","inResponseToMessageArr","setInResponseToMessageArr","userThatSentMessage","setUserThatSentMessage","messageSentTime","attachedSongsData","setAttachedSongsData","attachedAuthorsData","setAttachedAuthorsData","attachedPlaylistsData","setAttachedPlaylistsData","inResponseToMessagesData","setInResponseToMessagesData","swipeDeltaX","setSwipeDeltaX","transformTransition","setTransformTransition","handlers","useSwipeable","onSwiping","deltaX","addMessageToResponseList","returnToInitial","dropDelta","clearTimeout","fetchSentMessageUser","paddingBottom","onTouchEnd","MessageField","messageList","setDateRefsArray","setShowPhoto","showDate","setShowDate","dateRef","SystemMessageWrapper","SystemMessage","DisplayChatMessages","messagesWindowRef","scrollTo","offsetTop","ChatMessagesWindow","findTopDate","scroll","scrollHeight","clientHeight","scrollToBottom","DialoguePage","dateRefsArray","setChatData","setMessageList","currentDateOnTop","setCurrentDateOnTop","scrollTop","innerHTML","useRealTimeMessages","HistoryPage","historySongsIds","setHistorySongsIds","historySongs","setHistorySongs","MainBanner","bannerColors","setBannerColors","setcurrentSliderPage","topAuthor","setTopAuthor","topSong","setTopSong","topAlbum","setTopAlbum","findTop","criterion","orderBy","limit","RecentSongs","recentSongs","setRecentSongs","tempSongsIds","findRecentSongs","RecommendedAuthors","recommendationAuthors","setRecommendationAuthors","uniqueAuthors","setUniqueAuthors","uniqueAuthorsUIDSArray","ImportantMessage","RecommendedSongs","recommendedSongs","setRecommendedSongs","fetchRecommendedSongs","Top15Songs","topSongs","setTopSongs","HomePage","LibraryPlaylistItem","findVisiblePlaylists","SongsPage","playlistsVisible","setPlaylistsVisible","p","wave","PlaylistsPage","playlistsDisplay","setPlaylistsDisplay","AuthorsPage","setDisplayAuthors","LibraryPage","libraryPages","BlurredBg","TitleAndLogo","LogInPage","setEmail","setPassword","disabled","Loading","timeSpan","LyricsParagraph","lyricsModeratorMode","karaokeModeratorTimes","setKaraokeModeratorTimes","setInputKaraokeTime","inputKaraokeTime","paragraphRef","paragraphStyle","abs","addLyricsBlock","indexOfRelativeElement","tempTimes","splice","convertedToNumber","inputKaraoke","LyricsWrapper","Lyrics","lyricItem","SongImageAndNameWrapper","SongImageAndName","LyricsEditingWrapper","LyricsEditingPage","PageNotFound","useSearchHistory","historyPlaylists","setHistoryPlaylists","historyAuthors","setHistoryAuthors","SearchHistory","SearchPage","resultSongList","setResultSongList","resultAlbumList","setResultAlbumList","shadowColor","setShadowColor","SettingsPage","publicRoutes","path","Component","currentRoleChoice","setCurrentRoleChoice","setName","setPhotoURL","privateRoutes","ContentRouter","component","exact","useChatNotifications","notifications","setNotifications","MobileControlBarItem","element","BottomControlBar","userElement","FullBottomSide","ChatNotificationWindowWrapper","show","ChatNotificationWindow","notifsLen","userData","setUserData","setShow","Audio","notifSound","ConfirmWindow","confirmRef","MessageWindow","findColor","light","dark","findIcon","ModalWindow","modalRef","rightSide","socialMedia","social","setLyricsModeratorMode","canUpdateLyrics","setCanUpdateLyrics","scrollIntoView","paragraph","tempSongData","FullScreenPlayer","lyricsRef","mobileMenuTransition","setMobileMenuTransition","deltaY","setDeltaY","deltaYMobileMenu","setDeltaYMobileMenu","mobileContentScroll","mobileMenuRef","bgRef","handlersForMobileMenu","onSwipedLeft","onSwipedRight","returnToInitialMobileMenu","rightSideContent","RightSidePage","noLyrics","changeRightSidePage","documentElement","setProperty","zIndex","ContentWrapper","intervalExciter","setIntervalExciter","updateListenCount","listenCountTimeOut","sourceId","listedData","authorNumberOfListenersPerMonth","useUpdateListenCount","interval","setInterval","clearInterval","onLoadedData","onTimeUpdate","onEnded","notif","AppRouter","App","basename","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eb74c55c.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/storage'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\nimport 'firebase/analytics'\r\nimport seedDatabase from './seedDatabase';\r\n\r\nconst app = firebase.initializeApp({\r\n\tapiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n\tauthDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n\tprojectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n\tstorageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n\tmessagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n\tappId:process.env.REACT_APP_FIREBASE_APP_ID,\r\n\tmeasurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n});\r\nfirebase.analytics();\r\nexport const auth = app.auth()\r\nexport const storage = app.storage()\r\nexport const firestore = app.firestore()\r\n// seedDatabase(firestore)\r\nexport default app","export default __webpack_public_path__ + \"static/media/Logo3.fc53f4ac.svg\";","import React from 'react'\r\nimport Logo from '../../images/Logo3.svg'\r\nexport const LoadingData = () => {\r\n\treturn (\r\n\t\t<div className = \"LoadingData\">\r\n\t\t\t<img loading = \"lazy\" src={Logo} alt=\"\" />\r\n\t\t</div>\r\n\t)\r\n}\r\n","export default function normalizeString(str){\r\n\treturn str.replace(/\\s/g, '').replace(/[,'._/]/g, '').replace(/-/g, '').toLowerCase()\r\n}","import normalizeString from \"../other/normalizeString\"\r\n\r\nexport const findVariantsOfName = (name) => {\r\n\tlet variantsOfName = []\r\n\tlet personName = normalizeString(name)\r\n\tfor (let i = 1; i < personName.length + 1; i++) {\r\n\t\tvariantsOfName.push(personName.substr(0, i))\r\n\t}\r\n\treturn variantsOfName\r\n}","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { auth, firestore } from \"../firebase\";\r\nimport firebase from \"firebase\";\r\nimport { LoadingData } from \"../components/Loading/LoadingData\";\r\nimport { findVariantsOfName } from \"../functions/find/findVariantsOfName\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [userId, setUserId] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  function login(email, password, setError, setLoading) {\r\n    setLoading(true);\r\n    return auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then()\r\n      .catch((err) => {\r\n        setError(err.message);\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut();\r\n  }\r\n\r\n  function signup(\r\n    email,\r\n    name,\r\n    password,\r\n    role,\r\n    photoURL,\r\n    imageColors,\r\n    setError,\r\n    setLoading\r\n  ) {\r\n    setLoading(true);\r\n    return auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((result) => {\r\n        firestore\r\n          .collection(\"users\")\r\n          .doc(result.user.uid)\r\n          .set({\r\n            uid: result.user.uid,\r\n            displayName: name,\r\n            photoURL:\r\n              photoURL ||\r\n              \"https://images.fineartamerica.com/images/artworkimages/mediumlarge/1/music-icon-mohammed-jabir-ap.jpg\",\r\n            isAuthor: parseInt(role) === 1,\r\n            isVerified: parseInt(role) === 1,\r\n            numberOfListenersPerMonth: 0,\r\n            ownSongs: [],\r\n            ownPlaylists: [],\r\n            addedSongs: [],\r\n            addedPlaylists: [],\r\n            addedAuthors: [],\r\n            lastSongPlayed: \"\",\r\n            chats: [],\r\n            friends: [],\r\n            subscribers: 0,\r\n            regDate: firebase.firestore.FieldValue.serverTimestamp(),\r\n            imageColors: imageColors,\r\n          });\r\n        firestore\r\n          .collection(\"search\")\r\n          .doc(result.user.uid)\r\n          .set({\r\n            place: \"users\",\r\n            uid: result.user.uid,\r\n            rank: 0,\r\n            variantsOfName: findVariantsOfName(name),\r\n          });\r\n\r\n        firestore.collection(\"history\").doc(result.user.uid).set({\r\n          history: [],\r\n        });\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setError(err.message);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (userId !== null) {\r\n      const unsubscribe = firestore\r\n        .collection(\"users\")\r\n        .doc(userId)\r\n        .onSnapshot((user) => {\r\n          if (user.data()) {\r\n            if (currentUser.uid === undefined) {\r\n              setCurrentUser(user.data());\r\n            }\r\n          }\r\n        });\r\n      return unsubscribe;\r\n    }\r\n  }, [firestore, userId]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        setUserId(user.uid);\r\n      } else {\r\n        setUserId(null);\r\n        setCurrentUser({});\r\n        setLoading(false);\r\n      }\r\n    });\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    setCurrentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    loading,\r\n    setLoading,\r\n    searchValue,\r\n    setSearchValue,\r\n  };\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nconst ScreenContext = React.createContext();\r\n\r\nexport const useScreen = () => {\r\n  return useContext(ScreenContext);\r\n};\r\n\r\nexport const ScreenProvider = ({ children }) => {\r\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n  const [screenHeight, setScreenHeight] = useState(window.innerHeight);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 1000);\r\n  function handleResize() {\r\n    setScreenWidth(window.innerWidth);\r\n    setScreenHeight(window.innerHeight);\r\n    setIsMobile(window.innerWidth < 1000);\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  const value = {\r\n    screenWidth,\r\n    screenHeight,\r\n    isMobile,\r\n  };\r\n  return (\r\n    <ScreenContext.Provider value={value}>{children}</ScreenContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { IoIosCheckmarkCircle, IoIosRadioButtonOff } from \"react-icons/io\";\r\n\r\nexport const AddToListCircle = ({\r\n  listOfChosenItems,\r\n  setListOfChosenItems,\r\n  itemId,\r\n}) => {\r\n  return listOfChosenItems !== undefined ? (\r\n    <div onClick={(e) => e.preventDefault()} style={{ width: \"35px\" }}>\r\n      {listOfChosenItems.includes(itemId) ? (\r\n        <button\r\n          type=\"button\"\r\n          onClick={(e) => {\r\n            let filteredList = listOfChosenItems.filter((el) => el !== itemId);\r\n            setListOfChosenItems(filteredList);\r\n          }}\r\n          className=\"addToListBtn\"\r\n        >\r\n          <IoIosCheckmarkCircle style={{ color: \"var(--lightBlue)\" }} />\r\n        </button>\r\n      ) : (\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setListOfChosenItems((prev) => [...prev, itemId])}\r\n          className=\"addToListBtn\"\r\n        >\r\n          <IoIosRadioButtonOff />\r\n        </button>\r\n      )}\r\n    </div>\r\n  ) : null;\r\n};\r\n","\r\nfunction amountOfZeros(number) {\r\n\treturn number % 10 === number ? \"0\" + number : number\r\n}\r\n\r\nfunction toDateTime(secs) {\r\n\tvar t = new Date(1970, 0, 1); // Epoch\r\n\tt.setSeconds(secs);\r\n\treturn t;\r\n}\r\n\r\nexport default function displayDate(stringDate, displayMode = 0){\r\n\tconst Months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n\tlet newDate = !isNaN(stringDate)?stringDate.seconds?toDateTime(stringDate.seconds + 10800):toDateTime((stringDate/1000) + 10800):new Date(stringDate)\r\n\tif(displayMode === 0){\r\n\t\treturn Months[newDate.getMonth()] + \" \" + newDate.getDate() + \", \" + newDate.getFullYear() \r\n\t}\r\n\r\n\tif(displayMode === 1){\r\n\t\treturn Months[newDate.getMonth()] + \" \" + newDate.getDate()\r\n\t}\r\n\r\n\tif(displayMode === 2){\r\n\t\treturn amountOfZeros(newDate.getHours()) + \":\" + amountOfZeros(newDate.getMinutes())\r\n\t}\r\n\r\n\tif(displayMode === 3){\r\n\t\treturn Months[newDate.getMonth()] + \" \" + newDate.getDate() + \", \" + newDate.getFullYear() + \" at \" + amountOfZeros(newDate.getHours()) + \":\" + amountOfZeros(newDate.getMinutes())\r\n\t}\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { firestore } from \"../../firebase\";\r\nimport displayDate from \"../../functions/display/displayDate\";\r\n\r\nexport const LastSeen = ({ userUID, ...restProps }) => {\r\n  const [lastSeen, setLastSeen] = useState(\"\");\r\n  const [isOnline, setIsOnline] = useState(false);\r\n  useEffect(() => {\r\n    const unsubscribe = firestore\r\n      .collection(\"users\")\r\n      .doc(userUID)\r\n      .onSnapshot((doc) => {\r\n        if (userUID !== undefined) {\r\n          const fiveMinutesAgo = new Date().getTime() - 300000;\r\n          const isOnline = doc.data().online > fiveMinutesAgo;\r\n          setIsOnline(isOnline);\r\n          if (doc.data().online === undefined) setLastSeen(\"offline\");\r\n          else if (!isOnline)\r\n            setLastSeen(\"last seen \" + displayDate(doc.data().online, 3));\r\n        }\r\n      });\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [firestore, userUID]);\r\n  return isOnline ? (\r\n    <span className=\"is-online\">Online</span>\r\n  ) : (\r\n    <span className=\"is-not-online\">{lastSeen}</span>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { AddToListCircle } from \"../../shared/ui/molecules/add-to-list-circle\";\r\nimport { LastSeen } from \"./LastSeen\";\r\nimport styled from \"styled-components\";\r\n\r\nconst RightIconWrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 8px;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nexport const PersonTiny = ({\r\n  data,\r\n  chosenArray,\r\n  setChosenArray,\r\n  lastSeen = false,\r\n  rightButton,\r\n  ...restProps\r\n}) => {\r\n  return (\r\n    <div className=\"person\" {...restProps}>\r\n      <AddToListCircle\r\n        listOfChosenItems={chosenArray}\r\n        setListOfChosenItems={setChosenArray}\r\n        itemId={data.uid}\r\n      />\r\n      <div className=\"pesronImg\">\r\n        <img loading=\"lazy\" src={data.photoURL} alt=\"\" />\r\n      </div>\r\n      <div className=\"personName\">{data.displayName}</div>\r\n      {lastSeen && <LastSeen userUID={data.uid} className=\"is-online\" />}\r\n      <RightIconWrapper>{rightButton}</RightIconWrapper>\r\n    </div>\r\n  );\r\n};\r\n","import { firestore } from \"../../firebase\"\r\n\r\nexport const addSongToHistory = (songId, currentUser) => {\r\n\tfirestore.collection('history').doc(currentUser.uid).get().then(res=>{\r\n\t\tconst songsList = res.data().history\r\n\t\tif(songsList[0] !== songId) songsList.unshift(songId)\r\n\t\tif(songsList.length > 30) songsList.length = 30\r\n\r\n\t\tfirestore.collection('history').doc(currentUser.uid).update({\r\n\t\t\thistory:songsList\r\n\t\t})\r\n\t})\r\n}","export default function shuffleSongs(songsArray){\r\n\tconst randomIndexesArray = []\r\n\tconst newSongsNumbersArray = new Array(songsArray.length)\r\n\tlet counter = 0\r\n\twhile(counter < songsArray.length){\r\n\t\tconst randNum = Math.floor(Math.random()*(songsArray.length))\r\n\t\tif(!randomIndexesArray.includes(randNum)){\r\n\t\t\trandomIndexesArray.push(randNum)\r\n\t\t\tnewSongsNumbersArray[randNum] = songsArray[counter]\r\n\t\t\tcounter++\r\n\t\t}\r\n\t}\r\n\treturn newSongsNumbersArray\r\n}","import { useEffect } from 'react'\r\n\r\nexport const useConditionFunc = (currentUser, fetchFunc, changeCondition, dep) => {\r\n\tuseEffect(() => {\r\n\t\tif (currentUser.uid) {\r\n\t\t\tif (changeCondition) {\r\n\t\t\t\tfetchFunc()\r\n\t\t\t}\r\n\t\t}\r\n\t}, [JSON.stringify(dep)])\r\n}\r\n","export default function checkNumber(number, max, min = 0){\r\n\tif(number > max) return min\r\n\tif(number < min) return max\r\n\r\n\treturn number\r\n}","import { firestore } from \"../../firebase\"\r\n\r\nexport const fetchItemList = (list, collection, setList, resManipulation = (res) => res, lastFunc = () => null, lengthRestrict, assignMode = 0) => {\r\n\tif (list?.length) {\r\n\t\tconst tempArray = list.map(async (itemId, i) => {\r\n\t\t\treturn (await firestore.collection(collection).doc(itemId).get()).data()\r\n\t\t})\r\n\t\tPromise.all(tempArray).then(res => {\r\n\t\t\tlet finalResult = resManipulation(res)\r\n\t\t\tif (finalResult?.length > lengthRestrict) finalResult.length = lengthRestrict\r\n\t\t\tif (assignMode === 0) setList(finalResult)\r\n\t\t\telse setList(prev => {\r\n\t\t\t\tlet temp = []\r\n\t\t\t\tfinalResult.forEach(item => {\r\n\t\t\t\t\tif (item) {\r\n\t\t\t\t\t\tif (!prev.find(el => el['id'] === item['id'])) {\r\n\t\t\t\t\t\t\ttemp.push(item)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn [...prev, ...temp]\r\n\t\t\t})\r\n\t\t\tlastFunc()\r\n\t\t})\r\n\t}\r\n}","import React, { useContext, useState } from \"react\";\r\n\r\nconst ModalContext = React.createContext();\r\n\r\nexport const useModal = () => {\r\n  return useContext(ModalContext);\r\n};\r\n\r\nexport const ModalClassProvider = ({ children }) => {\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [content, setContent] = useState(<h1>Test</h1>);\r\n  const [bottomMessage, setBottomMessage] = useState({\r\n    isOpenned: false,\r\n    type: \"success\",\r\n    message: \"Action is successfully done!\",\r\n  });\r\n  const [isOpenConfirm, setIsOpenConfirm] = useState(false);\r\n  const [confirmContent, setConfirmContent] = useState({\r\n    confirmText: \"Confirm Action\",\r\n    rejectText: \"Cancel\",\r\n    onConfirmL: () => {\r\n      return null;\r\n    },\r\n    onReject: () => {\r\n      return null;\r\n    },\r\n  });\r\n  function toggleModal() {\r\n    setOpenModal(!openModal);\r\n  }\r\n\r\n  //{question:question, confirmText:..., rejectText:..., onConfirm..., onReject:...}\r\n  function openConfirm(\r\n    question,\r\n    confirmText,\r\n    rejectText = \"Cancel\",\r\n    onConfirm,\r\n    onReject = closeConfirm\r\n  ) {\r\n    setIsOpenConfirm(true);\r\n    setConfirmContent({\r\n      question: question,\r\n      confirmText: confirmText,\r\n      rejectText: rejectText,\r\n      onConfirm: onConfirm,\r\n      onReject: onReject,\r\n    });\r\n  }\r\n\r\n  function closeConfirm() {\r\n    setIsOpenConfirm(false);\r\n  }\r\n\r\n  const openBottomMessage = (\r\n    message = \"Success\",\r\n    type = \"success\",\r\n    time = 3000\r\n  ) => {\r\n    setBottomMessage({\r\n      isOpenned: true,\r\n      type: type,\r\n      message: message,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      setBottomMessage({\r\n        isOpenned: false,\r\n        type: type,\r\n        message: message,\r\n      });\r\n    }, time);\r\n  };\r\n\r\n  const value = {\r\n    openModal,\r\n    setOpenModal,\r\n    toggleModal,\r\n    setContent,\r\n    content,\r\n    isOpenConfirm,\r\n    setIsOpenConfirm,\r\n    openConfirm,\r\n    closeConfirm,\r\n    confirmContent,\r\n    bottomMessage,\r\n    openBottomMessage,\r\n  };\r\n  return (\r\n    <ModalContext.Provider value={value}>{children}</ModalContext.Provider>\r\n  );\r\n};\r\n","import React, {\r\n  createContext,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PersonTiny } from \"../components/Basic/PersonTiny\";\r\nimport { LoadingData } from \"../components/Loading/LoadingData\";\r\nimport { firestore } from \"../firebase\";\r\nimport { addSongToHistory } from \"../functions/add/addSongToHistory\";\r\nimport { checkKaraoke } from \"../functions/check/checkKaraoke\";\r\nimport shuffleSongs from \"../functions/other/shuffleSongs\";\r\nimport { useConditionFunc } from \"../hooks/useConditionFunc\";\r\nimport checkNumber from \"../shared/lib/check-number\";\r\nimport { fetchItemList } from \"../shared/lib/fetch-item-list\";\r\nimport { useAuth } from \"./AuthContext\";\r\nimport { useModal } from \"./ModalContext\";\r\nconst SongContext = createContext(null);\r\n\r\nexport const useSong = () => {\r\n  return useContext(SongContext);\r\n};\r\n\r\nexport const SongProvider = ({ children }) => {\r\n  const { currentUser, loading, setLoading } = useAuth();\r\n  const { setOpenModal } = useModal();\r\n  const [yourSongs, setYourSongs] = useState([]);\r\n  const [yourPlaylists, setYourPlaylists] = useState([]);\r\n  const [yourAuthors, setYourAuthors] = useState([]);\r\n  const [yourFriends, setYourFriends] = useState([]);\r\n  const [currentSongQueue, setCurrentSongQueue] = useState([]);\r\n  const [currentSong, setCurrentSong] = useState(-1);\r\n  const [currentSongInQueue, setCurrentSongInQueue] = useState(0);\r\n  const [currentSongPlaylistSource, setCurrentSongPlaylistSource] = useState(\r\n    {}\r\n  );\r\n  const [inputRange, setInputRange] = useState(0);\r\n  const [currentSongData, setCurrentSongData] = useState({ id: -1 });\r\n\r\n  const [imgColors, setImgColors] = useState([]);\r\n  const [play, setPlay] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [songDuration, setSongDuration] = useState(0);\r\n  const [repeatMode, setRepeatMode] = useState(1);\r\n  const [shuffleMode, setShuffleMode] = useState(0);\r\n  const [currentParagraph, setCurrentParagraph] = useState(0);\r\n  const [isThereKaraoke, setIsThereKaraoke] = useState(false);\r\n  const [openFullScreenPlayer, setOpenFullScreenPlayer] = useState(false);\r\n  const songRef = useRef(null);\r\n  const currentParagraphRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n  const leftSideBarInputRef = useRef(null);\r\n  const [rightSideCurrentPage, setRightSideCurrentPage] = useState(0);\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n\r\n  function fetchYourFriends() {\r\n    fetchItemList(\r\n      currentUser.friends\r\n        .filter((friend) => friend.status === \"added\")\r\n        .map((obj) => obj.uid),\r\n      \"users\",\r\n      setYourFriends\r\n    );\r\n  }\r\n\r\n  function fetchQueue() {\r\n    fetchItemList(\r\n      currentUser?.lastQueue?.songsList,\r\n      \"songs\",\r\n      setCurrentSongQueue,\r\n      (res) => res,\r\n      () =>\r\n        setCurrentSongInQueue(\r\n          currentUser.lastQueue.songsList.findIndex(\r\n            (songId) => songId === currentUser.lastSongPlayed\r\n          )\r\n        )\r\n    );\r\n  }\r\n\r\n  function fetchYourSongs() {\r\n    fetchItemList(\r\n      currentUser.addedSongs.slice(0).reverse(),\r\n      \"songs\",\r\n      setYourSongs,\r\n      (res) => res,\r\n      fetchQueue\r\n    );\r\n  }\r\n\r\n  function fetchYourAuthors() {\r\n    fetchItemList(currentUser.addedAuthors, \"users\", setYourAuthors);\r\n  }\r\n\r\n  async function fetchCurrentSongInitial() {\r\n    if (currentUser.uid !== undefined) {\r\n      const tempSongObject = {\r\n        id: -1,\r\n        name: \"\",\r\n        songSrc: \"\",\r\n        authors: [],\r\n        cover: \"\",\r\n        listens: 0,\r\n        releaseDate: \"\",\r\n        lyrics: [],\r\n        imageColors: [],\r\n      };\r\n      const curSong =\r\n        currentUser.lastSongPlayed ||\r\n        currentUser.addedSongs[0] ||\r\n        tempSongObject.id;\r\n      const curQueue =\r\n        currentUser.lastQueue || {\r\n          source: \"/library\",\r\n          name: \"Your Library\",\r\n          image: currentUser.photoURL,\r\n          songsList: yourSongs,\r\n        } ||\r\n        [];\r\n      setCurrentSong(curSong);\r\n      setCurrentSongPlaylistSource(curQueue);\r\n\r\n      if (curSong !== -1) {\r\n        const docRef = firestore.collection(\"songs\").doc(curSong);\r\n        const docData = docRef\r\n          .get()\r\n          .then((doc) => {\r\n            if (doc.exists) {\r\n              const songData = doc.data();\r\n              setCurrentSongData(songData);\r\n              setImgColors(songData.imageColors || []);\r\n              setLoading(false);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Error getting document:\", error);\r\n            setLoading(false);\r\n          });\r\n      } else {\r\n        setCurrentSongData(tempSongObject);\r\n        setImgColors([]);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  async function fetchCurrentSong() {\r\n    if (currentSong !== -1) {\r\n      firestore\r\n        .collection(\"songs\")\r\n        .doc(currentSong)\r\n        .get()\r\n        .then((doc) => {\r\n          if (doc.exists) {\r\n            const songData = doc.data();\r\n            setImgColors(songData.imageColors || []);\r\n            setCurrentSongData(songData);\r\n          }\r\n        });\r\n    } else fetchCurrentSongInitial();\r\n  }\r\n\r\n  function fetchYourPlaylists() {\r\n    const tempArray = [];\r\n    if (currentUser.ownPlaylists) {\r\n      currentUser.ownPlaylists.map((playlistId, i) => {\r\n        const response = firestore.collection(\"playlists\").doc(playlistId);\r\n        response\r\n          .get()\r\n          .then((doc) => {\r\n            if (doc.exists) {\r\n              tempArray.push(doc.data());\r\n              if (i === currentUser.ownPlaylists.length - 1)\r\n                setYourPlaylists(tempArray);\r\n            } else {\r\n              console.log(\"No such document!\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Error getting document:\", error);\r\n          });\r\n      });\r\n    }\r\n\r\n    if (currentUser.addedPlaylists) {\r\n      currentUser.addedPlaylists.map((playlistId, i) => {\r\n        const response = firestore.collection(\"playlists\").doc(playlistId);\r\n        response\r\n          .get()\r\n          .then((doc) => {\r\n            if (doc.exists) {\r\n              tempArray.push(doc.data());\r\n              if (i === currentUser.addedPlaylists.length - 1)\r\n                setYourPlaylists(tempArray);\r\n            } else {\r\n              console.log(\"No such document!\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Error getting document:\", error);\r\n          });\r\n      });\r\n    }\r\n  }\r\n\r\n  useConditionFunc(\r\n    currentUser,\r\n    fetchYourSongs,\r\n    currentUser.addedSongs &&\r\n      currentUser.addedSongs.length !== yourSongs.length,\r\n    [currentUser.addedSongs]\r\n  );\r\n  useConditionFunc(\r\n    currentUser,\r\n    fetchYourPlaylists,\r\n    currentUser.ownPlaylists &&\r\n      String(currentUser.ownPlaylists.concat(currentUser.addedPlaylists)) !==\r\n        String(yourPlaylists),\r\n    [currentUser.ownPlaylists]\r\n  );\r\n  useConditionFunc(\r\n    currentUser,\r\n    fetchYourFriends,\r\n    currentUser.friends &&\r\n      String(currentUser.friends.filter((obj) => obj.status === \"added\")) !==\r\n        String(yourFriends),\r\n    [currentUser.friends]\r\n  );\r\n  useConditionFunc(\r\n    currentUser,\r\n    fetchYourAuthors,\r\n    currentUser.addedAuthors &&\r\n      currentUser.addedAuthors.length !== yourAuthors.length,\r\n    [currentUser.addedAuthors]\r\n  );\r\n  useConditionFunc(\r\n    currentUser,\r\n    fetchCurrentSong,\r\n    currentUser &&\r\n      (currentSongData.id === -1 || currentSong || currentUser.lastSongPlayed),\r\n    [currentSong, currentUser.lastSongPlayed]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (currentUser.uid === undefined) {\r\n      setCurrentSongData({ id: -1 });\r\n      setCurrentSong(-1);\r\n      setCurrentSongQueue([]);\r\n      setYourAuthors([]);\r\n      setYourSongs([]);\r\n      setYourFriends([]);\r\n      setYourPlaylists([]);\r\n    }\r\n  }, [currentUser.uid]);\r\n\r\n  useEffect(() => {\r\n    setIsThereKaraoke(checkKaraoke(currentSongData.lyrics));\r\n  }, [currentSongData.lyrics]);\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      if (shuffleMode) {\r\n        let shuffledSongsArray = shuffleSongs(currentSongQueue);\r\n        setCurrentSongQueue(shuffledSongsArray);\r\n        setCurrentSongInQueue(\r\n          shuffledSongsArray.findIndex((song) => song.id === currentSong)\r\n        );\r\n      } else {\r\n        setCurrentSongQueue(currentSongPlaylistSource.songsList);\r\n        setCurrentSongInQueue(\r\n          currentSongPlaylistSource.songsList.findIndex(\r\n            (song) => song.id === currentSong\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }, [shuffleMode]);\r\n\r\n  function playSong() {\r\n    if (play) {\r\n      songRef.current.pause();\r\n    } else {\r\n      songRef.current.play();\r\n    }\r\n\r\n    setPlay(!play);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setCurrentParagraph(0);\r\n  }, [currentSongData.id]);\r\n\r\n  function loadSongData(e) {\r\n    setCurrentTime(e.target.currentTime);\r\n    setSongDuration(e.target.duration);\r\n    inputRef.current.max = e.target.duration;\r\n    if (window.innerWidth > 1000)\r\n      leftSideBarInputRef.current.max = e.target.duration;\r\n    setInputRange(0);\r\n    if (play) {\r\n      e.target.play();\r\n    } else e.target.pause();\r\n  }\r\n\r\n  function defineCurrentParagraph() {\r\n    //Binary Search\r\n    let first = 0,\r\n      last = currentSongData.lyrics.length - 1;\r\n    let roundedTime = parseFloat(\r\n      parseFloat(songRef.current.currentTime).toFixed(1)\r\n    );\r\n    while (first <= last) {\r\n      let midPoint = Math.floor((first + last) / 2);\r\n      let blockStartTime = parseFloat(\r\n        parseFloat(currentSongData.lyrics[midPoint].startTime).toFixed(1)\r\n      );\r\n      let nextBlockStartTime =\r\n        midPoint !== currentSongData.lyrics.length - 1\r\n          ? parseFloat(\r\n              parseFloat(\r\n                currentSongData.lyrics[midPoint + 1].startTime\r\n              ).toFixed(1)\r\n            )\r\n          : last;\r\n      if (currentSongData.lyrics[midPoint].startTime !== \"undefined\") {\r\n        if (\r\n          roundedTime >= blockStartTime &&\r\n          roundedTime <= nextBlockStartTime\r\n        ) {\r\n          setCurrentParagraph(midPoint);\r\n          break;\r\n        } else if (blockStartTime < roundedTime) first = midPoint + 1;\r\n        else last = midPoint - 1;\r\n      } else return;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (rightSideCurrentPage === 2) defineCurrentParagraph();\r\n  }, [rightSideCurrentPage]);\r\n\r\n  function defineCurrentParagraphLight() {\r\n    if (\r\n      currentParagraph !== currentSongData.lyrics.length - 1 &&\r\n      parseFloat(currentSongData.lyrics[currentParagraph + 1].startTime) <=\r\n        songRef.current.currentTime\r\n    ) {\r\n      return setCurrentParagraph(currentParagraph + 1);\r\n    }\r\n  }\r\n  function playing(event) {\r\n    setCurrentTime(event.target.currentTime);\r\n    if (\r\n      isThereKaraoke &&\r\n      rightSideCurrentPage === 2 &&\r\n      openFullScreenPlayer &&\r\n      openMenu\r\n    ) {\r\n      defineCurrentParagraphLight();\r\n    }\r\n\r\n    setInputRange((event.target.currentTime / songDuration) * 100);\r\n  }\r\n\r\n  async function nextSong() {\r\n    let correctSongNumber = checkNumber(\r\n      currentSongInQueue + 1,\r\n      currentSongQueue.length - 1\r\n    );\r\n    let currentSongId = await (\r\n      await firestore\r\n        .collection(\"songs\")\r\n        .doc(currentSongQueue[correctSongNumber].id)\r\n        .get()\r\n    ).data().id;\r\n    addSongToHistory(currentSongId, currentUser);\r\n    setCurrentParagraph(0);\r\n    setCurrentSong(currentSongId);\r\n    setCurrentSongInQueue(\r\n      checkNumber(correctSongNumber, currentSongQueue.length - 1)\r\n    );\r\n    firestore.collection(\"users\").doc(currentUser.uid).update({\r\n      lastSongPlayed: currentSongId,\r\n    });\r\n  }\r\n\r\n  async function prevSong() {\r\n    if (currentTime > 5) {\r\n      songRef.current.currentTime = 0;\r\n      setCurrentTime(0);\r\n      setCurrentParagraph(0);\r\n      return;\r\n    }\r\n    let correctSongNumber = checkNumber(\r\n      currentSongInQueue - 1,\r\n      currentSongQueue.length - 1\r\n    );\r\n    let currentSongId = await (\r\n      await firestore\r\n        .collection(\"songs\")\r\n        .doc(currentSongQueue[correctSongNumber].id)\r\n        .get()\r\n    ).data().id;\r\n    addSongToHistory(currentSongId, currentUser);\r\n    setCurrentParagraph(0);\r\n    setCurrentSong(currentSongId);\r\n    setCurrentSongInQueue(\r\n      checkNumber(correctSongNumber, currentSongQueue.length - 1)\r\n    );\r\n    firestore.collection(\"users\").doc(currentUser.uid).update({\r\n      lastSongPlayed: currentSongId,\r\n    });\r\n  }\r\n\r\n  function changeCurrentTime(event, startTime = 0) {\r\n    if (event.target.localName === \"div\" || event.target.localName === \"p\") {\r\n      if (startTime !== undefined) {\r\n        setCurrentTime(startTime);\r\n        songRef.current.currentTime = startTime;\r\n        setInputRange((startTime / songDuration) * 100);\r\n        if (\r\n          isThereKaraoke &&\r\n          rightSideCurrentPage === 2 &&\r\n          openFullScreenPlayer\r\n        )\r\n          setCurrentParagraph(parseInt(event.target.id));\r\n        songRef.current.play();\r\n        setPlay(true);\r\n        return;\r\n      }\r\n    } else {\r\n      setCurrentTime(event.target.value);\r\n      songRef.current.currentTime = event.target.value;\r\n      setInputRange((event.target.value / songDuration) * 100);\r\n      if (isThereKaraoke && rightSideCurrentPage === 2 && openFullScreenPlayer)\r\n        defineCurrentParagraph();\r\n    }\r\n  }\r\n\r\n  function displayAuthors(\r\n    authorsList = currentSongData.authors,\r\n    separatingSign = \" & \"\r\n  ) {\r\n    return authorsList.map((el, i) => {\r\n      return (\r\n        <>\r\n          <Link\r\n            to={`/authors/${el.uid}`}\r\n            key={el.uid}\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              setOpenFullScreenPlayer(false);\r\n            }}\r\n          >\r\n            {el.displayName}\r\n          </Link>\r\n          {i === authorsList.length - 1 ? \"\" : separatingSign}\r\n        </>\r\n      );\r\n    });\r\n  }\r\n\r\n  function displayAuthorsFull(\r\n    authorsList = currentSongData.authors,\r\n    separatingSign = \" & \"\r\n  ) {\r\n    return authorsList.map((el, i) => {\r\n      return (\r\n        <>\r\n          <Link\r\n            to={`/authors/${el.uid}`}\r\n            key={el.uid}\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              setOpenFullScreenPlayer(false);\r\n              setOpenModal(false);\r\n            }}\r\n          >\r\n            <PersonTiny data={el} />\r\n          </Link>\r\n        </>\r\n      );\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = currentSongData.name || \"Soundbubble\";\r\n  }, [currentSongData.name]);\r\n  return (\r\n    <SongContext.Provider\r\n      value={{\r\n        yourSongs,\r\n        setYourSongs,\r\n        yourPlaylists,\r\n        yourFriends,\r\n        currentSongQueue,\r\n        currentSongPlaylistSource,\r\n        setCurrentSongPlaylistSource,\r\n        setCurrentSongQueue,\r\n        setCurrentSongInQueue,\r\n        play,\r\n        setPlay,\r\n        songSrc: currentSongData.songSrc,\r\n        currentTime,\r\n        setCurrentTime,\r\n        songDuration,\r\n        songRef,\r\n        name: currentSongData.name,\r\n        authors: currentSongData.authors,\r\n        lyrics: currentSongData.lyrics,\r\n        cover: currentSongData.cover,\r\n        imgColors,\r\n        setImgColors,\r\n        currentSong,\r\n        setCurrentSong,\r\n        repeatMode,\r\n        setRepeatMode,\r\n        shuffleMode,\r\n        setShuffleMode,\r\n        inputRef,\r\n        leftSideBarInputRef,\r\n        isThereKaraoke,\r\n        rightSideCurrentPage,\r\n        currentParagraph,\r\n        currentParagraphRef,\r\n        nextSong,\r\n        prevSong,\r\n        playSong,\r\n        playing,\r\n        defineCurrentParagraph,\r\n        setRightSideCurrentPage,\r\n        changeCurrentTime,\r\n        displayAuthors,\r\n        displayAuthorsFull,\r\n        openFullScreenPlayer,\r\n        setOpenFullScreenPlayer,\r\n        loadSongData,\r\n        fetchYourSongs,\r\n        setOpenMenu,\r\n        openMenu,\r\n        currentSongData,\r\n        setCurrentSongData,\r\n        setIsThereKaraoke,\r\n        setYourPlaylists,\r\n        yourAuthors,\r\n        setYourAuthors,\r\n        inputRange,\r\n      }}\r\n    >\r\n      {!loading ? children : <LoadingData />}\r\n    </SongContext.Provider>\r\n  );\r\n};\r\n","export function checkKaraoke(lyrics) {\r\n\tif (lyrics !== undefined && lyrics.length === 0) return false\r\n\r\n\tif (lyrics !== undefined) {\r\n\t\tif (lyrics[0].startTime === 'undefined') return false\r\n\t}\r\n\r\n\treturn true\r\n}\r\n","import React from 'react'\r\n\r\nexport const NotificationCircle = () => {\r\n\treturn (\r\n\t\t<div className = \"NotificationCircle\"></div>\r\n\t)\r\n}\r\n","export default function shortWord(word, len = 50){\r\n\treturn word.substr(0, len) + (word.length > len?\"...\":\"\")\r\n}","import shortWord from \"../other/shortWord\"\r\n\r\nconst displayAuthorsStr = (authorslist, separator = ' & ', lenLimit = 100) => {\r\n\tconst authorsString = authorslist?.map(author => author.displayName).join(separator)\r\n\treturn authorsString ? shortWord(authorsString, lenLimit) : \"\"\r\n}\r\n\r\nexport default displayAuthorsStr","export function findLenOfAuthors(authors) {\r\n\tlet str = \"\"\r\n\tauthors.forEach(el => {str += el.displayName})\r\n\treturn str.length\r\n}","function amountOfZeros(number) {\r\n\treturn number % 10 === number ? \"0\" + number : number\r\n}\r\n\r\nexport default function correctTimeDisplay(seconds) {\r\n\treturn amountOfZeros(Math.floor(seconds / 60)) + \":\" + amountOfZeros(Math.floor(seconds % 60))\r\n}","import React from \"react\";\r\n\r\nconst ColorCircles = ({ play }) => {\r\n  return (\r\n    <div\r\n      className=\"ColorCircles\"\r\n      style={!play ? { opacity: 0, transform: \"scale(.95)\" } : {}}\r\n    >\r\n      <span className=\"colorCircle\"></span>\r\n      <span className=\"colorCircle\"></span>\r\n      <span className=\"colorCircle\"></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorCircles;\r\n","import React from \"react\";\r\nimport { FaBackward, FaForward, FaPause, FaPlay } from \"react-icons/fa\";\r\nimport { TiArrowRepeat, TiArrowShuffle } from \"react-icons/ti\";\r\nimport { useSong } from \"../../contexts/SongContext\";\r\nimport displayAuthorsStr from \"../../functions/display/displayAuthorsStr\";\r\nimport { findLenOfAuthors } from \"../../functions/find/findLenOfAuthors\";\r\nimport correctTimeDisplay from \"../../functions/other/correctTimeDisplay\";\r\nimport checkNumber from \"../../shared/lib/check-number\";\r\nimport ColorCircles from \"./colorCircles\";\r\nexport const Player = ({ inputRef, textLimit = 18, linkToAuthors = true }) => {\r\n  const {\r\n    currentSongData,\r\n    currentTime,\r\n    changeCurrentTime,\r\n    songDuration,\r\n    setRepeatMode,\r\n    repeatMode,\r\n    play,\r\n    prevSong,\r\n    playSong,\r\n    nextSong,\r\n    setShuffleMode,\r\n    shuffleMode,\r\n    displayAuthors,\r\n    name,\r\n    authors,\r\n    cover,\r\n    inputRange,\r\n  } = useSong();\r\n  return currentSongData.id !== -1 ? (\r\n    <div className=\"player\">\r\n      <div className=\"playerUpperSide\">\r\n        <div className=\"songCover\">\r\n          <img loading=\"lazy\" src={cover} alt=\"\" />\r\n        </div>\r\n        <div className=\"nameAndAuthors\">\r\n          <h2\r\n            title={name.length > textLimit ? name : null}\r\n            style={{ overflow: \"hidden\" }}\r\n          >\r\n            <div\r\n              style={\r\n                name.length > textLimit\r\n                  ? {\r\n                      animation: \"outSideText 17s infinite\",\r\n                      whiteSpace: \"nowrap\",\r\n                    }\r\n                  : {}\r\n              }\r\n            >\r\n              {name}\r\n            </div>\r\n          </h2>\r\n          <h3\r\n            style={{ overflow: \"hidden\" }}\r\n            title={authors.map((el) => \" \" + el.displayName)}\r\n          >\r\n            {linkToAuthors ? (\r\n              <div\r\n                style={\r\n                  findLenOfAuthors(currentSongData.authors) > textLimit\r\n                    ? {\r\n                        animation: \"outSideText 17s infinite\",\r\n                        whiteSpace: \"nowrap\",\r\n                      }\r\n                    : {}\r\n                }\r\n              >\r\n                {displayAuthors()}\r\n              </div>\r\n            ) : (\r\n              <div>{displayAuthorsStr(authors, \" & \", 33)}</div>\r\n            )}\r\n          </h3>\r\n        </div>\r\n      </div>\r\n      <div className=\"controlPanel\">\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          ref={inputRef}\r\n          step=\"1\"\r\n          value={currentTime}\r\n          onChange={(event) => {\r\n            changeCurrentTime(event);\r\n          }}\r\n          style={{\r\n            background: `linear-gradient(to right, var(--themeColor2) ${inputRange}%, #fff ${inputRange}%)`,\r\n          }}\r\n        />\r\n        <div className=\"startAndEndTime\">\r\n          <span>{correctTimeDisplay(currentTime)}</span>\r\n          <span>{correctTimeDisplay(songDuration)}</span>\r\n        </div>\r\n        <div className=\"btns\">\r\n          <button\r\n            className=\"shuffleBtn\"\r\n            onClick={() => setShuffleMode(checkNumber(shuffleMode + 1, 1))}\r\n            style={\r\n              shuffleMode ? { background: \"var(--reallyTransparentWhite)\" } : {}\r\n            }\r\n          >\r\n            <TiArrowShuffle\r\n              style={shuffleMode ? { color: \"var(--themeColor)\" } : {}}\r\n            />\r\n          </button>\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              prevSong();\r\n            }}\r\n          >\r\n            <FaBackward />\r\n          </button>\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              playSong();\r\n            }}\r\n          >\r\n            {play ? <FaPause /> : <FaPlay />}\r\n          </button>\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              nextSong();\r\n            }}\r\n          >\r\n            <FaForward />\r\n          </button>\r\n          <button\r\n            className=\"repeatBtn\"\r\n            onClick={() => setRepeatMode(checkNumber(repeatMode + 1, 2))}\r\n            style={\r\n              repeatMode ? { background: \"var(--reallyTransparentWhite)\" } : {}\r\n            }\r\n          >\r\n            <TiArrowRepeat\r\n              style={repeatMode ? { color: \"var(--themeColor)\" } : {}}\r\n            />\r\n            <span style={repeatMode === 2 ? { opacity: 1 } : {}}></span>\r\n          </button>\r\n          <ColorCircles play={play} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n","import React from 'react'\r\nimport { useScreen } from '../../contexts/ScreenContext'\r\n\r\nexport const Hint = ({text, direction = \"top\", ...restProps}) => {\r\n\tconst {isMobile} = useScreen()\r\n\treturn !isMobile?(\r\n\t\t<div className = {\"Hint \" + direction} {...restProps}>\r\n\t\t\t<h5>{text}</h5>\r\n\t\t</div>\r\n\t):null\r\n}\r\n","import { firestore } from \"../../../firebase\"\r\n\r\nexport const addSongToLibrary = (e, song, currentUser, setCurrentUser) => {\r\n\te.stopPropagation()\r\n\tconst songAuthorsUIDS = song.authors.map(author => author.uid)\r\n\tconst finalAuthorsUIDS = []\r\n\tsongAuthorsUIDS.forEach(authorId => {\r\n\t\tif (!currentUser.addedAuthors.includes(authorId)) {\r\n\t\t\tfinalAuthorsUIDS.push(authorId)\r\n\t\t}\r\n\t})\r\n\tlet newList = currentUser.addedSongs\r\n\tnewList.push(song.id)\r\n\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\taddedSongs: newList,\r\n\t\taddedAuthors: [...finalAuthorsUIDS, ...currentUser.addedAuthors]\r\n\t})\r\n\r\n\tfinalAuthorsUIDS.forEach(async authorId => {\r\n\t\tlet subscribers = (await firestore.collection('users').doc(authorId).get()).data().subscribers\r\n\t\tsubscribers++\r\n\t\tfirestore.collection('users').doc(authorId).update({\r\n\t\t\tsubscribers: subscribers\r\n\t\t})\r\n\t})\r\n}","export default function filterArrayWithArray(whatToFilter, withWhatToFilter){\r\n\treturn whatToFilter.filter(\r\n\t\tfunction (e) {\r\n\t\t\treturn this.indexOf(e) < 0;\r\n\t\t},\r\n\t\twithWhatToFilter\r\n\t);\r\n}","import { firestore } from \"../../firebase\"\r\nimport filterArrayWithArray from \"./filterArrayWithArray\"\r\n\r\nexport const deleteSongFromLibrary = (e, song, currentUser, yourSongs) => {\r\n\te.stopPropagation()\r\n\tconst songAuthorsUIDS = song.authors.map(author => author.uid)\r\n\tconst finalAuthorsUIDS = [] // –º–∞—Å—Å–∏–≤ –∞–≤—Ç–æ—Ä–æ–≤, –ø–µ—Å–Ω–∏ –∫–æ—Ç–æ—Ä—ã—Ö –µ—â–µ –æ—Å—Ç–∞–ª–∏—Å—å –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–µ—Å–Ω–∏\r\n\tlet newList = currentUser.addedSongs.filter(songNum => songNum !== song.id)\r\n\tsongAuthorsUIDS.forEach(authorId => {\r\n\t\tyourSongs.forEach(songObj => {\r\n\t\t\tif (newList.includes(songObj.id) && songObj.authors.find(a => a.uid === authorId)) {\r\n\t\t\t\tfinalAuthorsUIDS.push(authorId)\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\tconst filtered = filterArrayWithArray(songAuthorsUIDS, finalAuthorsUIDS) // –º–∞—Å—Å–∏–≤ –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã—Ö –Ω—É–∂–Ω–æ —É–±—Ä–∞—Ç—å –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏\r\n\tconst finalFilteredAuthors = filterArrayWithArray(currentUser.addedAuthors, filtered) // –º–∞—Å—Å–∏–≤ –ª—é–¥–µ–π, –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ\r\n\r\n\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\taddedSongs: newList,\r\n\t\taddedAuthors: finalFilteredAuthors\r\n\t})\r\n\r\n\tfiltered.forEach(async authorId=>{\r\n\t\tlet subscribers = (await firestore.collection('users').doc(authorId).get()).data().subscribers\r\n\t\tsubscribers--\r\n\t\tfirestore.collection('users').doc(authorId).update({\r\n\t\t\tsubscribers: subscribers\r\n\t\t})\r\n\t})\r\n\t\r\n}","import { useAuth } from \"../../contexts/AuthContext\";\r\nimport { addSongToLibrary } from \"../../features/song/lib/add-song-to-library\";\r\nimport { deleteSongFromLibrary } from \"../../functions/other/deleteSongFromLibrary\";\r\nimport { FiPlusCircle, FiX } from \"react-icons/fi\";\r\nimport { useSong } from \"../../contexts/SongContext\";\r\nimport { useModal } from \"../../contexts/ModalContext\";\r\nexport default function AddOrDeleteButtonFull({ song }) {\r\n  const { currentUser } = useAuth();\r\n  const { yourSongs } = useSong();\r\n  const { openConfirm, setOpenModal } = useModal();\r\n  if (!currentUser.addedSongs.includes(song.id)) {\r\n    return (\r\n      <span onClick={(e) => addSongToLibrary(e, song, currentUser)}>\r\n        <FiPlusCircle />\r\n        Add\r\n      </span>\r\n    );\r\n  } else {\r\n    return (\r\n      <span\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          setOpenModal(false);\r\n          openConfirm(\r\n            \"You sure you want to delete this song from library?\",\r\n            \"Yes, delete it\",\r\n            \"No, just kidding\",\r\n            (e) => deleteSongFromLibrary(e, song, currentUser, yourSongs)\r\n          );\r\n        }}\r\n      >\r\n        <FiX />\r\n        Delete\r\n      </span>\r\n    );\r\n  }\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { useSong } from '../contexts/SongContext'\r\nimport { firestore } from '../firebase'\r\n\r\nexport const useAddOrDeleteSong = (playlistId, songId) => {\r\n\tconst [playlistSongs, setPlaylistSongs] = useState([])\r\n\tconst [isAdded, setIsAdded] = useState(false)\r\n\tconst { currentUser } = useAuth()\r\n\tconst { currentSong } = useSong()\r\n\tconst songData = songId || currentSong\r\n\tuseEffect(() => {\r\n\t\tconst response = firestore.collection('playlists').doc(playlistId).onSnapshot(res => {\r\n\t\t\tif (res.exists) setPlaylistSongs(res.data().songs)\r\n\t\t})\r\n\t\treturn () => response()\r\n\t}, [firestore])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetIsAdded(playlistSongs.includes(songData))\r\n\t}, [playlistSongs, songData])\r\n\r\n\tfunction addOrDelete() {\r\n\t\tif (playlistSongs.length > 0 && playlistId !== undefined) {\r\n\t\t\tif (playlistSongs.includes(songData)) {\r\n\t\t\t\tconst newSongsList = playlistSongs.filter(songNum => songNum !== songData)\r\n\t\t\t\tfirestore.collection('playlists').doc(playlistId).update({\r\n\t\t\t\t\tsongs: newSongsList\r\n\t\t\t\t})\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tconst newSongsList = playlistSongs\r\n\t\t\tnewSongsList.unshift(songData)\r\n\t\t\tfirestore.collection('playlists').doc(playlistId).update({\r\n\t\t\t\tsongs: newSongsList\r\n\t\t\t})\r\n\r\n\t\t\tconst sortedPlaylists = [playlistId, ...currentUser.ownPlaylists.filter(id => id !== playlistId)]\r\n\t\t\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\t\t\townPlaylists: sortedPlaylists\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\treturn [addOrDelete, isAdded]\r\n}\r\n","import React from 'react'\r\nimport { FiCheck, FiPlusCircle } from 'react-icons/fi'\r\nimport { useAddOrDeleteSong } from '../../hooks/useAddOrDeleteSong'\r\nimport { Hint } from '../Basic/Hint'\r\n\r\nexport const AddToPlaylistItem = ({playlist, song}) => {\r\n\tconst [addFunc, isAdded] = useAddOrDeleteSong(playlist.id, song.id)\r\n\treturn (\r\n\t\t<div className=\"songItemMenuWindowItem\" onClick={addFunc}>\r\n\t\t\t{!isAdded ? <>\r\n\t\t\t\t<Hint text={`Add \"${song.name}\" to playlist`} />\r\n\t\t\t\t<FiPlusCircle />\r\n\t\t\t</> :\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Hint text={`Remove ${song.name} from playlist`} />\r\n\t\t\t\t\t<FiCheck />\r\n\t\t\t\t</>}\r\n\t\t\t{playlist.name}\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useAuth } from '../../contexts/AuthContext'\r\nimport { useSong } from '../../contexts/SongContext'\r\nimport { AddToPlaylistItem } from '../Playlist/AddToPlaylistItem'\r\nexport const AddToPlaylists = ({ song }) => {\r\n\tconst { yourPlaylists, currentSongData } = useSong()\r\n\tconst { currentUser } = useAuth()\r\n\t\r\n\tconst [songData, setSongData] = useState(song || currentSongData)\r\n\tuseEffect(() => {\r\n\t\tif (song?.id) {\r\n\t\t\tsetSongData(song)\r\n\t\t}\r\n\t}, [song?.id])\r\n\treturn (\r\n\t\t<div className=\"AddToPlaylists\">\r\n\t\t\t<div style={{ display: 'flex', flexDirection: 'column' }}>\r\n\t\t\t\t{yourPlaylists.length ? yourPlaylists.map((playlist, key) => {\r\n\t\t\t\t\tif (currentUser.ownPlaylists.includes(playlist.id)) {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<AddToPlaylistItem playlist = {playlist} song = {songData}/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t}) : <div className = \"songItemMenuWindowItem\">No playlists created</div>}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","export default function getUID() {\r\n\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n\t\tconst piece = (Math.random() * 16) | 0;\r\n\t\tconst elem = c === 'x' ? piece : (piece & 0x3) | 0x8;\r\n\t\treturn elem.toString(16);\r\n\t});\r\n}\r\n","\r\nimport { firestore } from \"../../firebase\"\r\nimport getUID from \"../../functions/other/getUID\"\r\n\r\nexport const createChat = async (participants, chatUID = getUID(), chatName = \"\", chatImage = \"\", admins = [], imageColors = []) => {\r\n\tfirestore.collection('chats').doc(chatUID).set({\r\n\t\tchatImage: chatImage,\r\n\t\tchatName: chatName,\r\n\t\tid: chatUID,\r\n\t\tmessages: [],\r\n\t\tparticipants: participants,\r\n\t\twallpaper: 'undefined',\r\n\t\tadmins: participants.length > 2 ? admins : [],\r\n\t\ttyping: [],\r\n\t\timageColors: imageColors\r\n\t})\r\n\r\n\tparticipants.map(async personId => {\r\n\t\tlet chatInfo = (await firestore.collection('users').doc(personId).get()).data().chats\r\n\t\tchatInfo.push(chatUID)\r\n\t\tfirestore.collection('users').doc(personId).update({\r\n\t\t\tchats: chatInfo\r\n\t\t})\r\n\t})\r\n}","import { firestore } from \"../../firebase\"\r\nimport getUID from \"../../functions/other/getUID\"\r\n\r\nexport const findChatURL = async (allParticipants, currentUser, setShouldCreate, setFriendChatId) => {\r\n\tlet foundChat = false\r\n\tlet chatId = 0\r\n\tif (currentUser.chats) {\r\n\t\t// –ü—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã —Ç–∞–∫–æ–≤: –æ–Ω –∏—â–µ—Ç –≤—Å–µ —á–∞—Ç—ã, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å —é–∑–µ—Ä. –ó–∞—Ç–µ–º –æ–Ω –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ –Ω–∏–º. –ó–∞—Ç–µ–º –æ–Ω –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –¥—Ä—É–∑—å—è–º\r\n\t\t// –ï—Å–ª–∏ –æ–Ω –Ω–∞—Ö–æ–¥–∏—Ç, —á—Ç–æ –¥—Ä—É–≥ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞, –¥–æ–±–∞–≤–ª—è–µ—Ç –∫ count 1, –µ—Å–ª–∏ –Ω–µ—Ç, —Å—Ä–∞–∑—É –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ —Ü–∏–∫–ª–∞ —É—á–∞—Ç—Å–Ω–∏–∫–æ–≤\r\n\t\t// –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ü–∏–∫–ª–∞ –æ–Ω –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π + 1 (–ø–æ—Ç–æ–º—É —á—Ç–æ –≤ –º–∞—Å—Å–∏–≤ –¥—Ä—É–∑–µ–π –Ω–µ –≤—Ö–æ–¥–∏—Ç —Å–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å) —Ä–∞–≤–Ω–æ\r\n\t\t// –¥–ª–∏–Ω–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–∞—Ç–∞ –∏ –µ—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π —Ä–∞–≤–Ω–æ –¥–ª–∏–Ω–µ –ø–æ—Å—Ç—É–ø–∏–≤—à–µ–≥–æ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –º–∞—Å—Å–∏–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, —Ç–æ–≥–¥–∞ –Ω—É–∂–Ω—ã–π —á–∞—Ç –Ω–∞–π–¥–µ–Ω\r\n\t\tconst chatsWhereUserIn = await firestore.collection('chats').where('participants', 'array-contains', currentUser.uid).get()\r\n\t\tchatsWhereUserIn.docs.forEach(chat => {\r\n\t\t\tlet count = 0\r\n\t\t\tallParticipants.every(personId => {\r\n\t\t\t\tif (chat.data().participants.includes(personId)) {\r\n\t\t\t\t\tcount++\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t\telse return false\r\n\t\t\t})\r\n\t\t\tif (count + 1 === chat.data().participants.length && count === allParticipants.length) {\r\n\t\t\t\tfoundChat = true\r\n\t\t\t\tsetShouldCreate(false)\r\n\t\t\t\tsetFriendChatId(chat.data().id)\r\n\t\t\t\tchatId = chat.data().id\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\telse return true\r\n\t\t})\r\n\r\n\t\tif (!foundChat) {\r\n\t\t\tconst random = getUID()\r\n\t\t\tfoundChat = true\r\n\t\t\tsetShouldCreate(true)\r\n\t\t\tsetFriendChatId(random)\r\n\t\t\tchatId = random\r\n\t\t}\r\n\t\treturn chatId\r\n\t}\r\n}","import { firestore } from \"../../firebase\"\r\n\r\nexport const sendMessage = (chatId, chatData, sender, messageText, attachedSongs = [], attachedAlbums = [], attachedAuthors = [], inResponseToMessage) => {\r\n\tif (messageText.trim().length !== 0 || attachedSongs.length !== 0 || attachedAlbums.length !== 0 || attachedAuthors.length !== 0) {\r\n\t\tconst tempMessages = chatData?.messages || []\r\n\r\n\t\ttempMessages.push({\r\n\t\t\tid: tempMessages.length,\r\n\t\t\tsender: sender,\r\n\t\t\tmessage: messageText,\r\n\t\t\tsentTime: new Date().toString(),\r\n\t\t\tinResponseToMessage: inResponseToMessage || null,\r\n\t\t\tattachedSongs: attachedSongs,\r\n\t\t\tattachedAlbums: attachedAlbums,\r\n\t\t\tattachedAuthors: attachedAuthors,\r\n\t\t\tseenBy: [sender]\r\n\t\t})\r\n\r\n\t\tfirestore.collection('chats').doc(chatId).update({\r\n\t\t\tmessages: tempMessages\r\n\t\t})\r\n\t}\r\n}","import { firestore } from \"../../firebase\";\r\nimport { createChat } from \"../../shared/lib/create-—Åhat\";\r\nimport { findChatURL } from \"../../shared/lib/find-chat-url\";\r\nimport { sendMessage } from \"./sendMessage\";\r\n\r\nexport default function shareWithFriends({ shareList, currentUser, itemId, whatToShare, messageText = \"\", setShouldCreate = () => null, setFriendChatId = () => null, setLoading = () => null, setCompleted = () => null }) {\r\n\tsetLoading(true)\r\n\tsetCompleted(false)\r\n\t//–°–¥–µ–ª–∞—Ç—å —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é sendMessage\r\n\tshareList.map(async userId => {\r\n\t\t//–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—é\r\n\t\tconst sortedFriends = [{ uid: userId, status: 'added' }, ...currentUser.friends.filter(obj => obj.uid !== userId)]\r\n\t\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\t\tfriends: sortedFriends\r\n\t\t})\r\n\t\tPromise.resolve(findChatURL([userId], currentUser, () => null, setFriendChatId)).then(async chatId => {\r\n\t\t\tlet chatData = (await firestore.collection('chats').doc(chatId).get()).data()\r\n\t\t\tif (chatData !== undefined) {\r\n\t\t\t\tswitch (whatToShare) {\r\n\t\t\t\t\tcase \"song\":\r\n\t\t\t\t\t\tsendMessage(chatId, chatData, currentUser.uid, messageText, [itemId])\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"playlist\":\r\n\t\t\t\t\t\tsendMessage(chatId, chatData, currentUser.uid, messageText, [], [itemId])\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"author\":\r\n\t\t\t\t\t\tsendMessage(chatId, chatData, currentUser.uid, messageText, [], [], [itemId])\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tsendMessage(chatId, chatData, currentUser.uid, messageText, [itemId])\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcreateChat([currentUser.uid, userId], chatId).then(async () => {\r\n\t\t\t\t\tchatData = (await firestore.collection('chats').doc(chatId).get()).data()\r\n\t\t\t\t\tsetShouldCreate(false)\r\n\t\t\t\t\tswitch (whatToShare) {\r\n\t\t\t\t\t\tcase \"song\":\r\n\t\t\t\t\t\t\tsendMessage(chatId, chatData, currentUser.uid, messageText, [itemId])\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"playlist\":\r\n\t\t\t\t\t\t\tsendMessage(chatId, chatData, currentUser.uid, messageText, [], [itemId])\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"author\":\r\n\t\t\t\t\t\t\tsendMessage(chatId, chatData, currentUser.uid, messageText, [], [], [itemId])\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tsendMessage(chatId, chatData, currentUser.uid, messageText, [itemId])\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}).then(() => {\r\n\t\t\tsetLoading(false)\r\n\t\t\tsetCompleted(true)\r\n\t\t})\r\n\t})\r\n\r\n\r\n}","import React from 'react'\r\n\r\nexport const LoadingCircle = ({top = '20%'}) => {\r\n\treturn (\r\n\t\t<div className = \"LoadingCircle\" style = {{top:top}}>\r\n\t\t\t<img loading = \"lazy\" src=\"https://icon-library.com/images/spinner-icon-gif/spinner-icon-gif-28.jpg\" alt=\"\"/>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport normalizeString from \"../../../../functions/other/normalizeString\";\r\nimport { fetchItemList } from \"../../../../shared/lib/fetch-item-list\";\r\n\r\nconst useSearch = (\r\n  value,\r\n  setAllFoundSongs,\r\n  setResultAuthorList,\r\n  setResultPlaylists,\r\n  defaultSearchMode,\r\n  searchMode,\r\n  defaultSongsListValue,\r\n  defaultAuthorsListValue,\r\n  defaultPlaylistsListValue\r\n) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [foundAnything, setFoundAnything] = useState(false);\r\n\r\n  const [inputValue, setInputValue] = useState(value);\r\n\r\n  async function findItem(place, defaultList = [], setList) {\r\n    const foundItemTempArray = [];\r\n    let normalizedSearch = normalizeString(value);\r\n    const itemsList = await firestore\r\n      .collection(\"search\")\r\n      .where(\"variantsOfName\", \"array-contains\", normalizedSearch)\r\n      .get();\r\n    itemsList.docs.forEach(async (item) => {\r\n      const itemData = item.data();\r\n      if (itemData.place === place) {\r\n        const realData = (\r\n          await firestore.collection(itemData.place).doc(itemData.uid).get()\r\n        ).data();\r\n        if (defaultList !== undefined && defaultList.length) {\r\n          if (\r\n            defaultList\r\n              .map((song) => song.id || song.uid)\r\n              .includes(itemData.uid)\r\n          )\r\n            foundItemTempArray.push(realData);\r\n        } else if (!realData.isPrivate) foundItemTempArray.push(realData);\r\n        if (\r\n          defaultSearchMode === undefined &&\r\n          searchMode === 0 &&\r\n          foundItemTempArray.length !== 0\r\n        ) {\r\n          setList(foundItemTempArray);\r\n          switch (itemData.place) {\r\n            case \"songs\":\r\n              for (let i = 0; i < foundItemTempArray.length; i++) {\r\n                const authorsIdsArray = realData.authors;\r\n                fetchItemList(\r\n                  authorsIdsArray.map((author) => author.uid),\r\n                  \"users\",\r\n                  setResultAuthorList,\r\n                  (res) => res.sort((a, b) => b.subscribers - a.subscribers),\r\n                  undefined,\r\n                  undefined,\r\n                  1\r\n                );\r\n              }\r\n              break;\r\n            case \"users\":\r\n              for (let i = 0; i < foundItemTempArray.length; i++) {\r\n                const songsIdsArray = realData.ownSongs;\r\n                const albumsIdsArray = realData.ownPlaylists;\r\n                fetchItemList(\r\n                  songsIdsArray,\r\n                  \"songs\",\r\n                  setAllFoundSongs,\r\n                  (res) => res.sort((a, b) => b.listens - a.listens),\r\n                  () => null,\r\n                  3,\r\n                  1\r\n                );\r\n                fetchItemList(\r\n                  albumsIdsArray,\r\n                  \"playlists\",\r\n                  setResultPlaylists,\r\n                  (res) => res.sort((a, b) => b.listens - a.listens),\r\n                  () => null,\r\n                  3,\r\n                  1\r\n                );\r\n              }\r\n              break;\r\n            case \"playlists\":\r\n              for (let i = 0; i < foundItemTempArray.length; i++) {\r\n                const authorsIdsArray = realData.authors;\r\n                fetchItemList(\r\n                  authorsIdsArray.map((author) => author.uid),\r\n                  \"users\",\r\n                  setResultAuthorList,\r\n                  (res) => res.sort((a, b) => b.subscribers - a.subscribers),\r\n                  undefined,\r\n                  undefined,\r\n                  1\r\n                );\r\n              }\r\n              break;\r\n            default:\r\n              setMessage(\"Wrong search mode\");\r\n              break;\r\n          }\r\n        }\r\n\r\n        if (foundItemTempArray.length !== 0) {\r\n          setLoading(false);\r\n          setFoundAnything(true);\r\n          setList(foundItemTempArray);\r\n        }\r\n      }\r\n    });\r\n    setLoading(false);\r\n    if (foundItemTempArray.length === 0) {\r\n      setList([]);\r\n      setFoundAnything(false);\r\n    }\r\n  }\r\n  function findSomething() {\r\n    if (value.length !== 0) {\r\n      setInputValue(value);\r\n      setLoading(true);\r\n      setFoundAnything(false);\r\n      if (defaultSearchMode === undefined) {\r\n        if (searchMode === 0 || searchMode === 1) {\r\n          findItem(\"songs\", defaultSongsListValue, setAllFoundSongs);\r\n          setResultAuthorList([]);\r\n          setResultPlaylists([]);\r\n        }\r\n        if (searchMode === 0 || searchMode === 2) {\r\n          findItem(\"users\", defaultAuthorsListValue, setResultAuthorList);\r\n          setAllFoundSongs([]);\r\n          setResultPlaylists([]);\r\n        }\r\n        if (searchMode === 0 || searchMode === 3) {\r\n          findItem(\"playlists\", defaultPlaylistsListValue, setResultPlaylists);\r\n          setResultAuthorList([]);\r\n          setAllFoundSongs([]);\r\n        }\r\n      } else {\r\n        switch (defaultSearchMode) {\r\n          case \"songs\":\r\n            findItem(\"songs\", defaultSongsListValue, setAllFoundSongs);\r\n            break;\r\n          case \"playlists\":\r\n            findItem(\r\n              \"playlists\",\r\n              defaultPlaylistsListValue,\r\n              setResultPlaylists\r\n            );\r\n            break;\r\n          case \"authors\":\r\n            findItem(\"users\", defaultAuthorsListValue, setResultAuthorList);\r\n            break;\r\n          default:\r\n            findItem(\"songs\", defaultSongsListValue, setAllFoundSongs);\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (value.length === 0) {\r\n      if (defaultSongsListValue !== undefined)\r\n        setAllFoundSongs(defaultSongsListValue);\r\n      if (defaultAuthorsListValue !== undefined)\r\n        setResultAuthorList(defaultAuthorsListValue);\r\n      if (defaultPlaylistsListValue !== undefined)\r\n        setResultPlaylists(defaultPlaylistsListValue);\r\n      setLoading(false);\r\n    }\r\n  }, [value]);\r\n\r\n  useEffect(() => {\r\n    findSomething();\r\n  }, [searchMode]);\r\n\r\n  return {\r\n    findSomething,\r\n    message,\r\n    loading,\r\n    foundAnything,\r\n    inputValue,\r\n    setInputValue,\r\n  };\r\n};\r\n\r\nexport default useSearch;\r\n","import { firestore } from \"../../../firebase\";\r\n\r\nconst rankCurrentHint = (hintName, hintUid) => {\r\n\tif (hintName) {\r\n\t\tfirestore\r\n\t\t\t.collection(\"search\")\r\n\t\t\t.doc(hintUid)\r\n\t\t\t.get()\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconst rank = res.data().rank ? res.data().rank + 1 : 1;\r\n\t\t\t\tfirestore\r\n\t\t\t\t\t.collection(\"search\")\r\n\t\t\t\t\t.doc(hintUid)\r\n\t\t\t\t\t.update({\r\n\t\t\t\t\t\trank: rank,\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n};\r\n\r\nexport default rankCurrentHint","import React from \"react\";\r\nimport { FiSearch, FiXCircle } from \"react-icons/fi\";\r\n\r\nconst SearchBarButtons = (props) => {\r\n  const { length, setInputValue, setValue } = props;\r\n  return (\r\n    <div className=\"searchBarElement\">\r\n      <FiSearch />\r\n      <span\r\n        onClick={() => {\r\n          setValue(\"\");\r\n          setInputValue(\"\");\r\n        }}\r\n        style={\r\n          !length\r\n            ? {\r\n                opacity: 0,\r\n                visibility: \"hidden\",\r\n                cursor: \"default\",\r\n              }\r\n            : {}\r\n        }\r\n      >\r\n        <FiXCircle />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBarButtons;\r\n","import React from \"react\";\r\n\r\nconst SearchFilterItem = ({ text, searchMode, setSearchMode, index }) => {\r\n  return (\r\n    <button\r\n      onClick={() => setSearchMode(index)}\r\n      style={\r\n        searchMode === index\r\n          ? {\r\n              background: \"var(--lightBlue)\",\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SearchFilterItem;\r\n","import React from \"react\";\r\nimport SearchFilterItem from \"../atoms/search-filter-item\";\r\n\r\nconst SearchFilters = ({ defaultSearchMode, searchMode, setSearchMode }) => {\r\n  const filters = [\"All\", \"Songs\", \"Authors\", \"Playlists\"];\r\n  return (\r\n    <div\r\n      className=\"searchFilters\"\r\n      style={\r\n        defaultSearchMode !== undefined\r\n          ? {\r\n              display: \"none\",\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      {filters.map((filter, index) => {\r\n        return (\r\n          <SearchFilterItem\r\n            text={filter}\r\n            searchMode={searchMode}\r\n            setSearchMode={setSearchMode}\r\n            index={index}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchFilters;\r\n","import { firestore } from \"../../../firebase\"\r\n\r\nconst findSearchHints = async (searchValue) => {\r\n\tif (searchValue.length > 0) {\r\n\t\tconst hints = (await firestore.collection('search')\r\n\t\t\t.where('variantsOfName', 'array-contains', searchValue).get())\r\n\t\t\t.docs.map(async (hint) => {\r\n\t\t\t\tconst { place, uid, rank } = hint.data()\r\n\t\t\t\tconst { name, authors, displayName, isVerified } = (await firestore.collection(place).doc(uid).get()).data()\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttype: place,\r\n\t\t\t\t\tname: name ? name : displayName,\r\n\t\t\t\t\tauthor: authors ? authors[0].displayName : null,\r\n\t\t\t\t\tuid: uid,\r\n\t\t\t\t\trank: rank || 0,\r\n\t\t\t\t\tisVerified: isVerified ?? false\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\treturn hints\r\n\t}\r\n\telse return []\r\n}\r\n\r\nexport default findSearchHints","const transliteWord = (word) => {\r\n\tconst dictionaryRuToEn = {\r\n\t\t'–∞': 'f', '–±': ',', '–≤': 'd', '–≥': 'u', '–¥': 'l', '–µ': 't', '—ë': '`', '–∂': ';',\r\n\r\n\t\t'–∑': 'p', '–∏': 'b', '–π': 'q', '–∫': 'r', '–ª': 'k', '–º': 'v', '–Ω': 'y',\r\n\r\n\t\t'–æ': 'j', '–ø': 'g', '—Ä': 'h', '—Å': 'c', '—Ç': 'n', '—É': 'e', '—Ñ': 'a', '—Ö': '[',\r\n\r\n\t\t'—Ü': 'w', '—á': 'x', '—à': 'i', '—â': 'o', '—ä': ']', '—ã': 's', '—å': 'm', '—ç': '\\'', '—é': '.', '—è': 'z'\r\n\t}\r\n\r\n\tconst dictionaryEnToRu = {\r\n\t\t'f': '–∞', ',': '–±', 'd': '–≤', 'u': '–≥', 'l': '–¥', 't': '–µ', '`': '—ë', ';': '–∂',\r\n\r\n\t\t'p': '–∑', 'b': '–∏', 'q': '–π', 'r': '–∫', 'k': '–ª', 'v': '–º', 'y': '–Ω',\r\n\r\n\t\t'j': '–æ', 'g': '–ø', 'h': '—Ä', 'c': '—Å', 'n': '—Ç', 'e': '—É', 'a': '—Ñ', '[': '—Ö',\r\n\r\n\t\t'w': '—Ü', 'x': '—á', 'i': '—à', 'o': '—â', ']': '—ä', 's': '—ã', 'm': '—å', '\\'': '—ç', '.': '—é', 'z': '—è'\r\n\t}\r\n\r\n\tif (dictionaryRuToEn[word[0]])\r\n\t\treturn word.split('').reduce((acc, letter) => acc + dictionaryRuToEn[letter], '')\r\n\telse return word.split('').reduce((acc, letter) => acc + dictionaryEnToRu[letter], '')\r\n\r\n}\r\n\r\nexport default transliteWord","import { useEffect } from \"react\";\r\nimport normalizeString from \"../../../../functions/other/normalizeString\";\r\nimport findSearchHints from \"../find-search-hints\";\r\nimport transliteWord from \"../translite-word\";\r\n\r\nconst useLoadHints = ({\r\n  setCurrentHint,\r\n  searchValue,\r\n  inputFocused,\r\n  setSearchHints,\r\n}) => {\r\n  useEffect(() => {\r\n    setCurrentHint(-1);\r\n    if (searchValue.length !== 0 && inputFocused) {\r\n      Promise.resolve(findSearchHints(normalizeString(searchValue))).then(\r\n        (res) => {\r\n          Promise.all(res).then((hint) => {\r\n            const sortedHints = hint.sort((a, b) => b.rank - a.rank);\r\n\r\n            if (sortedHints.length) setSearchHints(sortedHints.slice(0, 10));\r\n            else {\r\n              Promise.resolve(\r\n                findSearchHints(normalizeString(transliteWord(searchValue)))\r\n              ).then((res) => {\r\n                Promise.all(res).then((hint) => {\r\n                  const sortedHints = hint.sort((a, b) => b.rank - a.rank);\r\n                  setSearchHints(sortedHints.slice(0, 10));\r\n                });\r\n              });\r\n            }\r\n          });\r\n        }\r\n      );\r\n    } else setSearchHints([]);\r\n  }, [searchValue, inputFocused]);\r\n};\r\n\r\nexport default useLoadHints;\r\n","import { BiAlbum } from \"react-icons/bi\";\r\nimport { FiMusic, FiSearch, FiUser } from \"react-icons/fi\";\r\n\r\nconst findRightIcon = (type) => {\r\n\tswitch (type) {\r\n\t\tcase \"songs\":\r\n\t\t\treturn <FiMusic style={{ color: 'var(--reallyLightBlue)' }} />;\r\n\t\tcase \"playlists\":\r\n\t\t\treturn <BiAlbum style={{ color: 'var(--lightPurple)' }} />;\r\n\t\tcase \"users\":\r\n\t\t\treturn <FiUser style={{ color: 'var(--pink)' }} />;\r\n\t\tcase \"search\":\r\n\t\t\treturn <FiSearch />;\r\n\t\tdefault:\r\n\t\t\treturn <FiMusic />;\r\n\t}\r\n};\r\n\r\nexport default findRightIcon\r\n","import React from \"react\";\r\nimport { ImCheckmark } from \"react-icons/im\";\r\nimport findRightIcon from \"../../../../shared/lib/find-right-icon\";\r\n\r\nconst SearcHintItem = (props) => {\r\n  const { name, author, isVerified, type, index, currentHint, setCurrentHint } =\r\n    props;\r\n  return (\r\n    <div\r\n      className={\"search-hint-item\" + (currentHint === index ? \" current\" : \"\")}\r\n      onClick={() => {\r\n        setCurrentHint(index);\r\n      }}\r\n    >\r\n      {findRightIcon(type)}\r\n      <span>{name}</span>\r\n      {author && <span className=\"search-hint-item-author\">{author}</span>}\r\n      {isVerified ? (\r\n        <ImCheckmark\r\n          style={{\r\n            width: \"12px\",\r\n            height: \"12px\",\r\n            opacity: 0.5,\r\n            marginLeft: \"10px\",\r\n          }}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearcHintItem;\r\n","import React from \"react\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport useLoadHints from \"../../lib/hooks/use-load-hints\";\r\nimport SearcHintItem from \"../atoms/search-hint-item\";\r\n\r\nexport const SearchHints = ({\r\n  searchValue,\r\n  searchHints,\r\n  setSearchHints,\r\n  currentHint,\r\n  setCurrentHint,\r\n  inputFocused,\r\n  defaultSearchMode,\r\n}) => {\r\n  useLoadHints({\r\n    setCurrentHint,\r\n    searchValue,\r\n    inputFocused,\r\n    setSearchHints,\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className=\"search-hints\"\r\n      style={\r\n        !searchHints.length\r\n          ? { display: \"none\" }\r\n          : defaultSearchMode\r\n          ? { transform: \"translateY(0px)\" }\r\n          : { transform: \"translateY(-35px)\" }\r\n      }\r\n    >\r\n      <SearcHintItem\r\n        name={searchValue}\r\n        type={\"search\"}\r\n        index={-1}\r\n        key={-1}\r\n        currentHint={currentHint}\r\n        setCurrentHint={setCurrentHint}\r\n      />\r\n      {searchHints.map((hint, index) => {\r\n        return (\r\n          <SearcHintItem\r\n            {...hint}\r\n            currentHint={currentHint}\r\n            setCurrentHint={setCurrentHint}\r\n            index={index}\r\n            key={hint.uid}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { LoadingCircle } from \"../../../components/Loading/LoadingCircle\";\r\nimport useSearch from \"../../../features/search/lib/hooks/use-search\";\r\nimport rankCurrentHint from \"../../../features/search/lib/rank-current-hint\";\r\nimport SearchBarButtons from \"../../../features/search/ui/molecules/search-bar-buttons\";\r\nimport SearchFilters from \"../../../features/search/ui/molecules/search-filters\";\r\nimport { SearchHints } from \"../../../features/search/ui/organisms/search-hints\";\r\nimport checkNumber from \"../../lib/check-number\";\r\n\r\nconst SearchBar = ({\r\n  value,\r\n  setValue,\r\n  setAllFoundSongs,\r\n  setResultPlaylists,\r\n  setResultAuthorList,\r\n  focus = false,\r\n  defaultSearchMode = undefined,\r\n  inputText = \"Search for songs or for people\",\r\n  defaultSongsListValue,\r\n  defaultAuthorsListValue,\r\n  defaultPlaylistsListValue,\r\n  background,\r\n}) => {\r\n  const [searchMode, setSearchMode] = useState(0);\r\n  const [currentHint, setCurrentHint] = useState(-1);\r\n  const [searchHints, setSearchHints] = useState([]);\r\n  const [inputFocused, setInputFocused] = useState(focus);\r\n  const inputRef = useRef(null);\r\n\r\n  const { findSomething, loading, foundAnything, inputValue, setInputValue } =\r\n    useSearch(\r\n      searchHints[currentHint]?.name ?? value,\r\n      setAllFoundSongs,\r\n      setResultAuthorList,\r\n      setResultPlaylists,\r\n      defaultSearchMode,\r\n      searchMode,\r\n      defaultSongsListValue,\r\n      defaultAuthorsListValue,\r\n      defaultPlaylistsListValue\r\n    );\r\n\r\n  useEffect(() => {\r\n    if (focus) inputRef.current.focus();\r\n  }, []);\r\n\r\n  const handleCurrentHint = (e) => {\r\n    if (inputFocused) {\r\n      switch (e.key) {\r\n        case \"ArrowDown\":\r\n          setCurrentHint(\r\n            checkNumber(currentHint + 1, searchHints.length - 1, -1)\r\n          );\r\n          setInputValue(\r\n            searchHints[\r\n              checkNumber(currentHint + 1, searchHints.length - 1, -1)\r\n            ]?.name ?? value\r\n          );\r\n          break;\r\n        case \"ArrowUp\":\r\n          setCurrentHint(\r\n            checkNumber(currentHint - 1, searchHints.length - 1, -1)\r\n          );\r\n          setInputValue(\r\n            searchHints[\r\n              checkNumber(currentHint - 1, searchHints.length - 1, -1)\r\n            ]?.name ?? value\r\n          );\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{ marginTop: \"10px\", width: \"100%\" }}\r\n      className=\"searchBarWrapper\"\r\n    >\r\n      <div className=\"searchBar\">\r\n        <SearchBarButtons\r\n          setInputValue={setInputValue}\r\n          length={value.length}\r\n          setValue={setValue}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          onFocus={() => setInputFocused(true)}\r\n          onBlur={() => setInputFocused(false)}\r\n          style={\r\n            searchHints.length\r\n              ? {\r\n                  borderRadius:\r\n                    \"var(--standartBorderRadius) var(--standartBorderRadius) 0 0\",\r\n                  background: !!background && background,\r\n                }\r\n              : { background: !!background && background }\r\n          }\r\n          placeholder={inputText}\r\n          value={inputValue}\r\n          onChange={(e) => {\r\n            setInputValue(e.target.value);\r\n            setValue(e.target.value);\r\n          }}\r\n          onKeyDown={(e) => {\r\n            handleCurrentHint(e);\r\n            if (e.key === \"Enter\") {\r\n              findSomething();\r\n              // setValue(inputValue);\r\n              rankCurrentHint(\r\n                searchHints[currentHint]?.name,\r\n                searchHints[currentHint]?.uid\r\n              );\r\n              setSearchHints([]);\r\n            }\r\n          }}\r\n          ref={inputRef}\r\n        />\r\n        <SearchFilters\r\n          defaultSearchMode={defaultSearchMode}\r\n          searchMode={searchMode}\r\n          setSearchMode={setSearchMode}\r\n        />\r\n        <SearchHints\r\n          searchValue={value}\r\n          currentHint={currentHint}\r\n          searchHints={searchHints}\r\n          setSearchHints={setSearchHints}\r\n          setCurrentHint={setCurrentHint}\r\n          inputFocused={inputFocused}\r\n          defaultSearchMode={defaultSearchMode}\r\n        />\r\n      </div>\r\n      <div className=\"authorsResult\">\r\n        {loading ? (\r\n          <div\r\n            style={{\r\n              position: \"relative\",\r\n              width: \"100%\",\r\n              height: \"50px\",\r\n              marginTop: \"40px\",\r\n            }}\r\n          >\r\n            <LoadingCircle />\r\n          </div>\r\n        ) : !foundAnything && value.length !== 0 ? (\r\n          <h2>Not found</h2>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ButtonWrapper = styled.button`\r\n  border: none;\r\n  color: var(--lightBlue);\r\n  background: var(--lightGrey);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 5px 10px;\r\n  border-radius: var(--standartBorderRadius3);\r\n  font-weight: 600;\r\n\r\n  svg {\r\n    margin-right: ${({ textLen }) => (textLen === 0 ? \"0\" : \"5px\")};\r\n    width: 16px;\r\n    height: 16px;\r\n  }\r\n`;\r\n\r\nconst Button = ({ text = \"\", icon, onClick, visible = true }) => {\r\n  return (\r\n    visible && (\r\n      <ButtonWrapper onClick={onClick} textLen={text.length}>\r\n        {icon}\r\n        <span>{text}</span>\r\n      </ButtonWrapper>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { FiXCircle } from \"react-icons/fi\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"./button\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n\r\n  button {\r\n    position: absolute;\r\n    right: 8px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n`;\r\n\r\nconst InputWrapper = styled.input`\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  padding: 12px;\r\n  border-radius: var(--standartBorderRadius);\r\n  border: none;\r\n  background: var(--leftSideBarColor);\r\n  outline: none;\r\n  color: #fff;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Input = ({\r\n  title,\r\n  type = \"text\",\r\n  value,\r\n  setValue,\r\n  placeholder = \"\",\r\n  required = false,\r\n}) => {\r\n  return (\r\n    <>\r\n      <h3>{title}</h3>\r\n      <Wrapper>\r\n        <InputWrapper\r\n          value={value}\r\n          onChange={(e) => setValue(e.target.value)}\r\n          placeholder={placeholder}\r\n          type={type}\r\n          required={required}\r\n        />\r\n        <Button\r\n          icon={<FiXCircle />}\r\n          onClick={() => setValue(\"\")}\r\n          visible={!!value.length}\r\n        />\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { ImCheckmark } from \"react-icons/im\";\r\nimport styled from \"styled-components\";\r\nimport { LoadingCircle } from \"../../../components/Loading/LoadingCircle\";\r\nimport { useModal } from \"../../../contexts/ModalContext\";\r\n\r\nconst SubmitButtonWrapper = styled.button`\r\n  width: 100%;\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n  opacity: ${(props) => (props.isLoading || !props.isActive ? 0.5 : 1)};\r\n  background: var(--purpleAndBlueGrad);\r\n  color: #fff;\r\n  font-weight: bold;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 40px;\r\n  border-radius: var(--standartBorderRadius3);\r\n  position: relative;\r\n  overflow: hidden;\r\n\r\n  @keyframes button-animation-in {\r\n    0% {\r\n      opacity: 0;\r\n      transform: scale(0.95);\r\n    }\r\n    50% {\r\n      opacity: 1;\r\n      transform: scale(1);\r\n    }\r\n    100% {\r\n      opacity: 0;\r\n      transform: scale(0.95);\r\n    }\r\n  }\r\n\r\n  @keyframes button-animation-out {\r\n    0% {\r\n      opacity: 0;\r\n      transform: scale(0.95);\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n      transform: scale(1);\r\n    }\r\n  }\r\n\r\n  .inner-button {\r\n    z-index: 1;\r\n\r\n    .inner-button-success {\r\n      animation: button-animation-in 2s forwards;\r\n    }\r\n\r\n    .inner-button-text {\r\n      animation: button-animation-out 0.5s forwards;\r\n    }\r\n  }\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    display: block;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background: var(--green);\r\n    width: ${(props) => (props.completed ? \"2000px\" : \"0\")};\r\n    height: ${(props) => (props.completed ? \"2000px\" : \"0\")};\r\n    border-radius: 100%;\r\n    transition: 0.6s;\r\n    z-index: 0;\r\n  }\r\n\r\n  .LoadingCircle {\r\n    position: relative;\r\n    transform: none;\r\n    left: auto;\r\n    top: auto;\r\n    width: 30px;\r\n    height: 30px;\r\n\r\n    img {\r\n      width: 30px;\r\n      height: 30px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SubmitButton = ({\r\n  text,\r\n  action,\r\n  isLoading,\r\n  completed = false,\r\n  setCompleted,\r\n  bottomMessage,\r\n  isActive = true,\r\n}) => {\r\n  const { openBottomMessage } = useModal();\r\n\r\n  useEffect(() => {\r\n    if (completed) {\r\n      openBottomMessage(bottomMessage ?? undefined);\r\n      setTimeout(() => {\r\n        setCompleted(false);\r\n      }, 2000);\r\n    }\r\n  }, [completed]);\r\n\r\n  return (\r\n    <SubmitButtonWrapper\r\n      isLoading={isLoading}\r\n      className=\"submit-button\"\r\n      completed={completed}\r\n      isActive={isActive}\r\n      onClick={isActive ? action : () => openBottomMessage(\"Nope\", \"failure\")}\r\n    >\r\n      <div className=\"inner-button\">\r\n        {completed ? (\r\n          <div className=\"inner-button-success\">\r\n            <ImCheckmark /> Done\r\n          </div>\r\n        ) : !isLoading ? (\r\n          <div className=\"inner-button-text\">{text}</div>\r\n        ) : (\r\n          <LoadingCircle top={0} />\r\n        )}\r\n      </div>\r\n    </SubmitButtonWrapper>\r\n  );\r\n};\r\n\r\nexport default SubmitButton;\r\n","import React from \"react\";\r\nimport { PersonTiny } from \"../Basic/PersonTiny\";\r\n\r\nexport const TinyPersonsList = ({\r\n  listOfPeople,\r\n  title,\r\n  chosenArray,\r\n  setChosenArray = () => null,\r\n  lastSeen = false,\r\n}) => {\r\n  return (\r\n    <div>\r\n      {title ? (\r\n        <h2 style={{ marginTop: \"0\", marginBottom: \"7px\" }}>{title}</h2>\r\n      ) : null}\r\n      {listOfPeople.map((person) => {\r\n        return (\r\n          <PersonTiny\r\n            data={person}\r\n            chosenArray={chosenArray}\r\n            setChosenArray={setChosenArray}\r\n            lastSeen={lastSeen}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { IoIosCheckmarkCircleOutline } from \"react-icons/io\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useModal } from \"../../contexts/ModalContext\";\r\nimport { useSong } from \"../../contexts/SongContext\";\r\nimport shareWithFriends from \"../../functions/other/shareWithManyFriends\";\r\nimport { PersonTiny } from \"../Basic/PersonTiny\";\r\nimport SearchBar from \"../../shared/ui/organisms/search-bar\";\r\nimport Input from \"../../shared/ui/atoms/input\";\r\nimport SubmitButton from \"../../shared/ui/atoms/submit-button\";\r\nimport { TinyPersonsList } from \"./TinyPersonsList\";\r\nexport const FriendsListToShareWith = ({ item, whatToShare = \"song\" }) => {\r\n  const { yourFriends } = useSong();\r\n  const [chosenFriends, setChosenFriends] = useState([]);\r\n  const { currentUser } = useAuth();\r\n  const [messageText, setMessageText] = useState(\"\");\r\n  const [completed, setCompleted] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const { toggleModal, openBottomMessage } = useModal();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [foundPeople, setFoundPeople] = useState([]);\r\n\r\n  return yourFriends.length ? (\r\n    <div className=\"FriendsListToShareWith\">\r\n      <div\r\n        style={{\r\n          maxHeight: \"300px\",\r\n          overflowY: \"hidden\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <SearchBar\r\n          value={searchValue}\r\n          setValue={setSearchValue}\r\n          setResultAuthorList={setFoundPeople}\r\n          defaultAuthorsListValue={yourFriends}\r\n          defaultSearchMode={\"authors\"}\r\n          inputText={\"Search for friends\"}\r\n        />\r\n        <div style={{ overflowY: \"auto\", maxHeight: \"100%\" }}>\r\n          <TinyPersonsList\r\n            listOfPeople={foundPeople}\r\n            chosenArray={chosenFriends}\r\n            setChosenArray={setChosenFriends}\r\n          />\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Input\r\n          value={messageText}\r\n          setValue={setMessageText}\r\n          placeholder=\"Your message\"\r\n        />\r\n        <SubmitButton\r\n          text={`Share with ${chosenFriends.length} ${\r\n            chosenFriends.length > 1 || chosenFriends.length === 0\r\n              ? \"friends\"\r\n              : \"friend\"\r\n          }`}\r\n          action={() => {\r\n            shareWithFriends({\r\n              shareList: chosenFriends,\r\n              currentUser,\r\n              itemId: whatToShare === \"author\" ? item.uid : item.id,\r\n              whatToShare,\r\n              messageText,\r\n              setLoading,\r\n              setCompleted,\r\n            });\r\n            toggleModal();\r\n          }}\r\n          completed={completed}\r\n          setCompleted={setCompleted}\r\n          bottomMessage={\"Message was sent\"}\r\n          isActive={!!chosenFriends.length}\r\n        />\r\n      </>\r\n    </div>\r\n  ) : (\r\n    <h3 style={{ margin: 0 }}>No friends added</h3>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useModal } from '../../contexts/ModalContext'\r\n\r\nexport const PersonTinyVerticalItem = ({person}) => {\r\n\tconst {setOpenModal} = useModal()\r\n\treturn (\r\n\t\t<Link to = {`/authors/${person.uid}`}>\r\n\t\t\t<div className = \"PersonTinyVerticalItem\" onClick = {()=>setOpenModal(false)}>\r\n\t\t\t\t<div className=\"personTinyImage\">\r\n\t\t\t\t\t<img loading = \"lazy\" src={person.photoURL} alt=\"\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"personTinyName\">\r\n\t\t\t\t\t{person.displayName}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Link>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { FiArrowRight } from 'react-icons/fi'\r\n\r\nexport const SeeMoreRoundButton = ({text = \"See more\", ...restProps}) => {\r\n\treturn (\r\n\t\t<div className = \"SeeMoreRoundButton\" {...restProps}>\r\n\t\t\t<button>\r\n\t\t\t\t<FiArrowRight/>\r\n\t\t\t</button>\r\n\t\t\t<span>{text}</span>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSong } from '../../contexts/SongContext'\r\nimport displayDate from '../../functions/display/displayDate'\r\nimport { CgMusicNote } from 'react-icons/cg'\r\nimport { PersonTinyVerticalItem } from '../AuthorPage/PersonTinyVerticalItem'\r\nimport { useModal } from '../../contexts/ModalContext'\r\nimport { FriendsListToShareWith } from '../Lists/FriendsListToShareWith'\r\nimport { LoadingCircle } from '../Loading/LoadingCircle'\r\nimport { SeeMoreRoundButton } from '../Buttons/SeeMoreRoundButton'\r\nimport { TinyPersonsList } from '../Lists/TinyPersonsList'\r\nexport const SongInfo = ({ song }) => {\r\n\tconst { currentSongData } = useSong()\r\n\tconst { setContent } = useModal()\r\n\tconst [songData, setSongData] = useState(song || currentSongData)\r\n\tconst { displayAuthors, yourFriends } = useSong()\r\n\tconst [friendsThatHaveThisSong, setFriendsThatHaveThisSong] = useState([])\r\n\tconst [loading, setLoading] = useState(true)\r\n\tasync function findFriendsThatHaveThisSong() {\r\n\t\tsetLoading(true)\r\n\t\tsetFriendsThatHaveThisSong([])\r\n\t\tyourFriends.forEach(friend => {\r\n\t\t\tif (friend.addedSongs.includes(songData.id)) setFriendsThatHaveThisSong(prev => [...prev, friend])\r\n\t\t})\r\n\t\tsetLoading(false)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (song !== undefined) setSongData(song)\r\n\t}, [song && song.id])\r\n\r\n\tuseEffect(() => {\r\n\t\tfindFriendsThatHaveThisSong()\r\n\t}, [songData.id])\r\n\r\n\treturn (\r\n\t\t<div className='SongInfo'>\r\n\t\t\t<div className=\"songImage\" style={{ backgroundImage: `url(${songData.cover})` }}></div>\r\n\t\t\t<div className=\"songInfoContent\">\r\n\t\t\t\t<h3 style={{ color: songData.imageColors[0] }}>{songData.name}</h3>\r\n\t\t\t\t<span>{displayAuthors(songData.authors, ', ')}</span>\r\n\t\t\t\t<div style={{ display: 'flex', alignItems: 'center', opacity: '0.6', fontSize: '.9em', position: \"relative\", marginTop:'5px' }} className=\"listensAndDate\">\r\n\t\t\t\t\t<p className=\"infoListens\" style={{ marginRight: '15px', marginBottom: '0', position: 'relative' }}>{songData.listens} <CgMusicNote /></p>\r\n\t\t\t\t\t<span>{displayDate(songData.releaseDate)}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<h4 style={{ margin: '10px 0' }}>{friendsThatHaveThisSong.length > 0 ? 'Friends that listen that song' : 'None of your friends listens this'}</h4>\r\n\t\t\t\t{!loading ? <div style={{ display: 'flex'}}>\r\n\t\t\t\t\t{friendsThatHaveThisSong.length > 0 ? friendsThatHaveThisSong.map((person, index) => {\r\n\t\t\t\t\t\tif (index < 2) return <PersonTinyVerticalItem person={person} key={person.uid} />\r\n\t\t\t\t\t}) : <button className=\"shareBtn\" style={{ minHeight: '35px', background: songData.imageColors[0] }} onClick={() => { setContent(<FriendsListToShareWith item={songData} whatToShare={'song'} />) }}>Share</button>}\r\n\t\t\t\t\t{friendsThatHaveThisSong.length > 2 ? <SeeMoreRoundButton onClick={() => setContent(<TinyPersonsList listOfPeople={friendsThatHaveThisSong} title={`Friends listen ${song.name}`} />)} /> : null}\r\n\t\t\t\t</div> :\r\n\t\t\t\t\t<div style={{ position: 'relative', height: '50px' }}><LoadingCircle top={\"50%\"} /></div>}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { useSong } from '../../contexts/SongContext'\r\n\r\nexport const AuthorsList = ({listOfAuthors}) => {\r\n\tconst { displayAuthorsFull } = useSong()\r\n\treturn (\r\n\t\t<div className=\"rightSideAuthorsList\" >\r\n\t\t\t<div className=\"rightSideAuthorsListCentralBlock\">\r\n\t\t\t\t{displayAuthorsFull(listOfAuthors)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useModal } from \"../../contexts/ModalContext\";\r\n\r\nexport const ErrorPlate = ({ errorMessage }) => {\r\n  const { openBottomMessage } = useModal();\r\n  useEffect(() => {\r\n    if (errorMessage) {\r\n      openBottomMessage(errorMessage, \"failure\");\r\n    }\r\n  }, [errorMessage]);\r\n  return errorMessage && <div className=\"Alert\">{errorMessage}</div>;\r\n};\r\n","export function transformLyricsToArrayOfObjects(lyrics) {\r\n\tconst arrayOfParagraphs = []\r\n\tlet startSubstr = 0\r\n\tconst fixedLyrics = lyrics + ' '\r\n\tfor (let i = 0; i < fixedLyrics.length; i++) {\r\n\t\tif (fixedLyrics[i] === '\\n' || fixedLyrics[i + 1] === undefined) {\r\n\t\t\tarrayOfParagraphs.push({\r\n\t\t\t\tstartTime: 'undefined',\r\n\t\t\t\ttext: fixedLyrics.substr(startSubstr, i - startSubstr)\r\n\t\t\t})\r\n\t\t\tstartSubstr = i + 1\r\n\t\t}\r\n\t}\r\n\treturn arrayOfParagraphs\r\n}","import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { ErrorPlate } from \"../MessagePlates/ErrorPlate\";\r\nimport { FiXCircle } from \"react-icons/fi\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport SearchBar from \"../../shared/ui/organisms/search-bar\";\r\nimport { PersonTiny } from \"../Basic/PersonTiny\";\r\nimport { firestore } from \"../../firebase\";\r\nimport { transformLyricsToArrayOfObjects } from \"../../functions/other/transformLyricsToArrayOfObject\";\r\nimport SubmitButton from \"../../shared/ui/atoms/submit-button\";\r\nimport { useModal } from \"../../contexts/ModalContext\";\r\nexport const EditSong = ({ song }) => {\r\n  const { currentUser } = useAuth();\r\n  const { toggleModal } = useModal();\r\n  const [songName, setSongName] = useState(song.name);\r\n  const [songAuthors, setSongAuthors] = useState(song.authors);\r\n  const [songCover, setSongCover] = useState(song.cover);\r\n  const [imageColors, setImageColors] = useState(song.imageColors);\r\n  const [lyrics, setLyrics] = useState(\r\n    song.lyrics.map((obj) => obj.text).join(\"\\n\")\r\n  );\r\n  const [foundAuthors, setFoundAuthors] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [completed, setCompleted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setSongName(song.name);\r\n    setSongAuthors(song.authors);\r\n    setSongCover(song.cover);\r\n    setImageColors(song.imageColors);\r\n    setLyrics(song.lyrics.map((obj) => obj.text).join(\"\\n\"));\r\n  }, [song.id]);\r\n\r\n  function manuallyChangeColor(e, i) {\r\n    imageColors[i] = e.target.value;\r\n    setImageColors([...imageColors]);\r\n  }\r\n\r\n  function updateSong() {\r\n    if (songName.length === 0) {\r\n      setErrorMessage(\"Name shouldn't be empty\");\r\n    } else if (songAuthors.length === 0) {\r\n      setErrorMessage(\"Song has to have at least 1 author\");\r\n    } else if (songCover.length === 0) {\r\n      setErrorMessage(\"Song has to have cover\");\r\n    } else {\r\n      setLoading(true);\r\n      if (songAuthors.length > song.authors.length) {\r\n        const newAuthors = songAuthors.filter((author) => {\r\n          return !song.authors.find((a) => a.uid === author.uid);\r\n        });\r\n        newAuthors.forEach(async (author) => {\r\n          const authorRef = await firestore\r\n            .collection(\"users\")\r\n            .doc(author.uid)\r\n            .get();\r\n          const authorData = authorRef.data();\r\n          const authorSongs = authorData.ownSongs;\r\n          authorSongs.push(song.id);\r\n          firestore.collection(\"users\").doc(author.uid).update({\r\n            ownSongs: authorSongs,\r\n          });\r\n        });\r\n      } else if (songAuthors.length < song.authors.length) {\r\n        const newAuthors = song.authors.filter((author) => {\r\n          return !songAuthors.find((a) => a.uid === author.uid);\r\n        });\r\n        newAuthors.forEach(async (author) => {\r\n          const authorRef = await firestore\r\n            .collection(\"users\")\r\n            .doc(author.uid)\r\n            .get();\r\n          const authorData = authorRef.data();\r\n          const authorSongs = authorData.ownSongs;\r\n          const filteredSongs = authorSongs.filter(\r\n            (songId) => songId !== song.id\r\n          );\r\n          firestore.collection(\"users\").doc(author.uid).update({\r\n            ownSongs: filteredSongs,\r\n          });\r\n        });\r\n      }\r\n\r\n      firestore\r\n        .collection(\"songs\")\r\n        .doc(song.id)\r\n        .update({\r\n          name: songName,\r\n          authors: songAuthors,\r\n          image: songCover,\r\n          imageColors: imageColors,\r\n          lyrics: transformLyricsToArrayOfObjects(lyrics),\r\n        })\r\n        .then(() => {\r\n          setLoading(false);\r\n          setCompleted(true);\r\n          toggleModal();\r\n        });\r\n    }\r\n  }\r\n\r\n  function removeAuthorFromList(data) {\r\n    const filtered = songAuthors.filter((people) => people.uid !== data.uid);\r\n    return setSongAuthors(filtered);\r\n  }\r\n  function addAuthor(data) {\r\n    if (!songAuthors.some((person) => person.uid === data.uid)) {\r\n      return setSongAuthors((prev) => [\r\n        ...prev,\r\n        {\r\n          uid: data.uid,\r\n          displayName: data.displayName,\r\n          photoURL: data.photoURL,\r\n        },\r\n      ]);\r\n    }\r\n\r\n    removeAuthorFromList(data);\r\n  }\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"SongInfo\"\r\n        style={{ flexDirection: \"column\", marginBottom: \"10px\" }}\r\n      >\r\n        <h3>Song cover</h3>\r\n        <div style={{ display: \"flex\" }}>\r\n          <div>\r\n            <img loading=\"lazy\" src={songCover} alt=\"\" className=\"songImage\" />\r\n          </div>\r\n          <div\r\n            style={{\r\n              background: `linear-gradient(-135deg, ${imageColors[0]}, ${imageColors[5]}`,\r\n              width: \"100%\",\r\n              borderRadius: \"var(--standartBorderRadius2)\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <h4 style={{ color: imageColors[1] }}>{songName}</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={{ width: \"100%\", display: \"flex\" }}>\r\n        {imageColors.map((color, index) => {\r\n          return (\r\n            <input\r\n              type=\"color\"\r\n              value={color}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"60px\",\r\n                padding: \"0\",\r\n                borderRadius: \"0px\",\r\n              }}\r\n              onChange={(e) => {\r\n                manuallyChangeColor(e, index);\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <div>\r\n        <h3>Song name</h3>\r\n        <input\r\n          type=\"text\"\r\n          className=\"standartInput\"\r\n          value={songName}\r\n          onChange={(e) => setSongName(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <h3>Authors</h3>\r\n        <SearchBar\r\n          value={searchValue}\r\n          setValue={setSearchValue}\r\n          setResultAuthorList={setFoundAuthors}\r\n          defaultSearchMode={\"authors\"}\r\n        />\r\n        <div className=\"songAuthorsList\">\r\n          {songAuthors.map((author) => {\r\n            return (\r\n              <div className=\"chosenAuthorItem\">\r\n                <span>{author.displayName}</span>\r\n                <FiXCircle\r\n                  onClick={() => {\r\n                    if (currentUser.isAdmin) removeAuthorFromList(author);\r\n                    else if (author.uid !== currentUser.uid)\r\n                      removeAuthorFromList(author);\r\n                  }}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"authorsResult\">\r\n          {foundAuthors.map((data, index) => {\r\n            return (\r\n              <PersonTiny\r\n                data={data}\r\n                onClick={() => addAuthor(data)}\r\n                style={\r\n                  songAuthors.includes(data.uid)\r\n                    ? { background: \"var(--green)\" }\r\n                    : {}\r\n                }\r\n                key={index}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <h3>Lyrics</h3>\r\n        <textarea\r\n          type=\"text\"\r\n          className=\"standartInput\"\r\n          style={{ height: \"200px\", fontWeight: \"500\" }}\r\n          value={lyrics}\r\n          onChange={(e) => setLyrics(e.target.value)}\r\n        />\r\n      </div>\r\n      <ErrorPlate errorMessage={errorMessage} />\r\n      <SubmitButton\r\n        text={\"Update song\"}\r\n        action={updateSong}\r\n        isLoading={loading}\r\n        completed={completed}\r\n        setCompleted={setCompleted}\r\n        bottomMessage={\"Song was updated\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { FiShare, FiInfo, FiFlag, FiUsers } from 'react-icons/fi';\r\nimport { MdPlaylistAdd, MdKeyboardArrowRight } from 'react-icons/md';\r\nimport { BiEditAlt } from 'react-icons/bi';\r\nimport { useModal } from '../../contexts/ModalContext';\r\nimport AddOrDeleteButtonFull from '../FullScreenPlayer/AddOrDeleteSongButton'\r\nimport { AddToPlaylists } from '../FullScreenPlayer/AddToPlaylists'\r\nimport { FriendsListToShareWith } from '../Lists/FriendsListToShareWith'\r\nimport { SongInfo } from '../Info/SongInfo'\r\nimport { AuthorsList } from '../FullScreenPlayer/AuthorsList'\r\nimport { EditSong } from '../AdminAndAuthor/EditSong';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nexport const SongItemMobileMoreWindow = ({ song }) => {\r\n\tconst { setContent } = useModal()\r\n\tconst {currentUser} = useAuth()\r\n\treturn (\r\n\t\t<div className=\"SongItemMobileMoreWindow\">\r\n\t\t\t<div className=\"simpleSongElement\" style = {{background:song.imageColors[0]}}>\r\n\t\t\t\t<div className=\"simpleSongElementImage\" >\r\n\t\t\t\t\t<img loading = \"lazy\" src={song.cover} alt=\"\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<span>{song.name}</span>\r\n\t\t\t</div>\r\n\t\t\t{currentUser.isAdmin ? <div className=\"songItemMenuWindowItem\" onClick = {()=>{setContent(<EditSong song = {song}/>)}}><BiEditAlt />Edit</div> : null}\r\n\t\t\t<div className=\"songItemMenuWindowItem\"><AddOrDeleteButtonFull song={song} /></div>\r\n\t\t\t<div className=\"songItemMenuWindowItem\" onClick = {()=>setContent(<AddToPlaylists song={song} />)}>\r\n\t\t\t\t<MdPlaylistAdd />Add to playlist\r\n\t\t\t</div>\r\n\t\t\t<div className=\"songItemMenuWindowItem\" onClick={() => { setContent(<FriendsListToShareWith item={song} whatToShare={\"song\"} />) }}>\r\n\t\t\t\t<FiShare />Share\r\n\t\t\t</div>\r\n\t\t\t<div className=\"songItemMenuWindowItem\" onClick={() => { setContent(<SongInfo song={song} />) }}><FiInfo />Info</div>\r\n\t\t\t<div className=\"songItemMenuWindowItem\" onClick={() => { setContent(<AuthorsList listOfAuthors={song.authors} title={\"Authors\"} />) }}><FiUsers />Authors</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from \"react\";\r\nimport { FiShare, FiInfo } from \"react-icons/fi\";\r\nimport { MdPlaylistAdd, MdKeyboardArrowRight } from \"react-icons/md\";\r\nimport { BiEditAlt, BiListPlus } from \"react-icons/bi\";\r\nimport { useModal } from \"../../contexts/ModalContext\";\r\nimport AddOrDeleteButtonFull from \"../FullScreenPlayer/AddOrDeleteSongButton\";\r\nimport { AddToPlaylists } from \"../FullScreenPlayer/AddToPlaylists\";\r\nimport { FriendsListToShareWith } from \"../Lists/FriendsListToShareWith\";\r\nimport { SongInfo } from \"../Info/SongInfo\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { EditSong } from \"../AdminAndAuthor/EditSong\";\r\nimport { useSong } from \"../../contexts/SongContext\";\r\nconst SongItemMoreWindow = ({\r\n  openMoreWindow,\r\n  song,\r\n  moreWindowPosRelativeToViewport,\r\n}) => {\r\n  const { toggleModal, setContent, openBottomMessage } = useModal();\r\n  const { currentUser } = useAuth();\r\n  const { setCurrentSongQueue } = useSong();\r\n\r\n  const addToQueue = () => {\r\n    setCurrentSongQueue((prev) => [...prev, song]);\r\n    openBottomMessage(\"Song was added to queue\");\r\n  };\r\n\r\n  return openMoreWindow ? (\r\n    <div\r\n      className=\"songItemMenuWindow\"\r\n      style={\r\n        moreWindowPosRelativeToViewport > window.innerHeight / 2 + 100\r\n          ? { top: \"auto\", bottom: \"110%\" }\r\n          : { top: \"110%\", bottom: \"auto\" }\r\n      }\r\n      onClick={(e) => e.stopPropagation()}\r\n    >\r\n      {currentUser.isAdmin ||\r\n      song.authors.find((el) => el.uid === currentUser.uid) ? (\r\n        <div\r\n          className=\"songItemMenuWindowItem\"\r\n          onClick={() => {\r\n            toggleModal();\r\n            setContent(<EditSong song={song} />);\r\n          }}\r\n        >\r\n          <BiEditAlt />\r\n          Edit\r\n        </div>\r\n      ) : null}\r\n      <div className=\"songItemMenuWindowItem\">\r\n        <AddOrDeleteButtonFull song={song} />\r\n      </div>\r\n      <div className=\"songItemMenuWindowItem\">\r\n        <div className=\"songItemMenuWindow inner\">\r\n          <AddToPlaylists song={song} />\r\n        </div>\r\n        <MdPlaylistAdd />\r\n        Add to playlist <MdKeyboardArrowRight />\r\n      </div>\r\n      <div\r\n        className=\"songItemMenuWindowItem\"\r\n        onClick={() => {\r\n          toggleModal();\r\n          setContent(\r\n            <FriendsListToShareWith item={song} whatToShare={\"song\"} />\r\n          );\r\n        }}\r\n      >\r\n        <FiShare />\r\n        Share\r\n      </div>\r\n      <div\r\n        className=\"songItemMenuWindowItem\"\r\n        onClick={() => {\r\n          toggleModal();\r\n          setContent(<SongInfo song={song} />);\r\n        }}\r\n      >\r\n        <FiInfo />\r\n        Info\r\n      </div>\r\n      <div className=\"songItemMenuWindowItem\" onClick={addToQueue}>\r\n        <BiListPlus />\r\n        Add to queue\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default SongItemMoreWindow;\r\n","import { useEffect } from 'react';\r\n\r\nconst useOutsideClick = (ref, setFunc) => {\r\n\tuseEffect(() => {\r\n\t\tfunction handleClickOutside(event) {\r\n\t\t\tif (ref.current && !ref.current.contains(event.target)) {\r\n\t\t\t\tsetFunc(false)\r\n\t\t\t}\r\n\t\t}\r\n\t\tdocument.addEventListener(\"mousedown\", handleClickOutside);\r\n\t\treturn () => {\r\n\t\t\tdocument.removeEventListener(\"mousedown\", handleClickOutside);\r\n\t\t};\r\n\t}, [ref]);\r\n}\r\n\r\nexport default useOutsideClick\r\n","import { firestore } from \"../../../firebase\";\r\n\r\nconst saveSearchHistory = (uid, itemId, itemType) => {\r\n\tconst newItemSaved = {\r\n\t\tid: itemId,\r\n\t\ttype: itemType\r\n\t}\r\n\tfirestore\r\n\t\t.collection(\"searchHistory\")\r\n\t\t.doc(uid)\r\n\t\t.get()\r\n\t\t.then((res) => {\r\n\t\t\tif (res.data().history) {\r\n\t\t\t\tif (!res.data().history.find(({ id }) => id === itemId)) {\r\n\t\t\t\t\tfirestore\r\n\t\t\t\t\t\t.collection(\"searchHistory\")\r\n\t\t\t\t\t\t.doc(uid)\r\n\t\t\t\t\t\t.update({\r\n\t\t\t\t\t\t\thistory: [newItemSaved, ...res.data().history.slice(0, 15)],\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfirestore\r\n\t\t\t\t\t.collection(\"searchHistory\")\r\n\t\t\t\t\t.doc(uid)\r\n\t\t\t\t\t.set({\r\n\t\t\t\t\t\thistory: [newItemSaved],\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n};\r\n\r\nexport default saveSearchHistory","import { useAuth } from \"../../../../contexts/AuthContext\";\r\nimport { useModal } from \"../../../../contexts/ModalContext\";\r\nimport { useSong } from \"../../../../contexts/SongContext\";\r\nimport { deleteSongFromLibrary } from \"../../../../functions/other/deleteSongFromLibrary\";\r\nimport shortWord from \"../../../../functions/other/shortWord\";\r\nimport { addSongToLibrary } from \"../add-song-to-library\";\r\n\r\nconst useAddOrDeleteSong = (song) => {\r\n\tconst { currentUser, setCurrentUser } = useAuth();\r\n\tconst { yourSongs } = useSong();\r\n\tconst { openBottomMessage, openConfirm, closeConfirm } = useModal();\r\n\r\n\tconst addSong = (e) => {\r\n\t\taddSongToLibrary(e, song, currentUser, setCurrentUser);\r\n\t\topenBottomMessage(\r\n\t\t\t`${shortWord(song.name, 15)} added to your library`\r\n\t\t);\r\n\t}\r\n\r\n\tconst removeSong = (e) => {\r\n\t\te.stopPropagation();\r\n\t\topenConfirm(\r\n\t\t\t`You sure you want to delete \"${song.name}\" from library?`,\r\n\t\t\t\"Yes, delete it\",\r\n\t\t\t\"No, just kidding\",\r\n\t\t\t(e) => {\r\n\t\t\t\tdeleteSongFromLibrary(e, song, currentUser, yourSongs);\r\n\t\t\t\tcloseConfirm();\r\n\t\t\t\topenBottomMessage(\r\n\t\t\t\t\t`${shortWord(song.name, 15)} removed from your library`,\r\n\t\t\t\t\t\"failure\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\treturn [addSong, removeSong]\r\n}\r\n\r\nexport default useAddOrDeleteSong\r\n","import React from \"react\";\r\nimport { FiPlusCircle, FiX } from \"react-icons/fi\";\r\nimport { Hint } from \"../../../../components/Basic/Hint\";\r\nimport { useAuth } from \"../../../../contexts/AuthContext\";\r\nimport useAddOrDeleteSong from \"../../lib/hooks/use-add-or-delete-song\";\r\n\r\nconst AddOrDeleteButton = ({ song }) => {\r\n  const { currentUser } = useAuth();\r\n  const [addSong, removeSong] = useAddOrDeleteSong(song);\r\n\r\n  if (!currentUser.addedSongs.includes(song.id)) {\r\n    return (\r\n      <button onClick={addSong} style={{ position: \"relative\" }}>\r\n        <Hint text={\"add song\"} />\r\n        <FiPlusCircle />\r\n      </button>\r\n    );\r\n  } else {\r\n    return (\r\n      <button onClick={removeSong} style={{ position: \"relative\" }}>\r\n        <Hint text={\"delete song\"} />\r\n        <FiX />\r\n      </button>\r\n    );\r\n  }\r\n};\r\n\r\nexport default AddOrDeleteButton;\r\n","export default function rightFormanForBigNumber(number){\r\n\tif(number < 1000) return number\r\n\r\n\tif(number < 1000000) return parseFloat(number/1000).toFixed(1) + 'K'\r\n\r\n\tif(number < 1000000000) return parseFloat(number / 1000000).toFixed(1) + 'M'\r\n}","import React from 'react'\r\nimport { CgMusicNote } from 'react-icons/cg';\r\nimport rightFormanForBigNumber from '../../../../functions/other/rightFormatForBigNumber';\r\n\r\nconst ShowAdditionInfo = ({ showListens, isNewSong, song }) => {\r\n\treturn showListens ? (\r\n\t\t<span\r\n\t\t\tstyle={{\r\n\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\talignItems: \"center\",\r\n\t\t\t\topacity: 0.7,\r\n\t\t\t\tfontSize: \".8em\",\r\n\t\t\t}}\r\n\t\t\tclassName={isNewSong ? \"newSongMarker\" : \"\"}\r\n\t\t>\r\n\t\t\t{rightFormanForBigNumber(song.listens)} <CgMusicNote />\r\n\t\t</span>\r\n\t) : isNewSong ? (\r\n\t\t<span\r\n\t\t\tstyle={{ display: \"flex\", alignItems: \"center\", fontSize: \".7em\" }}\r\n\t\t\tclassName={\"newSongMarker\"}\r\n\t\t>\r\n\t\t\tNew\r\n\t\t</span>\r\n\t) : null;\r\n\r\n}\r\n\r\nexport default ShowAdditionInfo\r\n","import { useRef, useState } from \"react\";\r\nimport { FiMoreVertical } from \"react-icons/fi\";\r\nimport { HiPause, HiPlay } from \"react-icons/hi\";\r\nimport { Hint } from \"../../../../components/Basic/Hint\";\r\nimport ColorCircles from \"../../../../components/FullScreenPlayer/colorCircles\";\r\nimport { SongItemMobileMoreWindow } from \"../../../../components/Windows/SongItemMobileMoreWindow\";\r\nimport SongItemMoreWindow from \"../../../../components/Windows/SongItemMoreWindow\";\r\nimport { useAuth } from \"../../../../contexts/AuthContext\";\r\nimport { useModal } from \"../../../../contexts/ModalContext\";\r\nimport { useScreen } from \"../../../../contexts/ScreenContext\";\r\nimport { useSong } from \"../../../../contexts/SongContext\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport { addSongToHistory } from \"../../../../functions/add/addSongToHistory\";\r\nimport displayAuthorsStr from \"../../../../functions/display/displayAuthorsStr\";\r\nimport shortWord from \"../../../../functions/other/shortWord\";\r\nimport useOutsideClick from \"../../../../shared/lib/hooks/use-outside-click\";\r\nimport { AddToListCircle } from \"../../../../shared/ui/molecules/add-to-list-circle\";\r\nimport saveSearchHistory from \"../../../search/lib/save-search-history\";\r\nimport AddOrDeleteButton from \"../molecules/add-or-delete-button\";\r\nimport ShowAdditionInfo from \"../molecules/show-additional-info\";\r\nexport const SongItem = ({\r\n  song,\r\n  localIndex,\r\n  showListens = false,\r\n  isNewSong = false,\r\n  listOfChosenSongs,\r\n  setListOfSongs,\r\n  position,\r\n  shouldSaveSearchHistory = false,\r\n}) => {\r\n  const {\r\n    setCurrentSong,\r\n    currentSong,\r\n    displayAuthors,\r\n    play,\r\n    songRef,\r\n    setPlay,\r\n    setCurrentSongInQueue,\r\n  } = useSong();\r\n  const { isMobile } = useScreen();\r\n  const [openMoreWindow, setOpenMoreWindow] = useState(false);\r\n  const [moreWindowPosRelativeToViewport, setMoreWindowPosRelativeToViewport] =\r\n    useState(0);\r\n  const currentItemRef = useRef(null);\r\n  const { currentUser } = useAuth();\r\n  const { toggleModal, setContent } = useModal();\r\n  useOutsideClick(currentItemRef, setOpenMoreWindow);\r\n\r\n  function chooseSongItem() {\r\n    setCurrentSong(song.id);\r\n    firestore.collection(\"users\").doc(currentUser.uid).update({\r\n      lastSongPlayed: song.id,\r\n    });\r\n\r\n    setCurrentSongInQueue(localIndex);\r\n    if (song.id === currentSong && play) {\r\n      songRef.current.pause();\r\n      setPlay(false);\r\n      // clearTimeout(listenCountTimeOut)\r\n      return;\r\n    }\r\n    songRef.current.play();\r\n    setPlay(true);\r\n\r\n    if (shouldSaveSearchHistory)\r\n      saveSearchHistory(currentUser.uid, song.id, \"songs\");\r\n    addSongToHistory(song.id, currentUser);\r\n  }\r\n\r\n  function openSongItemMoreWindow(e) {\r\n    e.stopPropagation();\r\n    setOpenMoreWindow(!openMoreWindow);\r\n    setMoreWindowPosRelativeToViewport(\r\n      position || e.target.getBoundingClientRect().top\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", alignItems: \"center\", width: \"100%\" }}>\r\n      <AddToListCircle\r\n        listOfChosenItems={listOfChosenSongs}\r\n        setListOfChosenItems={setListOfSongs}\r\n        itemId={song.id}\r\n      />\r\n      <div\r\n        className={\r\n          \"SongItem \" + (song.id === currentSong && play ? \"playingNow\" : \"\")\r\n        }\r\n        onClick={chooseSongItem}\r\n        ref={openMoreWindow ? currentItemRef : null}\r\n        style={openMoreWindow ? { background: \"var(--playlistsColor)\" } : {}}\r\n      >\r\n        <div className=\"songItemImageAndName\">\r\n          <div className=\"songItemImage\">\r\n            <div className=\"songItemPlayOrPause\">\r\n              {song.id === currentSong && play ? null : <HiPlay />}\r\n            </div>\r\n            <div\r\n              className=\"playingAnimation\"\r\n              style={\r\n                song.id === currentSong && play\r\n                  ? { opacity: 1, visibility: \"visible\" }\r\n                  : {}\r\n              }\r\n            >\r\n              <HiPause />\r\n              <ColorCircles play={play} />\r\n            </div>\r\n            <img loading=\"lazy\" src={song.cover} alt=\"\" />\r\n          </div>\r\n          <div className=\"songItemNameAndAuthor\">\r\n            <div\r\n              className=\"songItemName\"\r\n              style={{ display: \"flex\", alignItems: \"center\" }}\r\n            >\r\n              {shortWord(song.name, !isMobile ? 30 : 17)}\r\n              <span style={{ marginLeft: \"10px\", fontWeight: \"500\" }}>\r\n                <ShowAdditionInfo\r\n                  showListens={showListens}\r\n                  isNewSong={isNewSong}\r\n                  song={song}\r\n                />\r\n              </span>\r\n            </div>\r\n            {!isMobile ? (\r\n              <div className=\"songItemAuthor\">\r\n                {displayAuthors(song.authors)}\r\n              </div>\r\n            ) : (\r\n              <div className=\"songItemAuthor\">\r\n                {displayAuthorsStr(song.authors, \" & \", 30)}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"songItemMoreBtn\">\r\n          <AddOrDeleteButton song={song} />\r\n          <button\r\n            onClick={\r\n              isMobile\r\n                ? (e) => {\r\n                    e.stopPropagation();\r\n                    toggleModal();\r\n                    setContent(<SongItemMobileMoreWindow song={song} />);\r\n                  }\r\n                : openSongItemMoreWindow\r\n            }\r\n          >\r\n            <Hint text={\"more\"} />\r\n            <FiMoreVertical />\r\n          </button>\r\n        </div>\r\n        <SongItemMoreWindow\r\n          openMoreWindow={openMoreWindow}\r\n          song={song}\r\n          moreWindowPosRelativeToViewport={moreWindowPosRelativeToViewport}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { AiOutlineCloudDownload } from \"react-icons/ai\";\r\nimport { ImCheckmark } from \"react-icons/im\";\r\nimport styled from \"styled-components\";\r\nimport { LoadingCircle } from \"../../../components/Loading/LoadingCircle\";\r\nimport { useModal } from \"../../../contexts/ModalContext\";\r\nimport { storage } from \"../../../firebase\";\r\n\r\nconst DownloadButtonWrapper = styled.button`\r\n  width: 100%;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  background: linear-gradient(45deg, #852de5, #5c38c1);\r\n  color: #fff;\r\n  font-weight: bold;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 40px;\r\n  border-radius: var(--standartBorderRadius3);\r\n  position: relative;\r\n  overflow: hidden;\r\n  z-index: 2;\r\n  margin: 8px 0;\r\n\r\n  @keyframes button-animation-out {\r\n    0% {\r\n      opacity: 0;\r\n      transform: scale(0.9);\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n      transform: scale(1);\r\n    }\r\n  }\r\n\r\n  .inner-button {\r\n    z-index: 1;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    .inner-button-content {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n\r\n    .inner-button-success {\r\n      animation: button-animation-out 2s forwards;\r\n    }\r\n\r\n    .inner-button-text {\r\n      cursor: pointer;\r\n      width: 100%;\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n\r\n      svg {\r\n        margin-right: 7px;\r\n        width: 20px;\r\n        height: 20px;\r\n      }\r\n    }\r\n\r\n    .inner-button-download {\r\n      width: 100%;\r\n      background: red;\r\n\r\n      input[type=\"file\"] {\r\n        /* display: none; */\r\n        width: 100%;\r\n        height: 100%;\r\n        position: absolute;\r\n        left: 50%;\r\n        top: 50%;\r\n        transform: translate(-50%, -50%);\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    display: block;\r\n    top: 50%;\r\n    left: 0%;\r\n    transform: translateY(-50%);\r\n    background: var(--green);\r\n    width: ${(props) => (props.completed ? \"100%\" : \"0\")};\r\n    height: 100%;\r\n    transition: 0.6s;\r\n    z-index: 0;\r\n  }\r\n\r\n  .LoadingCircle {\r\n    position: relative;\r\n    transform: none;\r\n    left: auto;\r\n    top: auto;\r\n    width: 30px;\r\n    height: 30px;\r\n\r\n    img {\r\n      width: 30px;\r\n      height: 30px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DownloadButton = ({\r\n  title = \"\",\r\n  text,\r\n  place,\r\n  setItemSrc,\r\n  setImageLocalPath,\r\n}) => {\r\n  const { openBottomMessage } = useModal();\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [completed, setCompleted] = useState(false);\r\n\r\n  async function onFileChange(e, place, setFunc) {\r\n    e.preventDefault();\r\n    setErrorMessage(\"\");\r\n    setLoading(true);\r\n    setCompleted(false);\r\n    const isImage =\r\n      place === \"songsImages/\" ||\r\n      place === \"usersImages/\" ||\r\n      place === \"chatCovers/\";\r\n    const file = e.target.files[0];\r\n    let isValid = false;\r\n    if (isImage) {\r\n      const validExtensions = [\".jpg\", \".png\", \".jpeg\"];\r\n      if (\r\n        validExtensions.find(\r\n          (ext) =>\r\n            file.name.substr(file.name.length - ext.length, ext.length) === ext\r\n        )\r\n      )\r\n        isValid = true;\r\n      else {\r\n        setErrorMessage(\r\n          `Format of your file is not valid. Download file with one of these: ${validExtensions.map(\r\n            (ex) => \" \" + ex\r\n          )}`\r\n        );\r\n        setLoading(false);\r\n      }\r\n    } else if (place === \"songs/\") {\r\n      const validExtensions = [\".mp3\", \".mp4a\", \".flac\", \".wav\", \".wma\"];\r\n      if (\r\n        validExtensions.find(\r\n          (ext) =>\r\n            file.name.substr(file.name.length - ext.length, ext.length) === ext\r\n        )\r\n      )\r\n        isValid = true;\r\n      else {\r\n        setErrorMessage(\r\n          `Format of your file is not valid. Download file with one of these: ${validExtensions.map(\r\n            (ex) => ex\r\n          )}`\r\n        );\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    if (isValid) {\r\n      if (isImage) setImageLocalPath(URL.createObjectURL(file));\r\n      const storageRef = storage.ref();\r\n      const fileRef = storageRef.child(place + file.name);\r\n      await fileRef.put(file);\r\n      setCompleted(true);\r\n      setLoading(false);\r\n      setFunc(await fileRef.getDownloadURL());\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (errorMessage.length) openBottomMessage(errorMessage, \"failure\");\r\n  }, [errorMessage]);\r\n\r\n  return (\r\n    <>\r\n      {!!title && <h3>{title}</h3>}\r\n      <DownloadButtonWrapper completed={completed}>\r\n        <div className=\"inner-button\">\r\n          {completed ? (\r\n            <div className=\"inner-button-success\">\r\n              <ImCheckmark /> Done\r\n            </div>\r\n          ) : !loading ? (\r\n            <div className=\"inner-button-content\">\r\n              <label className=\"inner-button-download\">\r\n                <div className=\"inner-button-text\">\r\n                  <AiOutlineCloudDownload />\r\n                  {text}\r\n                </div>\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"\"\r\n                  id=\"\"\r\n                  onChange={(e) => onFileChange(e, place, setItemSrc)}\r\n                />\r\n              </label>\r\n            </div>\r\n          ) : (\r\n            <LoadingCircle top={0} />\r\n          )}\r\n        </div>\r\n      </DownloadButtonWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DownloadButton;\r\n","import React from 'react'\r\n\r\nexport const FullScreenLoading = ({loading}) => {\r\n\treturn (\r\n\t\t<div className = \"FullScreenLoading\" style = {loading?{}:{opacity:'0', visibility:'hidden'}}>\r\n\t\t\t<img loading = \"lazy\" src=\"https://icon-library.com/images/spinner-icon-gif/spinner-icon-gif-28.jpg\" alt=\"\"/>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\n\r\nexport const RadioBtn = ({currentActive, id, label, onClick}) => {\r\n\treturn (\r\n\t\t<div className = \"RadioBtn\" id = {id} onClick = {onClick}>\r\n\t\t\t<span className = \"radioLabel\" style = {currentActive === id?{color:'var(--blue)', opacity:1, fontWeight:'bold'}:{}}>\r\n\t\t\t\t{label}\r\n\t\t\t</span>\r\n\t\t\t<span className = \"radioCircle\" style = {currentActive === id?{background:'var(--blue)'}:{}}></span>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { ColorExtractor } from \"react-color-extractor\";\r\nimport { FiXCircle } from \"react-icons/fi\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { SongItem } from \"../../features/song/ui/organisms/song-item\";\r\nimport { firestore } from \"../../firebase\";\r\nimport { findVariantsOfName } from \"../../functions/find/findVariantsOfName\";\r\nimport getUID from \"../../functions/other/getUID\";\r\nimport DownloadButton from \"../../shared/ui/atoms/download-button\";\r\nimport Input from \"../../shared/ui/atoms/input\";\r\nimport SubmitButton from \"../../shared/ui/atoms/submit-button\";\r\nimport SearchBar from \"../../shared/ui/organisms/search-bar\";\r\nimport { PersonTiny } from \"../Basic/PersonTiny\";\r\nimport { FullScreenLoading } from \"../Loading/FullScreenLoading\";\r\nimport { ErrorPlate } from \"../MessagePlates/ErrorPlate\";\r\nimport { RadioBtn } from \"../SignIn-Up/RadioBtn\";\r\nexport const AddPlaylist = () => {\r\n  const { currentUser } = useAuth();\r\n  const [playlistName, setPlaylistName] = useState(\"\");\r\n  const [playlistCover, setPlaylistCover] = useState(\"\");\r\n  const [authorsInputValue, setAuthorsInputValue] = useState(\"\");\r\n  const [allAuthors, setAllAuthors] = useState([]);\r\n  const [chosenAuthors, setChosenAuthors] = useState(\r\n    !currentUser.isAdmin\r\n      ? [\r\n          {\r\n            uid: currentUser.uid,\r\n            photoURL: currentUser.photoURL,\r\n            displayName: currentUser.displayName,\r\n          },\r\n        ]\r\n      : []\r\n  );\r\n  const [releaseDate, setReleaseDate] = useState(\r\n    currentUser.isAdmin ? \"\" : new Date().toString()\r\n  );\r\n  const [songsSearch, setSongsSearch] = useState(\"\");\r\n  const [allSongs, setAllSongs] = useState([]);\r\n  const [chosenSongs, setChosenSongs] = useState([]);\r\n  const [playlistStatus, setPlaylistStatus] = useState(0);\r\n  const [isPlaylistPrivate, setIsPlaylistPrivate] = useState(0);\r\n  const [imageLocalPath, setImageLocalPath] = useState(\"\");\r\n  const [imageColors, setImageColors] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [loadingPlaylist, setLoadingPlaylist] = useState(false);\r\n  const [completed, setCompleted] = useState(false);\r\n\r\n  function removeAuthorFromList(data) {\r\n    const filtered = chosenAuthors.filter((people) => people.uid !== data.uid);\r\n    return setChosenAuthors(filtered);\r\n  }\r\n\r\n  function removeSongFromList(data) {\r\n    const filtered = chosenSongs.filter((song) => song !== data);\r\n    return setChosenSongs(filtered);\r\n  }\r\n\r\n  function addAuthor(data) {\r\n    if (!chosenAuthors.some((person) => person.uid === data.uid)) {\r\n      return setChosenAuthors((prev) => [\r\n        ...prev,\r\n        {\r\n          uid: data.uid,\r\n          displayName: data.displayName,\r\n          photoURL: data.photoURL,\r\n        },\r\n      ]);\r\n    }\r\n\r\n    removeAuthorFromList(data);\r\n  }\r\n\r\n  async function addPlaylistToFirebase(e) {\r\n    e.preventDefault();\r\n    const uid = getUID();\r\n    if (playlistName.length === 0)\r\n      setErrorMessage(\"Playlist has to have some name\");\r\n    else if (chosenAuthors.length === 0)\r\n      setErrorMessage(\"Playlist has to have at least 1 author\");\r\n    else if (releaseDate.length === 0)\r\n      setErrorMessage(\"You have to set release date for a playlist\");\r\n    else {\r\n      setLoadingPlaylist(true);\r\n      firestore\r\n        .collection(\"playlists\")\r\n        .doc(uid)\r\n        .set({\r\n          id: uid,\r\n          name: playlistName,\r\n          songs: chosenSongs,\r\n          authors: chosenAuthors,\r\n          image: playlistCover,\r\n          listens: 0,\r\n          creationDate: releaseDate,\r\n          subscribers: 0,\r\n          isAlbum: playlistStatus === 1,\r\n          imageColors: imageColors,\r\n          isPrivate: isPlaylistPrivate === true,\r\n        })\r\n        .then(() => {\r\n          setAllAuthors([]);\r\n          setAuthorsInputValue(\"\");\r\n          setChosenAuthors([]);\r\n          setPlaylistCover(\"\");\r\n          setPlaylistName(\"\");\r\n          setReleaseDate(\"\");\r\n          setSongsSearch(\"\");\r\n          setChosenSongs([]);\r\n          setIsPlaylistPrivate(0);\r\n          setLoadingPlaylist(false);\r\n          setCompleted(true);\r\n        })\r\n        .catch((err) => {\r\n          setErrorMessage(err);\r\n          setLoadingPlaylist(false);\r\n        });\r\n\r\n      chosenAuthors.forEach(async (author) => {\r\n        const authorRef = await firestore\r\n          .collection(\"users\")\r\n          .doc(author.uid)\r\n          .get();\r\n        const authorData = authorRef.data();\r\n        const authorPlaylists = authorData.ownPlaylists;\r\n        authorPlaylists.push(uid);\r\n        firestore.collection(\"users\").doc(author.uid).update({\r\n          ownPlaylists: authorPlaylists,\r\n        });\r\n      });\r\n\r\n      firestore\r\n        .collection(\"search\")\r\n        .doc(uid)\r\n        .set({\r\n          place: \"playlists\",\r\n          uid: uid,\r\n          rank: 0,\r\n          variantsOfName: findVariantsOfName(playlistName),\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"AddSong\">\r\n      <FullScreenLoading loading={loadingPlaylist} />\r\n      <ColorExtractor\r\n        src={imageLocalPath}\r\n        getColors={(colors) => setImageColors(colors)}\r\n      />\r\n      <div>\r\n        <Input\r\n          title={\"Playlist name\"}\r\n          value={playlistName}\r\n          setValue={setPlaylistName}\r\n          placeholder={\"Enter playlist name\"}\r\n        />\r\n        <label>\r\n          <h3>Playlist authors</h3>\r\n          <SearchBar\r\n            value={authorsInputValue}\r\n            setValue={setAuthorsInputValue}\r\n            setResultAuthorList={setAllAuthors}\r\n            defaultSearchMode={\"authors\"}\r\n            inputText={\"Search for authors\"}\r\n          />\r\n          {/* <input type=\"text\" placeholder=\"Enter author name\" value={authorsInputValue} onChange={(e) => setAuthorsInputValue(e.target.value)} style={{ marginBottom: '5px' }} onKeyUp={() => timerUpFunc(findAuthors)} onKeyDown={() => { return clearTimeout(typingTimeout) }} /> */}\r\n          <div className=\"chosenAuthorsList\">\r\n            {chosenAuthors.map((author) => {\r\n              return (\r\n                <div className=\"chosenAuthorItem\">\r\n                  <span>{author.displayName}</span>\r\n                  <FiXCircle\r\n                    onClick={() =>\r\n                      author.uid === currentUser.uid\r\n                        ? null\r\n                        : removeAuthorFromList(author)\r\n                    }\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"authorsResult\">\r\n            {allAuthors.map((data, index) => {\r\n              return (\r\n                <PersonTiny\r\n                  data={data}\r\n                  onClick={() => addAuthor(data)}\r\n                  style={\r\n                    chosenAuthors.includes(data.uid)\r\n                      ? { background: \"var(--green)\" }\r\n                      : {}\r\n                  }\r\n                  key={index}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </label>\r\n\r\n        <label>\r\n          <h3>Search for songs</h3>\r\n          <SearchBar\r\n            value={songsSearch}\r\n            setValue={setSongsSearch}\r\n            setAllFoundSongs={setAllSongs}\r\n            defaultSearchMode={\"songs\"}\r\n            inputText={\"Search for songs\"}\r\n          />\r\n          <div className=\"chosenAuthorsList\">\r\n            {chosenSongs.map((songId) => {\r\n              return (\r\n                <div className=\"chosenAuthorItem\">\r\n                  <span>{songId}</span>\r\n                  <FiXCircle onClick={() => removeSongFromList(songId)} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"authorsResult\">\r\n            {allSongs.map((data, index) => {\r\n              return (\r\n                <SongItem\r\n                  song={data}\r\n                  localIndex={index}\r\n                  listOfChosenSongs={chosenSongs}\r\n                  setListOfSongs={setChosenSongs}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </label>\r\n\r\n        {currentUser.isAdmin || currentUser.isAuthor ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-start\",\r\n              margin: \"15px 0\",\r\n            }}\r\n          >\r\n            <RadioBtn\r\n              label=\"Playlist\"\r\n              onClick={() => setPlaylistStatus(0)}\r\n              currentActive={playlistStatus}\r\n              id={0}\r\n            />\r\n            <RadioBtn\r\n              label=\"Album\"\r\n              onClick={() => setPlaylistStatus(1)}\r\n              currentActive={playlistStatus}\r\n              id={1}\r\n            />\r\n          </div>\r\n        ) : null}\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-start\",\r\n            margin: \"15px 0\",\r\n          }}\r\n        >\r\n          <RadioBtn\r\n            label=\"Not Private\"\r\n            onClick={() => setIsPlaylistPrivate(0)}\r\n            currentActive={isPlaylistPrivate}\r\n            id={0}\r\n          />\r\n          <RadioBtn\r\n            label=\"Private\"\r\n            onClick={() => setIsPlaylistPrivate(1)}\r\n            currentActive={isPlaylistPrivate}\r\n            id={1}\r\n          />\r\n        </div>\r\n\r\n        {(currentUser.isAdmin || currentUser.isAuthor) && (\r\n          <Input\r\n            title={\"Release Date\"}\r\n            type={\"date\"}\r\n            value={releaseDate}\r\n            setValue={setReleaseDate}\r\n            placeholder={\"Enter release date\"}\r\n          />\r\n        )}\r\n        <DownloadButton\r\n          text={\"Download playlist cover\"}\r\n          place={\"songsImages/\"}\r\n          setItemSrc={setPlaylistCover}\r\n          setImageLocalPath={setImageLocalPath}\r\n        />\r\n        <SubmitButton\r\n          text={\"Add playlists\"}\r\n          action={addPlaylistToFirebase}\r\n          isLoading={loadingPlaylist}\r\n          completed={completed}\r\n          setCompleted={setCompleted}\r\n          bottomMessage={\"Playlist was uploaded to database\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { AddPlaylist } from '../AddWindow/AddPlaylist'\r\n\r\nexport const CreatePlaylistPage = () => {\r\n\treturn (\r\n\t\t<div className = 'CreatePlaylistPage'>\r\n\t\t\t<AddPlaylist/>\r\n\t\t</div>\r\n\t)\r\n}\r\n","export const LOGIN_ROUTE = '/login'\r\nexport const SIGNUP_ROUTE = '/signup'\r\nexport const HOME_ROUTE = '/home'\r\nexport const LIBRARY_ROUTE = '/library'\r\nexport const SEARCH_ROUTE = '/search'\r\nexport const CHAT_ROUTE = '/chat'\r\nexport const NOTFOUND_ROUTE = '/not-found'\r\nexport const HISTORY_ROUTE = '/history'\r\nexport const SETTINGS_ROUTE = '/settings'\r\nexport const LYRICS_EDITING_ROUTE = '/lyrics-editing'\r\n\r\nexport const TEMPLATE_CHAT = '/chat/:chatId'\r\nexport const TEMPLATE_ALBUM = '/albums/:albumId'\r\nexport const TEMPLATE_AUTHOR = '/authors/:authorId'","import { BiMusic, BiSearch } from \"react-icons/bi\";\r\nimport { FiHome, FiMessageCircle } from \"react-icons/fi\";\r\nimport { CHAT_ROUTE, HOME_ROUTE, LIBRARY_ROUTE, SEARCH_ROUTE } from \"../utils/consts\";\r\n\r\nexport const leftSideBar = [\r\n\t{\r\n\t\tid:0, \r\n\t\ticon:<FiHome/>,\r\n\t\ttitle:'Home',\r\n\t\tlink:HOME_ROUTE\r\n\t},\r\n\t{\r\n\t\tid:1, \r\n\t\ticon:<BiMusic/>,\r\n\t\ttitle:'Library',\r\n\t\tlink:LIBRARY_ROUTE\r\n\t},\r\n\t{\r\n\t\tid:2, \r\n\t\ticon:<BiSearch/>,\r\n\t\ttitle:'Search',\r\n\t\tlink:SEARCH_ROUTE\r\n\t},\r\n\t{\r\n\t\tid:3, \r\n\t\ticon:<FiMessageCircle/>,\r\n\t\ttitle:'Chat',\r\n\t\tlink:CHAT_ROUTE\r\n\t},\r\n\r\n]","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function NavigationItem({id, title, icon, link, currentPage, setCurrentPage}) {\r\n\treturn (\r\n\t\t<Link to = {link}>\r\n\t\t\t<div className={\"NavigationItem \" + (id === currentPage?\"active\":\"\")} onClick={() => setCurrentPage(id)}>\r\n\t\t\t\t<div className=\"icon\">{icon}</div>\r\n\t\t\t\t<b>{title}</b>\r\n\t\t\t</div>\r\n\t\t</Link>\r\n\t)\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { firestore } from '../../firebase'\r\n\r\nexport const IsUserOnlineCircle = ({userUID}) => {\r\n\tconst [isOnline, setIsOnline] = useState(false)\r\n\tuseEffect(() => {\r\n\t\tconst unsubscribe = firestore.collection('users').doc(userUID)\r\n\t\t.onSnapshot(doc => {\r\n\t\t\tif(userUID !== undefined){\r\n\t\t\t\tconst fiveMinutesAgo = new Date().getTime() - 300000\r\n\t\t\t\tconst isOnline = doc.data().online > fiveMinutesAgo\r\n\t\t\t\tsetIsOnline(isOnline)\r\n\t\t\t}\r\n\t\t })\r\n\t\treturn () => {\r\n\t\t\tunsubscribe()\r\n\t\t}\r\n\t}, [firestore, userUID])\r\n\treturn (\r\n\t\tisOnline?<div className = \"onlineCircle\"></div>:null\r\n\t)\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BiShare } from \"react-icons/bi\";\r\nimport { FiMessageCircle, FiUser } from \"react-icons/fi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Hint } from \"../../../../components/Basic/Hint\";\r\nimport { IsUserOnlineCircle } from \"../../../../components/Basic/IsUserOnlineCircle\";\r\nimport { useAuth } from \"../../../../contexts/AuthContext\";\r\nimport { useModal } from \"../../../../contexts/ModalContext\";\r\nimport { useSong } from \"../../../../contexts/SongContext\";\r\nimport { createChat } from \"../../../../shared/lib/create-—Åhat\";\r\nimport { findChatURL } from \"../../../../shared/lib/find-chat-url\";\r\nimport shareWithManyFriends from \"../../../../functions/other/shareWithManyFriends\";\r\n\r\nexport const Person = ({ index, friend }) => {\r\n  const { currentUser } = useAuth();\r\n  const { openBottomMessage } = useModal();\r\n  const [friendChatId, setFriendChatId] = useState(0);\r\n  const [shouldCreate, setShouldCreate] = useState(false);\r\n  const [sendAnimation, setSendAnimation] = useState(\"\");\r\n  const { currentSong, currentSongData } = useSong();\r\n  const [loadingSendSong, setLoadingSendSong] = useState(false);\r\n  useEffect(() => {\r\n    findChatURL([friend.uid], currentUser, setShouldCreate, setFriendChatId);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (sendAnimation?.length > 0) {\r\n      setLoadingSendSong(true);\r\n      setTimeout(() => {\r\n        setSendAnimation(\"\");\r\n        setLoadingSendSong(false);\r\n      }, 600);\r\n    }\r\n  }, [sendAnimation]);\r\n  return (\r\n    <div className=\"person\" key={index} id={friend.uid}>\r\n      <img\r\n        loading=\"lazy\"\r\n        src={currentSongData.cover}\r\n        alt=\"\"\r\n        className={\"sendSongImage \" + sendAnimation}\r\n      />\r\n      <div className=\"personBtns\">\r\n        <Link to={`/chat/${friendChatId}`}>\r\n          <button\r\n            onClick={() => {\r\n              if (shouldCreate)\r\n                createChat([currentUser.uid, friend.uid], friendChatId);\r\n            }}\r\n          >\r\n            <Hint text={\"chat\"} />\r\n            <FiMessageCircle />\r\n          </button>\r\n        </Link>\r\n        <Link to={`/authors/${friend.uid}`}>\r\n          <button>\r\n            <Hint text={\"profile\"} />\r\n            <FiUser />\r\n          </button>\r\n        </Link>\r\n        <button\r\n          onClick={() => {\r\n            if (!loadingSendSong) {\r\n              shareWithManyFriends(\r\n                [friend.uid],\r\n                currentUser,\r\n                currentSong,\r\n                \"song\",\r\n                \"\",\r\n                setShouldCreate,\r\n                setFriendChatId\r\n              );\r\n              setSendAnimation(\"sendAnimation\");\r\n              openBottomMessage(\r\n                `${currentSongData.name} was sent to ${friend.displayName}`\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          <Hint text={\"share\"} />\r\n          <BiShare />\r\n        </button>\r\n      </div>\r\n      <Link\r\n        className=\"pesronImg\"\r\n        style={{ pointerEvents: \"none\" }}\r\n        to={`/authors/${friend.uid}`}\r\n      >\r\n        <img loading=\"lazy\" src={friend.photoURL} alt=\"\" />\r\n      </Link>\r\n      <IsUserOnlineCircle userUID={friend.uid} />\r\n      <div className=\"personName\" style={{ pointerEvents: \"none\" }}>\r\n        {friend.displayName}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { useSong } from '../contexts/SongContext'\r\nimport { firestore } from '../firebase'\r\n\r\nexport const usePlaylistSongs = (playlist, playlistSongs, setPlaylistSongs) => {\r\n\tconst {currentSongPlaylistSource, playSong, setCurrentSongQueue, setCurrentSong, setPlay, songRef, setCurrentSongInQueue, setCurrentSongPlaylistSource} = useSong()\r\n\tconst {currentUser} = useAuth()\r\n\tfunction fetchSongsInAlbum() {\r\n\t\tsetPlaylistSongs([])\r\n\t\tif (playlist.length !== 0) {\r\n\t\t\tplaylist.songs.map(async songId => {\r\n\t\t\t\tlet albumSong = (await firestore.collection('songs').doc(songId).get()).data()\r\n\t\t\t\tsetPlaylistSongs(prev => [...prev, albumSong])\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tfunction playChosenPlaylist(e) {\r\n\t\te.preventDefault()\r\n\t\tif (currentSongPlaylistSource.name === playlist.name) {\r\n\t\t\tplaySong()\r\n\t\t\treturn\r\n\t\t}\r\n\t\tfetchSongsInAlbum()\r\n\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (playlistSongs.length) {\r\n\t\t\tconst source = { source: `/albums/${playlist.id}`, name: playlist.name, image: playlist.image, songsList: playlistSongs }\r\n\t\t\tconst listSongsIds = playlistSongs.map(song => song.id)\r\n\t\t\tsetCurrentSongQueue(playlistSongs)\r\n\t\t\tsetCurrentSongInQueue(0)\r\n\t\t\tsetCurrentSong(playlistSongs[0].id)\r\n\t\t\tsongRef.current.play()\r\n\t\t\tsetPlay(true)\r\n\t\t\tsetCurrentSongPlaylistSource(source)\r\n\t\t\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\t\t\tlastSongPlayed: playlistSongs[0].id,\r\n\t\t\t\tlastQueue: {\r\n\t\t\t\t\timage: source.image,\r\n\t\t\t\t\tname: source.name,\r\n\t\t\t\t\tsongsList: listSongsIds,\r\n\t\t\t\t\tsource: source.source\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}, [playlistSongs.length])\r\n\r\n\treturn playChosenPlaylist\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { BiAlbum } from \"react-icons/bi\";\r\nimport { FiCheck, FiPlayCircle, FiPlusCircle, FiShare } from \"react-icons/fi\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Hint } from \"../../../../components/Basic/Hint\";\r\nimport { FriendsListToShareWith } from \"../../../../components/Lists/FriendsListToShareWith\";\r\nimport { useAuth } from \"../../../../contexts/AuthContext\";\r\nimport { useModal } from \"../../../../contexts/ModalContext\";\r\nimport shortWord from \"../../../../functions/other/shortWord\";\r\nimport { useAddOrDeleteSong } from \"../../../../hooks/useAddOrDeleteSong\";\r\nimport { usePlaylistSongs } from \"../../../../hooks/usePlaylistSongs\";\r\n\r\nexport const TinyPlaylist = ({ playlist }) => {\r\n  const { toggleModal, setContent } = useModal();\r\n  const [playlistSongs, setPlaylistSongs] = useState([]);\r\n  const playSongsInPlaylist = usePlaylistSongs(\r\n    playlist,\r\n    playlistSongs,\r\n    setPlaylistSongs\r\n  );\r\n  const [addFunc, isAdded] = useAddOrDeleteSong(playlist.id);\r\n  const { currentUser } = useAuth();\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"TinyPlaylist\">\r\n      <div className=\"TinyPlaylistBtns\">\r\n        {playlist.authors.find((author) => author.uid === currentUser.uid) ? (\r\n          <button onClick={addFunc}>\r\n            {isAdded ? (\r\n              <>\r\n                <Hint text={`remove song`} />\r\n                <FiCheck />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Hint text={\"add song\"} />\r\n                <FiPlusCircle />\r\n              </>\r\n            )}\r\n          </button>\r\n        ) : (\r\n          <button\r\n            onClick={() => {\r\n              toggleModal();\r\n              setContent(\r\n                <FriendsListToShareWith\r\n                  item={playlist}\r\n                  whatToShare={\"playlist\"}\r\n                />\r\n              );\r\n            }}\r\n          >\r\n            <Hint text={\"share\"} />\r\n            <FiShare />\r\n          </button>\r\n        )}\r\n        <Link to={`/albums/${playlist.id}`}>\r\n          <button>\r\n            <Hint text={\"album\"} />\r\n            <BiAlbum />\r\n          </button>\r\n        </Link>\r\n        <button onClick={playSongsInPlaylist}>\r\n          <Hint text={\"play\"} />\r\n          <FiPlayCircle />\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"TinyPlaylistImg\"\r\n        style={{\r\n          backgroundImage: `url(${playlist.image})`,\r\n          display: \"inline-block\",\r\n          backgroundPosition: \"center center\",\r\n          backgroundSize: \"cover\",\r\n          position: \"relative\",\r\n        }}\r\n        onClick={() => history.push(`/albums/${playlist.id}`)}\r\n      >\r\n        {!playlist.image ? (\r\n          <BiAlbum\r\n            style={{\r\n              position: \"absolute\",\r\n              left: \"50%\",\r\n              top: \"50%\",\r\n              transform: \"translate(-50%, -50%)\",\r\n              width: \"20px\",\r\n              height: \"20px\",\r\n            }}\r\n          />\r\n        ) : null}\r\n      </div>\r\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n        <span>{shortWord(playlist.name, 13)}</span>\r\n        <span style={{ fontSize: \"0.8em\", color: \"grey\", fontWeight: \"500\" }}>\r\n          {playlist.isAlbum ? \"album\" : \"playlist\"}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { BiFolderPlus, BiFullscreen } from \"react-icons/bi\";\r\nimport { FiChevronDown, FiChevronUp } from \"react-icons/fi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { NotificationCircle } from \"../../../../components/Basic/NotificationCircle\";\r\nimport { Player } from \"../../../../components/FullScreenPlayer/Player\";\r\nimport { CreatePlaylistPage } from \"../../../../components/LibraryPage/CreatePlaylistPage\";\r\nimport { FriendsListToShareWith } from \"../../../../components/Lists/FriendsListToShareWith\";\r\nimport { useAuth } from \"../../../../contexts/AuthContext\";\r\nimport { useModal } from \"../../../../contexts/ModalContext\";\r\nimport { useSong } from \"../../../../contexts/SongContext\";\r\nimport { leftSideBar } from \"../../../../data/leftSideBar\";\r\nimport normalizeString from \"../../../../functions/other/normalizeString\";\r\nimport shortWord from \"../../../../functions/other/shortWord\";\r\nimport Logo from \"../../../../images/Logo3.svg\";\r\nimport \"../../../../styles/LeftsideBar.css\";\r\nimport NavigationItem from \"../atoms/NavigationItem\";\r\n\r\nimport { Person } from \"../molecules/Person\";\r\nimport { TinyPlaylist } from \"../molecules/TinyPlaylist\";\r\n\r\nexport const LeftsideBar = () => {\r\n  const { currentUser } = useAuth();\r\n  const {\r\n    leftSideBarInputRef,\r\n    setOpenFullScreenPlayer,\r\n    currentSongData,\r\n    yourFriends,\r\n    yourPlaylists,\r\n  } = useSong();\r\n  const { toggleModal, setContent } = useModal();\r\n  const [currentFriendToPlaylistPage, setCurrentFriendToPlaylistPage] =\r\n    useState(0);\r\n  const [currentPage, setCurrentPage] = useState(() => {\r\n    let page = leftSideBar.find((el, i) => {\r\n      if (window.location.hash.includes(normalizeString(el.title))) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    });\r\n    return page === undefined ? -1 : page.id;\r\n  });\r\n  return (\r\n    <div className=\"LeftsideBar\">\r\n      <div className=\"logo\">\r\n        <img loading=\"lazy\" src={Logo} alt=\"\" />\r\n        <h3>Soundbubble</h3>\r\n      </div>\r\n      <div className=\"leftSideBarContainer\" onClick={() => setCurrentPage(-1)}>\r\n        <Link to={`/authors/${currentUser.uid}`}>\r\n          <div\r\n            className=\"person\"\r\n            style={currentPage === -1 ? { background: \"var(--blue)\" } : {}}\r\n          >\r\n            {currentUser.friends.some(\r\n              (friend) => friend.status === \"requested\"\r\n            ) ? (\r\n              <NotificationCircle />\r\n            ) : null}\r\n            <div\r\n              className=\"pesronImg\"\r\n              style={{ backgroundImage: `url(${currentUser.photoURL})` }}\r\n            ></div>\r\n            <div className=\"personName\">\r\n              {shortWord(currentUser.displayName, 9)}\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n      <div className=\"NavigationPanel\">\r\n        {leftSideBar.map(({ id, title, icon, link }, index) => {\r\n          return (\r\n            <NavigationItem\r\n              key={index}\r\n              id={id}\r\n              title={title}\r\n              icon={icon}\r\n              link={link}\r\n              currentPage={currentPage}\r\n              setCurrentPage={setCurrentPage}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"leftSideBarContainer friendsAndPlaylists\">\r\n        <span\r\n          style={{\r\n            display: !currentFriendToPlaylistPage ? \"block\" : \"none\",\r\n            animation: \"scrollFromBottom .2s forwards\",\r\n          }}\r\n        >\r\n          {yourFriends.length > 0 ? (\r\n            <>\r\n              {yourFriends.map((friend, index) => {\r\n                if (index <= 2) {\r\n                  return <Person index={friend.uid} friend={friend} />;\r\n                }\r\n                return null;\r\n              })}\r\n              <h4\r\n                className=\"seeMoreBtn\"\r\n                onClick={() => {\r\n                  toggleModal();\r\n                  setContent(\r\n                    <FriendsListToShareWith\r\n                      item={currentSongData}\r\n                      whatToShare={\"song\"}\r\n                    />\r\n                  );\r\n                }}\r\n              >\r\n                See more\r\n              </h4>\r\n            </>\r\n          ) : (\r\n            <h4\r\n              style={{\r\n                alignSelf: \"center\",\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              No friends added\r\n            </h4>\r\n          )}\r\n        </span>\r\n        <span\r\n          style={{\r\n            display: currentFriendToPlaylistPage ? \"block\" : \"none\",\r\n            animation: \"scrollFromTop .2s forwards\",\r\n          }}\r\n        >\r\n          {yourPlaylists.map((playlist, index) => {\r\n            if (index <= 2) {\r\n              return <TinyPlaylist playlist={playlist} key={playlist.id} />;\r\n            }\r\n          })}\r\n          <button\r\n            className=\"createPlaylistBtn\"\r\n            onClick={() => {\r\n              toggleModal();\r\n              setContent(<CreatePlaylistPage />);\r\n            }}\r\n            style={{ margin: \"5px 0\" }}\r\n          >\r\n            <BiFolderPlus />\r\n            Create Playlist\r\n          </button>\r\n        </span>\r\n        <div className=\"upAndDownBtns\">\r\n          <button\r\n            onClick={() => setCurrentFriendToPlaylistPage(0)}\r\n            style={!currentFriendToPlaylistPage ? { opacity: \"0.3\" } : {}}\r\n          >\r\n            <FiChevronUp />\r\n          </button>\r\n          <button\r\n            onClick={() => setCurrentFriendToPlaylistPage(1)}\r\n            style={currentFriendToPlaylistPage ? { opacity: \"0.3\" } : {}}\r\n          >\r\n            <FiChevronDown />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"leftSideBarContainer\">\r\n        {currentSongData.id === -1 ? null : (\r\n          <div className=\"littlePlayer\">\r\n            <Player textLimit={15} inputRef={leftSideBarInputRef} />\r\n            <div\r\n              className=\"fullScreenBtn\"\r\n              onClick={() => setOpenFullScreenPlayer(true)}\r\n            >\r\n              {/* <Hint text = {\"open full screen\"} style = {{fontSize:'0.8em'}}/> */}\r\n              <BiFullscreen />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useSong } from '../contexts/SongContext';\r\nimport displayAuthorsStr from '../functions/display/displayAuthorsStr';\r\n\r\n\r\nexport const useMediaMetadata = () => {\r\n\tconst { currentSongData, currentSongPlaylistSource, nextSong, prevSong, songRef, setPlay } = useSong()\r\n\r\n\tconst updatePositionState = () => {\r\n\t\tnavigator.mediaSession.setPositionState({\r\n\t\t\tduration: songRef.current.duration,\r\n\t\t\tplaybackRate: songRef.current.playbackRate,\r\n\t\t\tposition: songRef.current.currentTime\r\n\t\t});\r\n\t}\r\n\r\n\tfunction playSong() {\r\n\t\tsongRef.current.play()\r\n\t\tsetPlay(true)\r\n\t}\r\n\r\n\tfunction pauseSong() {\r\n\t\tsongRef.current.pause()\r\n\t\tsetPlay(false)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif ('mediaSession' in navigator && currentSongData.id !== -1) {\r\n\t\t\tnavigator.mediaSession.metadata = new window.MediaMetadata({\r\n\t\t\t\ttitle: currentSongData.name,\r\n\t\t\t\tartist: displayAuthorsStr(currentSongData.authors),\r\n\t\t\t\talbum: currentSongPlaylistSource.name,\r\n\t\t\t\tartwork: [\r\n\t\t\t\t\t{ src: currentSongData.cover, sizes: '512x512', type: 'image/png' },\r\n\t\t\t\t]\r\n\t\t\t});\r\n\r\n\t\t\tnavigator.mediaSession.setActionHandler('play', () => { playSong(); });\r\n\t\t\tnavigator.mediaSession.setActionHandler('pause', pauseSong);\r\n\t\t\tnavigator.mediaSession.setActionHandler('stop', pauseSong);\r\n\t\t\tnavigator.mediaSession.setActionHandler('nexttrack', () => { nextSong(); updatePositionState() });\r\n\t\t\tnavigator.mediaSession.setActionHandler('previoustrack', () => { prevSong(); updatePositionState() })\r\n\t\t}\r\n\t}, [currentSongData.id])\r\n}\r\n","import React from 'react'\r\n\r\nexport const MoreBtn = ({func, lenOfList, maxLen = 5, boolVal}) => {\r\n\treturn (\r\n\t\t<div onClick = {lenOfList > maxLen?func:null} className = \"MoreBtn\" style = {lenOfList <= maxLen?{display:'none'}:{}}>\r\n\t\t\t<button style = {boolVal?{background:'var(--pink)', color:'#ff8db2'}:{}}>\r\n\t\t\t\t{boolVal?\"Close\":\"More\"}\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { MoreBtn } from '../Buttons/MoreBtn'\r\n\r\nexport const TitleWithMoreBtn = ({title, func, boolVal, lenOfList, maxLen = 5, marginBottom = 0}) => {\r\n\treturn lenOfList !== 0?(\r\n\t\t<div className=\"topTitle\" style = {{margin:'10px 0'}}>\r\n\t\t\t<h2 style = {{margin:marginBottom}}>{title}</h2>\r\n\t\t\t<MoreBtn func={func} boolVal={boolVal} lenOfList={lenOfList} maxLen = {maxLen}/>\r\n\t\t</div>\r\n\t):null\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FaHistory } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useSong } from \"../../contexts/SongContext\";\r\nimport { SongItem } from \"../../features/song/ui/organisms/song-item\";\r\nimport { firestore } from \"../../firebase\";\r\nimport shuffleSongs from \"../../functions/other/shuffleSongs\";\r\nimport { HISTORY_ROUTE } from \"../../utils/consts\";\r\nimport SearchBar from \"../../shared/ui/organisms/search-bar\";\r\nimport { TitleWithMoreBtn } from \"../Tools/TitleWithMoreBtn\";\r\n\r\nexport const SongList = ({\r\n  listOfSongs,\r\n  source,\r\n  title = \"\",\r\n  showListens = false,\r\n  isNewSong = false,\r\n  showCount = false,\r\n  listOfChosenSongs,\r\n  setListOfSongs,\r\n  showSearch = false,\r\n  displayIfEmpty,\r\n  showhistory = false,\r\n  saveSearchHistory = false,\r\n  isHorizontal = false,\r\n}) => {\r\n  const {\r\n    setCurrentSongQueue,\r\n    setCurrentSongPlaylistSource,\r\n    playSong,\r\n    setCurrentSong,\r\n  } = useSong();\r\n  const { currentUser, searchValue } = useAuth();\r\n  const [showMoreSongs, setShowMoreSongs] = useState(false);\r\n  const [localSearchValue, setLocalSearchValue] = useState(\"\");\r\n  const [displaySongs, setDisplaySongs] = useState(listOfSongs);\r\n  const { currentSong } = useSong();\r\n\r\n  useEffect(() => {\r\n    setDisplaySongs(listOfSongs);\r\n  }, [listOfSongs]);\r\n\r\n  function setQueueInSongList() {\r\n    if (source !== \"no\" && listOfSongs.length !== 0) {\r\n      setCurrentSongQueue(listOfSongs);\r\n      setCurrentSongPlaylistSource(source);\r\n      const listSongsIds = listOfSongs.map((song) => song.id);\r\n      firestore\r\n        .collection(\"users\")\r\n        .doc(currentUser.uid)\r\n        .update({\r\n          lastQueue: {\r\n            image: source.image,\r\n            name: source.name,\r\n            songsList: listSongsIds,\r\n            source: source.source,\r\n          },\r\n        });\r\n    }\r\n  }\r\n\r\n  function playShuffledList(e) {\r\n    e.stopPropagation();\r\n    let newList = shuffleSongs(listOfSongs);\r\n    setCurrentSongQueue(newList);\r\n    setCurrentSongPlaylistSource(source);\r\n    const listSongsIds = newList.map((song) => song.id);\r\n    firestore\r\n      .collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .update({\r\n        lastQueue: {\r\n          image: source.image,\r\n          name: source.name,\r\n          songsList: listSongsIds,\r\n          source: source.source,\r\n        },\r\n      });\r\n    setCurrentSong(newList[0].id);\r\n    playSong();\r\n  }\r\n\r\n  return (\r\n    <div className=\"SongList\" onClick={setQueueInSongList}>\r\n      {title.length !== 0 ? (\r\n        <TitleWithMoreBtn\r\n          title={title}\r\n          func={() => setShowMoreSongs(!showMoreSongs)}\r\n          boolVal={showMoreSongs}\r\n          lenOfList={listOfSongs.length}\r\n        />\r\n      ) : null}\r\n      {showSearch ? (\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <SearchBar\r\n            value={localSearchValue}\r\n            setValue={setLocalSearchValue}\r\n            allFoundSongs={displaySongs}\r\n            setAllFoundSongs={setDisplaySongs}\r\n            defaultSearchMode={\"songs\"}\r\n            defaultSongsListValue={listOfSongs}\r\n            inputText={\"Search for songs\"}\r\n            background={\"#00000061\"}\r\n          />\r\n          {showhistory ? (\r\n            <Link to={HISTORY_ROUTE}>\r\n              <button\r\n                className=\"standartButton\"\r\n                style={{\r\n                  marginTop: \"10px\",\r\n                  marginBottom: \"0\",\r\n                  height: \"44px\",\r\n                  width: \"44px\",\r\n                  padding: \"0\",\r\n                  marginLeft: \"6px\",\r\n                  background: \"var(--playlistsColor)\",\r\n                }}\r\n              >\r\n                <FaHistory style={{ marginRight: \"0\" }} />\r\n              </button>\r\n            </Link>\r\n          ) : null}\r\n        </div>\r\n      ) : null}\r\n\r\n      <div className={\"list-of-songs\" + (isHorizontal ? \" horizontal\" : \"\")}>\r\n        {displaySongs.map((song, index) => {\r\n          if (title.length !== 0) {\r\n            if (showMoreSongs) {\r\n              return (\r\n                <span className=\"topSongItem\">\r\n                  {showCount ? (\r\n                    <h3 style={{ opacity: \"0.7\" }}>{index + 1}</h3>\r\n                  ) : null}\r\n                  <SongItem\r\n                    song={song}\r\n                    key={song.id}\r\n                    localIndex={index}\r\n                    showListens={showListens}\r\n                    isNewSong={isNewSong}\r\n                    listOfChosenSongs={listOfChosenSongs}\r\n                    setListOfSongs={setListOfSongs}\r\n                    shouldSaveSearchHistory={saveSearchHistory}\r\n                  />\r\n                </span>\r\n              );\r\n            } else {\r\n              if (index < 5) {\r\n                return (\r\n                  <span className=\"topSongItem\">\r\n                    {showCount ? (\r\n                      <h3 style={{ opacity: \"0.7\" }}>{index + 1}</h3>\r\n                    ) : null}\r\n                    <SongItem\r\n                      song={song}\r\n                      key={song.id}\r\n                      localIndex={index}\r\n                      showListens={showListens}\r\n                      isNewSong={isNewSong}\r\n                      listOfChosenSongs={listOfChosenSongs}\r\n                      setListOfSongs={setListOfSongs}\r\n                      shouldSaveSearchHistory={saveSearchHistory}\r\n                    />\r\n                  </span>\r\n                );\r\n              }\r\n            }\r\n          } else {\r\n            return (\r\n              <span className=\"topSongItem\">\r\n                {showCount ? (\r\n                  <h3 style={{ opacity: \"0.7\" }}>{index + 1}</h3>\r\n                ) : null}\r\n                <SongItem\r\n                  song={song}\r\n                  key={song.id}\r\n                  localIndex={index}\r\n                  showListens={showListens}\r\n                  isNewSong={isNewSong}\r\n                  listOfChosenSongs={listOfChosenSongs}\r\n                  setListOfSongs={setListOfSongs}\r\n                  shouldSaveSearchHistory={saveSearchHistory}\r\n                />\r\n              </span>\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        {listOfSongs.length === 0 ? displayIfEmpty : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { ColorExtractor } from \"react-color-extractor\";\r\nimport { FiXCircle } from \"react-icons/fi\";\r\nimport { PersonTiny } from \"../../../../components/Basic/PersonTiny\";\r\nimport { SongList } from \"../../../../components/Lists/SongList\";\r\nimport { LoadingCircle } from \"../../../../components/Loading/LoadingCircle\";\r\nimport { RadioBtn } from \"../../../../components/SignIn-Up/RadioBtn\";\r\nimport { useAuth } from \"../../../../contexts/AuthContext\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport getUID from \"../../../../functions/other/getUID\";\r\nimport DownloadButton from \"../../../../shared/ui/atoms/download-button\";\r\nimport Input from \"../../../../shared/ui/atoms/input\";\r\nimport SubmitButton from \"../../../../shared/ui/atoms/submit-button\";\r\nimport SearchBar from \"../../../../shared/ui/organisms/search-bar\";\r\nexport const CustomizeAlbum = ({ playlist }) => {\r\n  const { currentUser } = useAuth();\r\n  const [playlistName, setPlaylistName] = useState(playlist.name);\r\n  const [playlistCover, setPlaylistCover] = useState(playlist.image);\r\n  const [authorsInputValue, setAuthorsInputValue] = useState(\"\");\r\n  const [allAuthors, setAllAuthors] = useState([]);\r\n  const [chosenAuthors, setChosenAuthors] = useState(playlist.authors);\r\n  const [releaseDate, setReleaseDate] = useState(playlist.creationDate);\r\n  const [songsSearch, setSongsSearch] = useState(\"\");\r\n  const [allSongs, setAllSongs] = useState([]);\r\n  const [chosenSongs, setChosenSongs] = useState(playlist.songs);\r\n  const [playlistStatus, setPlaylistStatus] = useState(\r\n    playlist.isAlbum ? 1 : 0\r\n  );\r\n  const [isPlaylistPrivate, setIsPlaylistPrivate] = useState(\r\n    playlist.isPrivate ? 1 : 0\r\n  );\r\n  const [loadingAuthors, setLoadingAuthors] = useState(false);\r\n  const [loadingSongs, setLoadingSongs] = useState(false);\r\n  const [imageLocalPath, setImageLocalPath] = useState(\"\");\r\n  const [imageColors, setImageColors] = useState(playlist.imageColors);\r\n  const [loading, setLoading] = useState(false);\r\n  const [completed, setCompleted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setPlaylistName(playlist.name);\r\n    setPlaylistCover(playlist.image);\r\n    setChosenAuthors(playlist.authors);\r\n  }, [playlist.id]);\r\n\r\n  useEffect(() => {\r\n    if (songsSearch.length === 0) {\r\n      playlist.songs.map(async (songId) => {\r\n        const songData = (\r\n          await firestore.collection(\"songs\").doc(songId).get()\r\n        ).data();\r\n        setLoadingSongs(false);\r\n        setAllSongs((prev) => [...prev, songData]);\r\n      });\r\n    }\r\n  }, [songsSearch]);\r\n\r\n  function removeAuthorFromList(data) {\r\n    const filtered = chosenAuthors.filter((people) => people.uid !== data.uid);\r\n    return setChosenAuthors(filtered);\r\n  }\r\n\r\n  function addAuthor(data) {\r\n    if (!chosenAuthors.some((person) => person.uid === data.uid)) {\r\n      return setChosenAuthors((prev) => [\r\n        ...prev,\r\n        {\r\n          uid: data.uid,\r\n          displayName: data.displayName,\r\n          photoURL: data.photoURL,\r\n        },\r\n      ]);\r\n    }\r\n\r\n    removeAuthorFromList(data);\r\n  }\r\n\r\n  async function addPlaylistToFirebase(e) {\r\n    e.preventDefault();\r\n    const uid = getUID();\r\n    if (chosenAuthors.length > playlist.authors.length) {\r\n      const newAuthors = chosenAuthors.filter((author) => {\r\n        return !playlist.authors.find((a) => a.uid === author.uid);\r\n      });\r\n      newAuthors.forEach(async (author) => {\r\n        const authorRef = await firestore\r\n          .collection(\"users\")\r\n          .doc(author.uid)\r\n          .get();\r\n        const authorData = authorRef.data();\r\n        const authorPlaylists = authorData.ownPlaylists;\r\n        authorPlaylists.push(playlist.id);\r\n        firestore.collection(\"users\").doc(author.uid).update({\r\n          ownPlaylists: authorPlaylists,\r\n        });\r\n      });\r\n    } else if (chosenAuthors.length < playlist.authors.length) {\r\n      const newAuthors = playlist.authors.filter((author) => {\r\n        return !chosenAuthors.find((a) => a.uid === author.uid);\r\n      });\r\n      newAuthors.forEach(async (author) => {\r\n        const authorRef = await firestore\r\n          .collection(\"users\")\r\n          .doc(author.uid)\r\n          .get();\r\n        const authorData = authorRef.data();\r\n        const authorPlaylists = authorData.ownPlaylists;\r\n        const filteredPlaylists = authorPlaylists.filter(\r\n          (playlistId) => playlistId !== playlist.id\r\n        );\r\n        firestore.collection(\"users\").doc(author.uid).update({\r\n          ownPlaylists: filteredPlaylists,\r\n        });\r\n      });\r\n    }\r\n\r\n    firestore\r\n      .collection(\"playlists\")\r\n      .doc(playlist.id)\r\n      .update({\r\n        id: playlist.id,\r\n        name: playlistName,\r\n        songs: chosenSongs,\r\n        authors: chosenAuthors,\r\n        image: playlistCover,\r\n        listens: playlist.listens,\r\n        creationDate: releaseDate,\r\n        subscribers: playlist.subscribers,\r\n        isAlbum: playlistStatus === 1,\r\n        imageColors: imageColors,\r\n        isPrivate: isPlaylistPrivate === 1,\r\n      })\r\n      .then(() => {\r\n        setLoading(false);\r\n        setCompleted(true);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"AddSong\">\r\n      <ColorExtractor\r\n        src={imageLocalPath}\r\n        getColors={(colors) => setImageColors(colors)}\r\n      />\r\n      <Input\r\n        title={\"Playlist name\"}\r\n        value={playlistName}\r\n        setValue={setPlaylistName}\r\n        placeholder=\"Enter playlist name\"\r\n      />\r\n      <label>\r\n        <h3>Playlist authors</h3>\r\n        <SearchBar\r\n          value={authorsInputValue}\r\n          setValue={setAuthorsInputValue}\r\n          setResultAuthorList={setAllAuthors}\r\n          defaultSearchMode={\"authors\"}\r\n          inputText={\"Search for authors\"}\r\n        />\r\n        <div className=\"chosenAuthorsList\">\r\n          {chosenAuthors.map((author) => {\r\n            return (\r\n              <div className=\"chosenAuthorItem\">\r\n                <span>{author.displayName}</span>\r\n                <FiXCircle\r\n                  onClick={() =>\r\n                    author.uid === currentUser.uid\r\n                      ? null\r\n                      : removeAuthorFromList(author)\r\n                  }\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"authorsResult\">\r\n          {loadingAuthors ? (\r\n            <div\r\n              style={{ position: \"relative\", width: \"100%\", height: \"50px\" }}\r\n            >\r\n              <LoadingCircle />\r\n            </div>\r\n          ) : (\r\n            allAuthors.map((data, index) => {\r\n              return (\r\n                <PersonTiny\r\n                  data={data}\r\n                  onClick={() => addAuthor(data)}\r\n                  style={\r\n                    chosenAuthors.includes(data.uid)\r\n                      ? { background: \"var(--green)\" }\r\n                      : {}\r\n                  }\r\n                  key={index}\r\n                />\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n      </label>\r\n\r\n      <label>\r\n        <h3>Search for songs</h3>\r\n        <SearchBar\r\n          value={songsSearch}\r\n          setValue={setSongsSearch}\r\n          setAllFoundSongs={setAllSongs}\r\n          defaultSearchMode={\"songs\"}\r\n          inputText={\"Search for songs\"}\r\n        />\r\n        {/* <div className=\"chosenAuthorsList\">\r\n            {chosenSongs.map((songId) => {\r\n              return (\r\n                <div className=\"chosenAuthorItem\">\r\n                  <span>{songId}</span>\r\n                  <FiXCircle onClick={() => removeSongFromList(songId)} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div> */}\r\n        <div className=\"authorsResult\">\r\n          {loadingSongs ? (\r\n            <div\r\n              style={{ position: \"relative\", width: \"100%\", height: \"50px\" }}\r\n            >\r\n              <LoadingCircle />\r\n            </div>\r\n          ) : (\r\n            <SongList\r\n              listOfSongs={allSongs}\r\n              source={\"no\"}\r\n              listOfChosenSongs={chosenSongs}\r\n              setListOfSongs={setChosenSongs}\r\n            />\r\n          )}\r\n        </div>\r\n      </label>\r\n\r\n      {currentUser.isAdmin || currentUser.isAuthor ? (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-start\",\r\n            margin: \"15px 0\",\r\n          }}\r\n        >\r\n          <RadioBtn\r\n            label=\"Playlist\"\r\n            onClick={() => setPlaylistStatus(0)}\r\n            currentActive={playlistStatus}\r\n            id={0}\r\n          />\r\n          <RadioBtn\r\n            label=\"Album\"\r\n            onClick={() => setPlaylistStatus(1)}\r\n            currentActive={playlistStatus}\r\n            id={1}\r\n          />\r\n        </div>\r\n      ) : null}\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"flex-start\",\r\n          margin: \"15px 0\",\r\n        }}\r\n      >\r\n        <RadioBtn\r\n          label=\"Not Private\"\r\n          onClick={() => setIsPlaylistPrivate(0)}\r\n          currentActive={isPlaylistPrivate}\r\n          id={0}\r\n        />\r\n        <RadioBtn\r\n          label=\"Private\"\r\n          onClick={() => setIsPlaylistPrivate(1)}\r\n          currentActive={isPlaylistPrivate}\r\n          id={1}\r\n        />\r\n      </div>\r\n\r\n      {(currentUser.isAdmin || currentUser.isAuthor) && (\r\n        <Input\r\n          title={\"Release Date\"}\r\n          type={\"date\"}\r\n          value={releaseDate}\r\n          setValue={setReleaseDate}\r\n          placeholder={\"Enter release date\"}\r\n        />\r\n      )}\r\n\r\n      <DownloadButton\r\n        text=\"Download playlist cover\"\r\n        place={\"songsImages/\"}\r\n        setItemSrc={setPlaylistCover}\r\n        setImageLocalPath={setImageLocalPath}\r\n      />\r\n\r\n      <SubmitButton\r\n        text={\"Update playlist\"}\r\n        action={addPlaylistToFirebase}\r\n        isLoading={loading}\r\n        completed={completed}\r\n        setCompleted={setCompleted}\r\n        bottomMessage={\"Playlist was updated\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { firestore } from \"../../../firebase\"\r\n\r\nexport const addAuthorToLibrary = async (authorData, currentUser) => {\r\n\tconst addedAuthors = (await firestore.collection('users').doc(currentUser.uid).get()).data().addedAuthors\r\n\taddedAuthors.push(authorData.uid)\r\n\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\taddedAuthors: addedAuthors\r\n\t})\r\n\tlet subscribers = authorData.subscribers\r\n\tsubscribers++\r\n\tfirestore.collection('users').doc(authorData.uid).update({\r\n\t\tsubscribers: subscribers\r\n\t})\r\n}","import { firestore } from \"../../../firebase\"\r\n\r\nexport default function addFriend(friendData, currentUser) {\r\n\tconst updatedDataForFriend = friendData.friends\r\n\tconst updatedDataForCurrentUser = currentUser.friends\r\n\tupdatedDataForFriend.push({ status: 'requested', uid: currentUser.uid })\r\n\tupdatedDataForCurrentUser.push({ status: 'awaiting', uid: friendData.uid })\r\n\r\n\tfirestore.collection('users').doc(friendData.uid).update({\r\n\t\tfriends: updatedDataForFriend\r\n\t})\r\n\r\n\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\tfriends: updatedDataForCurrentUser\r\n\t})\r\n\r\n}","const deleteAuthorFromLibrary = (authorData, currentUser) => {\r\n\r\n}\r\n\r\nexport default deleteAuthorFromLibrary","import React, { useEffect, useState } from \"react\";\r\nimport { FiMessageCircle } from \"react-icons/fi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../../contexts/AuthContext\";\r\nimport { createChat } from \"../../../../shared/lib/create-—Åhat\";\r\nimport { findChatURL } from \"../../../../shared/lib/find-chat-url\";\r\n\r\nexport const ChatWithFriendButton = ({ data, color }) => {\r\n  const { currentUser } = useAuth();\r\n  const [shouldCreate, setShouldCreate] = useState(false);\r\n  const [friendChatId, setFriendChatId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    findChatURL([data.uid], currentUser, setShouldCreate, setFriendChatId);\r\n  }, [data.uid]);\r\n\r\n  return (\r\n    <Link\r\n      to={`/chat/${friendChatId}`}\r\n      style={{ display: \"block\", width: \"fit-content\", textDecoration: \"none\" }}\r\n    >\r\n      <button\r\n        onClick={() => {\r\n          if (shouldCreate)\r\n            createChat([currentUser.uid, data.uid], friendChatId);\r\n        }}\r\n        style={{ background: color }}\r\n        className=\"ChatWithFriendButton\"\r\n      >\r\n        <FiMessageCircle /> Messages\r\n      </button>\r\n    </Link>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { ColorExtractor } from \"react-color-extractor\";\r\nimport { MdModeEdit } from \"react-icons/md\";\r\nimport { firestore, storage } from \"../../../../firebase\";\r\nexport const CustomizeAuthor = ({ author }) => {\r\n  const [authorName, setPlaylistName] = useState(author.displayName);\r\n  const [authorCover, setAuthorCover] = useState(author.photoURL);\r\n  const [imageLocalPath, setImageLocalPath] = useState(\"\");\r\n  const [imageColors, setImageColors] = useState(author.imageColors);\r\n\r\n  async function onFileChange(e, place, setFunc) {\r\n    const file = e.target.files[0];\r\n    setImageLocalPath(URL.createObjectURL(file));\r\n    const storageRef = storage.ref();\r\n    const fileRef = storageRef.child(place + file.name);\r\n    await fileRef.put(file);\r\n    setFunc(await fileRef.getDownloadURL());\r\n  }\r\n\r\n  function updateAuthorInFirebase(e) {\r\n    e.preventDefault();\r\n    firestore.collection(\"users\").doc(author.uid).update({\r\n      displayName: authorName,\r\n      photoURL: authorCover,\r\n      imageColors: imageColors,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"AddSong\">\r\n      <ColorExtractor\r\n        src={imageLocalPath}\r\n        getColors={(colors) => setImageColors(colors)}\r\n      />\r\n      <form onSubmit={(e) => e.preventDefault()}>\r\n        <div\r\n          style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}\r\n        >\r\n          <div\r\n            className=\"chatInfoImage\"\r\n            style={{ backgroundImage: `url(${authorCover})` }}\r\n          >\r\n            <label className=\"changePhoto\">\r\n              <MdModeEdit />\r\n              Change photo\r\n              <input\r\n                type=\"file\"\r\n                style={{ display: \"none\" }}\r\n                onChange={(e) => onFileChange(e, \"chatCovers/\", setAuthorCover)}\r\n              />\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <label>\r\n          <h3>Your name</h3>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter your name\"\r\n            value={authorName}\r\n            onChange={(e) => setPlaylistName(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <button\r\n          type=\"button\"\r\n          className=\"addSongBtn\"\r\n          onClick={updateAuthorInFirebase}\r\n        >\r\n          Update author\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import { firestore } from \"../../firebase\"\r\n\r\nexport const  addPlaylistToLibrary = async(playlistData, currentUser) => {\r\n\tconst addedPlaylists = (await firestore.collection('users').doc(currentUser.uid).get()).data().addedPlaylists\r\n\taddedPlaylists.push(playlistData.id)\r\n\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\taddedPlaylists: addedPlaylists\r\n\t})\r\n\r\n\tfirestore.collection('playlists').doc(playlistData.id).update({\r\n\t\tsubscribers:++playlistData.subscribers\r\n\t})\r\n}","import { firestore } from \"../../firebase\"\r\n\r\nexport const removePlaylistFromLibrary = async (playlistData, currentUser) =>{\r\n\tconst filteredPlaylists = currentUser.addedPlaylists.filter(id=>id !== playlistData.id)\r\n\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\taddedPlaylists:filteredPlaylists\r\n\t})\r\n\tfirestore.collection('playlists').doc(playlistData.id).update({\r\n\t\tsubscribers:--playlistData.subscribers\r\n\t})\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { firestore } from '../firebase'\r\n\r\nexport const useAlbumAuthors = (data) => {\r\n\tconst [albumAuthors, setAlbumAuthors] = useState([])\r\n\tconst [authorsImages, setAuthorsImages] = useState([])\r\n\tasync function fetchAuthorsData() {\r\n\t\tif (data?.authors !== undefined) {\r\n\t\t\tconst ids = data.authors.map(author => author.uid)\r\n\t\t\tconst authrorsData = await firestore.collection(\"users\").where(\"uid\", \"in\", ids).get()\r\n\t\t\tconst tempArrayAuthors = []\r\n\t\t\tconst tempArrayImages = []\r\n\t\t\tauthrorsData.docs.forEach((a) => {\r\n\t\t\t\ttempArrayAuthors.push(a.data())\r\n\t\t\t\ttempArrayImages.push(a.data().photoURL)\r\n\t\t\t})\r\n\t\t\tsetAlbumAuthors(tempArrayAuthors)\r\n\t\t\tsetAuthorsImages(tempArrayImages)\r\n\t\t}\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tfetchAuthorsData()\r\n\t}, [data?.id])\r\n\r\n\treturn [albumAuthors, authorsImages]\r\n}\r\n","import React from \"react\";\r\nimport { FiArrowLeft } from \"react-icons/fi\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Hint } from \"../../../components/Basic/Hint\";\r\nexport const GoBackBtn = ({ color = \"\" }) => {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"GoBackBtn\">\r\n      <button\r\n        onClick={() => history.goBack()}\r\n        style={color.length ? { color: color } : {}}\r\n      >\r\n        <Hint text={\"go back\"} direction={\"bottom\"} />\r\n        <FiArrowLeft />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSong } from '../../contexts/SongContext'\r\nimport displayDate from '../../functions/display/displayDate'\r\nimport { PersonTinyVerticalItem } from '../AuthorPage/PersonTinyVerticalItem'\r\nimport { useModal } from '../../contexts/ModalContext'\r\nimport { FriendsListToShareWith } from '../Lists/FriendsListToShareWith'\r\nimport { LoadingCircle } from '../Loading/LoadingCircle'\r\nimport { FiHeadphones, FiUserPlus } from 'react-icons/fi'\r\nimport { ImCheckmark } from 'react-icons/im'\r\nimport { SeeMoreRoundButton } from '../Buttons/SeeMoreRoundButton'\r\nimport { TinyPersonsList } from '../Lists/TinyPersonsList'\r\nexport const AlbumInfo = ({ album }) => {\r\n\tconst { setContent } = useModal()\r\n\tconst { yourFriends } = useSong()\r\n\tconst [friendsThatHaveThisAlbum, setFriendsThatHaveThisAlbum] = useState([])\r\n\tconst [loading, setLoading] = useState(true)\r\n\tasync function findFriendsThatHaveThisAlbum() {\r\n\t\tsetLoading(true)\r\n\t\tsetFriendsThatHaveThisAlbum([])\r\n\t\tyourFriends.forEach(friend => {\r\n\t\t\tif (friend.addedPlaylists.includes(album.id)) setFriendsThatHaveThisAlbum(prev => [...prev, friend])\r\n\t\t})\r\n\t\tsetLoading(false)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfindFriendsThatHaveThisAlbum()\r\n\t}, [album.uid])\r\n\r\n\treturn (\r\n\t\t<div className='SongInfo'>\r\n\t\t\t<div className=\"songImage\" style={{ backgroundImage: `url(${album.image})` }}></div>\r\n\t\t\t<div className=\"songInfoContent\">\r\n\t\t\t\t<div style={{ display: 'flex', flexDirection: 'column' }}>\r\n\t\t\t\t\t<span style={{ opacity: \".5\", fontWeight: 500, fontSize: '.7em' }}>{album.isAlbum ? \"Album\" : \"Playlist\"}</span>\r\n\t\t\t\t\t<h3 style={{ color: album.imageColors[1] }}>{album.name}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ display: 'flex', opacity: '0.6', fontSize: '.9em', position: \"relative\" }} className=\"listensAndDate\">\r\n\t\t\t\t\t<p className=\"infoListens\" style={{ marginRight: '20px', position: 'relative' }}>{album.listens}<FiHeadphones /></p>\r\n\t\t\t\t\t<p className=\"infoListens\" style={{ marginRight: '20px', position: 'relative' }}>{album.subscribers} <FiUserPlus /></p>\r\n\t\t\t\t\t<span>{displayDate(album.creationDate)}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<h4 style={{ margin: '10px 0' }}>{friendsThatHaveThisAlbum.length > 0 ? 'Friends subscribed' : 'None of your friends subscribed'}</h4>\r\n\t\t\t\t{!loading ? <div style={{ display: 'flex' }}>\r\n\t\t\t\t\t{friendsThatHaveThisAlbum.length > 0 ?\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t{friendsThatHaveThisAlbum.map((person, index) => {\r\n\t\t\t\t\t\t\t\tif (index < 2) return <PersonTinyVerticalItem person={person} key={person.uid} />\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t{friendsThatHaveThisAlbum.length > 2 ? <SeeMoreRoundButton onClick={() => setContent(<TinyPersonsList listOfPeople={friendsThatHaveThisAlbum} title={`Friends subscribed to ${album.name}`} />)} /> : null}\r\n\t\t\t\t\t\t</> :\r\n\t\t\t\t\t\t<button className=\"shareBtn\" style={{ minHeight: '35px', background: album.imageColors[0] }} onClick={() => { setContent(<FriendsListToShareWith item={album} whatToShare={'playlist'} />) }}>Share</button>}\r\n\t\t\t\t</div> :\r\n\t\t\t\t\t<div style={{ position: 'relative', height: '50px' }}><LoadingCircle top={\"50%\"} /></div>}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSong } from '../../contexts/SongContext'\r\nimport displayDate from '../../functions/display/displayDate'\r\nimport { PersonTinyVerticalItem } from '../AuthorPage/PersonTinyVerticalItem'\r\nimport { useModal } from '../../contexts/ModalContext'\r\nimport { FriendsListToShareWith } from '../Lists/FriendsListToShareWith'\r\nimport { LoadingCircle } from '../Loading/LoadingCircle'\r\nimport { FiHeadphones, FiUserPlus } from 'react-icons/fi'\r\nimport { ImCheckmark } from 'react-icons/im'\r\nimport { SeeMoreRoundButton } from '../Buttons/SeeMoreRoundButton'\r\nimport { TinyPersonsList } from '../Lists/TinyPersonsList'\r\nexport const AuthorInfo = ({ author }) => {\r\n\tconst { setContent } = useModal()\r\n\tconst { yourFriends } = useSong()\r\n\tconst [friendsThatHaveThisSong, setFriendsThatHaveThisAuthor] = useState([])\r\n\tconst [loading, setLoading] = useState(true)\r\n\tasync function findFriendsThatHaveThisAuthor() {\r\n\t\tsetLoading(true)\r\n\t\tsetFriendsThatHaveThisAuthor([])\r\n\t\tyourFriends.forEach(friend => {\r\n\t\t\tif (author.isAuthor) {\r\n\t\t\t\tif (friend.addedAuthors.includes(author.uid)) setFriendsThatHaveThisAuthor(prev => [...prev, friend])\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (friend.friends.find(person=>person.uid === author.uid)) setFriendsThatHaveThisAuthor(prev => [...prev, friend])\r\n\t\t\t}\r\n\r\n\t\t})\r\n\t\tsetLoading(false)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfindFriendsThatHaveThisAuthor()\r\n\t}, [author.uid])\r\n\r\n\treturn (\r\n\t\t<div className='SongInfo'>\r\n\t\t\t<div className=\"songImage\" style={{ backgroundImage: `url(${author.photoURL})` }}></div>\r\n\t\t\t<div className=\"songInfoContent\">\r\n\t\t\t\t<div style={{ display: 'flex', flexDirection: 'column-reverse' }}>\r\n\t\t\t\t\t<h3 style={{ color: author.imageColors[1] }}>{author.displayName}{author.isVerified ? <ImCheckmark style={{ color: author.imageColors[0], width: '15px', height: \"15px\", marginLeft: '5px' }} /> : null}</h3>\r\n\t\t\t\t\t<span style={{ opacity: \".5\", fontWeight: 500, fontSize: '.7em' }}>{author.isAuthor ? \"Author\" : \"User\"}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ display: 'flex', opacity: '0.6', fontSize: '.9em', position: \"relative\" }} className=\"listensAndDate\">\r\n\t\t\t\t\t<p className=\"infoListens\" style={{ marginRight: '20px', position: 'relative' }}>{author.numberOfListenersPerMonth}<FiHeadphones /></p>\r\n\t\t\t\t\t<p className=\"infoListens\" style={{ marginRight: '20px', position: 'relative' }}>{author.subscribers} <FiUserPlus /></p>\r\n\t\t\t\t\t<span>{displayDate(author.regDate)}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<h4 style={{ margin: '10px 0' }}>{friendsThatHaveThisSong.length > 0 ? 'Friends subscribed' : 'None of your friends subscribed'}</h4>\r\n\t\t\t\t{!loading ? <div style={{ display: 'flex' }}>\r\n\t\t\t\t\t{friendsThatHaveThisSong.length > 0 ?\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t{friendsThatHaveThisSong.map((person, index) => {\r\n\t\t\t\t\t\t\t\tif (index < 2) return <PersonTinyVerticalItem person={person} key={person.uid} />\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t{friendsThatHaveThisSong.length > 2 ? <SeeMoreRoundButton onClick={() => setContent(<TinyPersonsList listOfPeople={friendsThatHaveThisSong} title={`Friends subscribed to ${author.displayName}`} />)} /> : null}\r\n\t\t\t\t\t\t</> :\r\n\t\t\t\t\t\t<button className=\"shareBtn\" style={{ minHeight: '35px', background: author.imageColors[0] }} onClick={() => { setContent(<FriendsListToShareWith item={author} whatToShare={'author'} />) }}>Share</button>}\r\n\t\t\t\t</div> :\r\n\t\t\t\t\t<div style={{ position: 'relative', height: '50px' }}><LoadingCircle top={\"50%\"} /></div>}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { useModal } from '../../contexts/ModalContext';\r\nimport { FiFlag, FiInfo, FiShare } from 'react-icons/fi'\r\nimport {FriendsListToShareWith} from '../Lists/FriendsListToShareWith'\r\nimport { AlbumInfo } from '../Info/AlbumInfo';\r\nimport { AuthorInfo } from '../Info/AuthorInfo';\r\nexport const AuthorMoreWindow = ({data}) => {\r\n\tconst {setContent} = useModal()\r\n\treturn (\r\n\t\t<div className=\"AuthorMoreWindow\" style={{ top: '110%', bottom: 'auto' }} onClick={e => e.stopPropagation()} >\r\n\t\t\t<div className=\"songItemMenuWindowItem\" onClick={() => {setContent(<FriendsListToShareWith item={data} whatToShare={data.authors !== undefined ? 'playlist' : 'author'} />) }}>\r\n\t\t\t\t<FiShare />Share\r\n\t\t\t</div>\r\n\t\t\t<div className=\"songItemMenuWindowItem\" onClick={() => { setContent(data.authors !== undefined ? <AlbumInfo album={data} /> : <AuthorInfo author={data} />) }}><FiInfo />Info</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, {useEffect} from 'react'\r\n\r\nexport const SmallImages = ({imagesList, borderColor = \"#fff\"}) => {\r\n\treturn (\r\n\t\t<div className = \"SmallImages\" style = {{marginRight:-7*(imagesList.length-1)}}>\r\n\t\t\t{imagesList.map((image, index)=>{\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className = \"smallImgContainer\" style = {{border:`3px solid ${borderColor}`, transform:`translateX(${-15*index}px)`}} key = {index}>\r\n\t\t\t\t\t\t<img loading = \"lazy\" src={image} alt=\"\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { BiAlbum, BiDoorOpen, BiLoaderAlt } from \"react-icons/bi\";\r\nimport { CgCheckO, CgLock } from \"react-icons/cg\";\r\nimport {\r\n  FiEdit2,\r\n  FiHeadphones,\r\n  FiInfo,\r\n  FiMoreVertical,\r\n  FiPlusCircle,\r\n  FiSettings,\r\n  FiShare,\r\n  FiTrash,\r\n  FiUserCheck,\r\n  FiUserPlus,\r\n} from \"react-icons/fi\";\r\nimport { ImCheckmark } from \"react-icons/im\";\r\nimport { IoMdExit } from \"react-icons/io\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useModal } from \"../../contexts/ModalContext\";\r\nimport { useScreen } from \"../../contexts/ScreenContext\";\r\nimport { useSong } from \"../../contexts/SongContext\";\r\nimport { CustomizeAlbum } from \"../../features/album/ui/organisms/customize-album\";\r\nimport { addAuthorToLibrary } from \"../../features/author/lib/add-author-to-library\";\r\nimport addFriend from \"../../features/author/lib/add-friend\";\r\nimport deleteAuthorFromLibrary from \"../../features/author/lib/delete-author-from-library\";\r\nimport { deleteFriend } from \"../../features/author/lib/delete-friend\";\r\nimport { ChatWithFriendButton } from \"../../features/author/ui/molecules/chat-with-friend-button\";\r\nimport { CustomizeAuthor } from \"../../features/author/ui/organisms/customize-author\";\r\nimport { addPlaylistToLibrary } from \"../../functions/add/addPlaylistToLibrary\";\r\nimport { deletePlaylist } from \"../../functions/delete/deletePlaylist\";\r\nimport displayDate from \"../../functions/display/displayDate\";\r\nimport { quitPlaylist } from \"../../functions/other/quitPlaylist\";\r\nimport { removePlaylistFromLibrary } from \"../../functions/other/removePlaylistFromLibrary\";\r\nimport rightFormanForBigNumber from \"../../functions/other/rightFormatForBigNumber\";\r\nimport { useAlbumAuthors } from \"../../hooks/useAlbumAuthors\";\r\nimport useOutsideClick from \"../../shared/lib/hooks/use-outside-click\";\r\nimport { GoBackBtn } from \"../../shared/ui/atoms/go-back-button\";\r\nimport { Hint } from \"../Basic/Hint\";\r\nimport { LastSeen } from \"../Basic/LastSeen\";\r\nimport { AlbumInfo } from \"../Info/AlbumInfo\";\r\nimport { AuthorInfo } from \"../Info/AuthorInfo\";\r\nimport { FriendsListToShareWith } from \"../Lists/FriendsListToShareWith\";\r\nimport { AuthorMoreWindow } from \"../Windows/AuthorMoreWindow\";\r\nimport { SmallImages } from \"./SmallImages\";\r\nexport const Header = ({ data, headerColors }) => {\r\n  const { isMobile } = useScreen();\r\n  const { displayAuthors } = useSong();\r\n  const [albumAuthors, authorsImages] = useAlbumAuthors(data);\r\n  const { currentUser, logout } = useAuth();\r\n  const [openMoreWindow, setOpenMoreWindow] = useState(false);\r\n  const {\r\n    toggleModal,\r\n    setContent,\r\n    openConfirm,\r\n    closeConfirm,\r\n    openBottomMessage,\r\n  } = useModal();\r\n  const isFriend = currentUser.friends.find(\r\n    (friend) => friend.uid === data.uid && friend.status === \"added\"\r\n  );\r\n  const moreWindowRef = useRef(null);\r\n  useOutsideClick(moreWindowRef, setOpenMoreWindow);\r\n\r\n  function displayCreationDateIfExists() {\r\n    return data.creationDate !== undefined ? (\r\n      <div className=\"headerListenersAndSubsItem\">\r\n        <Hint text={\"creation date\"} style={{ fontSize: \"0.8em\" }} />\r\n        <span>{displayDate(data.creationDate)}</span>\r\n      </div>\r\n    ) : null;\r\n  }\r\n\r\n  function isAlbumOrIsAuthor() {\r\n    return data.authors !== undefined ? (\r\n      data.isAlbum ? (\r\n        <h5>Album</h5>\r\n      ) : (\r\n        <h5>Playlist</h5>\r\n      )\r\n    ) : data.isAuthor ? (\r\n      <h5>Author</h5>\r\n    ) : (\r\n      <h5>\r\n        User{\" \"}\r\n        {data.authors === undefined && isFriend ? (\r\n          <LastSeen userUID={data.uid} />\r\n        ) : null}\r\n      </h5>\r\n    );\r\n  }\r\n\r\n  function showCreatorsIfExist() {\r\n    return data.authors !== undefined ? (\r\n      <div className=\"headerAuthorsImagesAndNames\">\r\n        <SmallImages imagesList={authorsImages} borderColor={headerColors[2]} />\r\n        <div className=\"headerAuthors\">\r\n          {displayAuthors(albumAuthors, \", \")}\r\n        </div>\r\n      </div>\r\n    ) : null;\r\n  }\r\n\r\n  function findIfIsVerified() {\r\n    return data.isVerified ? (\r\n      <ImCheckmark style={{ color: headerColors[0] }} />\r\n    ) : null;\r\n  }\r\n\r\n  function whatButtonToRender() {\r\n    if (data.authors) {\r\n      if (\r\n        currentUser.ownPlaylists.includes(data.id) &&\r\n        data.authors.length === 1\r\n      )\r\n        return (\r\n          <button\r\n            onClick={() =>\r\n              openConfirm(\r\n                \"Are you sure you want to DELETE this playlist forever?!\",\r\n                \"Yes, pretty sure\",\r\n                \"No, I Don't!\",\r\n                () => {\r\n                  deletePlaylist(data.id);\r\n                  closeConfirm();\r\n                  openBottomMessage(`Playlist ${data.name} was deleted`);\r\n                }\r\n              )\r\n            }\r\n          >\r\n            <Hint text={\"delete playlist\"} direction={\"bottom\"} />\r\n            <FiTrash />\r\n          </button>\r\n        );\r\n      else if (currentUser.ownPlaylists.includes(data.id))\r\n        return (\r\n          <button\r\n            onClick={() =>\r\n              openConfirm(\r\n                \"Are you sure you want to quit this playlist?\",\r\n                \"Yes, pretty sure\",\r\n                \"No, I Don't!\",\r\n                () => {\r\n                  quitPlaylist(data, currentUser);\r\n                  closeConfirm();\r\n                  openBottomMessage(`You left ${data.name}`);\r\n                }\r\n              )\r\n            }\r\n          >\r\n            <Hint text={\"quit playlist\"} direction={\"bottom\"} />\r\n            <BiDoorOpen />\r\n          </button>\r\n        );\r\n      else if (currentUser.addedPlaylists.includes(data.id))\r\n        return (\r\n          <button\r\n            onClick={() =>\r\n              openConfirm(\r\n                \"Are you sure you want to remove this playlist from library?\",\r\n                \"Yes, pretty sure\",\r\n                \"No-no-no, go away\",\r\n                () => {\r\n                  removePlaylistFromLibrary(data, currentUser);\r\n                  closeConfirm();\r\n                  openBottomMessage(\"Playlist was removed from library\");\r\n                }\r\n              )\r\n            }\r\n          >\r\n            <Hint text={\"remove playlist from library\"} direction={\"bottom\"} />\r\n            <CgCheckO />\r\n          </button>\r\n        );\r\n      else\r\n        return (\r\n          <button\r\n            onClick={() => {\r\n              addPlaylistToLibrary(data, currentUser);\r\n              openBottomMessage(`Playlist ${data.name} was added to library`);\r\n            }}\r\n          >\r\n            <Hint text={\"add playlist\"} direction={\"bottom\"} />\r\n            <FiPlusCircle />\r\n          </button>\r\n        );\r\n    } else {\r\n      if (currentUser.addedAuthors.includes(data.uid))\r\n        return (\r\n          <button onClick={() => deleteAuthorFromLibrary(data, currentUser)}>\r\n            <Hint text={\"delete author from library\"} direction={\"bottom\"} />\r\n            <CgCheckO />\r\n          </button>\r\n        );\r\n      else if (currentUser.uid === data.uid)\r\n        return (\r\n          <Link to={\"/settings\"}>\r\n            <button>\r\n              <Hint text={\"settings\"} direction={\"bottom\"} />\r\n              <FiSettings />\r\n            </button>\r\n          </Link>\r\n        );\r\n      else if (\r\n        !data.isAuthor &&\r\n        currentUser.friends.find(\r\n          (friend) => friend.uid === data.uid && friend.status === \"added\"\r\n        )\r\n      )\r\n        return (\r\n          <button\r\n            onClick={() =>\r\n              openConfirm(\r\n                `Are you sure you want to unfriend ${data.displayName}?`,\r\n                \"Yes, pretty sure\",\r\n                \"No-no-no, go away\",\r\n                () => {\r\n                  deleteFriend(currentUser, data);\r\n                  closeConfirm();\r\n                  openBottomMessage(`${data.displayName} was unfriended`);\r\n                }\r\n              )\r\n            }\r\n          >\r\n            <Hint text={\"remove from friend list\"} direction={\"bottom\"} />\r\n            <FiUserCheck />\r\n          </button>\r\n        );\r\n      else if (\r\n        !data.isAuthor &&\r\n        currentUser.friends.find(\r\n          (friend) => friend.uid === data.uid && friend.status === \"awaiting\"\r\n        )\r\n      )\r\n        return (\r\n          <button onClick={addFriend}>\r\n            <Hint text={\"waiting for response\"} direction={\"bottom\"} />\r\n            <BiLoaderAlt style={{ animation: \"loading 1s infinite linear\" }} />\r\n          </button>\r\n        );\r\n      else if (!data.isAuthor)\r\n        return (\r\n          <button\r\n            onClick={() => {\r\n              addFriend(data, currentUser);\r\n              openBottomMessage(\r\n                `Friend request was sent to ${data.displayName}`\r\n              );\r\n            }}\r\n          >\r\n            <Hint text={\"add friend\"} direction={\"bottom\"} />\r\n            <FiUserPlus />\r\n          </button>\r\n        );\r\n      else\r\n        return (\r\n          <button\r\n            onClick={() => {\r\n              addAuthorToLibrary(data, currentUser);\r\n              openBottomMessage(\r\n                `${data.displayName} was added to your library`\r\n              );\r\n            }}\r\n          >\r\n            <Hint text={\"subscribe\"} direction={\"bottom\"} />\r\n            <FiPlusCircle />\r\n          </button>\r\n        );\r\n    }\r\n  }\r\n\r\n  function findIfIsPrivate() {\r\n    return data.isPrivate ? <CgLock /> : null;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"Header\"\r\n      style={\r\n        headerColors.length\r\n          ? {\r\n              background: `linear-gradient(45deg, ${headerColors[2]}, ${headerColors[0]})`,\r\n            }\r\n          : { background: \"var(--yellowAndPinkGrad)\" }\r\n      }\r\n    >\r\n      <div className=\"headerBtns\" style={{ background: headerColors[2] }}>\r\n        <GoBackBtn />\r\n        <div style={{ display: \"flex\" }}>\r\n          <div className=\"headerBackBtn\">{whatButtonToRender()}</div>\r\n          <div className=\"headerMoreBtn\" ref={moreWindowRef}>\r\n            <button\r\n              onClick={\r\n                !isMobile\r\n                  ? () => setOpenMoreWindow(!openMoreWindow)\r\n                  : () => {\r\n                      toggleModal();\r\n                      setContent(<AuthorMoreWindow data={data} />);\r\n                    }\r\n              }\r\n            >\r\n              <Hint text={\"more\"} direction={\"bottom\"} />\r\n              <FiMoreVertical />\r\n            </button>\r\n            {openMoreWindow ? (\r\n              <div\r\n                className=\"songItemMenuWindow\"\r\n                style={{ top: \"110%\", bottom: \"auto\" }}\r\n                onClick={(e) => e.stopPropagation()}\r\n              >\r\n                {(data.authors &&\r\n                  data.authors.find(\r\n                    (person) => person.uid === currentUser.uid\r\n                  )) ||\r\n                (data.authors && currentUser.isAdmin) ? (\r\n                  <div\r\n                    className=\"songItemMenuWindowItem\"\r\n                    onClick={() => {\r\n                      toggleModal();\r\n                      setContent(<CustomizeAlbum playlist={data} />);\r\n                    }}\r\n                  >\r\n                    <FiEdit2 />\r\n                    Edit\r\n                  </div>\r\n                ) : data.uid === currentUser.uid && !data.isAuthor ? (\r\n                  <div\r\n                    className=\"songItemMenuWindowItem\"\r\n                    onClick={() => {\r\n                      toggleModal();\r\n                      setContent(<CustomizeAuthor author={data} />);\r\n                    }}\r\n                  >\r\n                    <FiEdit2 />\r\n                    Edit\r\n                  </div>\r\n                ) : null}\r\n                <div\r\n                  className=\"songItemMenuWindowItem\"\r\n                  onClick={() => {\r\n                    toggleModal();\r\n                    setContent(\r\n                      <FriendsListToShareWith\r\n                        item={data}\r\n                        whatToShare={\r\n                          data.authors !== undefined ? \"playlist\" : \"author\"\r\n                        }\r\n                      />\r\n                    );\r\n                  }}\r\n                >\r\n                  <FiShare />\r\n                  Share\r\n                </div>\r\n                <div\r\n                  className=\"songItemMenuWindowItem\"\r\n                  onClick={() => {\r\n                    toggleModal();\r\n                    setContent(\r\n                      data.authors !== undefined ? (\r\n                        <AlbumInfo album={data} />\r\n                      ) : (\r\n                        <AuthorInfo author={data} />\r\n                      )\r\n                    );\r\n                  }}\r\n                >\r\n                  <FiInfo />\r\n                  Info\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        {currentUser.uid === data.uid ? (\r\n          <button\r\n            onClick={() =>\r\n              openConfirm(\r\n                \"Are you sure you want to quit?\",\r\n                \"Yes, pretty sure\",\r\n                \"No, I Don't!\",\r\n                () => {\r\n                  logout();\r\n                  closeConfirm();\r\n                }\r\n              )\r\n            }\r\n          >\r\n            <Hint text={\"quit\"} direction={\"bottom\"} />\r\n            <IoMdExit />\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n      <div\r\n        className=\"headerAuthorsImage\"\r\n        style={\r\n          data.authors === undefined\r\n            ? {\r\n                animation: \"floatingBorderRadius 10s infinite ease-in-out\",\r\n                backgroundImage: `url(${data.photoURL})`,\r\n                position: \"relative\",\r\n              }\r\n            : {\r\n                backgroundImage: `url(${data.image})`,\r\n                position: \"relative\",\r\n                backgroundColor: \"var(--red)\",\r\n              }\r\n        }\r\n      >\r\n        {data.authors !== undefined && !data.image ? (\r\n          <BiAlbum\r\n            style={{\r\n              position: \"absolute\",\r\n              left: \"50%\",\r\n              top: \"50%\",\r\n              transform: \"translate(-50%, -50%)\",\r\n              width: \"60px\",\r\n              height: \"60px\",\r\n            }}\r\n          />\r\n        ) : null}\r\n      </div>\r\n      <div className=\"headerAuthorInfo\">\r\n        <div className=\"headerAuthorsName\">\r\n          {isAlbumOrIsAuthor()}\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              margin: \"2px 0 10px 0\",\r\n            }}\r\n          >\r\n            <h1>{data.displayName || data.name}</h1>\r\n            {findIfIsVerified()}\r\n            {findIfIsPrivate()}\r\n            {/* <LastSongListened data = {data} loading = {loading}/> */}\r\n          </div>\r\n        </div>\r\n        {showCreatorsIfExist()}\r\n\r\n        <div className=\"headerListenersAndSubs\">\r\n          <div className=\"headerListenersAndSubsItem\">\r\n            <Hint\r\n              text={\r\n                (data.listens ?? data.numberOfListenersPerMonth) + \" listens\"\r\n              }\r\n              style={{ fontSize: \"0.8em\" }}\r\n            />\r\n            <span>\r\n              {rightFormanForBigNumber(\r\n                data.listens ?? data.numberOfListenersPerMonth\r\n              )}\r\n            </span>\r\n            <FiHeadphones />\r\n          </div>\r\n          <div className=\"headerListenersAndSubsItem\">\r\n            <Hint\r\n              text={data.subscribers + \" subscribers\"}\r\n              style={{ fontSize: \"0.8em\" }}\r\n            />\r\n            <span>{rightFormanForBigNumber(data.subscribers)}</span>\r\n            <FiUserPlus />\r\n          </div>\r\n          {displayCreationDateIfExists()}\r\n        </div>\r\n        {isFriend ? (\r\n          <ChatWithFriendButton data={data} color={headerColors[3]} />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { firestore } from \"../../firebase\"\r\n\r\nexport const deletePlaylist = (playlistId) => {\r\n\tfirestore.collection(\"users\").where(\"addedPlaylists\", \"array-contains\", playlistId).get().then((listOfPeople)=>{\r\n\t\tlistOfPeople.docs.forEach(person=>{\r\n\t\t\tconst personFilteredPlaylists = person.data().addedPlaylists.filter(pId => pId !== playlistId)\r\n\t\t\tfirestore.collection('users').doc(person.data().uid).update({\r\n\t\t\t\taddedPlaylists:personFilteredPlaylists\r\n\t\t\t})\r\n\t\t})\r\n\t})\r\n\tfirestore.collection(\"users\").where(\"ownPlaylists\", \"array-contains\", playlistId).get().then((listOfPeople)=>{\r\n\t\tlistOfPeople.docs.forEach(person=>{\r\n\t\t\tconst personFilteredPlaylists = person.data().addedPlaylists.filter(pId => pId !== playlistId)\r\n\t\t\tfirestore.collection('users').doc(person.data().uid).update({\r\n\t\t\t\townPlaylists:personFilteredPlaylists\r\n\t\t\t})\r\n\t\t})\r\n\t})\r\n\tfirestore.collection('search').doc(playlistId).delete().then(()=>{\r\n\t\tfirestore.collection('playlists').doc(playlistId).delete()\r\n\t})\r\n}","import { firestore } from \"../../firebase\"\r\n\r\nexport const quitPlaylist = (playlist, currentUser) => {\r\n\t//logic for quiting playlist where it has more than one participant\r\n\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\townPlaylists:currentUser.ownPlaylists.filter(id => id !== playlist.id)\r\n\t})\r\n\tfirestore.collection('playlists').doc(playlist.id).update({\r\n\t\tauthors:playlist.authors.filter(author=>author.uid !== currentUser.uid)\r\n\t})\r\n}","import { firestore } from \"../../../firebase\"\r\n\r\nexport const deleteFriend = (currentUser, data) => {\r\n\tlet filteredUserFriends = currentUser.friends.filter(friend => friend.uid !== data.uid)\r\n\tlet filteredOtherUserFriends = data.friends.filter(friend => friend.uid !== currentUser.uid)\r\n\r\n\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\tfriends: filteredUserFriends\r\n\t})\r\n\r\n\tfirestore.collection('users').doc(data.uid).update({\r\n\t\tfriends: filteredOtherUserFriends\r\n\t})\r\n}","import React from \"react\";\r\n\r\nexport const ContentContainer = ({ children, ...props }) => {\r\n  return (\r\n    <div className=\"content-container\" {...props}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useRouteMatch } from \"react-router\";\r\nimport { Header } from \"../../components/AuthorPage/Header\";\r\nimport { firestore } from \"../../firebase\";\r\nimport { LoadingCircle } from \"../../components/Loading/LoadingCircle\";\r\nimport { SongList } from \"../../components/Lists/SongList\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { ContentContainer } from \"../../components/Containers/ContentContainer\";\r\nimport { fetchItemList } from \"../../shared/lib/fetch-item-list\";\r\nconst AlbumPage = () => {\r\n  const match = useRouteMatch(\"/albums/:albumId\");\r\n  const [playlistSongs, setPlaylistSongs] = useState([]);\r\n  const [headerColors, setHeaderColors] = useState([]);\r\n  const { albumId } = match.params;\r\n  const [albumData, setAlbumData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const history = useHistory();\r\n  async function fetchAlbumsData() {\r\n    firestore\r\n      .collection(\"playlists\")\r\n      .doc(albumId)\r\n      .onSnapshot((doc) => {\r\n        if (doc.exists) {\r\n          setAlbumData(doc.data());\r\n          setHeaderColors(doc.data().imageColors);\r\n        } else {\r\n          history.push(\"/not-found\");\r\n        }\r\n      });\r\n  }\r\n\r\n  function fetchSongsInAlbum() {\r\n    if (albumData.songs?.length)\r\n      fetchItemList(\r\n        albumData.songs,\r\n        \"songs\",\r\n        setPlaylistSongs,\r\n        (res) => res,\r\n        () => setLoading(false)\r\n      );\r\n    else setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchAlbumsData();\r\n  }, [albumId, firestore]);\r\n\r\n  useEffect(() => {\r\n    fetchSongsInAlbum();\r\n  }, [albumData]);\r\n\r\n  return (\r\n    <div className=\"AlbumPage\" style={{ animation: \"zoomIn .2s forwards\" }}>\r\n      {loading ? (\r\n        <LoadingCircle top={\"50%\"} />\r\n      ) : (\r\n        <>\r\n          <Header\r\n            data={albumData}\r\n            headerColors={headerColors}\r\n            setHeaderColors={setHeaderColors}\r\n          />\r\n          <ContentContainer\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              minHeight: \"100%\",\r\n              borderRadius: \"25px 25px 0 0\",\r\n              flex: \"1 1 auto\",\r\n              position: \"relative\",\r\n              overflow: \"hidden\",\r\n              boxShadow: \"0px 0px 100px #060606\",\r\n            }}\r\n          >\r\n            <div\r\n              className=\"content-background\"\r\n              style={{\r\n                background: `linear-gradient(360deg, black, ${headerColors[0]})`,\r\n              }}\r\n            ></div>\r\n            <SongList\r\n              listOfSongs={playlistSongs}\r\n              source={{\r\n                source: `/albums/${albumData.id}`,\r\n                name: albumData.name,\r\n                image: albumData.image,\r\n                songsList: playlistSongs,\r\n              }}\r\n              showSearch\r\n              defaultSearchMode={\"songs\"}\r\n            />\r\n          </ContentContainer>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlbumPage;\r\n","import React, { useState } from \"react\";\r\nimport { ColorExtractor } from \"react-color-extractor\";\r\nimport { FiXCircle } from \"react-icons/fi\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { firestore } from \"../../firebase\";\r\nimport { findVariantsOfName } from \"../../functions/find/findVariantsOfName\";\r\nimport getUID from \"../../functions/other/getUID\";\r\nimport { transformLyricsToArrayOfObjects } from \"../../functions/other/transformLyricsToArrayOfObject\";\r\nimport DownloadButton from \"../../shared/ui/atoms/download-button\";\r\nimport Input from \"../../shared/ui/atoms/input\";\r\nimport SubmitButton from \"../../shared/ui/atoms/submit-button\";\r\nimport SearchBar from \"../../shared/ui/organisms/search-bar\";\r\nimport { PersonTiny } from \"../Basic/PersonTiny\";\r\nimport { FullScreenLoading } from \"../Loading/FullScreenLoading\";\r\nexport const AddSong = () => {\r\n  const { currentUser } = useAuth();\r\n  const [songName, setSongName] = useState(\"\");\r\n  const [songCover, setSongCover] = useState(\"\");\r\n  const [songSrc, setSongSrc] = useState(\"\");\r\n  const [authorsInputValue, setAuthorsInputValue] = useState(\"\");\r\n  const [allAuthors, setAllAuthors] = useState([]);\r\n  const [chosenAuthors, setChosenAuthors] = useState(\r\n    !currentUser.isAdmin\r\n      ? [\r\n          {\r\n            uid: currentUser.uid,\r\n            photoURL: currentUser.photoURL,\r\n            displayName: currentUser.displayName,\r\n          },\r\n        ]\r\n      : []\r\n  );\r\n  const [releaseDate, setReleaseDate] = useState(\"\");\r\n  const [lyrics, setLyrics] = useState(\"\");\r\n  const [imageLocalPath, setImageLocalPath] = useState(\"\");\r\n  const [imageColors, setImageColors] = useState([]);\r\n  const [loadingAuthors, setLoadingAuthors] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [completed, setCompleted] = useState(false);\r\n  const [loadingSong, setLoadingSong] = useState(false);\r\n\r\n  function removeAuthorFromList(data) {\r\n    const filtered = chosenAuthors.filter((people) => people.uid !== data.uid);\r\n    return setChosenAuthors(filtered);\r\n  }\r\n\r\n  function addAuthor(data) {\r\n    if (!chosenAuthors.some((person) => person.uid === data.uid)) {\r\n      return setChosenAuthors((prev) => [\r\n        ...prev,\r\n        {\r\n          uid: data.uid,\r\n          displayName: data.displayName,\r\n          photoURL: data.photoURL,\r\n        },\r\n      ]);\r\n    }\r\n\r\n    removeAuthorFromList(data);\r\n  }\r\n\r\n  async function addSongToFirebase(e) {\r\n    e.preventDefault();\r\n\r\n    let uid = getUID();\r\n    setErrorMessage(\"\");\r\n    if (songName.length === 0) setErrorMessage(\"Song has to have some name\");\r\n    else if (chosenAuthors.length === 0)\r\n      setErrorMessage(\"Song has to have at least 1 author\");\r\n    else if (songCover.length === 0)\r\n      setErrorMessage(\"You didn't load song cover\");\r\n    else if (songSrc.length === 0) setErrorMessage(\"You didn't load song file\");\r\n    else if (releaseDate.length === 0)\r\n      setErrorMessage(\"You have to set release date for a song\");\r\n    else {\r\n      setLoadingSong(true);\r\n      firestore\r\n        .collection(\"songs\")\r\n        .doc(uid)\r\n        .set({\r\n          id: uid,\r\n          name: songName,\r\n          songSrc: songSrc,\r\n          authors: chosenAuthors,\r\n          cover: songCover,\r\n          listens: 0,\r\n          releaseDate: releaseDate,\r\n          lyrics: transformLyricsToArrayOfObjects(lyrics),\r\n          imageColors: imageColors,\r\n        })\r\n        .then(() => {\r\n          setAllAuthors([]);\r\n          setAuthorsInputValue(\"\");\r\n          setChosenAuthors([]);\r\n          setLyrics([]);\r\n          setSongCover(\"\");\r\n          setSongName(\"\");\r\n          setSongSrc(\"\");\r\n          setReleaseDate(\"\");\r\n          setLyrics([]);\r\n          setCompleted(true);\r\n          setImageColors([]);\r\n          setLoadingSong(false);\r\n        })\r\n        .catch((err) => {\r\n          setErrorMessage(err);\r\n          setLoadingSong(false);\r\n        });\r\n\r\n      chosenAuthors.forEach(async (author) => {\r\n        const authorRef = await firestore\r\n          .collection(\"users\")\r\n          .doc(author.uid)\r\n          .get();\r\n        const authorData = authorRef.data();\r\n        const authorSongs = authorData.ownSongs;\r\n        authorSongs.push(uid);\r\n        firestore.collection(\"users\").doc(author.uid).update({\r\n          ownSongs: authorSongs,\r\n        });\r\n      });\r\n\r\n      firestore\r\n        .collection(\"search\")\r\n        .doc(uid)\r\n        .set({\r\n          place: \"songs\",\r\n          uid: uid,\r\n          rank: 0,\r\n          variantsOfName: findVariantsOfName(songName),\r\n        });\r\n    }\r\n  }\r\n\r\n  function manuallyChangeColor(e, i) {\r\n    imageColors[i] = e.target.value;\r\n    setImageColors([...imageColors]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"AddSong\">\r\n      <FullScreenLoading loading={loadingSong} />\r\n      <ColorExtractor\r\n        src={imageLocalPath}\r\n        getColors={(colors) => setImageColors(colors)}\r\n      />\r\n      <div>\r\n        <Input\r\n          title={\"Song name\"}\r\n          value={songName}\r\n          setValue={setSongName}\r\n          placeholder={\"Enter song name\"}\r\n        />\r\n        <label>\r\n          <h3>Song authors</h3>\r\n          <SearchBar\r\n            value={authorsInputValue}\r\n            setValue={setAuthorsInputValue}\r\n            setResultAuthorList={setAllAuthors}\r\n            defaultSearchMode={\"authors\"}\r\n            inputText={\"Search for authors\"}\r\n          />\r\n          <div className=\"chosenAuthorsList\">\r\n            {chosenAuthors.map((author) => {\r\n              return (\r\n                <div className=\"chosenAuthorItem\">\r\n                  <span>{author.displayName}</span>\r\n                  <FiXCircle\r\n                    onClick={() => {\r\n                      if (currentUser.isAdmin) removeAuthorFromList(author);\r\n                      else if (author.uid !== currentUser.uid)\r\n                        removeAuthorFromList(author);\r\n                    }}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"authorsResult\">\r\n            {allAuthors.map((data, index) => {\r\n              return (\r\n                <PersonTiny\r\n                  data={data}\r\n                  onClick={() => addAuthor(data)}\r\n                  style={\r\n                    chosenAuthors.includes(data.uid)\r\n                      ? { background: \"var(--green)\" }\r\n                      : {}\r\n                  }\r\n                  key={index}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </label>\r\n\r\n        <Input\r\n          title={\"Release Date\"}\r\n          type={\"date\"}\r\n          value={releaseDate}\r\n          setValue={setReleaseDate}\r\n          placeholder={\"Enter release date\"}\r\n        />\r\n\r\n        <div style={{ width: \"100%\", display: \"flex\" }}>\r\n          {imageColors.map((color, index) => {\r\n            return (\r\n              <input\r\n                type=\"color\"\r\n                value={color}\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"60px\",\r\n                  padding: \"0\",\r\n                  borderRadius: \"0px\",\r\n                }}\r\n                onChange={(e) => {\r\n                  manuallyChangeColor(e, index);\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <DownloadButton\r\n          text={\"Download song cover\"}\r\n          place={\"songsImages/\"}\r\n          setItemSrc={setSongCover}\r\n          setImageLocalPath={setImageLocalPath}\r\n        />\r\n        <DownloadButton\r\n          text={\"Download song file\"}\r\n          place={\"songs/\"}\r\n          setItemSrc={setSongSrc}\r\n        />\r\n        <label>\r\n          <textarea\r\n            name=\"\"\r\n            id=\"\"\r\n            placeholder={\"Add song lyrics\"}\r\n            value={lyrics}\r\n            onChange={(e) => setLyrics(e.target.value)}\r\n          ></textarea>\r\n        </label>\r\n        <SubmitButton\r\n          text={\"Add song\"}\r\n          action={addSongToFirebase}\r\n          isLoading={loadingSong}\r\n          completed={completed}\r\n          setCompleted={setCompleted}\r\n          bottomMessage={\"Song was uploaded to database\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nexport const Slider = ({pages, currentPage, setCurrentPage}) => {\r\n\treturn (\r\n\t\t<div className = \"Slider\">\r\n\t\t\t{pages.map((pageName, index)=>{\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className = {\"sliderItem \" + (index === currentPage?\"current\":\"\")} key = {index} onClick = {()=>setCurrentPage(index)}>\r\n\t\t\t\t\t\t{pageName}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FiPlus} from 'react-icons/fi'\r\nimport { useAuth } from '../../contexts/AuthContext'\r\nimport { AddPlaylist } from '../AddWindow/AddPlaylist'\r\nimport { AddSong } from '../AddWindow/AddSong'\r\nimport { Slider } from '../Tools/Slider'\r\n\r\nexport const AddWindow = ({ data }) => {\r\n\tconst { currentUser } = useAuth()\r\n\tconst [openAddSongWindow, setOpenAddSongWindow] = useState(false)\r\n\tconst [currentSliderPage, setCurrentSliderPage] = useState(0)\r\n\tconst sliderPages = [<AddSong/>, <AddPlaylist/>]\r\n\treturn (((currentUser.isAdmin) || (data.isAuthor)) && (data.uid === currentUser.uid)) ?\r\n\t\t(\r\n\t\t\t<div className=\"AddSong\">\r\n\t\t\t\t<button onClick={() => setOpenAddSongWindow(!openAddSongWindow)} style={openAddSongWindow ? { background: 'var(--red)' } : {}} className = \"openAddSongWindowBtn\">\r\n\t\t\t\t\t<FiPlus style={openAddSongWindow ? { transform: 'rotate(45deg)' } : {}} />\r\n\t\t\t\t</button>\r\n\t\t\t\t<div className=\"addSongWindow\" style={openAddSongWindow ? { display: 'flex' } : {}}>\r\n\t\t\t\t\t<Slider pages = {['Song', 'Playlist']} currentPage = {currentSliderPage} setCurrentPage = {setCurrentSliderPage}/>\r\n\t\t\t\t\t{sliderPages[currentSliderPage]}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t) :\r\n\t\tnull\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\r\nimport { firestore } from '../../firebase';\r\nimport { PersonTinyVerticalItem } from './PersonTinyVerticalItem'\r\n\r\nexport const PersonTinyList = ({data, title}) => {\r\n\tconst [listOfPeople, setListOfPeople] = useState([])\r\n\tconst [scrollLeft, setScrollLeft] = useState(0)\r\n\tconst wrapperRef = useRef(null)\r\n\tconst [shouldRenderRightArrow, setShouldRenderRightArrow] = useState(false)\r\n\tfunction scrollToLeft() {\r\n\t\tconst prev = wrapperRef.current.scrollLeft\r\n\t\twrapperRef.current.scrollLeft = prev - 200\r\n\t\tsetScrollLeft(prev - 200)\r\n\t}\r\n\tfunction scrollToRight() {\r\n\t\tconst prev = wrapperRef.current.scrollLeft\r\n\t\twrapperRef.current.scrollLeft = prev + 200\r\n\t\tsetScrollLeft(prev + 200)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif(listOfPeople.length > 0){\r\n\t\t\tconst scrollBiggerThanScreen = wrapperRef.current.scrollWidth > wrapperRef.current.offsetWidth\r\n\t\t\tif (scrollBiggerThanScreen) setShouldRenderRightArrow(true)\r\n\t\t}\r\n\t}, [listOfPeople])\r\n\r\n\tfunction fetchFriends(){\r\n\t\tsetListOfPeople([])\r\n\t\tdata.friends.forEach(async personObj => {\r\n\t\t\tif(personObj.status === 'added'){\r\n\t\t\t\tconst personData = (await firestore.collection('users').doc(personObj.uid).get()).data()\r\n\t\t\t\tsetListOfPeople(prev=>[...prev, personData])\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tsetListOfPeople([])\r\n\t\tfetchFriends()\r\n\t}, [data.uid])\r\n\treturn listOfPeople.length > 0? (\r\n\t\t<div className = 'PersonTinyList'>\r\n\t\t\t{title && <h2>{title}</h2>}\r\n\t\t\t<div style = {{position:'relative'}}>\t\r\n\t\t\t\t<div className=\"personTinyListWrapper\" ref = {wrapperRef} onScroll={e => setScrollLeft(e.target.scrollLeft)}>\r\n\t\t\t\t\t{listOfPeople.map((person, index)=>{\r\n\t\t\t\t\t\treturn <PersonTinyVerticalItem person = {person} key = {person.uid}/>\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"authorsShiftButtons\">\r\n\t\t\t\t\t<button onClick={scrollToLeft} style={scrollLeft <= 0 ? { visibility: 'hidden', opacity: '0' } : {}}><FiChevronLeft /></button>\r\n\t\t\t\t\t<button onClick={scrollToRight} style={shouldRenderRightArrow && wrapperRef.current && (wrapperRef.current.scrollWidth - wrapperRef.current.offsetWidth !== scrollLeft)? {} : { visibility: 'hidden', opacity: '0' }}><FiChevronRight /></button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t):null\r\n}\r\n","import { firestore } from \"../../firebase\";\r\n\r\nexport const findAuthorsAlbums = async (authorsData, setAuthorsPlaylists, currentUserUID, setLoading) => {\r\n\tsetAuthorsPlaylists([])\r\n\tconst tempArray = []\r\n\tif (authorsData.ownPlaylists !== undefined && authorsData.ownPlaylists.length !== 0) {\r\n\t\tauthorsData.ownPlaylists.forEach(async (playlistId, index) => {\r\n\t\t\tconst playlistData = (await firestore.collection(\"playlists\").doc(playlistId).get()).data()\r\n\t\t\tif (playlistData && (!playlistData.isPrivate || (authorsData.uid === currentUserUID && playlistData.isPrivate))) tempArray.push(playlistData)\r\n\t\t\tif (index === authorsData.ownPlaylists.length-1) {\r\n\t\t\t\ttempArray.sort((a, b) => new Date(b.creationDate).getTime() - new Date(a.creationDate).getTime())\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t\tsetAuthorsPlaylists(tempArray)\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t}\r\n}","import React from 'react'\r\nimport Logo from '../../images/Logo3.svg'\r\nexport const DeletedPlaylist = () => {\r\n\treturn (\r\n\t\t<div style={{ textDecoration: 'none' }} className=\"playlistWrapper\">\r\n\t\t\t<div className=\"playlistItem\" style={{ background: `var(--playlistsColor)`, display:'flex', justifyContent:'center', alignItems:'center' }}>\r\n\t\t\t\t<img loading = \"lazy\" src={Logo} alt=\"\" style = {{width:'70px', height:'70px', filter:'grayscale(80%)'}}/>\r\n\t\t\t</div>\r\n\t\t\t<h4 style={{ display: 'flex', alignItems: 'center', margin: '5px 0' }}>\r\n\t\t\t\tPlaylist was deleted\r\n\t\t\t</h4>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { BiAlbum } from \"react-icons/bi\";\r\nimport { BsPauseFill, BsPlayFill } from \"react-icons/bs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useScreen } from \"../../contexts/ScreenContext\";\r\nimport { useSong } from \"../../contexts/SongContext\";\r\nimport shortWord from \"../../functions/other/shortWord\";\r\nimport { usePlaylistSongs } from \"../../hooks/usePlaylistSongs\";\r\nimport { DeletedPlaylist } from \"../Playlist/DeletedPlaylist\";\r\nimport { AddToListCircle } from \"../../shared/ui/molecules/add-to-list-circle\";\r\nimport saveSearchHistory from \"../../features/search/lib/save-search-history\";\r\nexport const PlaylistItem = ({\r\n  playlist = null,\r\n  listOfChosenAlbums,\r\n  setListOfChosenAlbums,\r\n  shouldSaveSearchHistory,\r\n}) => {\r\n  const playlistDate = new Date(playlist?.creationDate);\r\n  const { isMobile } = useScreen();\r\n  const { currentUser } = useAuth();\r\n  const { currentSongPlaylistSource, play } = useSong();\r\n  const [playlistSongs, setPlaylistSongs] = useState([]);\r\n  const playSongsInPlaylist = usePlaylistSongs(\r\n    playlist,\r\n    playlistSongs,\r\n    setPlaylistSongs\r\n  );\r\n\r\n  const handleSaveSearchHistory = () => {\r\n    if (shouldSaveSearchHistory)\r\n      saveSearchHistory(currentUser.uid, playlist.id, \"playlists\");\r\n  };\r\n\r\n  return playlist !== null ? (\r\n    <Link\r\n      to={`/albums/${playlist.id}`}\r\n      style={{ textDecoration: \"none\" }}\r\n      className=\"playlistWrapper\"\r\n      onClick={handleSaveSearchHistory}\r\n    >\r\n      <AddToListCircle\r\n        listOfChosenItems={listOfChosenAlbums}\r\n        setListOfChosenItems={setListOfChosenAlbums}\r\n        itemId={playlist.id}\r\n      />\r\n      <div\r\n        className=\"playlistItem\"\r\n        style={\r\n          playlist.image\r\n            ? { backgroundImage: `url(${playlist.image})` }\r\n            : { background: \"var(--yellowAndPinkGrad)\" }\r\n        }\r\n      >\r\n        {!playlist.image ? (\r\n          <BiAlbum\r\n            style={{\r\n              position: \"absolute\",\r\n              left: \"50%\",\r\n              top: \"50%\",\r\n              transform: \"translate(-50%, -50%)\",\r\n              width: \"60px\",\r\n              height: \"60px\",\r\n            }}\r\n          />\r\n        ) : null}\r\n        {!isMobile ? (\r\n          <button onClick={playSongsInPlaylist}>\r\n            {currentSongPlaylistSource.name === playlist.name && play ? (\r\n              <BsPauseFill />\r\n            ) : (\r\n              <BsPlayFill />\r\n            )}\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n      <h4 style={{ display: \"flex\", alignItems: \"center\", margin: \"5px 0\" }}>\r\n        {shortWord(playlist.name, isMobile ? 10 : 15)}\r\n        <span\r\n          style={{\r\n            fontSize: \".6em\",\r\n            opacity: 0.6,\r\n            fontWeight: \"500\",\r\n            marginLeft: \"7px\",\r\n          }}\r\n        >\r\n          {playlist.isAlbum\r\n            ? playlist.songs.length === 1\r\n              ? \"single\"\r\n              : \"album\"\r\n            : \"playlist\"}\r\n        </span>\r\n      </h4>\r\n      <h5 style={{ margin: \"5px 0\" }}>{playlistDate.getFullYear()}</h5>\r\n    </Link>\r\n  ) : (\r\n    <DeletedPlaylist />\r\n  );\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { FiChevronLeft, FiChevronRight } from \"react-icons/fi\";\r\nimport { PlaylistItem } from \"../AuthorPage/PlaylistItem\";\r\nimport { LoadingCircle } from \"../Loading/LoadingCircle\";\r\n\r\nexport const AlbumList = ({\r\n  listOfAlbums,\r\n  title = \"\",\r\n  loading = true,\r\n  listOfChosenAlbums,\r\n  setListOfChosenAlbums,\r\n  saveSearchHistory,\r\n}) => {\r\n  const [scrollLeft, setScrollLeft] = useState(0);\r\n  const wrapperRef = useRef(null);\r\n  const [shouldRenderRightArrow, setShouldRenderRightArrow] = useState(false);\r\n  function scrollToLeft() {\r\n    const prev = wrapperRef.current.scrollLeft;\r\n    wrapperRef.current.scrollLeft = prev - 220;\r\n    setScrollLeft(prev - 220);\r\n  }\r\n  function scrollToRight() {\r\n    const prev = wrapperRef.current.scrollLeft;\r\n    wrapperRef.current.scrollLeft = prev + 220;\r\n    setScrollLeft(prev + 220);\r\n  }\r\n  useEffect(() => {\r\n    if (listOfAlbums.length > 0 && !loading) {\r\n      const scrollBiggerThanScreen =\r\n        wrapperRef.current.scrollWidth > wrapperRef.current.offsetWidth;\r\n      if (scrollBiggerThanScreen) setShouldRenderRightArrow(true);\r\n    }\r\n  }, [listOfAlbums]);\r\n  return listOfAlbums.length > 0 ? (\r\n    loading ? (\r\n      <LoadingCircle />\r\n    ) : (\r\n      <div className=\"AuthorsList\">\r\n        {title.length !== 0 ? <h2>{title}</h2> : null}\r\n        <div\r\n          className=\"authorsWrapper\"\r\n          ref={wrapperRef}\r\n          onScroll={(e) => setScrollLeft(e.target.scrollLeft)}\r\n        >\r\n          {listOfAlbums.map((playlist, index) => {\r\n            return (\r\n              <PlaylistItem\r\n                playlist={playlist}\r\n                key={index}\r\n                listOfChosenAlbums={listOfChosenAlbums}\r\n                setListOfChosenAlbums={setListOfChosenAlbums}\r\n                shouldSaveSearchHistory={saveSearchHistory}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"authorsShiftButtons\">\r\n          <button\r\n            onClick={scrollToLeft}\r\n            style={\r\n              scrollLeft <= 0 ? { visibility: \"hidden\", opacity: \"0\" } : {}\r\n            }\r\n          >\r\n            <FiChevronLeft />\r\n          </button>\r\n          <button\r\n            onClick={scrollToRight}\r\n            style={\r\n              shouldRenderRightArrow &&\r\n              wrapperRef.current &&\r\n              wrapperRef.current.scrollWidth -\r\n                wrapperRef.current.offsetWidth !==\r\n                scrollLeft\r\n                ? {}\r\n                : { visibility: \"hidden\", opacity: \"0\" }\r\n            }\r\n          >\r\n            <FiChevronRight />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  ) : null;\r\n};\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useAuth } from '../../contexts/AuthContext'\r\nimport { findAuthorsAlbums } from '../../functions/find/findAuthorsAlbums'\r\nimport { AlbumList } from '../Lists/AlbumList'\r\n\r\nexport const Playlists = ({ authorsData }) => {\r\n\tconst {currentUser} = useAuth()\r\n\tconst [authorsPlaylists, setAuthorsPlaylists] = useState([])\r\n\tconst [loading, setLoading] = useState(true)\r\n\r\n\tuseEffect(() => {\r\n\t\tfindAuthorsAlbums(authorsData, setAuthorsPlaylists, currentUser.uid, setLoading)\r\n\t}, [authorsData.ownPlaylists])\r\n\r\n\treturn <AlbumList listOfAlbums = {authorsPlaylists} title = {currentUser.isAuthor?\"Albums\":\"Playlists\"} loading = {loading}/>\r\n}\r\n","import React from 'react'\r\nimport { FiCheck, FiX } from 'react-icons/fi'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const FriendRequestItem = ({person, addFriend, rejectFriend}) => {\r\n\treturn (\r\n\t\t<div className = 'FriendRequestItem'>\r\n\t\t\t<Link to = {`/authors/${person.uid}`}>\r\n\t\t\t\t<div className = \"friendRequestImageAndName\">  \r\n\t\t\t\t\t<div className=\"requestImage\">\r\n\t\t\t\t\t\t<img loading = \"lazy\" src={person.photoURL} alt=\"\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h3>{person.displayName}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t\t<div className=\"requestButtons\">\r\n\t\t\t\t<button style = {{color:'var(--green)'}} onClick = {()=>addFriend(person.uid)}>\r\n\t\t\t\t\t<FiCheck/>\r\n\t\t\t\t\t<span>Add</span> \r\n\t\t\t\t</button>\r\n\t\t\t\t<button style = {{color:'var( --lightRed)'}} onClick = {()=>rejectFriend(person.uid)}>\r\n\t\t\t\t\t<FiX/>\r\n\t\t\t\t\t<span>Reject</span> \r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { useAuth } from \"../../../../contexts/AuthContext\";\r\nimport { firestore } from \"../../../../firebase\";\r\n\r\nconst useFriendRequest = () => {\r\n  const { currentUser } = useAuth();\r\n  const [friendRequests, setFriendRequests] = useState([]);\r\n  function fetchFriendRequests() {\r\n    const tempArray = [];\r\n    currentUser.friends.forEach(async (friendObj, i) => {\r\n      if (friendObj.status === \"requested\") {\r\n        const personData = (\r\n          await firestore.collection(\"users\").doc(friendObj.uid).get()\r\n        ).data();\r\n        tempArray.push(personData);\r\n        if (i === currentUser.friends.length - 1) setFriendRequests(tempArray);\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchFriendRequests();\r\n  }, [JSON.stringify(currentUser.friends)]);\r\n\r\n  function addFriend(uid) {\r\n    const friendsList = currentUser.friends;\r\n    const otherUserFriendList = friendRequests.find(\r\n      (person) => person.uid === uid\r\n    ).friends;\r\n    friendsList.find((obj) => obj.uid === uid).status = \"added\";\r\n    otherUserFriendList.find((obj) => obj.uid === currentUser.uid).status =\r\n      \"added\";\r\n\r\n    firestore.collection(\"users\").doc(currentUser.uid).update({\r\n      friends: friendsList,\r\n    });\r\n    firestore.collection(\"users\").doc(uid).update({\r\n      friends: otherUserFriendList,\r\n    });\r\n\r\n    setFriendRequests((arrOfReqs) => arrOfReqs.filter((el) => el.uid !== uid));\r\n  }\r\n\r\n  function rejectFriend(uid) {\r\n    const friendsList = currentUser.friends.filter((obj) => obj.uid !== uid);\r\n    firestore\r\n      .collection(\"users\")\r\n      .doc(uid)\r\n      .get()\r\n      .then((res) => {\r\n        const otherUserFriendList = res\r\n          .data()\r\n          .friends.filter((obj) => obj.uid !== currentUser.uid);\r\n        firestore.collection(\"users\").doc(currentUser.uid).update({\r\n          friends: friendsList,\r\n        });\r\n        firestore.collection(\"users\").doc(uid).update({\r\n          friends: otherUserFriendList,\r\n        });\r\n        setFriendRequests((arrOfReqs) =>\r\n          arrOfReqs.filter((el) => el.uid !== uid)\r\n        );\r\n      });\r\n  }\r\n\r\n  return [friendRequests, addFriend, rejectFriend];\r\n};\r\n\r\nexport default useFriendRequest;\r\n","import React from \"react\";\r\nimport { FriendRequestItem } from \"../atoms/friend-request-item\";\r\nimport useFriendRequest from \"../../lib/hooks/use-friend-request\";\r\n\r\nexport const FriendRequest = () => {\r\n  const [friendRequests, addFriend, rejectFriend] = useFriendRequest();\r\n\r\n  return (\r\n    <>\r\n      {friendRequests.map((person, index) => {\r\n        return (\r\n          <FriendRequestItem\r\n            person={person}\r\n            key={index}\r\n            addFriend={addFriend}\r\n            rejectFriend={rejectFriend}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n","export default function findIfSongIsNew(song){\r\n\tconst songReleaseDate = new Date(song.releaseDate)\r\n\t//1 814 400 000 - 3 weeks\r\n\tif((new Date().getTime() - songReleaseDate.getTime()) < 1814400000) return true\r\n\r\n\treturn false\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { SongList } from \"../../../../components/Lists/SongList\";\r\nimport findIfSongIsNew from \"../../../../functions/find/findIfSongIsNew\";\r\nimport { fetchItemList } from \"../../../../shared/lib/fetch-item-list\";\r\n\r\nexport const TopSongs = ({ authorId, authorsData, headerColors }) => {\r\n  const [popularSongs, setPopularSongs] = useState([]);\r\n  const [newSongs, setNewSongs] = useState([]);\r\n\r\n  async function findAuthorsSongs() {\r\n    if (authorsData.isAuthor) {\r\n      fetchItemList(authorsData.ownSongs, \"songs\", setPopularSongs, (res) => {\r\n        res.forEach((songData) => {\r\n          if (findIfSongIsNew(songData) && !newSongs.includes(songData))\r\n            setNewSongs((prevSongs) => [...prevSongs, songData]);\r\n        });\r\n        return res.sort((a, b) => b.listens - a.listens);\r\n      });\r\n    } else {\r\n      fetchItemList(\r\n        authorsData.addedSongs.slice(0).reverse(),\r\n        \"songs\",\r\n        setPopularSongs\r\n      );\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    findAuthorsSongs();\r\n    setNewSongs([]);\r\n  }, [authorsData.ownSongs]);\r\n\r\n  return authorsData.isAuthor ? (\r\n    <div className=\"TopSongs\">\r\n      <SongList\r\n        listOfSongs={newSongs}\r\n        source={{\r\n          source: `/authors/${authorsData.uid}`,\r\n          name: authorsData.displayName,\r\n          image: authorsData.photoURL,\r\n          songsList: newSongs,\r\n        }}\r\n        isNewSong\r\n      />\r\n      <SongList\r\n        listOfSongs={popularSongs}\r\n        source={{\r\n          source: `/authors/${authorsData.uid}`,\r\n          name: authorsData.displayName,\r\n          image: authorsData.photoURL,\r\n          songsList: popularSongs,\r\n        }}\r\n        title={\"Popular Songs\"}\r\n        showListens\r\n        showCount\r\n        isHorizontal\r\n      />\r\n    </div>\r\n  ) : (\r\n    <SongList\r\n      listOfSongs={popularSongs}\r\n      source={{\r\n        source: `/authors/${authorsData.uid}`,\r\n        name: authorsData.displayName + \"'s Library\",\r\n        image: authorsData.photoURL,\r\n        songsList: popularSongs,\r\n      }}\r\n      title={authorsData.displayName + \"'s Library\"}\r\n      showListens\r\n      showCount\r\n      isHorizontal\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../../contexts/AuthContext\";\r\n\r\nimport { AddToListCircle } from \"../../../../shared/ui/molecules/add-to-list-circle\";\r\nimport saveSearchHistory from \"../../../search/lib/save-search-history\";\r\n\r\nexport const AuthorItemBig = ({\r\n  data,\r\n  listOfChosenAuthors,\r\n  setListOfChosenAuthors,\r\n  shouldSaveSearchHistory = false,\r\n}) => {\r\n  const { currentUser } = useAuth();\r\n\r\n  const handleSaveSearchHistory = () => {\r\n    if (shouldSaveSearchHistory)\r\n      saveSearchHistory(currentUser.uid, data.uid, \"users\");\r\n  };\r\n\r\n  return (\r\n    <Link\r\n      to={`/authors/${data.uid}`}\r\n      className=\"AuthorItemBig\"\r\n      onClick={handleSaveSearchHistory}\r\n    >\r\n      <AddToListCircle\r\n        listOfChosenItems={listOfChosenAuthors}\r\n        setListOfChosenItems={setListOfChosenAuthors}\r\n        itemId={data.uid}\r\n      />\r\n      <div>\r\n        <div\r\n          className=\"AuthorItemBigImage\"\r\n          style={{ backgroundImage: `url(${data.photoURL})` }}\r\n        ></div>\r\n        <h3>{data.displayName}</h3>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { FiChevronLeft, FiChevronRight } from \"react-icons/fi\";\r\nimport { AuthorItemBig } from \"../../features/author/ui/molecules/author-item-big\";\r\n\r\nexport const AuthorsList = ({\r\n  listOfAuthors,\r\n  title = \"\",\r\n  listOfChosenAuthors,\r\n  setListOfChosenAuthors,\r\n  saveSearchHistory,\r\n}) => {\r\n  const [scrollLeft, setScrollLeft] = useState(0);\r\n  const wrapperRef = useRef(null);\r\n  const [shouldRenderRightArrow, setShouldRenderRightArrow] = useState(false);\r\n  function scrollToLeft() {\r\n    const prev = wrapperRef.current.scrollLeft;\r\n    wrapperRef.current.scrollLeft = prev - 200;\r\n    setScrollLeft(prev - 200);\r\n  }\r\n  function scrollToRight() {\r\n    const prev = wrapperRef.current.scrollLeft;\r\n    wrapperRef.current.scrollLeft = prev + 200;\r\n    setScrollLeft(prev + 200);\r\n  }\r\n  useEffect(() => {\r\n    if (listOfAuthors.length > 0) {\r\n      const scrollBiggerThanScreen =\r\n        wrapperRef.current.scrollWidth > wrapperRef.current.offsetWidth;\r\n      if (scrollBiggerThanScreen) setShouldRenderRightArrow(true);\r\n    }\r\n  }, [listOfAuthors]);\r\n  return listOfAuthors.length > 0 ? (\r\n    <div className=\"AuthorsList\">\r\n      {title.length !== 0 ? <h2>{title}</h2> : null}\r\n      <div\r\n        className=\"authorsWrapper\"\r\n        ref={wrapperRef}\r\n        onScroll={(e) => setScrollLeft(e.target.scrollLeft)}\r\n      >\r\n        {listOfAuthors.map((author) => {\r\n          return (\r\n            <AuthorItemBig\r\n              data={author}\r\n              key={author.uid}\r\n              listOfChosenAuthors={listOfChosenAuthors}\r\n              setListOfChosenAuthors={setListOfChosenAuthors}\r\n              shouldSaveSearchHistory={saveSearchHistory}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"authorsShiftButtons\">\r\n        <button\r\n          onClick={scrollToLeft}\r\n          style={scrollLeft <= 0 ? { visibility: \"hidden\", opacity: \"0\" } : {}}\r\n        >\r\n          <FiChevronLeft />\r\n        </button>\r\n        <button\r\n          onClick={scrollToRight}\r\n          style={\r\n            shouldRenderRightArrow &&\r\n            wrapperRef.current !== null &&\r\n            wrapperRef.current.scrollWidth - wrapperRef.current.offsetWidth !==\r\n              scrollLeft\r\n              ? {}\r\n              : { visibility: \"hidden\", opacity: \"0\" }\r\n          }\r\n        >\r\n          <FiChevronRight />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n","import { firestore } from \"../../firebase\"\r\n\r\nfunction findSimilarArtistsNames(authorsSongsArr, authorsData, setSimilarAuthors) {\r\n\tlet peopleArray = []\r\n\tauthorsSongsArr.forEach((song) => {\r\n\t\tlet newAuthors = song.authors\r\n\t\tif (newAuthors.length !== 0) {\r\n\t\t\tpeopleArray.push(newAuthors)\r\n\t\t}\r\n\t})\r\n\tpeopleArray = peopleArray.flat()\r\n\tconst uniqueAuthorsSet = new Set(peopleArray.map(people=>people.uid).filter(id=>id!==authorsData.uid))\r\n\tconst uniqueAuthorsIdsArray = Array.from(uniqueAuthorsSet)\r\n\tconst uniqueAuthorsDataArray = []\r\n\tfor (let i = 0; i < uniqueAuthorsIdsArray.length; i++) {\r\n\t\tfor (let j = 0; j < peopleArray.length; j++) {\r\n\t\t\tif(uniqueAuthorsIdsArray[i] === peopleArray[j].uid){\r\n\t\t\t\tuniqueAuthorsDataArray.push(peopleArray[j])\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\tsetSimilarAuthors(uniqueAuthorsDataArray)\r\n\treturn uniqueAuthorsDataArray\r\n}\r\n\r\nexport default async function findSimilarArtists(authorsData, setSimilarAuthors) {\r\n\tif (authorsData !== undefined && authorsData.ownSongs !== undefined && authorsData.ownSongs.length !== 0) {\r\n\t\tconst authorsSongsArray = []\r\n\t\tauthorsData.ownSongs.forEach(async (songId, index)=>{\r\n\t\t\tconst songData = (await firestore.collection('songs').doc(songId).get()).data()\r\n\t\t\tauthorsSongsArray.push(songData)\r\n\t\t\tif(index === authorsData.ownSongs.length - 1){\r\n\t\t\t\treturn findSimilarArtistsNames(authorsSongsArray, authorsData, setSimilarAuthors)\r\n\t\t\t}\r\n\t\t})\r\n\r\n\r\n\t}\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { AuthorsList } from \"../../../../components/Lists/AuthorsList\";\r\nimport findSimilarArtists from \"../../../../shared/lib/find-similar-artists\";\r\n\r\nexport const SimilarArtists = ({ data }) => {\r\n  const [similarArtists, setSimilarArtists] = useState([]);\r\n\r\n  useEffect(() => {\r\n    findSimilarArtists(data, setSimilarArtists);\r\n  }, [data]);\r\n  return (\r\n    <AuthorsList listOfAuthors={similarArtists} title={\"Similar Authors\"} />\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useRouteMatch } from \"react-router\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AddWindow } from \"../../components/AdminAndAuthor/AddWindow\";\r\nimport { Header } from \"../../components/AuthorPage/Header\";\r\nimport { PersonTinyList } from \"../../components/AuthorPage/PersonTinyList\";\r\nimport { Playlists } from \"../../components/AuthorPage/Playlists\";\r\nimport { ContentContainer } from \"../../components/Containers/ContentContainer\";\r\nimport { LoadingCircle } from \"../../components/Loading/LoadingCircle\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useModal } from \"../../contexts/ModalContext\";\r\nimport { FriendRequest } from \"../../features/author/ui/molecules/friend-request\";\r\nimport { TopSongs } from \"../../features/author/ui/molecules/top-songs\";\r\nimport { SimilarArtists } from \"../../features/author/ui/organisms/similar-artists\";\r\nimport { firestore } from \"../../firebase\";\r\nimport \"../../styles/AuthorPage.css\";\r\n\r\nconst AuthorPage = () => {\r\n  const match = useRouteMatch(\"/authors/:authorId\");\r\n  const { currentUser } = useAuth();\r\n  const [headerColors, setHeaderColors] = useState([]);\r\n  const { authorId } = match.params;\r\n  const [authorsData, setAuthorsData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const history = useHistory();\r\n  const { openBottomMessage } = useModal();\r\n  async function fetchAuthorsData() {\r\n    const response = firestore.collection(\"users\").doc(authorId);\r\n    response\r\n      .get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          setAuthorsData(doc.data());\r\n          setHeaderColors(doc.data().imageColors);\r\n          setLoading(false);\r\n        } else {\r\n          history.push(\"/not-found\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error getting document:\", error);\r\n        openBottomMessage(\"Failed to load author's data\", \"failure\");\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchAuthorsData();\r\n  }, [authorId]);\r\n  return (\r\n    <>\r\n      <div className=\"AuthorPage\" style={{ animation: \"zoomIn .2s forwards\" }}>\r\n        {loading ? (\r\n          <LoadingCircle />\r\n        ) : (\r\n          <>\r\n            <Header\r\n              data={authorsData}\r\n              headerColors={headerColors}\r\n              setHeaderColors={setHeaderColors}\r\n            />\r\n            <ContentContainer\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                minHeight: \"100%\",\r\n                borderRadius: \"25px 25px 0 0\",\r\n                flex: \"auto\",\r\n                position: \"relative\",\r\n                overflow: \"hidden\",\r\n                boxShadow: \"0px 0px 100px #060606\",\r\n              }}\r\n            >\r\n              <div\r\n                className=\"content-background\"\r\n                style={{\r\n                  background: `linear-gradient(360deg, black, ${headerColors[0]})`,\r\n                }}\r\n              ></div>\r\n              {currentUser.uid === authorsData.uid ? <FriendRequest /> : null}\r\n              <AddWindow data={authorsData} />\r\n              <TopSongs\r\n                author={authorId}\r\n                authorsData={authorsData}\r\n                headerColors={headerColors}\r\n              />\r\n              {authorsData.friends && !authorsData.isAuthor ? (\r\n                <PersonTinyList data={authorsData} title={\"Friends\"} />\r\n              ) : null}\r\n              <Playlists\r\n                authorsData={authorsData}\r\n                headerColors={headerColors}\r\n              />\r\n              {authorsData.isAuthor ? (\r\n                <SimilarArtists data={authorsData} />\r\n              ) : null}\r\n            </ContentContainer>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthorPage;\r\n","import React from \"react\";\r\nexport const AmountOfUnseenMessages = ({ amountOfUnseen }) => {\r\n  return (\r\n    amountOfUnseen !== 0 && (\r\n      <div className=\"AmountOfUnseenMessages\">{amountOfUnseen}</div>\r\n    )\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nexport const SeenByCircle = ({listOfSeen}) => {\r\n\treturn (\r\n\t\t<div className = \"SeenByCircle\" style = {listOfSeen !== undefined? listOfSeen.length <= 1?{opacity:'1', visibility:'visible'}:{}:null}></div>\r\n\t)\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport { useAuth } from \"../../../../contexts/AuthContext\";\r\nimport { SmallImages } from \"../../../../components/AuthorPage/SmallImages\";\r\nexport const TypingAnimation = ({ typingPeople }) => {\r\n  const [typingPeopleData, setTypingPeopleData] = useState([]);\r\n  const { currentUser } = useAuth();\r\n  useEffect(() => {\r\n    setTypingPeopleData([]);\r\n    typingPeople.map(async (personId) => {\r\n      const personData = (\r\n        await firestore.collection(\"users\").doc(personId).get()\r\n      ).data();\r\n      if (personData.uid !== currentUser.uid)\r\n        setTypingPeopleData((prev) => [...prev, personData]);\r\n    });\r\n  }, [typingPeople]);\r\n  return typingPeopleData.length > 0 ? (\r\n    <div className=\"typingWrapper\">\r\n      <SmallImages\r\n        imagesList={typingPeopleData.map((person) => person.photoURL)}\r\n        borderColor={\"var(--navItemColor)\"}\r\n      />\r\n      <div className=\"TypingAnimation\">\r\n        <span className=\"typingCircle\"></span>\r\n        <span className=\"typingCircle\"></span>\r\n        <span className=\"typingCircle\"></span>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BiAlbum } from \"react-icons/bi\";\r\nimport { BsDot } from \"react-icons/bs\";\r\nimport { FiMusic, FiUser } from \"react-icons/fi\";\r\nimport { useAuth } from \"../../../../contexts/AuthContext\";\r\nimport { SeenByCircle } from \"../../../dialogue/ui/atoms/seen-by-circle\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport shortWord from \"../../../../functions/other/shortWord\";\r\nimport { TypingAnimation } from \"../../../dialogue/ui/atoms/typing-animation\";\r\n\r\nexport const LastSentMessage = ({\r\n  sender,\r\n  isGroup,\r\n  message,\r\n  showUnseenCircle = false,\r\n  messageLen = 30,\r\n  chatId,\r\n}) => {\r\n  const { currentUser } = useAuth();\r\n  const [lastAttachedItem, setLastAttachedItem] = useState(\"\");\r\n  const [shouldPutDot, setShouldPutDot] = useState(false);\r\n  const [lastMessage, setLastMessage] = useState(\"\");\r\n  const messageIcons = [null, <FiMusic />, <BiAlbum />, <FiUser />];\r\n  const [lastIcon, setLastIcon] = useState(0);\r\n  const [typing, setTyping] = useState(false);\r\n\r\n  useEffect(() => {\r\n    firestore\r\n      .collection(\"chats\")\r\n      .where(\"participants\", \"array-contains\", currentUser.uid)\r\n      .onSnapshot((snapshot) => {\r\n        snapshot.docChanges().map(async (doc) => {\r\n          const chatData = doc.doc.data();\r\n          if (doc.type === \"modified\" && chatData.messages.length) {\r\n            if (chatData.typing.length) setTyping(true);\r\n            else setTyping(false);\r\n          }\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  async function findWhatToWriteUnderName() {\r\n    if (message !== undefined) {\r\n      const lastAttachedItem = message;\r\n      setLastMessage((str) => (str += lastAttachedItem.message));\r\n      setShouldPutDot(lastAttachedItem.message.length !== 0);\r\n      if (lastAttachedItem.attachedSongs.length) {\r\n        const songName = (\r\n          await firestore\r\n            .collection(\"songs\")\r\n            .doc(lastAttachedItem.attachedSongs[0])\r\n            .get()\r\n        ).data().name;\r\n        setLastIcon(1);\r\n        setLastAttachedItem((str) => (str += songName));\r\n      }\r\n      if (lastAttachedItem.attachedAlbums.length) {\r\n        const playlistName = await firestore\r\n          .collection(\"playlists\")\r\n          .doc(lastAttachedItem.attachedAlbums[0])\r\n          .get();\r\n        if (playlistName.exists)\r\n          setLastAttachedItem((str) => (str += playlistName.data().name));\r\n        else setLastAttachedItem((str) => (str += \"Deleted Album \"));\r\n        setLastIcon(2);\r\n      }\r\n      if (lastAttachedItem.attachedAuthors.length) {\r\n        const authorName = (\r\n          await firestore\r\n            .collection(\"users\")\r\n            .doc(lastAttachedItem.attachedAuthors[0])\r\n            .get()\r\n        ).data().displayName;\r\n        setLastIcon(3);\r\n        setLastAttachedItem((str) => (str += authorName));\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    findWhatToWriteUnderName();\r\n  }, []);\r\n  return !typing ? (\r\n    <div className=\"messageShowOutside\">\r\n      <span\r\n        style={\r\n          message.sender === currentUser.uid || isGroup\r\n            ? { marginRight: \"5px\" }\r\n            : {}\r\n        }\r\n      >\r\n        {\" \"}\r\n        {`${\r\n          message.sender === currentUser.uid\r\n            ? \"You: \"\r\n            : isGroup\r\n            ? sender?.displayName + \": \"\r\n            : \"\"\r\n        }`}\r\n      </span>\r\n      {shortWord(lastMessage, messageLen)}\r\n      {shouldPutDot && lastAttachedItem.length ? <BsDot /> : null}\r\n      {messageIcons[lastIcon]}\r\n      {lastAttachedItem}\r\n      {showUnseenCircle && <SeenByCircle listOfSeen={message.seenBy} />}\r\n    </div>\r\n  ) : (\r\n    <TypingAnimation typingPeople={[sender.uid]} />\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../../contexts/AuthContext\";\r\nimport { AmountOfUnseenMessages } from \"../atoms/amount-of-unseen-messages\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport displayDate from \"../../../../functions/display/displayDate\";\r\nimport { IsUserOnlineCircle } from \"../../../../components/Basic/IsUserOnlineCircle\";\r\nimport { LastSentMessage } from \"../molecules/last-sent-message\";\r\nimport { amountOfUnseenMessages } from \"../../lib/amount-of-unseen-messages\";\r\n\r\nexport const ChatItem = ({ chatData }) => {\r\n  const { currentUser } = useAuth();\r\n  const { chatName, chatImage, participants, messages } = chatData;\r\n  const [otherPerson, setOtherPerson] = useState({});\r\n  const [amountOfUnseen, setAmountOfUnseen] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setAmountOfUnseen(amountOfUnseenMessages(messages, currentUser));\r\n  }, []);\r\n\r\n  async function fetchOtherPerson() {\r\n    if (chatName === \"\") {\r\n      const otherPersonId = participants.find(\r\n        (personId) => personId !== currentUser.uid\r\n      );\r\n      const person = (\r\n        await firestore.collection(\"users\").doc(otherPersonId).get()\r\n      ).data();\r\n      setOtherPerson(person);\r\n    } else {\r\n      const otherPersonId = messages[messages.length - 1].sender;\r\n      const person = (\r\n        await firestore.collection(\"users\").doc(otherPersonId).get()\r\n      ).data();\r\n      console.log(person, chatName);\r\n      setOtherPerson(person);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchOtherPerson();\r\n  }, []);\r\n  return chatData && !!otherPerson?.uid ? (\r\n    <Link to={`/chat/${chatData.id}`}>\r\n      <div className={\"ChatItem \" + (amountOfUnseen > 0 ? \"unseen\" : \"\")}>\r\n        <div className=\"chatItemImage\">\r\n          <img loading=\"lazy\" src={chatImage || otherPerson.photoURL} alt=\"\" />\r\n        </div>\r\n        <IsUserOnlineCircle userUID={otherPerson.uid} />\r\n        <div style={{ width: \"100%\" }}>\r\n          <h4\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <span>{chatName || otherPerson.displayName}</span>\r\n            <div>\r\n              {messages.length ? (\r\n                <span\r\n                  style={{ opacity: \".6\", fontWeight: \"500\", fontSize: \".8em\" }}\r\n                >\r\n                  {displayDate(\r\n                    messages[messages.length - 1].sentTime,\r\n                    chatData &&\r\n                      Date.now() -\r\n                        new Date(\r\n                          messages[messages.length - 1].sentTime\r\n                        ).getTime() >\r\n                        86000000\r\n                      ? 0\r\n                      : 2\r\n                  )}\r\n                </span>\r\n              ) : null}\r\n              <AmountOfUnseenMessages amountOfUnseen={amountOfUnseen} />\r\n            </div>\r\n          </h4>\r\n          {messages.length ? (\r\n            <p\r\n              style={\r\n                messages[messages.length - 1].sender !== currentUser.uid\r\n                  ? { color: \"#fff\" }\r\n                  : {}\r\n              }\r\n            >\r\n              {\r\n                <LastSentMessage\r\n                  sender={otherPerson}\r\n                  isGroup={chatName.length}\r\n                  message={messages[messages.length - 1]}\r\n                  showUnseenCircle\r\n                />\r\n              }\r\n            </p>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  ) : null;\r\n};\r\n","export function amountOfUnseenMessages(messages, currentUser) {\r\n\treturn messages.reduce((accum, message) => {\r\n\t\tif (message.sender !== currentUser.uid) {\r\n\t\t\tif (message.seenBy !== undefined) {\r\n\t\t\t\tif (!message.seenBy.includes(currentUser.uid)) {\r\n\t\t\t\t\treturn ++accum\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn accum\r\n\t}, 0)\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useAuth } from \"../../../../contexts/AuthContext\";\r\nimport { useModal } from \"../../../../contexts/ModalContext\";\r\nimport { useSong } from \"../../../../contexts/SongContext\";\r\nimport getUID from \"../../../../functions/other/getUID\";\r\nimport { createChat } from \"../../../../shared/lib/create-—Åhat\";\r\nimport { findChatURL } from \"../../../../shared/lib/find-chat-url\";\r\n\r\nconst useCreateChat = () => {\r\n  const { currentUser } = useAuth();\r\n  const { toggleModal } = useModal();\r\n  const { yourFriends } = useSong();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [foundFriends, setFoundFriends] = useState(yourFriends);\r\n  const [chosenFriends, setChosenFriends] = useState([]);\r\n  const [chatCover, setChatCover] = useState(\"\");\r\n  const [chatName, setChatName] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const chatId = getUID();\r\n  const history = useHistory();\r\n  const [shouldCreate, setShouldCreate] = useState(false);\r\n  const [friendChatId, setFriendChatId] = useState(0);\r\n  const [allowedToCreate, setAllowedToCreate] = useState(false);\r\n  useEffect(() => {\r\n    if (chosenFriends.length >= 1) {\r\n      findChatURL(chosenFriends, currentUser, setShouldCreate, setFriendChatId);\r\n    }\r\n  }, [chosenFriends]);\r\n\r\n  useEffect(() => {\r\n    if (chatName.length === 0 || chosenFriends.length === 0) {\r\n      setAllowedToCreate(false);\r\n    } else setAllowedToCreate(true);\r\n    setErrorMessage(\"\");\r\n  }, [chosenFriends.length, chatName]);\r\n\r\n  const handleCreateChat = () => {\r\n    if (shouldCreate) {\r\n      if (allowedToCreate) {\r\n        createChat(\r\n          [currentUser.uid, ...chosenFriends],\r\n          chatId,\r\n          chatName,\r\n          chatCover,\r\n          [currentUser.uid]\r\n        ).then(() => {\r\n          history.push(`/chat/${chatId}`);\r\n          toggleModal();\r\n        });\r\n      } else setErrorMessage(\"Chat has to have a name\");\r\n    } else {\r\n      history.push(`/chat/${friendChatId}`);\r\n      toggleModal();\r\n    }\r\n  };\r\n\r\n  return {\r\n    searchValue,\r\n    setSearchValue,\r\n    foundFriends,\r\n    setFoundFriends,\r\n    chosenFriends,\r\n    setChosenFriends,\r\n    chatName,\r\n    setChatName,\r\n    setChatCover,\r\n    handleCreateChat,\r\n    shouldCreate,\r\n    allowedToCreate,\r\n  };\r\n};\r\n\r\nexport default useCreateChat;\r\n","import React from \"react\";\r\nimport { TinyPersonsList } from \"../../../../components/Lists/TinyPersonsList\";\r\nimport DownloadButton from \"../../../../shared/ui/atoms/download-button\";\r\nimport Input from \"../../../../shared/ui/atoms/input\";\r\nimport SubmitButton from \"../../../../shared/ui/atoms/submit-button\";\r\nimport SearchBar from \"../../../../shared/ui/organisms/search-bar\";\r\nimport useCreateChat from \"../../lib/hooks/use-create-chat\";\r\n\r\nexport const CreateChat = () => {\r\n  const {\r\n    searchValue,\r\n    setSearchValue,\r\n    foundFriends,\r\n    setFoundFriends,\r\n    chosenFriends,\r\n    setChosenFriends,\r\n    chatName,\r\n    setChatName,\r\n    setChatCover,\r\n    handleCreateChat,\r\n    shouldCreate,\r\n    allowedToCreate,\r\n  } = useCreateChat();\r\n\r\n  return (\r\n    <div className=\"CreateChat\">\r\n      <SearchBar\r\n        value={searchValue}\r\n        setValue={setSearchValue}\r\n        setResultAuthorList={setFoundFriends}\r\n        focus\r\n        inputText={\"Search for friends\"}\r\n        defaultSearchMode={\"authors\"}\r\n      />\r\n      <TinyPersonsList\r\n        listOfPeople={foundFriends}\r\n        chosenArray={chosenFriends}\r\n        setChosenArray={setChosenFriends}\r\n        lastSeen\r\n      />\r\n      {chosenFriends.length > 1 && shouldCreate && (\r\n        <>\r\n          <Input\r\n            title=\"Chat name\"\r\n            value={chatName}\r\n            setValue={setChatName}\r\n            placeholder=\"Enter chat name\"\r\n          />\r\n          <DownloadButton\r\n            title={\"Chat image\"}\r\n            text={\"Download chat image\"}\r\n            place={\"chatCovers/\"}\r\n            setItemSrc={setChatCover}\r\n            setImageLocalPath={() => null}\r\n          />\r\n        </>\r\n      )}\r\n      <SubmitButton\r\n        text={shouldCreate ? \"Create Chat\" : \"Go to chat\"}\r\n        action={handleCreateChat}\r\n        isActive={\r\n          chosenFriends.length > 0 &&\r\n          ((shouldCreate && allowedToCreate) || !shouldCreate)\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FiPlus } from \"react-icons/fi\";\r\nimport { ContentContainer } from \"../../components/Containers/ContentContainer\";\r\nimport { LoadingCircle } from \"../../components/Loading/LoadingCircle\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useModal } from \"../../contexts/ModalContext\";\r\nimport { ChatItem } from \"../../features/chats/ui/organisms/chat-item\";\r\nimport { CreateChat } from \"../../features/chats/ui/organisms/create-chat\";\r\nimport { fetchItemList } from \"../../shared/lib/fetch-item-list\";\r\nimport \"../../styles/ChatPage.css\";\r\n\r\nconst ChatPage = () => {\r\n  const [yourChats, setYourChats] = useState([]);\r\n  const { toggleModal, setContent } = useModal();\r\n  const { currentUser } = useAuth();\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    fetchItemList(\r\n      currentUser.chats,\r\n      \"chats\",\r\n      setYourChats,\r\n      (res) =>\r\n        res.sort((a, b) => {\r\n          if (a.messages.length && b.messages.length) {\r\n            return (\r\n              new Date(b.messages[b.messages.length - 1].sentTime).getTime() -\r\n              new Date(a.messages[a.messages.length - 1].sentTime).getTime()\r\n            );\r\n          }\r\n        }),\r\n      () => setLoading(false)\r\n    );\r\n  }, []);\r\n  return (\r\n    <div style={{ animation: \"zoomIn .2s forwards\", minHeight: \"100%\" }}>\r\n      <ContentContainer>\r\n        <div\r\n          style={{\r\n            marginBottom: \"10px\",\r\n            display: \"flex\",\r\n            alignItems: \"start\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <button\r\n            className=\"standartButton\"\r\n            onClick={() => {\r\n              toggleModal();\r\n              setContent(<CreateChat />);\r\n            }}\r\n          >\r\n            <FiPlus />\r\n            Create chat\r\n          </button>\r\n        </div>\r\n        {loading ? (\r\n          <LoadingCircle />\r\n        ) : (\r\n          <div className=\"chatsWrapper\">\r\n            {yourChats.length ? (\r\n              yourChats.map((chat, index) => {\r\n                return <ChatItem chatData={chat} key={index} />;\r\n              })\r\n            ) : (\r\n              <h3>No chats</h3>\r\n            )}\r\n          </div>\r\n        )}\r\n      </ContentContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n","import React from \"react\";\r\nimport displayDate from \"../../../../functions/display/displayDate\";\r\n\r\nexport const DateOnTop = ({ date }) => {\r\n  return <div className=\"DateOnTop\">{displayDate(date)}</div>;\r\n};\r\n","import { firestore } from \"../../../firebase\"\r\nimport { sendMessage } from \"../../../functions/other/sendMessage\"\r\n\r\nconst leaveChat = async (chatId, user) => {\r\n\tconst chatData = (await firestore.collection('chats').doc(chatId).get()).data()\r\n\r\n\tconst newParticipants = chatData.participants.filter((participantId) => participantId !== user.uid)\r\n\tsendMessage(chatId, chatData, \"soundbubble\", `${user.displayName} left the chat`)\r\n\tfirestore.collection('chats').doc(chatId).update({\r\n\t\tparticipants: newParticipants\r\n\t})\r\n}\r\n\r\nexport default leaveChat","import React from \"react\";\r\nimport { FiLogOut, FiX } from \"react-icons/fi\";\r\nimport { Hint } from \"../../../../components/Basic/Hint\";\r\nimport { useAuth } from \"../../../../contexts/AuthContext\";\r\nimport { useModal } from \"../../../../contexts/ModalContext\";\r\nimport Button from \"../../../../shared/ui/atoms/button\";\r\nimport leaveChat from \"../../lib/leave-chat\";\r\nimport { ChatInfo } from \"../organisms/chat-info\";\r\n\r\nconst LeaveChatButton = ({ chat, user }) => {\r\n  const { currentUser } = useAuth();\r\n  const { openConfirm, closeConfirm, setContent } = useModal();\r\n  const isCurrentUserLeaving = currentUser.uid === user.uid;\r\n  return (\r\n    <>\r\n      <Hint text={isCurrentUserLeaving ? \"quit chat\" : \"kick\"} />\r\n      <Button\r\n        onClick={() =>\r\n          openConfirm(\r\n            `Are you sure you want to ${\r\n              isCurrentUserLeaving ? \"leave\" : `kick ${user.displayName} `\r\n            } from this chat?`,\r\n            \"Yes\",\r\n            \"No\",\r\n            () => {\r\n              leaveChat(chat.id, user);\r\n              closeConfirm();\r\n              setContent(<ChatInfo data={chat} />);\r\n            }\r\n          )\r\n        }\r\n        icon={isCurrentUserLeaving ? <FiLogOut /> : <FiX />}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeaveChatButton;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { AlbumList } from \"../../../../components/Lists/AlbumList\";\r\nimport { AuthorsList } from \"../../../../components/Lists/AuthorsList\";\r\nimport { SongList } from \"../../../../components/Lists/SongList\";\r\nimport { LoadingCircle } from \"../../../../components/Loading/LoadingCircle\";\r\nimport { Slider } from \"../../../../components/Tools/Slider\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport { fetchItemList } from \"../../../../shared/lib/fetch-item-list\";\r\nexport const AttachmentList = ({ chatId }) => {\r\n  const [attachmentList, setAttachmentList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [sliderCurrentPage, setSliderCurrentPage] = useState(0);\r\n  const attachmentContent = [\r\n    <SongList\r\n      listOfSongs={attachmentList}\r\n      source={{\r\n        source: `/chat/${chatId}`,\r\n        name: `Chat with ${chatId}`,\r\n        image: \"\",\r\n        songsList: attachmentList,\r\n      }}\r\n    />,\r\n    <AuthorsList listOfAuthors={attachmentList} />,\r\n    <AlbumList listOfAlbums={attachmentList} loading={loading} />,\r\n  ];\r\n  async function fetchAttachedData(attachedType, firebaseCollection) {\r\n    const chatData = await firestore.collection(\"chats\").doc(chatId).get();\r\n    chatData.data().messages.forEach((message) => {\r\n      if (message[attachedType].length > 0) {\r\n        fetchItemList(\r\n          message[attachedType],\r\n          firebaseCollection,\r\n          setAttachmentList,\r\n          (res) => res,\r\n          () => setLoading(false),\r\n          undefined,\r\n          1\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    switch (sliderCurrentPage) {\r\n      case 0:\r\n        fetchAttachedData(\"attachedSongs\", \"songs\").then(() =>\r\n          setLoading(false)\r\n        );\r\n        break;\r\n      case 1:\r\n        fetchAttachedData(\"attachedAuthors\", \"users\").then(() =>\r\n          setLoading(false)\r\n        );\r\n        break;\r\n      case 2:\r\n        fetchAttachedData(\"attachedAlbums\", \"playlists\").then(() =>\r\n          setLoading(false)\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [sliderCurrentPage]);\r\n\r\n  useEffect(() => {\r\n    setAttachmentList([]);\r\n  }, [chatId]);\r\n\r\n  return (\r\n    <div className=\"AttachmentList\">\r\n      <Slider\r\n        pages={[\"Songs\", \"Authors\", \"Playlists\"]}\r\n        currentPage={sliderCurrentPage}\r\n        setCurrentPage={(page) => {\r\n          setSliderCurrentPage(page);\r\n          setLoading(true);\r\n          setAttachmentList([]);\r\n        }}\r\n      />\r\n      {loading ? (\r\n        <LoadingCircle />\r\n      ) : attachmentList.length > 0 ? (\r\n        attachmentContent[sliderCurrentPage]\r\n      ) : (\r\n        <h2>Nothing here</h2>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","const filterArrayOfObjectsWithArray = (whatToFilter, withWhatToFilter, filterParametr = 'uid', isInverted = true) => {\r\n\treturn isInverted ? whatToFilter.filter(\r\n\t\t(item) => !withWhatToFilter.includes(item[filterParametr])\r\n\t) : whatToFilter.filter(\r\n\t\t(item) => withWhatToFilter.includes(item[filterParametr])\r\n\t)\r\n}\r\n\r\nexport default filterArrayOfObjectsWithArray;","import { firestore } from \"../../../firebase\"\r\nimport { sendMessage } from \"../../../functions/other/sendMessage\"\r\n\r\nconst addPeopleToChat = async (chatId, people, setLoading, setCompleted) => {\r\n\tsetLoading(true)\r\n\tsetCompleted(false)\r\n\tconst chatData = (await firestore.collection('chats').doc(chatId).get()).data()\r\n\tconst newParticipants = chatData.participants\r\n\tpeople.forEach(person => newParticipants.push(person.uid));\r\n\r\n\tfirestore.collection('chats').doc(chatId).update({\r\n\t\tparticipants: newParticipants\r\n\t})\r\n\tsendMessage(chatId, chatData, \"soundbubble\", `${people.map(({ displayName }) => displayName)} entered the chat`)\r\n\tsetLoading(false)\r\n\tsetCompleted(true)\r\n}\r\n\r\nexport default addPeopleToChat","import React, { useState } from \"react\";\r\nimport { TinyPersonsList } from \"../../../../components/Lists/TinyPersonsList\";\r\nimport { useSong } from \"../../../../contexts/SongContext\";\r\nimport filterArrayWithArray from \"../../../../functions/other/filterArrayWithArray\";\r\nimport filterArrayOfObjectsWithArray from \"../../../../shared/lib/filter-array-of-objects-with-array\";\r\nimport SubmitButton from \"../../../../shared/ui/atoms/submit-button\";\r\nimport SearchBar from \"../../../../shared/ui/organisms/search-bar\";\r\nimport addPeopleToChat from \"../../lib/add-people-to-chat\";\r\n\r\nconst AddPeopleToChat = ({ chat }) => {\r\n  const { yourFriends } = useSong();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [foundFriends, setFoundFriends] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [completed, setCompleted] = useState(false);\r\n  const filteredFriends = filterArrayOfObjectsWithArray(\r\n    yourFriends,\r\n    chat.participants\r\n  );\r\n  const [chosenFriends, setChosenFriends] = useState([]);\r\n  return (\r\n    <div>\r\n      <SearchBar\r\n        value={searchValue}\r\n        setValue={setSearchValue}\r\n        setResultAuthorList={setFoundFriends}\r\n        defaultSearchMode=\"authors\"\r\n        defaultAuthorsListValue={filteredFriends}\r\n      />\r\n      <TinyPersonsList\r\n        listOfPeople={foundFriends}\r\n        chosenArray={chosenFriends}\r\n        setChosenArray={setChosenFriends}\r\n        lastSeen\r\n      />\r\n      {!!chosenFriends.length && (\r\n        <SubmitButton\r\n          text={`Add ${chosenFriends.length} friends`}\r\n          action={() =>\r\n            addPeopleToChat(\r\n              chat.id,\r\n              filterArrayOfObjectsWithArray(\r\n                yourFriends,\r\n                chosenFriends,\r\n                \"uid\",\r\n                false\r\n              ),\r\n              setLoading,\r\n              setCompleted\r\n            )\r\n          }\r\n          isLoading={loading}\r\n          completed={completed}\r\n          setCompleted={setCompleted}\r\n          bottomMessage={`${chosenFriends.length} friends have been added to ${chat.chatName}`}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPeopleToChat;\r\n","import { useEffect, useState } from \"react\";\r\nimport { ColorExtractor } from \"react-color-extractor\";\r\nimport { FiSettings, FiUserPlus } from \"react-icons/fi\";\r\nimport { ImAttachment } from \"react-icons/im\";\r\nimport { MdModeEdit } from \"react-icons/md\";\r\nimport { RiVolumeUpLine } from \"react-icons/ri\";\r\nimport { PersonTiny } from \"../../../../components/Basic/PersonTiny\";\r\nimport { LoadingCircle } from \"../../../../components/Loading/LoadingCircle\";\r\nimport { Slider } from \"../../../../components/Tools/Slider\";\r\nimport { useAuth } from \"../../../../contexts/AuthContext\";\r\nimport { useModal } from \"../../../../contexts/ModalContext\";\r\nimport { firestore, storage } from \"../../../../firebase\";\r\nimport shortWord from \"../../../../functions/other/shortWord\";\r\nimport { fetchItemList } from \"../../../../shared/lib/fetch-item-list\";\r\nimport Button from \"../../../../shared/ui/atoms/button\";\r\nimport Input from \"../../../../shared/ui/atoms/input\";\r\nimport LeaveChatButton from \"../atoms/leave-chat-button\";\r\nimport { AttachmentList } from \"../molecules/attachment-list\";\r\nimport AddPeopleToChat from \"./add-people-to-chat\";\r\n\r\nexport const ChatInfo = ({ data }) => {\r\n  const { currentUser } = useAuth();\r\n  const [participants, setParticipants] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [chatNameValue, setChatNameValue] = useState(data.chatName);\r\n  const [newChatPhoto, setNewChatPhoto] = useState(data.chatImage);\r\n  const [newImageLocalPath, setNewImageLocalPath] = useState(\"\");\r\n  const [newImageColors, setNewImageColors] = useState(data.imageColors || []);\r\n  const { setContent } = useModal();\r\n  const [participantsPage, setParticipantsPage] = useState(0);\r\n  const [showUpdateBtn, setShowUpdateBtn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchItemList(\r\n      data.participants,\r\n      \"users\",\r\n      setParticipants,\r\n      (res) => res,\r\n      () => setLoading(false)\r\n    );\r\n  }, [data.id]);\r\n  useEffect(() => {\r\n    if (\r\n      chatNameValue.trim() !== data.chatName.trim() ||\r\n      newChatPhoto !== data.chatImage\r\n    ) {\r\n      setShowUpdateBtn(true);\r\n    } else setShowUpdateBtn(false);\r\n  }, [chatNameValue, newChatPhoto]);\r\n\r\n  useEffect(() => {\r\n    setChatNameValue(data.chatName);\r\n  }, [data.id]);\r\n\r\n  useEffect(() => {\r\n    setChatNameValue(data.chatName);\r\n    setNewChatPhoto(data.chatImage);\r\n  }, [data.chatName, data.chatImage]);\r\n\r\n  function updateChatInfo() {\r\n    firestore.collection(\"chats\").doc(data.id).update({\r\n      chatName: chatNameValue,\r\n      chatImage: newChatPhoto,\r\n      imageColors: newImageColors,\r\n    });\r\n  }\r\n\r\n  async function onFileChange(e, place, setFunc) {\r\n    const file = e.target.files[0];\r\n    setNewImageLocalPath(URL.createObjectURL(file));\r\n    const storageRef = storage.ref();\r\n    const fileRef = storageRef.child(place + file.name);\r\n    await fileRef.put(file);\r\n    setFunc(await fileRef.getDownloadURL());\r\n  }\r\n  return (\r\n    <div className=\"ChatInfo\">\r\n      <ColorExtractor\r\n        src={newImageLocalPath}\r\n        getColors={(colors) => setNewImageColors(colors)}\r\n      />\r\n      <div className=\"chatInfoImageAndName\">\r\n        <div className=\"chatInfoImage\">\r\n          <label className=\"changePhoto\">\r\n            <MdModeEdit />\r\n            Change photo\r\n            <input\r\n              type=\"file\"\r\n              style={{ display: \"none\" }}\r\n              onChange={(e) => onFileChange(e, \"chatCovers/\", setNewChatPhoto)}\r\n            />\r\n          </label>\r\n          <img loading=\"lazy\" src={newChatPhoto} alt=\"\" />\r\n        </div>\r\n        <div>\r\n          <Input\r\n            value={chatNameValue}\r\n            setValue={setChatNameValue}\r\n            placeholder={\"Enter chat name\"}\r\n            required\r\n          />\r\n          <div className=\"chatInfoButtons\">\r\n            <button className=\"chatInfoButton\">\r\n              <FiSettings />\r\n              Settings\r\n            </button>\r\n            <button\r\n              className=\"chatInfoButton\"\r\n              onClick={() => setContent(<AttachmentList chatId={data.id} />)}\r\n            >\r\n              <ImAttachment />\r\n              {shortWord(\"Attachments\", 7)}\r\n            </button>\r\n            <button className=\"chatInfoButton\">\r\n              <RiVolumeUpLine />\r\n              Sound\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {showUpdateBtn ? (\r\n          <button className=\"standartButton\" onClick={updateChatInfo}>\r\n            Update Chat\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <h4>Chat participants</h4>\r\n        <Button\r\n          text={\"Add\"}\r\n          icon={<FiUserPlus />}\r\n          onClick={() => setContent(<AddPeopleToChat chat={data} />)}\r\n        />\r\n      </div>\r\n      <Slider\r\n        pages={[\"All participants\", \"Administrators\"]}\r\n        currentPage={participantsPage}\r\n        setCurrentPage={setParticipantsPage}\r\n      />\r\n      {!loading ? (\r\n        participants.map((person) => {\r\n          if (participantsPage === 1) {\r\n            if (data.admins.includes(person.uid))\r\n              return <PersonTiny data={person} key={person.uid} lastSeen />;\r\n          } else\r\n            return (\r\n              <PersonTiny\r\n                data={person}\r\n                key={person.uid}\r\n                lastSeen\r\n                rightButton={\r\n                  person.uid === currentUser.uid ? (\r\n                    <LeaveChatButton chat={data} user={currentUser} />\r\n                  ) : data.admins.includes(currentUser.uid) ? (\r\n                    <LeaveChatButton chat={data} user={person} />\r\n                  ) : null\r\n                }\r\n              />\r\n            );\r\n        })\r\n      ) : (\r\n        <LoadingCircle />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { firestore } from \"../../../../firebase\";\r\n\r\nexport const WallpaperItem = ({ chatId, image, currentWallpaper }) => {\r\n  function changeChatWallpaper() {\r\n    firestore.collection(\"chats\").doc(chatId).update({\r\n      wallpaper: image,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"WallpaperItem \" + (image === currentWallpaper ? \"active\" : \"\")\r\n      }\r\n      onClick={changeChatWallpaper}\r\n      style={\r\n        image === \"undefined\" ? { background: \"var(--playlistsColor)\" } : {}\r\n      }\r\n    >\r\n      {image !== \"undefined\" ? <img loading=\"lazy\" src={image} alt=\"\" /> : null}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { LoadingCircle } from \"../../../../components/Loading/LoadingCircle\";\r\nimport { useFetchFirebaseData } from \"../../../../hooks/fetchFirebaseData\";\r\nimport { WallpaperItem } from \"../atoms/wallpaper-item\";\r\n\r\nexport const Wallpapers = ({ chatId, currentWallpaper }) => {\r\n  const [wallpaperList, setWallpaperList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  useFetchFirebaseData(\r\n    setLoading,\r\n    \"chatWallpapers\",\r\n    undefined,\r\n    setWallpaperList\r\n  );\r\n  return !loading ? (\r\n    <div className=\"Wallpapers\">\r\n      <h2>Wallpapers</h2>\r\n      <div className=\"wallpapreWrapper\">\r\n        <WallpaperItem chatId={chatId} image={\"undefined\"} />\r\n        {wallpaperList.map((wallpaper, index) => {\r\n          return (\r\n            <WallpaperItem\r\n              chatId={chatId}\r\n              image={wallpaper.image}\r\n              key={wallpaper.id}\r\n              currentWallpaper={currentWallpaper}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <LoadingCircle />\r\n  );\r\n};\r\n","import { useEffect } from 'react'\r\nimport { firestore } from '../firebase'\r\n\r\nexport const useFetchFirebaseData = (setLoading, collection, list, setState, sortCondition, whereCondFP, whereCondSP, whereCondTP, deps = []) => {\r\n\r\n\tasync function fetchData() {\r\n\t\tconst tempArray = []\r\n\t\tif (list === undefined) {\r\n\t\t\tif (whereCondFP !== undefined) {\r\n\t\t\t\tconst items = await firestore.collection(collection).where(whereCondFP, whereCondSP, whereCondTP).get()\r\n\t\t\t\titems.docs.forEach(itemData => {\r\n\t\t\t\t\ttempArray.push(itemData.data())\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t\r\n\t\t\t\tconst items = await firestore.collection(collection).get()\r\n\t\t\t\titems.docs.forEach(itemData => {\r\n\t\t\t\t\ttempArray.push(itemData.data())\r\n\t\t\t\t\t\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tawait list.forEach(async (itemId, index) => {\r\n\t\t\t\tconst itemData = (await firestore.collection(collection).doc(itemId).get()).data()\r\n\t\t\t\ttempArray.push(itemData)\r\n\t\t\t\tif(index === list.length - 1){\r\n\t\t\t\t\tif(sortCondition !== undefined){\r\n\t\t\t\t\t\ttempArray.sort(sortCondition)\r\n\t\t\t\t\t\tsetState(tempArray)\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tsetState(tempArray)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t})\r\n\t\t\tsetLoading(false)\r\n\t\t}\r\n\t\treturn tempArray\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tsetLoading(true)\r\n\t\tsetState([])\r\n\t\tfetchData().then((res)=>{\r\n\t\t\tif(list === undefined) {\r\n\t\t\t\tsetState(res)\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t}\r\n\t\t})\r\n\t}, deps)\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { FiFolder, FiImage, FiInfo, FiMoreHorizontal } from \"react-icons/fi\";\r\nimport { useModal } from \"../../../../contexts/ModalContext\";\r\nimport useOutsideClick from \"../../../../shared/lib/hooks/use-outside-click\";\r\nimport { ChatInfo } from \"../organisms/chat-info\";\r\nimport { AttachmentList } from \"./attachment-list\";\r\nimport { Wallpapers } from \"./wallpapers\";\r\n\r\nexport const ChatMoreBtn = ({ chatId, currentWallpaper, data }) => {\r\n  const [openMoreWindow, setOpenMoreWindow] = useState();\r\n  const { toggleModal, setContent } = useModal();\r\n  const chatMoreBtnRef = useRef(null);\r\n  useOutsideClick(chatMoreBtnRef, setOpenMoreWindow);\r\n  return (\r\n    <div className=\"ChatMoreBtn\" ref={chatMoreBtnRef}>\r\n      <button onClick={() => setOpenMoreWindow(!openMoreWindow)}>\r\n        <FiMoreHorizontal />\r\n      </button>\r\n      <div\r\n        className=\"chatHeaderMenuWindow\"\r\n        style={!openMoreWindow ? { display: \"none\" } : {}}\r\n      >\r\n        {data.participants.length > 2 ? (\r\n          <div\r\n            className=\"chatHeaderMenuWindowItem\"\r\n            onClick={() => {\r\n              toggleModal();\r\n              setContent(<ChatInfo data={data} />);\r\n            }}\r\n          >\r\n            <FiInfo />\r\n            <span>Info</span>\r\n          </div>\r\n        ) : null}\r\n        {/* <div className=\"chatHeaderMenuWindowItem\">\r\n\t\t\t\t\t<FiSearch/>\r\n\t\t\t\t\t<span>Search messages</span>\r\n\t\t\t\t</div> */}\r\n        <div\r\n          className=\"chatHeaderMenuWindowItem\"\r\n          onClick={() => {\r\n            toggleModal();\r\n            setContent(<AttachmentList chatId={chatId} />);\r\n          }}\r\n        >\r\n          <FiFolder />\r\n          <span>Attachments</span>\r\n        </div>\r\n        <div\r\n          className=\"chatHeaderMenuWindowItem\"\r\n          onClick={() => {\r\n            toggleModal();\r\n            setContent(\r\n              <Wallpapers chatId={chatId} currentWallpaper={currentWallpaper} />\r\n            );\r\n          }}\r\n        >\r\n          <FiImage />\r\n          <span>Change wallpaper</span>\r\n        </div>\r\n        {/* <div className=\"chatHeaderMenuWindowItem\">\r\n\t\t\t\t\t<FiTrash/>\r\n\t\t\t\t\t<span>Delete chat</span>\r\n\t\t\t\t</div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LastSeen } from \"../../../../components/Basic/LastSeen\";\r\nimport { ChatMoreBtn } from \"../molecules/chat-more-button\";\r\nimport { useAuth } from \"../../../../contexts/AuthContext\";\r\nimport { useModal } from \"../../../../contexts/ModalContext\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport { ChatInfo } from \"./chat-info\";\r\nimport { GoBackBtn } from \"../../../../shared/ui/atoms/go-back-button\";\r\n\r\nexport const ChatHeader = ({ data }) => {\r\n  const { currentUser } = useAuth();\r\n  const { toggleModal, setContent } = useModal();\r\n  const [otherPerson, setOtherPerson] = useState({});\r\n  const [headerColors, setHeaderColors] = useState(\r\n    data.chatName === \"\" ? [] : data.imageColors\r\n  );\r\n  async function fetchOtherPerson() {\r\n    const otherPersonId = data.participants.find(\r\n      (personId) => personId !== currentUser.uid\r\n    );\r\n    const person = (\r\n      await firestore.collection(\"users\").doc(otherPersonId).get()\r\n    ).data();\r\n    setOtherPerson(person);\r\n    setHeaderColors(person.imageColors);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (data.chatName === \"\") {\r\n      fetchOtherPerson();\r\n    }\r\n  }, [data.id]);\r\n  return (\r\n    <div\r\n      className=\"ChatHeader\"\r\n      style={\r\n        headerColors.length\r\n          ? {\r\n              background: `linear-gradient(45deg, ${headerColors[0]}, ${headerColors[1]})`,\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      <GoBackBtn />\r\n      {data.participants.length === 2 ? (\r\n        <Link\r\n          className=\"chatHeaderImageAndName\"\r\n          to={`/authors/${otherPerson.uid}`}\r\n        >\r\n          <div\r\n            className=\"chatHeaderImage\"\r\n            style={{\r\n              backgroundImage: `url(${otherPerson.photoURL || data.chatImage})`,\r\n            }}\r\n          />\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <h4>{otherPerson.displayName || data.chatName}</h4>\r\n            <LastSeen userUID={otherPerson.uid} />\r\n          </div>\r\n        </Link>\r\n      ) : (\r\n        <div\r\n          className=\"chatHeaderImageAndName\"\r\n          onClick={() => {\r\n            toggleModal();\r\n            setContent(<ChatInfo data={data} />);\r\n          }}\r\n        >\r\n          <div\r\n            className=\"chatHeaderImage\"\r\n            style={{\r\n              backgroundImage: `url(${otherPerson.photoURL || data.chatImage})`,\r\n            }}\r\n          />\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <h4>{otherPerson.displayName || data.chatName}</h4>\r\n            <LastSeen userUID={otherPerson.uid} />\r\n          </div>\r\n        </div>\r\n      )}\r\n      <ChatMoreBtn\r\n        chatId={data.id}\r\n        data={data}\r\n        currentWallpaper={data.wallpaper}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","export function whatToWriteInResponseToItem(referedMessage) {\r\n\treturn referedMessage.attachedSongs.length ? \"Audio\" :\r\n\t\treferedMessage.attachedAlbums.length ? \"Album\" :\r\n\t\t\treferedMessage.attachedAuthors.length ? \"Author\" :\r\n\t\t\t\treferedMessage.inResponseToMessage && referedMessage.inResponseToMessage.length ? \"Forwarded message\" : \"\"\r\n}","import React from \"react\";\r\nimport { FiX } from \"react-icons/fi\";\r\nexport const AttachedItemsInChatInput = ({\r\n  attachedItems,\r\n  setAttachedItems,\r\n  icon,\r\n}) => {\r\n  function removeItemFromAttached(attachedItems, setItems, itemId) {\r\n    setItems(attachedItems.filter((id) => id !== itemId));\r\n  }\r\n  return (\r\n    <div className=\"AttachedItemsInChatInput\">\r\n      {attachedItems.map((itemId, index) => {\r\n        return (\r\n          <div className=\"attachedSongItem\" key={itemId}>\r\n            {icon}\r\n            <span>{itemId}</span>\r\n            <button\r\n              className=\"removeMessageFromResponse\"\r\n              onClick={() =>\r\n                removeItemFromAttached(attachedItems, setAttachedItems, itemId)\r\n              }\r\n            >\r\n              <FiX />\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { BiAlbum } from \"react-icons/bi\";\r\nimport { CgMusicNote } from \"react-icons/cg\";\r\nimport { FiUser, FiX } from \"react-icons/fi\";\r\nimport { ImAttachment } from \"react-icons/im\";\r\nimport { MdSend } from \"react-icons/md\";\r\nimport { useAuth } from \"../../../../contexts/AuthContext\";\r\nimport { useSong } from \"../../../../contexts/SongContext\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport { whatToWriteInResponseToItem } from \"../../lib/what-to-write-in-response-item\";\r\nimport { sendMessage } from \"../../../../functions/other/sendMessage\";\r\nimport shortWord from \"../../../../functions/other/shortWord\";\r\nimport useOutsideClick from \"../../../../shared/lib/hooks/use-outside-click\";\r\nimport SearchBar from \"../../../../shared/ui/organisms/search-bar\";\r\nimport { AlbumList } from \"../../../../components/Lists/AlbumList\";\r\nimport { AuthorsList } from \"../../../../components/Lists/AuthorsList\";\r\nimport { SongList } from \"../../../../components/Lists/SongList\";\r\nimport { AttachedItemsInChatInput } from \"../molecules/attached-items-in-chat-input\";\r\n\r\nexport const ChatInput = ({\r\n  chatId,\r\n  chatData,\r\n  messageText,\r\n  setMessageText,\r\n  inResponseToMessage,\r\n  setInResponseToMessage,\r\n  otherMessages,\r\n}) => {\r\n  const { currentUser } = useAuth();\r\n  const [openAttachWindow, setOpenAttachWindow] = useState(false);\r\n  const { yourSongs, yourAuthors, yourPlaylists } = useSong();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [allFoundSongs, setAllFoundSongs] = useState(yourSongs);\r\n  const [attachedSongs, setAttachedSongs] = useState([]);\r\n  const [attachedAlbums, setAttachedAlbums] = useState([]);\r\n  const [attachedAuthors, setAttachedAuthors] = useState([]);\r\n  const [resultPlaylists, setResultPlaylists] = useState(yourPlaylists);\r\n  const [resultAuthorList, setResultAuthorList] = useState(yourAuthors);\r\n  const [inResponseNames, setInResponseNames] = useState([]);\r\n  const [attachedSongsNames, setAttachedSongsNames] = useState([]);\r\n  const attachWindowRef = useRef(null);\r\n  useOutsideClick(attachWindowRef, setOpenAttachWindow);\r\n\r\n  function sendMessageFull() {\r\n    sendMessage(\r\n      chatId,\r\n      chatData,\r\n      currentUser.uid,\r\n      messageText,\r\n      attachedSongs,\r\n      attachedAlbums,\r\n      attachedAuthors,\r\n      inResponseToMessage\r\n    );\r\n    setMessageText(\"\");\r\n    setAttachedSongs([]);\r\n    setAttachedAuthors([]);\r\n    setAttachedAlbums([]);\r\n    setInResponseToMessage([]);\r\n    setOpenAttachWindow(false);\r\n  }\r\n  useEffect(() => {\r\n    if (searchValue.length === 0) {\r\n      setAllFoundSongs(yourSongs);\r\n    }\r\n  }, [searchValue]);\r\n\r\n  function removeMessageFromResponseList(messageId) {\r\n    setInResponseToMessage(\r\n      inResponseToMessage.filter((id) => id !== messageId)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (messageText.length === 0) {\r\n      firestore\r\n        .collection(\"chats\")\r\n        .doc(chatId)\r\n        .update({\r\n          typing: chatData.typing.filter((id) => id !== currentUser.uid),\r\n        });\r\n    } else {\r\n      if (!chatData.typing.includes(currentUser.uid)) {\r\n        const tempArray = chatData.typing;\r\n        tempArray.push(currentUser.uid);\r\n        firestore.collection(\"chats\").doc(chatId).update({\r\n          typing: tempArray,\r\n        });\r\n      }\r\n    }\r\n  }, [messageText]);\r\n\r\n  useEffect(() => {\r\n    setInResponseNames([]);\r\n    inResponseToMessage.forEach(async (id) => {\r\n      const name = (\r\n        await firestore.collection(\"users\").doc(otherMessages[id].sender).get()\r\n      ).data().displayName;\r\n      setInResponseNames((prev) => [...prev, name]);\r\n    });\r\n  }, [inResponseToMessage.length]);\r\n\r\n  useEffect(() => {\r\n    setAttachedSongsNames([]);\r\n    attachedSongs.forEach(async (id) => {\r\n      const name = (await firestore.collection(\"songs\").doc(id).get()).data()\r\n        .name;\r\n      setAttachedSongsNames((prev) => [...prev, name]);\r\n    });\r\n  }, [attachedSongs.length]);\r\n\r\n  return (\r\n    <div\r\n      className=\"chatInput\"\r\n      style={\r\n        openAttachWindow\r\n          ? {\r\n              borderRadius:\r\n                \"0 0 var(--standartBorderRadius) var(--standartBorderRadius)\",\r\n              transition: \".2s\",\r\n            }\r\n          : {}\r\n      }\r\n      ref={attachWindowRef}\r\n    >\r\n      <div\r\n        className=\"attachWindow\"\r\n        style={openAttachWindow ? { height: \"400px\", opacity: \"1\" } : {}}\r\n      >\r\n        {openAttachWindow ? (\r\n          <div\r\n            style={\r\n              openAttachWindow\r\n                ? {\r\n                    maxHeight: \"100%\",\r\n                    overflow: \"hidden\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                  }\r\n                : { display: \"none\" }\r\n            }\r\n          >\r\n            <SearchBar\r\n              value={searchValue}\r\n              setValue={setSearchValue}\r\n              setAllFoundSongs={setAllFoundSongs}\r\n              setResultPlaylists={setResultPlaylists}\r\n              setResultAuthorList={setResultAuthorList}\r\n            />\r\n            <div style={{ height: \"100%\", overflowY: \"auto\" }}>\r\n              <SongList\r\n                listOfSongs={allFoundSongs}\r\n                source={\"no\"}\r\n                listOfChosenSongs={attachedSongs}\r\n                setListOfSongs={setAttachedSongs}\r\n              />\r\n              <AuthorsList\r\n                listOfAuthors={resultAuthorList}\r\n                listOfChosenAuthors={attachedAuthors}\r\n                setListOfChosenAuthors={setAttachedAuthors}\r\n              />\r\n              <AlbumList\r\n                listOfAlbums={resultPlaylists}\r\n                loading={false}\r\n                listOfChosenAlbums={attachedAlbums}\r\n                setListOfChosenAlbums={setAttachedAlbums}\r\n              />\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n      <div\r\n        className=\"inResponseArea\"\r\n        style={\r\n          inResponseToMessage.length ||\r\n          attachedSongsNames.length ||\r\n          attachedAuthors.length ||\r\n          attachedAlbums.length\r\n            ? {}\r\n            : {\r\n                height: \"0\",\r\n                padding: \"0\",\r\n                opacity: \"0\",\r\n                top: \"0\",\r\n                visibility: \"hidden\",\r\n              }\r\n        }\r\n      >\r\n        <div className=\"responseMessages\">\r\n          {inResponseToMessage.map((id, index) => {\r\n            return (\r\n              <div className=\"responseItem\" key={id}>\r\n                <h5\r\n                  style={\r\n                    otherMessages[id].sender === currentUser.uid\r\n                      ? { color: \"var(--lightPurple)\" }\r\n                      : {}\r\n                  }\r\n                >\r\n                  {inResponseNames[index]}\r\n                </h5>\r\n                <p>\r\n                  {shortWord(otherMessages[id].message, 35)}\r\n                  <span\r\n                    style={{\r\n                      marginLeft: \"5px\",\r\n                      color: \"var(--reallyLightBlue)\",\r\n                    }}\r\n                  >\r\n                    {whatToWriteInResponseToItem(otherMessages[id])}\r\n                  </span>\r\n                </p>\r\n                <button\r\n                  onClick={() => removeMessageFromResponseList(id)}\r\n                  className=\"removeMessageFromResponse\"\r\n                >\r\n                  <FiX />\r\n                </button>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <AttachedItemsInChatInput\r\n          attachedItems={attachedSongs}\r\n          setAttachedItems={setAttachedSongs}\r\n          icon={<CgMusicNote />}\r\n        />\r\n        <AttachedItemsInChatInput\r\n          attachedItems={attachedAuthors}\r\n          setAttachedItems={setAttachedAuthors}\r\n          icon={<FiUser />}\r\n        />\r\n        <AttachedItemsInChatInput\r\n          attachedItems={attachedAlbums}\r\n          setAttachedItems={setAttachedAlbums}\r\n          icon={<BiAlbum />}\r\n        />\r\n      </div>\r\n      <div className=\"attachAndEmojis\">\r\n        <div className=\"attachBtn\">\r\n          <button\r\n            onClick={() => {\r\n              setOpenAttachWindow(!openAttachWindow);\r\n            }}\r\n          >\r\n            <ImAttachment />\r\n          </button>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          style={{\r\n            background: \"var(--lightGrey)\",\r\n            border: \"none\",\r\n            outline: \"none\",\r\n            minHeight: \"100%\",\r\n          }}\r\n          value={messageText}\r\n          onChange={(e) => {\r\n            setMessageText(e.target.value);\r\n          }}\r\n          onKeyDown={(e) => {\r\n            if (e.key === \"Enter\") {\r\n              sendMessageFull();\r\n            }\r\n          }}\r\n        />\r\n        {/* <div className=\"emojis\">\r\n\t\t\t\t\t<div className=\"emojiItem\">\r\n\t\t\t\t\t\t<FcLike />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"emojiItem\" style={{ color: 'var(--red)' }}>\r\n\t\t\t\t\t\t<AiFillFire />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"emojiItem\" style={{ color: 'var(--lightBlue)' }}>\r\n\t\t\t\t\t\t<AiFillLike />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> */}\r\n      </div>\r\n      <button\r\n        className=\"sendBtn\"\r\n        onClick={() => {\r\n          sendMessageFull();\r\n        }}\r\n      >\r\n        <MdSend />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\"\r\n\r\nexport default function useOnScreen(ref) {\r\n\r\n\tconst [isIntersecting, setIntersecting] = useState(false)\r\n \r\n\tconst observer = new IntersectionObserver(\r\n\t  ([entry]) => setIntersecting(entry.isIntersecting)\r\n\t)\r\n \r\n\tuseEffect(() => {\r\n\t  observer.observe(ref.current)\r\n\t  // Remove the observer as soon as the component is unmounted\r\n\t  return () => { observer.disconnect() }\r\n\t}, [])\r\n \r\n\treturn isIntersecting\r\n }","import { useEffect, useRef } from 'react'\r\nimport { useAuth } from '../../../../contexts/AuthContext'\r\nimport { firestore } from '../../../../firebase'\r\nimport useOnScreen from '../../../../hooks/useOnScreen'\r\n\r\nconst useMarkMessageRead = (chatId, messageData, otherMessages) => {\r\n\tconst messageRef = useRef()\r\n\tconst isVisible = useOnScreen(messageRef)\r\n\tconst { currentUser } = useAuth()\r\n\r\n\tuseEffect(() => {\r\n\t\tif (messageData.seenBy !== undefined) {\r\n\t\t\tif (currentUser.uid !== messageData.sender && isVisible) {\r\n\t\t\t\tif (!messageData.seenBy.includes(currentUser.uid)) {\r\n\t\t\t\t\tconst tempMessages = otherMessages\r\n\t\t\t\t\ttempMessages[messageData.id].seenBy.push(currentUser.uid)\r\n\t\t\t\t\tfirestore.collection('chats').doc(chatId).update({\r\n\t\t\t\t\t\tmessages: tempMessages\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, [isVisible])\r\n\r\n\treturn [messageRef, isVisible]\r\n}\r\n\r\nexport default useMarkMessageRead\r\n","import React from 'react'\r\n\r\nexport const SongItemLoading = () => {\r\n\treturn (\r\n\t\t<div className = \"SongItem SongItemLoading\">\r\n\t\t\t<div className=\"songItemImageAndName\">\r\n\t\t\t\t<div className=\"songItemImage\"></div>\r\n\t\t\t\t<div className=\"songItemNameAndAuthor\">\r\n\t\t\t\t\t<div className=\"songItemName\"></div>\r\n\t\t\t\t\t<div className=\"songItemAuthor\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BiShare } from \"react-icons/bi\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport { useAuth } from \"../../../../contexts/AuthContext\";\r\nimport { useScreen } from \"../../../../contexts/ScreenContext\";\r\nimport { AuthorItemBig } from \"../../../author/ui/molecules/author-item-big\";\r\nimport { SeenByCircle } from \"../atoms/seen-by-circle\";\r\nimport useMarkMessageRead from \"../../lib/hooks/use-mark-message-read\";\r\nimport { SongItem } from \"../../../song/ui/organisms/song-item\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport displayDate from \"../../../../functions/display/displayDate\";\r\nimport { PlaylistItem } from \"../../../../components/AuthorPage/PlaylistItem\";\r\nimport { SongItemLoading } from \"../../../../components/Loading/SongItemLoading\";\r\nimport { whatToWriteInResponseToItem } from \"../../lib/what-to-write-in-response-item\";\r\n\r\nexport const MessageItem = ({\r\n  messageData,\r\n  chatId,\r\n  scrollToMessageRef,\r\n  setScrollToMessageId,\r\n  scrollToMessageId,\r\n  showPhoto = true,\r\n  otherMessages,\r\n  inResponseToMessageArr,\r\n  setInResponseToMessageArr,\r\n}) => {\r\n  const { currentUser } = useAuth();\r\n  const { isMobile, screenHeight } = useScreen();\r\n  const {\r\n    message,\r\n    attachedAlbums,\r\n    attachedSongs,\r\n    attachedAuthors,\r\n    sender,\r\n    inResponseToMessage,\r\n    id,\r\n    sentTime,\r\n  } = messageData;\r\n  const [userThatSentMessage, setUserThatSentMessage] = useState({});\r\n  const messageSentTime = displayDate(sentTime, 2);\r\n  const [attachedSongsData, setAttachedSongsData] = useState([]);\r\n  const [attachedAuthorsData, setAttachedAuthorsData] = useState([]);\r\n  const [attachedPlaylistsData, setAttachedPlaylistsData] = useState([]);\r\n  const [inResponseToMessagesData, setInResponseToMessagesData] = useState([]);\r\n  const [inResponseNames, setInResponseNames] = useState([]);\r\n  const [messageRef, isVisible] = useMarkMessageRead(\r\n    chatId,\r\n    messageData,\r\n    otherMessages\r\n  );\r\n  const [swipeDeltaX, setSwipeDeltaX] = useState(0);\r\n  const [transformTransition, setTransformTransition] = useState(0);\r\n  const handlers = useSwipeable({\r\n    onSwiping: (event) => {\r\n      if (event.deltaX < 0) setSwipeDeltaX(event.deltaX);\r\n    },\r\n  });\r\n  const refPassthrough = (el) => {\r\n    // call useSwipeable ref prop with el\r\n    handlers.ref(el);\r\n\r\n    // set myRef el so you can access it yourself\r\n    messageRef.current = el;\r\n  };\r\n\r\n  async function fetchSentMessageUser() {\r\n    const user = (\r\n      await firestore.collection(\"users\").doc(messageData.sender).get()\r\n    ).data();\r\n    setUserThatSentMessage(user);\r\n  }\r\n\r\n  function fetchAttachedData(list, place, setFunc) {\r\n    return list.forEach(async (itemId) => {\r\n      let itemData = await firestore.collection(place).doc(itemId).get();\r\n      if (itemData.exists) setFunc((prev) => [...prev, itemData.data()]);\r\n      else setFunc((prev) => [...prev, null]);\r\n    });\r\n  }\r\n\r\n  function inResponseMessagesFetch() {\r\n    if (inResponseToMessage !== null) {\r\n      inResponseToMessage.forEach(async (messageId) => {\r\n        setInResponseToMessagesData((prev) => [\r\n          ...prev,\r\n          otherMessages[messageId],\r\n        ]);\r\n        const name = (\r\n          await firestore\r\n            .collection(\"users\")\r\n            .doc(otherMessages[messageId].sender)\r\n            .get()\r\n        ).data().displayName;\r\n        setInResponseNames((prev) => [name, ...prev]);\r\n      });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchSentMessageUser();\r\n    fetchAttachedData(attachedSongs, \"songs\", setAttachedSongsData);\r\n    fetchAttachedData(attachedAuthors, \"users\", setAttachedAuthorsData);\r\n    fetchAttachedData(attachedAlbums, \"playlists\", setAttachedPlaylistsData);\r\n    inResponseMessagesFetch();\r\n  }, []);\r\n\r\n  function addMessageToResponseList() {\r\n    if (!inResponseToMessageArr.includes(id)) {\r\n      setInResponseToMessageArr((prev) => [...prev, id]);\r\n    }\r\n  }\r\n\r\n  function returnToInitial() {\r\n    let dropDelta;\r\n    clearTimeout(dropDelta);\r\n    setTransformTransition(0.2);\r\n    dropDelta = setTimeout(() => {\r\n      setSwipeDeltaX(0);\r\n      setTransformTransition(0);\r\n    }, 200);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (swipeDeltaX < -160) {\r\n      returnToInitial();\r\n      addMessageToResponseList();\r\n    }\r\n  }, [swipeDeltaX]);\r\n\r\n  return (\r\n    <div\r\n      className={\"MessageItem \" + (sender === currentUser.uid ? \"your\" : \"\")}\r\n      ref={id === scrollToMessageId ? scrollToMessageRef : refPassthrough}\r\n      style={\r\n        showPhoto\r\n          ? {\r\n              paddingBottom: \"15px\",\r\n              transform: `translateX(${swipeDeltaX}px)`,\r\n              transition: transformTransition,\r\n            }\r\n          : {\r\n              transform: `translateX(${swipeDeltaX}px)`,\r\n              transition: transformTransition,\r\n            }\r\n      }\r\n      onTouchEnd={returnToInitial}\r\n    >\r\n      <div className=\"messageItemImage\">\r\n        {showPhoto ? (\r\n          <img loading=\"lazy\" src={userThatSentMessage.photoURL} alt=\"\" />\r\n        ) : null}\r\n      </div>\r\n      <div\r\n        className=\"messageItemBody\"\r\n        style={\r\n          id === scrollToMessageId\r\n            ? { animation: \"showResponseMessage .5s forwards\" }\r\n            : showPhoto\r\n            ? {\r\n                borderRadius:\r\n                  \"var(--standartBorderRadius2) var(--standartBorderRadius) var(--standartBorderRadius) 5px\",\r\n              }\r\n            : {}\r\n        }\r\n      >\r\n        <div\r\n          style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"5px\" }}\r\n        >\r\n          <h5 className=\"messageUserName\">{userThatSentMessage.displayName}</h5>\r\n          <div style={{ fontSize: \".7em\", opacity: \".8\", marginLeft: \"10px\" }}>\r\n            {messageSentTime}\r\n          </div>\r\n        </div>\r\n        {inResponseToMessage !== null\r\n          ? inResponseToMessagesData.map((messageData, index) => {\r\n              return (\r\n                <div\r\n                  className=\"responseItem\"\r\n                  onClick={() => setScrollToMessageId(messageData.id)}\r\n                >\r\n                  <span style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                    <h5\r\n                      style={\r\n                        messageData.sender === currentUser.uid\r\n                          ? { color: \"var(--lightPurple)\" }\r\n                          : {}\r\n                      }\r\n                    >\r\n                      {inResponseNames[index]}\r\n                    </h5>\r\n                    <div\r\n                      style={{\r\n                        fontSize: \".7em\",\r\n                        opacity: \".8\",\r\n                        marginLeft: \"10px\",\r\n                      }}\r\n                    >\r\n                      {displayDate(messageData.sentTime, 2)}\r\n                    </div>\r\n                  </span>\r\n                  <p>\r\n                    {messageData.message}\r\n                    <span\r\n                      style={{\r\n                        marginLeft: \"5px\",\r\n                        color: \"var(--reallyLightBlue)\",\r\n                      }}\r\n                    >\r\n                      {whatToWriteInResponseToItem(messageData)}\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n              );\r\n            })\r\n          : null}\r\n        <div>\r\n          <p>{message}</p>\r\n          {attachedSongsData.map((song, key) => {\r\n            return isVisible ? (\r\n              <SongItem\r\n                song={song}\r\n                localIndex={key}\r\n                key={key}\r\n                position={screenHeight}\r\n              />\r\n            ) : (\r\n              <SongItemLoading />\r\n            );\r\n          })}\r\n          {attachedPlaylistsData.map((album, index) => {\r\n            return <PlaylistItem playlist={album} key={index} />;\r\n          })}\r\n          {attachedAuthorsData.map((author, index) => {\r\n            return <AuthorItemBig data={author} key={index} />;\r\n          })}\r\n        </div>\r\n      </div>\r\n      <SeenByCircle listOfSeen={messageData.seenBy} />\r\n      <button\r\n        className=\"respondToMessageBtn\"\r\n        onClick={addMessageToResponseList}\r\n        style={isMobile ? { opacity: -swipeDeltaX / 80 } : {}}\r\n      >\r\n        <BiShare />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport displayDate from \"../../../../functions/display/displayDate\";\r\nimport { MessageItem } from \"../molecules/message-item\";\r\n\r\nexport const MessageField = ({\r\n  message,\r\n  index,\r\n  messageList,\r\n  chatId,\r\n  inResponseToMessage,\r\n  setInResponseToMessage,\r\n  scrollToMessageRef,\r\n  scrollToMessageId,\r\n  setScrollToMessageId,\r\n  setDateRefsArray,\r\n}) => {\r\n  const [showPhoto, setShowPhoto] = useState(false);\r\n  const [showDate, setShowDate] = useState(false);\r\n  const dateRef = useRef(null);\r\n  useEffect(() => {\r\n    if (index === messageList.length - 1) setShowPhoto(true);\r\n    else if (messageList[index + 1].sender !== messageList[index].sender)\r\n      setShowPhoto(true);\r\n    else if (\r\n      displayDate(messageList[index + 1].sentTime) !==\r\n      displayDate(messageList[index].sentTime)\r\n    )\r\n      setShowPhoto(true);\r\n\r\n    if (index === 0) setShowDate(true);\r\n    else if (\r\n      displayDate(messageList[index].sentTime) !==\r\n      displayDate(messageList[index - 1].sentTime)\r\n    ) {\r\n      setShowDate(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (dateRef.current !== null) {\r\n      setDateRefsArray((prev) => [...prev, dateRef]);\r\n    }\r\n  }, [showDate]);\r\n\r\n  return (\r\n    <>\r\n      {showDate ? (\r\n        <div\r\n          ref={dateRef}\r\n          style={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            padding: \"10px 0\",\r\n          }}\r\n        >\r\n          {displayDate(message.sentTime)}\r\n        </div>\r\n      ) : null}\r\n      <MessageItem\r\n        messageData={message}\r\n        chatId={chatId}\r\n        key={message.id}\r\n        scrollToMessageRef={scrollToMessageRef}\r\n        scrollToMessageId={scrollToMessageId}\r\n        setScrollToMessageId={setScrollToMessageId}\r\n        showPhoto={showPhoto}\r\n        otherMessages={messageList}\r\n        inResponseToMessageArr={inResponseToMessage}\r\n        setInResponseToMessageArr={setInResponseToMessage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport useMarkMessageRead from \"../../lib/hooks/use-mark-message-read\";\r\n\r\nconst SystemMessageWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  opacity: 0.5;\r\n`;\r\n\r\nconst SystemMessage = ({ chatId, message, messageList }) => {\r\n  const [messageRef, isVisible] = useMarkMessageRead(\r\n    chatId,\r\n    message,\r\n    messageList\r\n  );\r\n  return (\r\n    <SystemMessageWrapper ref={messageRef}>\r\n      {message.message}\r\n    </SystemMessageWrapper>\r\n  );\r\n};\r\n\r\nexport default SystemMessage;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { MessageField } from \"../organisms/message-field\";\r\nimport SystemMessage from \"./system-message\";\r\n\r\nexport const DisplayChatMessages = ({\r\n  chatId,\r\n  messageList,\r\n  inResponseToMessage,\r\n  setInResponseToMessage,\r\n  messagesWindowRef,\r\n  setDateRefsArray,\r\n}) => {\r\n  const scrollToMessageRef = useRef(null);\r\n  const [scrollToMessageId, setScrollToMessageId] = useState(-1);\r\n  useEffect(() => {\r\n    if (scrollToMessageId !== -1) {\r\n      messagesWindowRef.current.scrollTo(\r\n        0,\r\n        scrollToMessageRef.current.offsetTop - 65 < 0\r\n          ? 0\r\n          : scrollToMessageRef.current.offsetTop - 65\r\n      );\r\n      setTimeout(() => {\r\n        setScrollToMessageId(-1);\r\n      }, 500);\r\n    }\r\n  }, [scrollToMessageId]);\r\n\r\n  return messageList.length ? (\r\n    <>\r\n      {messageList.map((message, index) => {\r\n        if (message.sender !== \"soundbubble\") {\r\n          return (\r\n            <MessageField\r\n              message={message}\r\n              index={index}\r\n              key={message.id}\r\n              messageList={messageList}\r\n              chatId={chatId}\r\n              inResponseToMessage={inResponseToMessage}\r\n              setInResponseToMessage={setInResponseToMessage}\r\n              scrollToMessageRef={scrollToMessageRef}\r\n              scrollToMessageId={scrollToMessageId}\r\n              setScrollToMessageId={setScrollToMessageId}\r\n              setDateRefsArray={setDateRefsArray}\r\n            />\r\n          );\r\n        } else {\r\n          return (\r\n            <SystemMessage\r\n              chatId={chatId}\r\n              message={message}\r\n              messageList={messageList}\r\n            />\r\n          );\r\n        }\r\n      })}\r\n    </>\r\n  ) : null;\r\n};\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { useScreen } from \"../../../../contexts/ScreenContext\";\r\nimport { TypingAnimation } from \"../atoms/typing-animation\";\r\nimport { DisplayChatMessages } from \"../molecules/display-chat-messages\";\r\n\r\nexport const ChatMessagesWindow = ({\r\n  chatId,\r\n  chatData,\r\n  messageList,\r\n  findTopDate,\r\n  inResponseToMessage,\r\n  setInResponseToMessage,\r\n  setDateRefsArray,\r\n}) => {\r\n  const { screenHeight, isMobile } = useScreen();\r\n  const messagesWindowRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    const scroll =\r\n      messagesWindowRef.current?.scrollHeight -\r\n      messagesWindowRef.current?.clientHeight;\r\n    messagesWindowRef.current?.scrollTo(0, scroll);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      scrollToBottom();\r\n    }, 200);\r\n  }, [messageList]);\r\n  return (\r\n    <div\r\n      className=\"chatMessagesWindow\"\r\n      ref={messagesWindowRef}\r\n      onScroll={findTopDate}\r\n      style={{\r\n        height: !isMobile\r\n          ? screenHeight - 105 + \"px\"\r\n          : screenHeight - 125 + \"px\",\r\n      }}\r\n    >\r\n      <DisplayChatMessages\r\n        chatId={chatId}\r\n        messageList={messageList}\r\n        inResponseToMessage={inResponseToMessage}\r\n        setInResponseToMessage={setInResponseToMessage}\r\n        messagesWindowRef={messagesWindowRef}\r\n        setDateRefsArray={setDateRefsArray}\r\n      />\r\n      <TypingAnimation typingPeople={chatData.typing} />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router\";\r\nimport { LoadingCircle } from \"../../components/Loading/LoadingCircle\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { DateOnTop } from \"../../features/dialogue/ui/atoms/date-on-top\";\r\nimport { ChatHeader } from \"../../features/dialogue/ui/organisms/chat-header\";\r\nimport { ChatInput } from \"../../features/dialogue/ui/organisms/chat-input\";\r\nimport { ChatMessagesWindow } from \"../../features/dialogue/ui/organisms/chat-messages-window\";\r\nimport { useRealTimeMessages } from \"../../hooks/useRealTimeMessages\";\r\n\r\nconst DialoguePage = () => {\r\n  const match = useRouteMatch(\"/chat/:chatId\");\r\n  const { currentUser } = useAuth();\r\n  const { chatId } = match.params;\r\n  const [messageText, setMessageText] = useState(\"\");\r\n  const [inResponseToMessage, setInResponseToMessage] = useState([]);\r\n  const [dateRefsArray, setDateRefsArray] = useState([]);\r\n  const history = useHistory();\r\n  const [chatData, messageList, loading, currentDateOnTop, findTopDate] =\r\n    useRealTimeMessages(chatId, dateRefsArray);\r\n\r\n  useEffect(() => {\r\n    if (chatData === undefined) {\r\n      history.push(\"/not-found\");\r\n    } else if (chatData?.participants !== undefined) {\r\n      if (!chatData.participants.includes(currentUser.uid))\r\n        history.push(\"/chat\");\r\n    }\r\n  }, [chatData]);\r\n\r\n  return chatData !== null && chatData !== undefined ? (\r\n    <div className=\"DialoguePage\" style={{ height: \"100%\" }}>\r\n      {loading ? (\r\n        <LoadingCircle top={\"50%\"} />\r\n      ) : (\r\n        <>\r\n          <ChatHeader data={chatData} />\r\n          <DateOnTop date={currentDateOnTop} />\r\n          <ChatMessagesWindow\r\n            chatId={chatId}\r\n            chatData={chatData}\r\n            messageList={messageList}\r\n            findTopDate={findTopDate}\r\n            setDateRefsArray={setDateRefsArray}\r\n            inResponseToMessage={inResponseToMessage}\r\n            setInResponseToMessage={setInResponseToMessage}\r\n          />\r\n          <ChatInput\r\n            chatId={chatId}\r\n            chatData={chatData}\r\n            messageText={messageText}\r\n            setMessageText={setMessageText}\r\n            inResponseToMessage={inResponseToMessage}\r\n            setInResponseToMessage={setInResponseToMessage}\r\n            otherMessages={messageList}\r\n          />\r\n        </>\r\n      )}\r\n      {chatData?.wallpaper !== \"undefined\" ? (\r\n        <img\r\n          loading=\"lazy\"\r\n          src={chatData.wallpaper}\r\n          className=\"chatWallpaper\"\r\n          alt=\"\"\r\n        />\r\n      ) : null}\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default DialoguePage;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { firestore } from '../firebase'\r\n\r\n/**\r\n \t* Returns [chatData, messageList, loading, currentDateOnTop, findTopDate]\r\n*/\r\nexport const useRealTimeMessages = (chatId, dateRefsArray) => {\r\n\tconst [chatData, setChatData] = useState(null)\r\n\tconst [messageList, setMessageList] = useState([])\r\n\tconst [loading, setLoading] = useState(true)\r\n\tconst [currentDateOnTop, setCurrentDateOnTop] = useState(\"\")\r\n\tfunction findTopDate(e){\r\n\t\tdateRefsArray.forEach(ref=>{\r\n\t\t\tif(ref.current !== null) {\r\n\t\t\t\tif(ref.current.offsetTop - 70 <= e.target.scrollTop) setCurrentDateOnTop(ref.current.innerHTML)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst unsubscribe = firestore.collection('chats').doc(chatId)\r\n\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\tsetChatData(snapshot.data())\r\n\t\t\t\tsetMessageList(snapshot.data()?.messages)\r\n\t\t\t\tsetCurrentDateOnTop(snapshot.data()?.messages.length ? snapshot.data().messages[0].sentTime : new Date().toString())\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t})\r\n\t\treturn () => {\r\n\t\t\tunsubscribe()\r\n\t\t}\r\n\t}, [firestore, chatId])\r\n\r\n\r\n\treturn [chatData, messageList, loading, currentDateOnTop, findTopDate]\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { ContentContainer } from \"../../components/Containers/ContentContainer\";\r\nimport { SongList } from \"../../components/Lists/SongList\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { firestore } from \"../../firebase\";\r\nimport { fetchItemList } from \"../../shared/lib/fetch-item-list\";\r\nimport { GoBackBtn } from \"../../shared/ui/atoms/go-back-button\";\r\n\r\nconst HistoryPage = () => {\r\n  const [historySongsIds, setHistorySongsIds] = useState([]);\r\n  const [historySongs, setHistorySongs] = useState([]);\r\n  const { currentUser } = useAuth();\r\n  useEffect(() => {\r\n    firestore\r\n      .collection(\"history\")\r\n      .doc(currentUser.uid)\r\n      .onSnapshot((res) => {\r\n        setHistorySongsIds(res.data().history);\r\n      });\r\n  }, [firestore]);\r\n\r\n  useEffect(() => {\r\n    fetchItemList(historySongsIds, \"songs\", setHistorySongs);\r\n  }, [historySongsIds]);\r\n  return (\r\n    <div className=\"HistoryPage\" style={{ animation: \"zoomIn .2s forwards\" }}>\r\n      <ContentContainer>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <GoBackBtn />\r\n          <h2 style={{ margin: \"0px\", marginLeft: \"8px\" }}>History</h2>\r\n        </div>\r\n        <SongList\r\n          listOfSongs={historySongs}\r\n          source={{\r\n            source: `/history`,\r\n            name: \"History\",\r\n            image:\r\n              \"https://www.seekpng.com/png/full/781-7815113_history-icon-white-png.png\",\r\n            songsList: historySongs,\r\n          }}\r\n          showCount\r\n          showSearch\r\n          displayIfEmpty={\"Nothing here\"}\r\n        />\r\n      </ContentContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BiChevronLeft, BiChevronRight } from \"react-icons/bi\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport checkNumber from \"../../../../shared/lib/check-number\";\r\nimport { AuthorItemBig } from \"../../../author/ui/molecules/author-item-big\";\r\nimport { PlaylistItem } from \"../../../../components/AuthorPage/PlaylistItem\";\r\nimport { LoadingCircle } from \"../../../../components/Loading/LoadingCircle\";\r\nimport { SongItem } from \"../../../song/ui/organisms/song-item\";\r\nexport const MainBanner = () => {\r\n  const [bannerColors, setBannerColors] = useState([]);\r\n  const [currentSliderPage, setcurrentSliderPage] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [topAuthor, setTopAuthor] = useState({});\r\n  const [topSong, setTopSong] = useState({});\r\n  const [topAlbum, setTopAlbum] = useState({});\r\n\r\n  async function findTop(setFunc, list, criterion) {\r\n    const response = (\r\n      await firestore.collection(list).orderBy(criterion, \"desc\").limit(1).get()\r\n    ).docs[0].data();\r\n    setFunc(response);\r\n    setBannerColors((prev) => [...prev, response.imageColors[0]]);\r\n    if (list === \"playlists\") setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    findTop(setTopAuthor, \"users\", \"subscribers\");\r\n    findTop(setTopSong, \"songs\", \"listens\");\r\n    findTop(setTopAlbum, \"playlists\", \"listens\");\r\n  }, []);\r\n  return (\r\n    <div\r\n      className=\"MainBanner\"\r\n      style={{ background: bannerColors[currentSliderPage] }}\r\n    >\r\n      {loading ? (\r\n        <LoadingCircle />\r\n      ) : (\r\n        <>\r\n          <div className=\"slider\">\r\n            <div\r\n              className={\r\n                \"sliderItem \" + (currentSliderPage === 0 ? \"current\" : \"\")\r\n              }\r\n              style={{ transform: `translateX(-${currentSliderPage * 100}%)` }}\r\n            >\r\n              <h3>Most popular artist on platform</h3>\r\n              <AuthorItemBig data={topAuthor} />\r\n            </div>\r\n            <div\r\n              className={\r\n                \"sliderItem \" + (currentSliderPage === 1 ? \"current\" : \"\")\r\n              }\r\n              style={{ transform: `translateX(-${currentSliderPage * 100}%)` }}\r\n            >\r\n              <h3>Most popular song on platform</h3>\r\n              <SongItem song={topSong} localIndex={0} showListens />\r\n            </div>\r\n            <div\r\n              className={\r\n                \"sliderItem \" + (currentSliderPage === 2 ? \"current\" : \"\")\r\n              }\r\n              style={{ transform: `translateX(-${currentSliderPage * 100}%)` }}\r\n            >\r\n              <h3>Most popular album on platform</h3>\r\n              <PlaylistItem playlist={topAlbum} />\r\n            </div>\r\n          </div>\r\n          <div className=\"sliderBtns\">\r\n            <button\r\n              onClick={() =>\r\n                setcurrentSliderPage(checkNumber(currentSliderPage - 1, 2, 0))\r\n              }\r\n            >\r\n              <BiChevronLeft />\r\n            </button>\r\n            <button\r\n              onClick={() =>\r\n                setcurrentSliderPage(checkNumber(currentSliderPage + 1, 2, 0))\r\n              }\r\n            >\r\n              <BiChevronRight />\r\n            </button>\r\n          </div>\r\n          {/* <BlurredBg circleColor = \"#fff\"/> */}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { SongList } from \"../../../../components/Lists/SongList\";\r\nimport { useSong } from \"../../../../contexts/SongContext\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport findIfSongIsNew from \"../../../../functions/find/findIfSongIsNew\";\r\n\r\nexport const RecentSongs = () => {\r\n  const { yourAuthors } = useSong();\r\n  const [recentSongs, setRecentSongs] = useState([]);\r\n  function findRecentSongs() {\r\n    const tempSongsIds = [];\r\n    yourAuthors.forEach((author, i) => {\r\n      author.ownSongs.forEach(async (songId) => {\r\n        let songData = (\r\n          await firestore.collection(\"songs\").doc(songId).get()\r\n        ).data();\r\n        if (findIfSongIsNew(songData) && !tempSongsIds.includes(songData.id)) {\r\n          setRecentSongs((prev) => [...prev, songData]);\r\n          tempSongsIds.push(songData.id);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      yourAuthors !== undefined &&\r\n      yourAuthors.length !== 0 &&\r\n      recentSongs.length === 0\r\n    )\r\n      findRecentSongs();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <SongList\r\n        listOfSongs={recentSongs}\r\n        source={{\r\n          source: `/home`,\r\n          name: \"New Songs\",\r\n          image: \"\",\r\n          songsList: recentSongs,\r\n        }}\r\n        title={\"New Songs\"}\r\n        isNewSong\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { AuthorsList } from \"../../../../components/Lists/AuthorsList\";\r\nimport { useAuth } from \"../../../../contexts/AuthContext\";\r\nimport { useSong } from \"../../../../contexts/SongContext\";\r\nimport findSimilarArtists from \"../../../../shared/lib/find-similar-artists\";\r\n\r\nexport const RecommendedAuthors = () => {\r\n  const { yourAuthors } = useSong();\r\n  const [recommendationAuthors, setRecommendationAuthors] = useState([]);\r\n\r\n  const [uniqueAuthors, setUniqueAuthors] = useState([]);\r\n  const { currentUser } = useAuth();\r\n  useEffect(() => {\r\n    if (yourAuthors !== undefined) {\r\n      yourAuthors.forEach((author) => {\r\n        findSimilarArtists(author, setRecommendationAuthors);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    recommendationAuthors.forEach((author) => {\r\n      const uniqueAuthorsUIDSArray = uniqueAuthors.map((author) => author.uid);\r\n      if (\r\n        !currentUser.addedAuthors.includes(author.uid) &&\r\n        !uniqueAuthorsUIDSArray.includes(author.uid)\r\n      ) {\r\n        setUniqueAuthors((prev) => [...prev, author]);\r\n      }\r\n    });\r\n  }, [recommendationAuthors]);\r\n  return (\r\n    <div className=\"RecommendedAuthors\">\r\n      <AuthorsList\r\n        listOfAuthors={uniqueAuthors}\r\n        title={\"Recommended Authors\"}\r\n      />\r\n      {/* <h2>Recommended Authors</h2>\r\n\t\t\t<div className=\"artistsWrapper\">\r\n\t\t\t\t{uniqueAuthors.map((author, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<AuthorItemBig data={author} key={index} />\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</div> */}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nexport const ImportantMessage = ({message, image, button}) => {\r\n\treturn (\r\n\t\t<div className = \"importantMessage\">\r\n\t\t\t<div>\r\n\t\t\t\t{image?<img loading = \"lazy\" src={image} alt=\"\" />:null}\r\n\t\t\t\t<h3>{message}</h3>\r\n\t\t\t\t{button?button:null}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { SongList } from \"../../../../components/Lists/SongList\";\r\nimport { ImportantMessage } from \"../../../../components/MessagePlates/ImportantMessage\";\r\nimport { useAuth } from \"../../../../contexts/AuthContext\";\r\nimport { useSong } from \"../../../../contexts/SongContext\";\r\nimport { firestore } from \"../../../../firebase\";\r\n\r\nexport const RecommendedSongs = () => {\r\n  const { yourAuthors } = useSong();\r\n  const { currentUser } = useAuth();\r\n  const [recommendedSongs, setRecommendedSongs] = useState([]);\r\n  function fetchRecommendedSongs() {\r\n    const tempSongsIds = [];\r\n    yourAuthors.forEach((author, i) => {\r\n      author.ownSongs.forEach(async (songId, index) => {\r\n        let songData = (\r\n          await firestore.collection(\"songs\").doc(songId).get()\r\n        ).data();\r\n        if (\r\n          !currentUser.addedSongs.includes(songId) &&\r\n          !tempSongsIds.includes(songData.id) &&\r\n          index <= 3\r\n        ) {\r\n          setRecommendedSongs((prev) => [...prev, songData]);\r\n          tempSongsIds.push(songData.id);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchRecommendedSongs();\r\n  }, []);\r\n  return (\r\n    <div className=\"RecommendedSongs\">\r\n      <SongList\r\n        listOfSongs={recommendedSongs}\r\n        source={{\r\n          source: `/home`,\r\n          name: \"Recommended Songs\",\r\n          image: \"\",\r\n          songsList: recommendedSongs,\r\n        }}\r\n        title={\"Recommended Songs\"}\r\n        displayIfEmpty={\r\n          <ImportantMessage\r\n            message={\r\n              \"No songs recommended. Add favorite authors so we could know what to recommend\"\r\n            }\r\n            image={\r\n              \"https://i.pinimg.com/originals/b2/3d/f6/b23df649311586e74a8455c92eb3d76b.png\"\r\n            }\r\n          />\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { SongList } from \"../../../../components/Lists/SongList\";\r\nimport { LoadingCircle } from \"../../../../components/Loading/LoadingCircle\";\r\nimport { firestore } from \"../../../../firebase\";\r\n\r\nexport const Top15Songs = () => {\r\n  const [topSongs, setTopSongs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  function fetchTopSongs() {\r\n    firestore\r\n      .collection(\"songs\")\r\n      .orderBy(\"listens\", \"desc\")\r\n      .limit(15)\r\n      .get()\r\n      .then((res) => {\r\n        res.docs.forEach((song) => {\r\n          setTopSongs((prev) => [...prev, song.data()]);\r\n        });\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchTopSongs();\r\n  }, []);\r\n  return !loading ? (\r\n    <SongList\r\n      listOfSongs={topSongs}\r\n      source={{\r\n        source: `/home`,\r\n        name: \"Top 15 Songs\",\r\n        image:\r\n          \"https://media.istockphoto.com/vectors/fire-icon-illustration-for-design-stock-vector-vector-id931601050?k=6&m=931601050&s=170667a&w=0&h=fhRQfwwsW6aXK9OSDM-yj842SFFl2Q9ll6ch-xCK5es=\",\r\n        songsList: topSongs,\r\n      }}\r\n      title={\"Top 15 Songs\"}\r\n      showListens\r\n      showCount\r\n    />\r\n  ) : (\r\n    <LoadingCircle />\r\n  );\r\n};\r\n","import { ContentContainer } from \"../../components/Containers/ContentContainer\";\r\nimport { MainBanner } from \"../../features/home/ui/organisms/main-banner\";\r\nimport { RecentSongs } from \"../../features/home/ui/organisms/recent-songs\";\r\nimport { RecommendedAuthors } from \"../../features/home/ui/organisms/recommended-authors\";\r\nimport { RecommendedSongs } from \"../../features/home/ui/organisms/recommended-songs\";\r\nimport { Top15Songs } from \"../../features/home/ui/organisms/top-15-Songs\";\r\nimport \"../../styles/HomePage.css\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div style={{ animation: \"zoomIn .2s forwards\" }} className=\"HomePage\">\r\n      <MainBanner />\r\n      <ContentContainer>\r\n        <RecentSongs />\r\n        <Top15Songs />\r\n        <RecommendedSongs />\r\n        <RecommendedAuthors />\r\n      </ContentContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","export default __webpack_public_path__ + \"static/media/wave2.f62cb572.svg\";","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport shortWord from '../../functions/other/shortWord'\r\nimport { HiPause, HiPlay } from 'react-icons/hi'\r\nimport { useSong } from '../../contexts/SongContext'\r\nimport { usePlaylistSongs } from '../../hooks/usePlaylistSongs'\r\nimport { useScreen } from '../../contexts/ScreenContext'\r\nimport { BiAlbum } from 'react-icons/bi'\r\nexport const LibraryPlaylistItem = ({ playlist }) => {\r\n\tconst { currentSongPlaylistSource, play } = useSong()\r\n\tconst { isMobile } = useScreen()\r\n\tconst [playlistSongs, setPlaylistSongs] = useState([])\r\n\tconst playSongsInPlaylist = usePlaylistSongs(playlist, playlistSongs, setPlaylistSongs)\r\n\r\n\treturn (\r\n\t\t<Link to={`/albums/${playlist.id}`} className=\"playlistWrapper\">\r\n\t\t\t<div className=\"library playlistItem\" style={{ backgroundImage: `url(${playlist.image})`}}>\r\n\t\t\t\t<h2 style={{ background: playlist.imageColors[2] }}>{shortWord(playlist.name, 10)}</h2>\r\n\t\t\t\t{!playlist.image?<BiAlbum style = {{position:'absolute', left:'50%', top:'50%', transform:'translate(-50%, -50%)', width:'60px', height:'60px'}}/>:null}\r\n\t\t\t\t{!isMobile ? <button onClick={playSongsInPlaylist}>\r\n\t\t\t\t\t{(currentSongPlaylistSource.name === playlist.name) && play ? <HiPause /> : <HiPlay />}\r\n\t\t\t\t</button> : null}\r\n\t\t\t</div>\r\n\t\t</Link>\r\n\t)\r\n}\r\n","export const findVisiblePlaylists = (screenWidth) => {\r\n\tif(screenWidth < 1990 && screenWidth >= 1780) return 7\r\n\telse if(screenWidth < 1780 && screenWidth >= 1570) return 6\r\n\telse if(screenWidth < 1570 && screenWidth >= 1360) return 5\r\n\telse if(screenWidth < 1360 && screenWidth >= 1150) return 4\r\n\telse if(screenWidth < 1150 && screenWidth >= 1000) return 3\r\n\telse if(screenWidth < 1000 && screenWidth >= 892) return 6\r\n\telse if(screenWidth < 892 && screenWidth >= 754) return 5\r\n\telse if(screenWidth < 754 && screenWidth >= 614) return 4\r\n\telse if(screenWidth < 614 && screenWidth >= 464) return 3\r\n\telse return 2\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useSong } from '../../contexts/SongContext'\r\nimport wave from '../../images/wave2.svg'\r\nimport { useAuth } from '../../contexts/AuthContext'\r\nimport { LibraryPlaylistItem } from './LibraryPlaylistItem'\r\nimport { SongList } from '../Lists/SongList'\r\nimport { Link } from 'react-router-dom'\r\nimport { firestore } from '../../firebase'\r\nimport { useScreen } from '../../contexts/ScreenContext'\r\nimport { findVisiblePlaylists } from '../../functions/find/findVisiblePlaylists'\r\nexport const SongsPage = () => {\r\n\tconst { yourSongs, yourPlaylists, setYourSongs } = useSong()\r\n\tconst { currentUser } = useAuth()\r\n\tconst {screenWidth} = useScreen()\r\n\tconst [playlistsVisible, setPlaylistsVisible] = useState(findVisiblePlaylists(screenWidth))\r\n\tuseEffect(() => {\r\n\t\tsetPlaylistsVisible(findVisiblePlaylists(screenWidth))\r\n\t}, [screenWidth])\r\n\treturn (\r\n\t\t<div className=\"SongsPage\">\r\n\t\t\t<div className=\"playLists\">\r\n\t\t\t\t<div className=\"playlistContent\">\r\n\t\t\t\t\t{yourPlaylists.length?yourPlaylists.map((p, index) => {\r\n\t\t\t\t\t\tif(index < playlistsVisible){\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<LibraryPlaylistItem playlist={p} key={index} />\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}):<h3 style = {{position:'absolute', left:'50%', top:'40%', transform:'translate(-50%, -50%)'}}>You don't have playlists</h3>}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"playlistsBackground\">\r\n\t\t\t\t\t<img loading = \"lazy\" src={wave} alt=\"erwerrnjeqjweqwqeqwewerbjfrwjfbewjerbh\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"yourSongsList\">\r\n\t\t\t\t<SongList listOfSongs={yourSongs} source={{ source: '/library', name: \"Your Library\", image: currentUser.photoURL, songsList: yourSongs }} showSearch showhistory displayIfEmpty={<h3>Your library is empty</h3>} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { BiFolderPlus } from \"react-icons/bi\";\r\nimport { useModal } from \"../../contexts/ModalContext\";\r\nimport { useSong } from \"../../contexts/SongContext\";\r\nimport SearchBar from \"../../shared/ui/organisms/search-bar\";\r\nimport { PlaylistItem } from \"../AuthorPage/PlaylistItem\";\r\nimport { ContentContainer } from \"../Containers/ContentContainer\";\r\nimport { CreatePlaylistPage } from \"./CreatePlaylistPage\";\r\nexport const PlaylistsPage = () => {\r\n  const { yourPlaylists } = useSong();\r\n  const [playlistsDisplay, setPlaylistsDisplay] = useState(yourPlaylists);\r\n  const { toggleModal, setContent } = useModal();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  return (\r\n    <div className=\"PlaylistsPage\">\r\n      <ContentContainer>\r\n        <div style={{ display: \"flex\" }} className=\"searchAndCreatePlaylist\">\r\n          <SearchBar\r\n            value={searchValue}\r\n            setValue={setSearchValue}\r\n            setResultPlaylists={setPlaylistsDisplay}\r\n            defaultSearchMode={\"playlists\"}\r\n            defaultPlaylistsListValue={yourPlaylists}\r\n          />\r\n          <button\r\n            className=\"createPlaylistBtn\"\r\n            onClick={() => {\r\n              toggleModal();\r\n              setContent(<CreatePlaylistPage />);\r\n            }}\r\n          >\r\n            <BiFolderPlus />\r\n            Create Playlist\r\n          </button>\r\n        </div>\r\n        <div className=\"playlistsContainer\">\r\n          {playlistsDisplay &&\r\n            playlistsDisplay.map((playlist, index) => {\r\n              return <PlaylistItem playlist={playlist} key={playlist.id} />;\r\n            })}\r\n        </div>\r\n      </ContentContainer>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useSong } from \"../../contexts/SongContext\";\r\nimport { AuthorItemBig } from \"../../features/author/ui/molecules/author-item-big\";\r\nimport SearchBar from \"../../shared/ui/organisms/search-bar\";\r\nimport { ContentContainer } from \"../Containers/ContentContainer\";\r\nexport const AuthorsPage = () => {\r\n  const { yourAuthors } = useSong();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [displayAuthors, setDisplayAuthors] = useState(yourAuthors);\r\n  return (\r\n    <div className=\"AuthorsPage\">\r\n      <ContentContainer>\r\n        <SearchBar\r\n          value={searchValue}\r\n          setValue={setSearchValue}\r\n          setResultAuthorList={setDisplayAuthors}\r\n          defaultSearchMode={\"authors\"}\r\n          defaultAuthorsListValue={yourAuthors}\r\n        />\r\n        <div className=\"authorsContainer\">\r\n          {displayAuthors.map((authorData) => {\r\n            return <AuthorItemBig data={authorData} key={authorData.uid} />;\r\n          })}\r\n        </div>\r\n      </ContentContainer>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"../../styles/LibraryPage.css\";\r\nimport { Slider } from \"../../components/Tools/Slider\";\r\nimport { SongsPage } from \"../../components/LibraryPage/SongsPage\";\r\nimport { PlaylistsPage } from \"../../components/LibraryPage/PlaylistsPage\";\r\nimport { AuthorsPage } from \"../../components/LibraryPage/AuthorsPage\";\r\n\r\nconst LibraryPage = () => {\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const libraryPages = [<SongsPage />, <PlaylistsPage />, <AuthorsPage />];\r\n  return (\r\n    <div className=\"LibraryPage\" style={{ animation: \"zoomIn .2s forwards\" }}>\r\n      <Slider\r\n        pages={[\"Songs\", \"Playlists\", \"Authors\"]}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n      {libraryPages[currentPage]}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibraryPage;\r\n","import React from 'react'\r\n\r\nexport const BlurredBg = () => {\r\n\treturn (\r\n\t\t<div className = \"BlurredBg\">\r\n\t\t\t<div className=\"circle circle1\"></div>\r\n\t\t\t<div className=\"circle circle2\"></div>\r\n\t\t\t<div className=\"circle circle3\"></div>\r\n\t\t\t<div className=\"circle circle4\"></div>\r\n\t\t\t<div className=\"circle circle5\"></div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport Logo from \"../../images/Logo3.svg\"\r\nexport const TitleAndLogo = ({title}) => {\r\n\treturn (\r\n\t\t<div className=\"titleAndLogo\">\r\n\t\t\t\t<div className=\"title\">\r\n\t\t\t\t\t<h1>{title}</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"logo\">\r\n\t\t\t\t\t<img loading = \"lazy\" src={Logo} alt=\"\" />\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ErrorPlate } from \"../../components/MessagePlates/ErrorPlate\";\r\nimport { FullScreenLoading } from \"../../components/Loading/FullScreenLoading\";\r\nimport { BlurredBg } from \"../../components/SignIn-Up/BlurredBg\";\r\nimport { TitleAndLogo } from \"../../components/SignIn-Up/TitleAndLogo\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { SIGNUP_ROUTE } from \"../../utils/consts\";\r\n\r\nconst LogInPage = () => {\r\n  const { login } = useAuth();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const isValid = email.length !== 0 && password.length !== 0;\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!isValid) {\r\n      return setErrorMessage(\"One of your fields is totaly empty\");\r\n    }\r\n    await login(email, password, setErrorMessage, setLoading);\r\n  }\r\n  return (\r\n    <div className=\"In-Up-Container\">\r\n      <div className=\"CentralPlate\">\r\n        <FullScreenLoading loading={loading} />\r\n        <TitleAndLogo title=\"Log In\" />\r\n        <ErrorPlate errorMessage={errorMessage} />\r\n        <div className=\"inner-plate-content\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Enter your Email\"\r\n            className=\"emailInput\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"\"\r\n            id=\"\"\r\n            placeholder=\"Enter your password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <div className=\"inAndUpBtns\">\r\n            <button className=\"upBtn\" disabled={loading} onClick={handleSubmit}>\r\n              Log In\r\n            </button>\r\n            <Link to={SIGNUP_ROUTE}>\r\n              <button className=\"inBtn\">Create new account</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <BlurredBg />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogInPage;\r\n","import React from 'react'\r\n\r\nexport const Loading = ({currentTime, timeSpan, id}) => {\r\n\treturn (\r\n\t\t<div className = \"Loading\" id = {id}>\r\n\t\t\t<div className=\"outer\" style = {{pointerEvents:'none'}}>\r\n\t\t\t\t<div className=\"inner\" style = {currentTime/timeSpan < 1?{width:(currentTime/timeSpan)*100 + \"%\"}:{width:0 + \"%\", opacity:'0'}}></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useRef } from 'react'\r\nimport { useSong } from '../../contexts/SongContext'\r\nimport { Loading } from './Loading'\r\nimport {BiCheckCircle, BiDownArrow, BiUpArrow} from 'react-icons/bi'\r\nimport { FiXCircle } from 'react-icons/fi'\r\nimport useOnScreen from '../../hooks/useOnScreen'\r\nexport const LyricsParagraph = ({ el, index, lyricsModeratorMode, karaokeModeratorTimes,  setKaraokeModeratorTimes, setInputKaraokeTime, inputKaraokeTime }) => {\r\n\tconst { currentSongData, currentParagraph, displayAuthors, changeCurrentTime, play, currentTime, currentParagraphRef, lyrics} = useSong()\r\n\tconst paragraphRef = useRef()\r\n\tconst isVisible = useOnScreen(currentParagraph === index ? currentParagraphRef : paragraphRef)\r\n\tconst paragraphStyle = currentParagraph === index ?\r\n\t{} : window.innerWidth > 1000 ?\r\n\t\tMath.abs(currentParagraph - index) < 2 ?\r\n\t\t\t{ transform: 'scale(.8) translateX(-58px)' } : { transform: 'scale(.75) translateX(-78px)' } :\r\n\t\tMath.abs(currentParagraph - index) < 2 ?\r\n\t\t\t{ transform: 'scale(.8) translateX(-11.5%)' } : { transform: 'scale(.75) translateX(-15.6%)' }\r\n\r\n\tfunction addLyricsBlock(indexOfRelativeElement, direction){\t\t\r\n\t\tconst tempTimes = karaokeModeratorTimes\r\n\t\tif(direction === 'down'){\r\n\t\t\ttempTimes.splice(indexOfRelativeElement + 1, 0, undefined)\r\n\t\t\tsetKaraokeModeratorTimes(tempTimes)\r\n\t\t\treturn currentSongData.lyrics.splice(indexOfRelativeElement + 1, 0, {startTime:\"undefined\", text:\"@loading\"})\r\n\t\t}\r\n\t\t\r\n\t\ttempTimes.splice(indexOfRelativeElement, 0, undefined)\r\n\t\tsetKaraokeModeratorTimes(tempTimes)\r\n\t\tcurrentSongData.lyrics.splice(indexOfRelativeElement, 0, {startTime:\"undefined\", text:\"@loading\"})\r\n\t}\r\n\r\n\tfunction inputKaraoke(e, index) {\r\n\t\t// console.log(\"ewqewqewq\")\r\n\t\tlet tempArray = karaokeModeratorTimes\r\n\t\tlet convertedToNumber = e.target.value\r\n\t\ttempArray[index] = convertedToNumber\r\n\t\tsetInputKaraokeTime(e.target.value)\r\n\t\tsetKaraokeModeratorTimes(tempArray)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={\"lyricsBlock \" + (!isVisible ?\"notVisible\":\"\")} key={index} id={index} onClick={(e) => changeCurrentTime(e, el.startTime)} style={play ? currentParagraph === index ? {} : Math.abs(currentParagraph - index) < 2? { opacity: .5} : { opacity: .1} : {}} ref={currentParagraph === index ? currentParagraphRef : paragraphRef} >\r\n\t\t\t{\r\n\t\t\t\tlyricsModeratorMode === 1 ?\r\n\t\t\t\t\t<div className=\"lyricsBlockInput\">\r\n\t\t\t\t\t\t<span onClick={e => e.stopPropagation()}>{karaokeModeratorTimes[index] !== undefined && karaokeModeratorTimes[index].length !== 0 ? <BiCheckCircle style={{ background: 'var(--themeColor3)', color: 'var(--themeColor)' }} /> : <FiXCircle />} </span>\r\n\t\t\t\t\t\t<input type=\"number\" value={karaokeModeratorTimes[index] || inputKaraokeTime} onChange={(e) => inputKaraoke(e, index)} onClick={e => e.stopPropagation()} />\r\n\t\t\t\t\t\t<div className=\"addLyricsElementBtns\" onClick={e => e.stopPropagation()}>\r\n\t\t\t\t\t\t\t<button onClick={() => { addLyricsBlock(index, 'up') }}><BiUpArrow /></button>\r\n\t\t\t\t\t\t\t<button onClick={() => { addLyricsBlock(index, 'down') }}><BiDownArrow /></button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div> :\r\n\t\t\t\t\tnull\r\n\t\t\t}\r\n\t\t\t{\r\n\t\t\t\tel.text === \"@loading\" ?\r\n\t\t\t\t\t<Loading currentTime={currentTime - lyrics[index].startTime} timeSpan={lyrics[index + 1].startTime - lyrics[index].startTime} id={index} />\r\n\t\t\t\t\t:\r\n\t\t\t\t\tel.text === \"@end\" ? <></>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<p key={index} id={index} style={paragraphStyle}>{el.text}</p>\r\n\t\t\t}\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { LyricsParagraph } from \"../../../../components/FullScreenPlayer/LyricsParagraph\";\r\n\r\nconst LyricsWrapper = styled.div`\r\n  max-height: 500px;\r\n  width: 1000px;\r\n  overflow-y: auto;\r\n\r\n  .lyricsBlock {\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n    font-size: 1.8em;\r\n    font-weight: 700;\r\n    margin: 10px 0;\r\n    user-select: none;\r\n    cursor: pointer;\r\n    border-radius: var(--standartBorderRadius2);\r\n\r\n    &:hover {\r\n      background: #ffffff5c;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Lyrics = ({ song }) => {\r\n  return (\r\n    <LyricsWrapper>\r\n      {song.lyrics.map((lyricItem, i) => {\r\n        return <div className=\"lyricsBlock\">{lyricItem.text}</div>;\r\n      })}\r\n    </LyricsWrapper>\r\n  );\r\n};\r\n\r\nexport default Lyrics;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SongImageAndNameWrapper = styled.div`\r\n  width: 100%;\r\n  max-width: 800px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .song-image {\r\n    width: 300px;\r\n    height: 300px;\r\n    background-size: cover;\r\n    background-position: center center;\r\n    border-radius: var(--standartBorderRadius);\r\n  }\r\n`;\r\n\r\nconst SongImageAndName = ({ song }) => {\r\n  return (\r\n    <SongImageAndNameWrapper>\r\n      <div\r\n        className=\"song-image\"\r\n        style={{ backgroundImage: `url(${song.cover})` }}\r\n      />\r\n      <h3>{song.name}</h3>\r\n    </SongImageAndNameWrapper>\r\n  );\r\n};\r\n\r\nexport default SongImageAndName;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ContentContainer } from \"../../components/Containers/ContentContainer\";\r\nimport Lyrics from \"../../features/lyrics-editing/ui/molecules/lyrics\";\r\nimport SongImageAndName from \"../../features/lyrics-editing/ui/molecules/song-image-and-name\";\r\nimport { firestore } from \"../../firebase\";\r\n\r\nconst LyricsEditingWrapper = styled(ContentContainer)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  background: ${({ colors }) =>\r\n    `linear-gradient(45deg, ${colors[2]}, ${colors[3]});`};\r\n\r\n  h2 {\r\n    margin: 0;\r\n  }\r\n\r\n  .image-and-lyrics {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst LyricsEditingPage = () => {\r\n  const [songId, setSongId] = useState(\"3e35c47f-2186-4dea-a415-55616c525874\");\r\n  const [songData, setSongData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    firestore\r\n      .collection(\"songs\")\r\n      .doc(songId)\r\n      .get()\r\n      .then((res) => {\r\n        setSongData(res.data());\r\n      });\r\n  }, []);\r\n\r\n  //TODO: Wave visualizer?\r\n  return (\r\n    !!songData && (\r\n      <LyricsEditingWrapper colors={songData.imageColors}>\r\n        <div>\r\n          <div className=\"image-and-lyrics\">\r\n            <SongImageAndName song={songData} />\r\n            <Lyrics song={songData} />\r\n          </div>\r\n          <div></div>\r\n        </div>\r\n      </LyricsEditingWrapper>\r\n    )\r\n  );\r\n};\r\n\r\nexport default LyricsEditingPage;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../../styles/PageNotFound.css\";\r\n\r\nconst PageNotFound = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"PageNotFound\">\r\n      <img\r\n        loading=\"lazy\"\r\n        src=\"https://i.pinimg.com/originals/b2/3d/f6/b23df649311586e74a8455c92eb3d76b.png\"\r\n        alt=\"\"\r\n      />\r\n      <h2>Page not found</h2>\r\n      <button\r\n        className=\"standartButton\"\r\n        onClick={() => history.push(\"/library\")}\r\n      >\r\n        Back to library\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import { useEffect, useState } from 'react';\r\nimport { useAuth } from '../../../../contexts/AuthContext';\r\nimport { firestore } from '../../../../firebase';\r\n\r\nconst useSearchHistory = () => {\r\n\tconst [historySongs, setHistorySongs] = useState([]);\r\n\tconst [historyPlaylists, setHistoryPlaylists] = useState([]);\r\n\tconst [historyAuthors, setHistoryAuthors] = useState([]);\r\n\tconst { currentUser } = useAuth();\r\n\tuseEffect(() => {\r\n\t\tfirestore\r\n\t\t\t.collection(\"searchHistory\")\r\n\t\t\t.doc(currentUser.uid)\r\n\t\t\t.get()\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.data()?.history) {\r\n\t\t\t\t\tres.data().history.forEach(async ({ id, type }) => {\r\n\t\t\t\t\t\tconst itemData = (\r\n\t\t\t\t\t\t\tawait firestore.collection(type).doc(id).get()\r\n\t\t\t\t\t\t).data();\r\n\t\t\t\t\t\tswitch (type) {\r\n\t\t\t\t\t\t\tcase \"songs\":\r\n\t\t\t\t\t\t\t\tsetHistorySongs((prev) => [...prev, itemData]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"playlists\":\r\n\t\t\t\t\t\t\t\tsetHistoryPlaylists((prev) => [...prev, itemData]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"users\":\r\n\t\t\t\t\t\t\t\tsetHistoryAuthors((prev) => [...prev, itemData]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\treturn [historySongs, historyPlaylists, historyAuthors]\r\n}\r\n\r\nexport default useSearchHistory\r\n","import React from \"react\";\r\nimport { AlbumList } from \"../../../../components/Lists/AlbumList\";\r\nimport { AuthorsList } from \"../../../../components/Lists/AuthorsList\";\r\nimport { SongList } from \"../../../../components/Lists/SongList\";\r\nimport { useAuth } from \"../../../../contexts/AuthContext\";\r\nimport useSearchHistory from \"../../lib/hooks/use-search-history.jsx\";\r\n\r\nconst SearchHistory = () => {\r\n  const { searchValue } = useAuth();\r\n  const [historySongs, historyPlaylists, historyAuthors] = useSearchHistory();\r\n  return !searchValue ? (\r\n    <div\r\n      className=\"search-history\"\r\n      style={{ animation: \"zoomIn .2s forwards\" }}\r\n    >\r\n      <SongList\r\n        listOfSongs={historySongs}\r\n        source={{\r\n          source: \"/search\",\r\n          name: \"Search\",\r\n          image:\r\n            \"https://www.pngkey.com/png/full/87-872187_lupa-search-icon-white-png.png\",\r\n          songsList: historySongs,\r\n        }}\r\n        title={\"Search history\"}\r\n        showListens\r\n        displayIfEmpty={\"\"}\r\n        isHorizontal\r\n      />\r\n      <AuthorsList listOfAuthors={historyAuthors} />\r\n      <AlbumList listOfAlbums={historyPlaylists} loading={false} />\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default SearchHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport SearchBar from \"../../shared/ui/organisms/search-bar\";\r\nimport { ContentContainer } from \"../../components/Containers/ContentContainer\";\r\nimport { AlbumList } from \"../../components/Lists/AlbumList\";\r\nimport { AuthorsList } from \"../../components/Lists/AuthorsList\";\r\nimport { SongList } from \"../../components/Lists/SongList\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport SearchHistory from \"../../features/search/ui/organisms/search-history\";\r\nimport \"../../styles/SearchPage.css\";\r\n\r\nconst SearchPage = () => {\r\n  const { searchValue, setSearchValue } = useAuth();\r\n  const [resultSongList, setResultSongList] = useState([]);\r\n  const [resultAuthorList, setResultAuthorList] = useState([]);\r\n  const [resultAlbumList, setResultAlbumList] = useState([]);\r\n  const [shadowColor, setShadowColor] = useState(\"\");\r\n  useEffect(() => {\r\n    setResultSongList([]);\r\n    setResultAuthorList([]);\r\n    setResultAlbumList([]);\r\n  }, [searchValue]);\r\n\r\n  useEffect(() => {\r\n    if (resultSongList.length !== 0)\r\n      setShadowColor(resultSongList[0].imageColors[0] + \"a6\");\r\n    else if (resultAuthorList.length !== 0)\r\n      setShadowColor(resultAuthorList[0].imageColors[0] + \"a6\");\r\n    else if (resultAlbumList.length !== 0)\r\n      setShadowColor(resultAlbumList[0].imageColors[0] + \"a6\");\r\n    else setShadowColor(\"\");\r\n  }, [resultSongList, resultAuthorList, resultAlbumList]);\r\n\r\n  return (\r\n    <div\r\n      className=\"SearchPage\"\r\n      style={{\r\n        animation: \"zoomIn .2s forwards\",\r\n      }}\r\n    >\r\n      <ContentContainer>\r\n        <SearchBar\r\n          value={searchValue}\r\n          setValue={setSearchValue}\r\n          allFoundSongs={resultSongList}\r\n          setAllFoundSongs={setResultSongList}\r\n          setResultPlaylists={setResultAlbumList}\r\n          setResultAuthorList={setResultAuthorList}\r\n          focus\r\n        />\r\n        <SearchHistory />\r\n        <SongList\r\n          listOfSongs={resultSongList}\r\n          source={{\r\n            source: \"/search\",\r\n            name: \"Search\",\r\n            image:\r\n              \"https://www.pngkey.com/png/full/87-872187_lupa-search-icon-white-png.png\",\r\n            songsList: resultSongList,\r\n          }}\r\n          title={\"Songs\"}\r\n          showListens\r\n          saveSearchHistory\r\n          displayIfEmpty={\"\"}\r\n          isHorizontal\r\n        />\r\n        <AuthorsList\r\n          listOfAuthors={resultAuthorList}\r\n          title={\"Authors\"}\r\n          saveSearchHistory\r\n        />\r\n        <AlbumList\r\n          listOfAlbums={resultAlbumList}\r\n          title={\"Albums and Playlists\"}\r\n          loading={false}\r\n          saveSearchHistory\r\n        />\r\n        <div\r\n          className=\"colorfullShadow\"\r\n          style={{ background: shadowColor }}\r\n        ></div>\r\n      </ContentContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","import React from \"react\";\r\nimport { ContentContainer } from \"../../components/Containers/ContentContainer\";\r\n\r\nconst SettingsPage = () => {\r\n  return (\r\n    <ContentContainer>\r\n      <h2>Settings</h2>\r\n    </ContentContainer>\r\n  );\r\n};\r\n\r\nexport default SettingsPage;\r\n","import { CHAT_ROUTE, HISTORY_ROUTE, HOME_ROUTE, LIBRARY_ROUTE, LOGIN_ROUTE, NOTFOUND_ROUTE, SEARCH_ROUTE, SIGNUP_ROUTE, TEMPLATE_ALBUM, TEMPLATE_AUTHOR, TEMPLATE_CHAT, SETTINGS_ROUTE, LYRICS_EDITING_ROUTE } from \"./utils/consts\";\r\nimport { LibraryPage, ChatPage, PageNotFound, AlbumPage, DialoguePage, AuthorPage, LogInPage, HomePage, SearchPage, HistoryPage, SettingsPage, SignUpPage, LyricsEditingPage } from \"./pages\";\r\nexport const publicRoutes = [\r\n\t{\r\n\t\tpath: LOGIN_ROUTE,\r\n\t\tComponent: LogInPage,\r\n\t},\r\n\t{\r\n\t\tpath: SIGNUP_ROUTE,\r\n\t\tComponent: SignUpPage,\r\n\t}\r\n]\r\n\r\nexport const privateRoutes = [\r\n\t{\r\n\t\tpath: HOME_ROUTE,\r\n\t\tComponent: HomePage,\r\n\t},\r\n\t{\r\n\t\tpath: LIBRARY_ROUTE,\r\n\t\tComponent: LibraryPage,\r\n\t},\r\n\t{\r\n\t\tpath: SEARCH_ROUTE,\r\n\t\tComponent: SearchPage,\r\n\t},\r\n\t{\r\n\t\tpath: CHAT_ROUTE,\r\n\t\tComponent: ChatPage,\r\n\t},\r\n\t{\r\n\t\tpath: NOTFOUND_ROUTE,\r\n\t\tComponent: PageNotFound\r\n\t},\r\n\t{\r\n\t\tpath: TEMPLATE_CHAT,\r\n\t\tComponent: DialoguePage\r\n\t},\r\n\t{\r\n\t\tpath: TEMPLATE_ALBUM,\r\n\t\tComponent: AlbumPage\r\n\t},\r\n\t{\r\n\t\tpath: TEMPLATE_AUTHOR,\r\n\t\tComponent: AuthorPage\r\n\t},\r\n\t{\r\n\t\tpath: HISTORY_ROUTE,\r\n\t\tComponent: HistoryPage\r\n\t},\r\n\t{\r\n\t\tpath: SETTINGS_ROUTE,\r\n\t\tComponent: SettingsPage\r\n\t},\r\n\t{\r\n\t\tpath: LYRICS_EDITING_ROUTE,\r\n\t\tComponent: LyricsEditingPage\r\n\t}\r\n]","import React, { useState } from \"react\";\r\nimport { ColorExtractor } from \"react-color-extractor\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FullScreenLoading } from \"../../components/Loading/FullScreenLoading\";\r\nimport { BlurredBg } from \"../../components/SignIn-Up/BlurredBg\";\r\nimport { RadioBtn } from \"../../components/SignIn-Up/RadioBtn\";\r\nimport { TitleAndLogo } from \"../../components/SignIn-Up/TitleAndLogo\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport DownloadButton from \"../../shared/ui/atoms/download-button\";\r\nimport \"../../styles/SignIn-Up.css\";\r\nimport { LOGIN_ROUTE } from \"../../utils/consts\";\r\n\r\nconst SignUpPage = () => {\r\n  const [currentRoleChoice, setCurrentRoleChoice] = useState(1);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const { signup } = useAuth();\r\n  const [photoURL, setPhotoURL] = useState(\"\");\r\n  const isValid =\r\n    email.length !== 0 && password.length !== 0 && name.length !== 0;\r\n  const [imageLocalPath, setImageLocalPath] = useState(\"\");\r\n  const [imageColors, setImageColors] = useState([]);\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!isValid) {\r\n      return setErrorMessage(\"One of your fields is totaly empty\");\r\n    }\r\n\r\n    await signup(\r\n      email,\r\n      name,\r\n      password,\r\n      currentRoleChoice,\r\n      photoURL,\r\n      imageColors,\r\n      setErrorMessage,\r\n      setLoading\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"In-Up-Container\">\r\n      <ColorExtractor\r\n        src={imageLocalPath}\r\n        getColors={(colors) => setImageColors(colors)}\r\n      />\r\n      <div className=\"CentralPlate\">\r\n        <FullScreenLoading loading={loading} />\r\n        <TitleAndLogo title=\"Sign Up\" />\r\n\r\n        {errorMessage && <div className=\"Alert\">{errorMessage}</div>}\r\n\r\n        <div className=\"inner-plate-content\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Enter your Email\"\r\n            className=\"emailInput\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter your name\"\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"\"\r\n            id=\"\"\r\n            placeholder=\"Create a password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              margin: \"5px 0 15px 0\",\r\n            }}\r\n          >\r\n            <RadioBtn\r\n              label=\"User\"\r\n              onClick={() => setCurrentRoleChoice(0)}\r\n              currentActive={currentRoleChoice}\r\n              id={0}\r\n            />\r\n            <RadioBtn\r\n              label=\"Author\"\r\n              onClick={() => setCurrentRoleChoice(1)}\r\n              currentActive={currentRoleChoice}\r\n              id={1}\r\n            />\r\n          </div>\r\n          <DownloadButton\r\n            text=\"Download photo\"\r\n            place={\"usersImages/\"}\r\n            setItemSrc={setPhotoURL}\r\n            setImageLocalPath={setImageLocalPath}\r\n          />\r\n          <div className=\"inAndUpBtns\">\r\n            <button\r\n              className=\"upBtn\"\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              onClick={handleSubmit}\r\n            >\r\n              Sign Up\r\n            </button>\r\n            <Link to={LOGIN_ROUTE}>\r\n              <button className=\"inBtn\">Already have the account</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <BlurredBg />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUpPage;\r\n","import React from 'react'\r\nimport {Route, Switch, Redirect} from 'react-router-dom'\r\nimport { privateRoutes } from '../routes'\r\nimport { HOME_ROUTE } from '../utils/consts'\r\nexport const ContentRouter = () => {\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t{privateRoutes.map(({path, Component}, i)=>{\r\n\t\t\t\treturn <Route path={path} component={Component} exact key = {path}/>\r\n\t\t\t})}\r\n\t\t\t<Redirect to={HOME_ROUTE} />\r\n\t\t</Switch>\r\n\t)\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useAuth } from '../../../contexts/AuthContext';\r\nimport { firestore } from '../../../firebase';\r\n\r\nconst useChatNotifications = () => {\r\n\tconst [notifications, setNotifications] = useState([]);\r\n\tconst { currentUser } = useAuth()\r\n\r\n\tuseEffect(() => {\r\n\t\tconst unsubscribe = firestore\r\n\t\t\t.collection(\"chats\")\r\n\t\t\t.where(\"participants\", \"array-contains\", currentUser.uid)\r\n\t\t\t.onSnapshot((snapshot) => {\r\n\t\t\t\tsetNotifications((prev) => {\r\n\t\t\t\t\tconst temp = [...prev];\r\n\t\t\t\t\tsnapshot.docChanges().map(async (doc) => {\r\n\t\t\t\t\t\tif (doc.type === \"modified\" && doc.doc.data().messages.length) {\r\n\t\t\t\t\t\t\tconst { id, chatName, chatImage, messages } = doc.doc.data();\r\n\t\t\t\t\t\t\tconst lastMessage = messages[messages.length - 1];\r\n\t\t\t\t\t\t\tconst shouldPushNotif =\r\n\t\t\t\t\t\t\t\tlastMessage.sender !== currentUser.uid &&\r\n\t\t\t\t\t\t\t\t!lastMessage.seenBy.includes(currentUser.uid)\r\n\r\n\t\t\t\t\t\t\tif (shouldPushNotif) {\r\n\t\t\t\t\t\t\t\ttemp.push({\r\n\t\t\t\t\t\t\t\t\tchatId: id,\r\n\t\t\t\t\t\t\t\t\tchatName,\r\n\t\t\t\t\t\t\t\t\tchatImage,\r\n\t\t\t\t\t\t\t\t\tmessage: messages[messages.length - 1],\r\n\t\t\t\t\t\t\t\t\tuserId: messages[messages.length - 1].sender,\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn temp;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\treturn () => {\r\n\t\t\tunsubscribe();\r\n\t\t};\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (notifications.length) {\r\n\t\t\tlet timeout;\r\n\t\t\ttimeout = setTimeout(() => {\r\n\t\t\t\tsetNotifications((prev) => prev.slice(1, prev.length));\r\n\t\t\t}, 4700);\r\n\t\t}\r\n\t}, [notifications.length]);\r\n\r\n\treturn [notifications, setNotifications]\r\n}\r\n\r\nexport default useChatNotifications\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const MobileControlBarItem = ({element, currentPage, setCurrentPage}) => {\r\n\treturn (\r\n\t\t<Link to = {element.link} className = 'MobileControlBarItem' onClick = {()=>setCurrentPage(element.id)} style = {element.id === currentPage?{color:'var(--blue)'}:{}}>\t\r\n\t\t\t{element.icon}\r\n\t\t</Link>\r\n\t)\r\n}\r\n","import React, { useState } from 'react'\r\nimport '../../styles/BottomControlBar.css'\r\nimport {leftSideBar} from '../../data/leftSideBar'\r\nimport { MobileControlBarItem } from '../BottomControlBar/MobileControlBarItem'\r\nimport { useAuth } from '../../contexts/AuthContext'\r\nimport { BiUserCircle } from 'react-icons/bi'\r\nimport normalizeString from '../../functions/other/normalizeString'\r\nexport const BottomControlBar = () => {\r\n\tconst {currentUser} = useAuth()\r\n\tconst userElement = {\r\n\t\ticon:<BiUserCircle/>,\r\n\t\tlink:`/authors/${currentUser.uid}`,\r\n\t}\r\n\tconst [currentPage, setCurrentPage] = useState(\r\n\t\t() => {\r\n\t\t\tlet page = leftSideBar.find((el, i) => {\r\n\t\t\t\tif (window.location.hash.includes(normalizeString(el.title))) {\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false\r\n\t\t\t})\r\n\t\t\treturn page === undefined ? 0 : page.id\r\n\t\t}\r\n\t)\r\n\t\r\n\treturn (\r\n\t\t<div className = \"BottomControlBar\">\r\n\t\t\t{leftSideBar.map((el, i)=>{\r\n\t\t\t\treturn <MobileControlBarItem element = {el} key = {i} currentPage = {currentPage} setCurrentPage = {setCurrentPage}/>\r\n\t\t\t})}\r\n\t\t\t<MobileControlBarItem element = {userElement} currentPage = {currentPage} setCurrentPage = {setCurrentPage}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { useSong } from '../../contexts/SongContext'\r\nimport { Player } from '../FullScreenPlayer/Player'\r\nimport { BottomControlBar } from './BottomControlBar'\r\n\r\nexport const FullBottomSide = () => {\r\n\tconst { setOpenFullScreenPlayer, inputRange } = useSong()\r\n\treturn (\r\n\t\t<div className=\"FullBottomSide\">\r\n\t\t\t<span onClick={() => setOpenFullScreenPlayer(true)} style={{\r\n\t\t\t\tdisplay: \"block\",\r\n\t\t\t\tposition: \"relative\"\r\n\t\t\t}}>\r\n\t\t\t\t<Player textLimit={25} linkToAuthors={false} />\r\n\t\t\t\t<span className=\"mobileSongRange\" style={{ width: inputRange + \"%\" }}></span>\r\n\t\t\t</span>\r\n\t\t\t<BottomControlBar />\r\n\t\t</div>\r\n\t)\r\n}\r\n","export default __webpack_public_path__ + \"static/media/notification.d7ea662a.mp3\";","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { LastSentMessage } from \"../../features/chats/ui/molecules/last-sent-message\";\r\nimport { firestore } from \"../../firebase\";\r\nimport shortWord from \"../../functions/other/shortWord\";\r\nimport notifSound from \"../../music/notification.mp3\";\r\n\r\nconst ChatNotificationWindowWrapper = styled.div`\r\n  color: #fff;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  border-radius: var(--standartBorderRadius2);\r\n  background: #000000b9;\r\n  position: absolute;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  transition: 0.2s;\r\n  transform: translateY(\r\n    ${({ show, index }) => (!show ? \"90px\" : `-${index * 90 + index * 10}px`)}\r\n  );\r\n  opacity: ${({ show }) => (show ? \"1\" : \"0\")};\r\n  width: 250px;\r\n  height: 90px;\r\n\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n\r\n  &:hover {\r\n    background: #1f1f1fb3;\r\n  }\r\n\r\n  .image-and-name {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    font-weight: bold;\r\n\r\n    img {\r\n      width: 25px;\r\n      height: 25px;\r\n      border-radius: 100%;\r\n      margin-right: 7px;\r\n    }\r\n  }\r\n\r\n  .message {\r\n    margin-top: 10px;\r\n    display: flex;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nconst ChatNotificationWindow = ({\r\n  chatId,\r\n  chatName,\r\n  chatImage,\r\n  message,\r\n  userId,\r\n  index,\r\n  notifsLen = 0,\r\n}) => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    firestore\r\n      .collection(\"users\")\r\n      .doc(userId)\r\n      .get()\r\n      .then((res) => {\r\n        setShow(true);\r\n        const notificationSound = new Audio(notifSound);\r\n        notificationSound.play();\r\n        setUserData(res.data());\r\n        setTimeout(() => {\r\n          setShow(false);\r\n        }, 4500);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <ChatNotificationWindowWrapper show={show} index={index}>\r\n      <Link to={`/chat/${chatId}`}>\r\n        <div className=\"image-and-name\">\r\n          <img\r\n            src={chatImage?.length ? chatImage : userData?.photoURL}\r\n            alt=\"\"\r\n          />\r\n          {chatName.length ? chatName : userData?.displayName}\r\n        </div>\r\n        <div className=\"message\">\r\n          <LastSentMessage\r\n            sender={userData}\r\n            isGroup={chatName.length}\r\n            message={message}\r\n            messageLen={20}\r\n          />\r\n        </div>\r\n      </Link>\r\n    </ChatNotificationWindowWrapper>\r\n  );\r\n};\r\n\r\nexport default ChatNotificationWindow;\r\n","import React, { useRef } from \"react\";\r\nimport { useModal } from \"../../contexts/ModalContext\";\r\nimport useOutsideClick from \"../../shared/lib/hooks/use-outside-click\";\r\n\r\nexport const ConfirmWindow = () => {\r\n  const { isOpenConfirm, confirmContent, setIsOpenConfirm, closeConfirm } =\r\n    useModal();\r\n  const confirmRef = useRef(null);\r\n  useOutsideClick(confirmRef, setIsOpenConfirm);\r\n  return (\r\n    <div\r\n      className=\"modal_darkBg confirm\"\r\n      style={!isOpenConfirm ? { opacity: 0, visibility: \"hidden\" } : {}}\r\n    >\r\n      <div\r\n        className=\"ConfirmWindow\"\r\n        ref={confirmRef}\r\n        style={!isOpenConfirm ? { transform: \"translateY(40px)\" } : {}}\r\n      >\r\n        <h3>{confirmContent.question}</h3>\r\n        <div className=\"confirmButtons\">\r\n          <button onClick={confirmContent.onConfirm} className=\"standartButton\">\r\n            {confirmContent.confirmText}\r\n          </button>\r\n          <button onClick={confirmContent.onReject} className=\"standartButton\">\r\n            {confirmContent.rejectText}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { FaRegCheckCircle, FaRegTimesCircle } from \"react-icons/fa\";\r\nimport { useModal } from \"../../contexts/ModalContext\";\r\n\r\nexport const MessageWindow = () => {\r\n  const { bottomMessage } = useModal();\r\n\r\n  const findIcon = () => {\r\n    switch (bottomMessage.type) {\r\n      case \"success\":\r\n        return <FaRegCheckCircle />;\r\n      case \"failure\":\r\n        return <FaRegTimesCircle />;\r\n      default:\r\n        return <FaRegCheckCircle />;\r\n    }\r\n  };\r\n\r\n  const findColor = () => {\r\n    switch (bottomMessage.type) {\r\n      case \"success\":\r\n        return { light: \"#69e985\", dark: \"#12321ce6\" };\r\n      case \"failure\":\r\n        return { light: \"#f4546a\", dark: \"#581921d8\" };\r\n      default:\r\n        return { light: \"#69e985\", dark: \"#12321ce6\" };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`bottom-message ${bottomMessage.isOpenned ? \"openned\" : \"\"}`}\r\n      style={{ background: findColor().dark, color: findColor().light }}\r\n    >\r\n      {findIcon()}\r\n      <span>{bottomMessage.message}</span>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useModal } from \"../../contexts/ModalContext\";\r\nimport useOutsideClick from \"../../shared/lib/hooks/use-outside-click\";\r\nimport { useScreen } from \"../../contexts/ScreenContext\";\r\nexport const ModalWindow = ({ ...restProps }) => {\r\n  const { openModal, setOpenModal, content } = useModal();\r\n  const modalRef = useRef(null);\r\n  const { screenHeight } = useScreen();\r\n  useOutsideClick(modalRef, setOpenModal);\r\n  return (\r\n    <div\r\n      className=\"modal_darkBg\"\r\n      style={\r\n        !openModal\r\n          ? { opacity: 0, visibility: \"hidden\" }\r\n          : { height: screenHeight }\r\n      }\r\n    >\r\n      <div\r\n        className=\"ModalWindow\"\r\n        {...restProps}\r\n        ref={modalRef}\r\n        style={\r\n          !openModal\r\n            ? {\r\n                opacity: 0,\r\n                visibility: \"hidden\",\r\n                transform: \"translateY(40px)\",\r\n              }\r\n            : {}\r\n        }\r\n      >\r\n        {content}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Share } from '../components/FullScreenPlayer/Share';\r\nimport { Options } from '../components/FullScreenPlayer/Options';\r\nimport { Lyrics } from '../components/FullScreenPlayer/Lyrics';\r\nimport { Queue } from '../components/FullScreenPlayer/Queue';\r\nimport { BiDotsVerticalRounded, BiShare } from 'react-icons/bi';\r\nimport {RiPlayListFill} from 'react-icons/ri'\r\nimport {FiAlignLeft} from 'react-icons/fi'\r\nimport { TiDocumentText } from 'react-icons/ti';\r\nimport { AuthorsList } from '../components/FullScreenPlayer/AuthorsList';\r\nimport { SongInfo } from '../components/Info/SongInfo';\r\nimport { AddToPlaylists } from '../components/FullScreenPlayer/AddToPlaylists';\r\nexport const rightSide = [\r\n\t{\r\n\t\tid:0, \r\n\t\ticon:<BiShare/>,\r\n\t\ttitle:'Share',\r\n\t\tcomponent:Share\r\n\t},\r\n\t{\r\n\t\tid:1, \r\n\t\ticon:<BiDotsVerticalRounded/>,\r\n\t\ttitle:'More',\r\n\t\tcomponent:Options\r\n\t},\r\n\t{\r\n\t\tid:2, \r\n\t\ticon:<TiDocumentText/>,\r\n\t\ttitle:'Lyrics',\r\n\t\tcomponent:Lyrics\r\n\t},\r\n\t{\r\n\t\tid:3, \r\n\t\ticon:<RiPlayListFill/>,\r\n\t\ttitle:'Queue',\r\n\t\tcomponent:Queue\r\n\t},\r\n\t{\r\n\t\tid:4, \r\n\t\ticon:null,\r\n\t\ttitle:'Go To Authors',\r\n\t\tcomponent:AuthorsList\r\n\t},\r\n\t{\r\n\t\tid:5, \r\n\t\ticon:null,\r\n\t\ttitle:'Add to playlist',\r\n\t\tcomponent:AddToPlaylists\r\n\t},\r\n\t{\r\n\t\tid:6, \r\n\t\ticon:null,\r\n\t\ttitle:'Info',\r\n\t\tcomponent:SongInfo\r\n\t},\r\n]","import React from 'react'\r\nimport { FaFacebookF, FaTelegramPlane, FaVk } from 'react-icons/fa'\r\nimport { FiCopy } from 'react-icons/fi'\r\nimport { AiFillInstagram } from 'react-icons/ai'\r\nimport { ImWhatsapp } from 'react-icons/im'\r\nimport { useSong } from '../../contexts/SongContext'\r\nimport {FriendsListToShareWith} from '../Lists/FriendsListToShareWith'\r\nexport const Share = () => {\r\n\tconst {currentSongData} = useSong()\r\n\tconst socialMedia = [\r\n\t\t<ImWhatsapp />,\r\n\t\t<FaFacebookF />,\r\n\t\t<FaTelegramPlane />,\r\n\t\t<FaVk />,\r\n\t\t<AiFillInstagram />\r\n\t]\r\n\treturn (\r\n\t\t<div className=\"Share\">\r\n\t\t\t<button className=\"shareCopyLink\">\r\n\t\t\t\t<FiCopy />\r\n\t\t\t\tCopy link\r\n\t\t\t</button>\r\n\t\t\t<div className=\"shareOnSocial\">\r\n\t\t\t\t{socialMedia.map((social, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"shareSocialIcon\" key={index}>\r\n\t\t\t\t\t\t\t{social}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"sharePeopleShort\">\r\n\t\t\t\t<FriendsListToShareWith item = {currentSongData} whatToShare = {'song'}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport {MdPlaylistAdd} from 'react-icons/md'\r\nimport { BiUserCircle } from \"react-icons/bi\";\r\nimport {FiInfo} from 'react-icons/fi'\r\nimport { useSong } from '../../contexts/SongContext';\r\nimport AddOrDeleteButtonFull from './AddOrDeleteSongButton';\r\nexport const Options = () => {\r\n\tconst {currentSongData, setRightSideCurrentPage} = useSong()\r\n\treturn (\r\n\t\t<div className='Options'>\r\n\t\t\t<div className='OptionItem' >\r\n\t\t\t\t<AddOrDeleteButtonFull song = {currentSongData}/>\r\n\t\t\t</div>\r\n\t\t\t<div className='OptionItem' onClick = {()=>setRightSideCurrentPage(4)}>\r\n\t\t\t\t<BiUserCircle />\r\n\t\t\t\tGo to author\r\n\t\t\t</div>\r\n\t\t\t<div className='OptionItem' onClick = {()=>setRightSideCurrentPage(5)}>\r\n\t\t\t\t<MdPlaylistAdd />\r\n\t\t\t\tAdd to playlist\r\n\t\t\t</div>\r\n\t\t\t<div className='OptionItem' onClick = {()=>setRightSideCurrentPage(6)}>\r\n\t\t\t\t<FiInfo/>\r\n\t\t\t\tInfo\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport { useSong } from '../../contexts/SongContext'\r\nimport { useAuth } from '../../contexts/AuthContext'\r\nimport { firestore } from '../../firebase'\r\nimport { Slider } from '../Tools/Slider'\r\nimport {BiCheckCircle, BiDownArrow, BiUpArrow} from 'react-icons/bi'\r\nimport { FiXCircle } from 'react-icons/fi'\r\nimport { LyricsParagraph } from './LyricsParagraph'\r\nexport const Lyrics = () => {\r\n\tconst { setIsThereKaraoke, currentSongData, setCurrentSongData, isThereKaraoke, currentParagraph, displayAuthors, changeCurrentTime, play, currentTime, currentParagraphRef, currentSong, lyrics, rightSideCurrentPage, openFullScreenPlayer, openMenu } = useSong()\r\n\tconst { currentUser } = useAuth()\r\n\tconst [inputKaraokeTime, setInputKaraokeTime] = useState(0)\r\n\tconst [karaokeModeratorTimes, setKaraokeModeratorTimes] = useState([])\r\n\tconst [lyricsModeratorMode, setLyricsModeratorMode] = useState(0)\r\n\tconst [canUpdateLyrics, setCanUpdateLyrics] = useState(false)\r\n\tuseEffect(() => {\r\n\t\tif (isThereKaraoke && (openMenu && rightSideCurrentPage === 2) && openFullScreenPlayer) currentParagraphRef.current.scrollIntoView()\r\n\t}, [currentParagraph])\r\n\tfunction inputKaraoke(e, index) {\r\n\t\tlet tempArray = karaokeModeratorTimes\r\n\t\tlet convertedToNumber = e.target.value\r\n\t\ttempArray[index] = convertedToNumber\r\n\t\tsetInputKaraokeTime(e.target.value)\r\n\t\tsetKaraokeModeratorTimes(tempArray)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif(lyrics && lyrics[0].startTime !== 'undefined'){\r\n\t\t\tlyrics.forEach(paragraph => {\r\n\t\t\t\tkaraokeModeratorTimes.push(paragraph.startTime)\r\n\t\t\t});\r\n\t\t\tsetCanUpdateLyrics(true)\r\n\t\t}\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tlet tempSongData = currentSongData\r\n\t\t// console.log(tempSongData)\r\n\t\tif (tempSongData !== undefined && inputKaraokeTime !== 0) {\r\n\t\t\ttempSongData.lyrics.forEach((paragraph, index) => {\r\n\t\t\t\tparagraph.startTime = karaokeModeratorTimes[index] || 'undefined'\r\n\t\t\t})\r\n\t\t\tsetCurrentSongData(tempSongData)\r\n\t\t\tsetIsThereKaraoke(true)\r\n\t\t}\r\n\r\n\t\tif(!currentSongData.lyrics?.some(paragraph=>paragraph.startTime === 'undefined')) setCanUpdateLyrics(true)\r\n\t\telse setCanUpdateLyrics(false)\r\n\t}, [inputKaraokeTime])\r\n\tfunction updateLyrics() {\r\n\t\t//TODO: add if statement to prevent adding lyrics time spans to not everysingle paragraph block\r\n\t\tfirestore.collection('songs').doc(currentSongData.id).update({\r\n\t\t\tlyrics: currentSongData.lyrics\r\n\t\t})\r\n\t}\r\n\r\n\t// console.log(currentSongData)\r\n\r\n\tfunction addLyricsBlock(indexOfRelativeElement, direction){\t\t\r\n\t\tconst tempTimes = karaokeModeratorTimes\r\n\t\tif(direction === 'down'){\r\n\t\t\ttempTimes.splice(indexOfRelativeElement + 1, 0, undefined)\r\n\t\t\tsetKaraokeModeratorTimes(tempTimes)\r\n\t\t\treturn currentSongData.lyrics.splice(indexOfRelativeElement + 1, 0, {startTime:\"undefined\", text:\"@loading\"})\r\n\t\t}\r\n\t\t\r\n\t\ttempTimes.splice(indexOfRelativeElement, 0, undefined)\r\n\t\tsetKaraokeModeratorTimes(tempTimes)\r\n\t\tcurrentSongData.lyrics.splice(indexOfRelativeElement, 0, {startTime:\"undefined\", text:\"@loading\"})\r\n\t}\r\n\r\n\treturn lyrics?(\r\n\t\t<div className=\"Lyrics\">\r\n\t\t\t{\r\n\t\t\t\tcurrentUser.isAdmin ?\r\n\t\t\t\t\t<Slider pages={['Listen mode', 'Edit Mode']} currentPage={lyricsModeratorMode} setCurrentPage={setLyricsModeratorMode} /> :\r\n\t\t\t\t\tnull\r\n\t\t\t}\r\n\t\t\t{\r\n\t\t\t\tisThereKaraoke ?\r\n\t\t\t\t\tlyrics.map((el, i) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<LyricsParagraph el = {el} index = {i} lyricsModeratorMode = {lyricsModeratorMode} karaokeModeratorTimes = {karaokeModeratorTimes} setKaraokeModeratorTimes = {setKaraokeModeratorTimes} setInputKaraokeTime = {setInputKaraokeTime} inputKaraokeTime = {inputKaraoke}/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}) :\r\n\t\t\t\t\tlyrics.map((el, i) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className=\"lyricsBlock\" key={i}>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tlyricsModeratorMode === 1 ?\r\n\t\t\t\t\t\t\t\t\t<div className=\"lyricsBlockInput\">\r\n\t\t\t\t\t\t\t\t\t\t{karaokeModeratorTimes[i] !== undefined && karaokeModeratorTimes[i].length !== 0?<BiCheckCircle style = {{background:'var(--themeColor3)', color:'var(--themeColor)'}}/>:<FiXCircle/>} \r\n\t\t\t\t\t\t\t\t\t\t<input type=\"number\"  value={karaokeModeratorTimes[i] || inputKaraokeTime} onChange={(e) => inputKaraoke(e, i)} onClick={e => e.stopPropagation()} /> \r\n\t\t\t\t\t\t\t\t\t\t<div className=\"addLyricsElementBtns\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button onClick = {()=>addLyricsBlock(i, 'up')}><BiUpArrow/></button>\r\n\t\t\t\t\t\t\t\t\t\t\t<button onClick = {()=>addLyricsBlock(i, 'down')}><BiDownArrow/></button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>:\r\n\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t<p>{el.text}</p>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t<h6 className={\"lyricsAuthors \" + (currentParagraph === lyrics.length - 1 ? \"active\" : \"\")}>Authors:  {displayAuthors()}</h6>\r\n\t\t\t{\r\n\t\t\t\tlyricsModeratorMode === 1 ?\r\n\t\t\t\t\t<button onClick={canUpdateLyrics?updateLyrics:null} className=\"updateLyricsBtn\" style = {!canUpdateLyrics?{opacity:0.3}:{}}>Update Lyrics</button> :\r\n\t\t\t\t\tnull\r\n\t\t\t}\r\n\t\t</div>\r\n\t): <h3>No lyrics</h3>\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSong } from \"../../contexts/SongContext\";\r\nimport { SongItem } from \"../../features/song/ui/organisms/song-item\";\r\nimport shortWord from \"../../functions/other/shortWord\";\r\n\r\nexport const Queue = () => {\r\n  const {\r\n    currentSongQueue,\r\n    currentSongPlaylistSource,\r\n    setOpenFullScreenPlayer,\r\n  } = useSong();\r\n  return (\r\n    <div className=\"Queue\">\r\n      <div className=\"queueNowIsPlaying\">\r\n        <h5 style={{ marginTop: 2 }}>\r\n          Now is playing:\r\n          <Link\r\n            onClick={() => setOpenFullScreenPlayer(false)}\r\n            to={currentSongPlaylistSource.source}\r\n            className=\"queueAlbumName\"\r\n          >\r\n            <div\r\n              className=\"queueImage\"\r\n              style={currentSongPlaylistSource.image ? {} : { display: \"none\" }}\r\n            >\r\n              <img\r\n                loading=\"lazy\"\r\n                src={currentSongPlaylistSource.image}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <span>{shortWord(currentSongPlaylistSource.name, 25)}</span>\r\n          </Link>\r\n        </h5>\r\n      </div>\r\n      {currentSongQueue.map((song, index) => {\r\n        return <SongItem song={song} localIndex={index} key={index} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import \"../../app/index.css\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport { BiChevronLeft } from \"react-icons/bi\";\r\nimport { rightSide } from \"../../data/playerRightSide\";\r\nimport { Player } from \"../FullScreenPlayer/Player\";\r\nimport { HiChevronDown } from \"react-icons/hi\";\r\nimport { useSong } from \"../../contexts/SongContext\";\r\nimport { FiMinus } from \"react-icons/fi\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport checkNumber from \"../../shared/lib/check-number\";\r\nimport { useScreen } from \"../../contexts/ScreenContext\";\r\nimport useOutsideClick from \"../../shared/lib/hooks/use-outside-click\";\r\n\r\nexport default function FullScreenPlayer() {\r\n  const {\r\n    imgColors,\r\n    inputRef,\r\n    rightSideCurrentPage,\r\n    setRightSideCurrentPage,\r\n    openFullScreenPlayer,\r\n    setOpenFullScreenPlayer,\r\n    lyrics,\r\n    openMenu,\r\n    setOpenMenu,\r\n  } = useSong();\r\n  const { isMobile, screenHeight, screenWidth } = useScreen();\r\n  const lyricsRef = useRef(null);\r\n  const [transformTransition, setTransformTransition] = useState(0.05);\r\n  const [mobileMenuTransition, setMobileMenuTransition] = useState(0);\r\n  // const [swipeDown, setSwipeDown] = useState(false)\r\n  const [deltaY, setDeltaY] = useState(0);\r\n  const [deltaYMobileMenu, setDeltaYMobileMenu] = useState(0);\r\n  const mobileContentScroll = useRef();\r\n  // setup ref for your usage\r\n  const mobileMenuRef = React.useRef();\r\n  useOutsideClick(mobileMenuRef, setOpenMenu);\r\n  const handlers = useSwipeable({\r\n    // onSwiped: (eventData) => {setSwipeDown(eventData.dir === 'Down')},\r\n    onSwiping: (event) => {\r\n      if (event.deltaY > 0) setDeltaY(event.deltaY);\r\n    },\r\n  });\r\n\r\n  // setup ref for your usage\r\n  const bgRef = React.useRef();\r\n\r\n  const handlersForMobileMenu = useSwipeable({\r\n    onSwiping: (event) => {\r\n      event.event.stopPropagation();\r\n      if (\r\n        openMenu &&\r\n        mobileContentScroll.current.scrollTop === 0 &&\r\n        event.deltaY > 0\r\n      )\r\n        setDeltaYMobileMenu(event.deltaY);\r\n      else if (!openMenu && event.deltaY < 0) setDeltaYMobileMenu(event.deltaY);\r\n    },\r\n    onSwipedLeft: () => {\r\n      setRightSideCurrentPage(checkNumber(rightSideCurrentPage + 1, 3));\r\n    },\r\n    onSwipedRight: () => {\r\n      setRightSideCurrentPage(checkNumber(rightSideCurrentPage - 1, 3));\r\n    },\r\n  });\r\n\r\n  function returnToInitialMobileMenu() {\r\n    let dropDelta;\r\n    clearTimeout(dropDelta);\r\n    setMobileMenuTransition(0);\r\n    dropDelta = setTimeout(() => {\r\n      setMobileMenuTransition(0.2);\r\n      setDeltaYMobileMenu(0);\r\n    }, 300);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (deltaY > 150) {\r\n      setOpenFullScreenPlayer(false);\r\n    }\r\n  }, [deltaY]);\r\n\r\n  useEffect(() => {\r\n    if (!openMenu && deltaYMobileMenu < -100) {\r\n      setOpenMenu(true);\r\n      setDeltaYMobileMenu(0);\r\n      setMobileMenuTransition(0.2);\r\n    } else if (openMenu && deltaYMobileMenu > 150) {\r\n      setOpenMenu(false);\r\n      setDeltaYMobileMenu(0);\r\n      setMobileMenuTransition(0.2);\r\n    } else {\r\n      returnToInitialMobileMenu();\r\n    }\r\n  }, [deltaYMobileMenu]);\r\n\r\n  function returnToInitial() {\r\n    let dropDelta;\r\n    clearTimeout(dropDelta);\r\n    setTransformTransition(0.2);\r\n    dropDelta = setTimeout(() => {\r\n      setDeltaY(0);\r\n      setTransformTransition(0);\r\n    }, 100);\r\n  }\r\n\r\n  const refPassthroughBg = (el) => {\r\n    handlers.ref(el);\r\n    bgRef.current = el;\r\n  };\r\n\r\n  const refPassthroughMobileMenu = (el) => {\r\n    handlersForMobileMenu.ref(el);\r\n    mobileMenuRef.current = el;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (imgColors.length !== 0) {\r\n      document.documentElement.style.setProperty(\"--themeColor\", imgColors[1]);\r\n      document.documentElement.style.setProperty(\"--themeColor2\", imgColors[0]);\r\n      document.documentElement.style.setProperty(\"--themeColor3\", imgColors[2]);\r\n      document.documentElement.style.setProperty(\"--themeColor4\", imgColors[5]);\r\n      document.documentElement.style.setProperty(\r\n        \"--themeColorTransparent\",\r\n        imgColors[0] + \"6e\"\r\n      );\r\n    }\r\n  }, [imgColors]);\r\n\r\n  function rightSideContent(currentPage) {\r\n    let RightSidePage = rightSide[currentPage].component;\r\n    return <RightSidePage />;\r\n  }\r\n\r\n  function noLyrics() {\r\n    return lyrics && lyrics.length === 0;\r\n  }\r\n\r\n  function changeRightSidePage(el) {\r\n    if (el.id === 2 && noLyrics()) return null;\r\n    setMobileMenuTransition(0.2);\r\n    setRightSideCurrentPage(el.id);\r\n    setOpenMenu(true);\r\n  }\r\n  return (\r\n    <div\r\n      className=\"bg\"\r\n      style={\r\n        openFullScreenPlayer\r\n          ? {\r\n              top: 0,\r\n              opacity: 1,\r\n              visibility: \"visible\",\r\n              zIndex: 10,\r\n              transform: `translateY(${deltaY}px)`,\r\n              borderRadius: `${deltaY < 20 ? deltaY : 20}px ${\r\n                deltaY < 20 ? deltaY : 20\r\n              }px 0 0`,\r\n              transition: `.4s opacity, ${transformTransition}s transform, .4s top, .4s visibility`,\r\n            }\r\n          : {\r\n              transform: `translateY(${deltaY}px)`,\r\n              transition: `.4s opacity, ${transformTransition}s transform, .4s top, .4s visibility`,\r\n            }\r\n      }\r\n      ref={refPassthroughBg}\r\n      {...handlers}\r\n      onTouchEnd={returnToInitial}\r\n    >\r\n      {/* <div className=\"auroraWrapper\">\r\n        <svg height={screenHeight} width={screenWidth}>\r\n          <defs>\r\n            <filter id=\"f1\" x=\"0\" y=\"0\">\r\n              <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"215\" />\r\n            </filter>\r\n          </defs>\r\n          <circle cx={screenWidth/2} cy=\"0\" r={screenHeight}\r\n            fill={imgColors[0]} filter=\"url(#f1)\" />\r\n        </svg>\r\n      </div> */}\r\n\r\n      <div\r\n        className=\"closeFullScreen\"\r\n        onClick={() => {\r\n          setOpenFullScreenPlayer(false);\r\n        }}\r\n      >\r\n        {window.innerWidth > 1000 ? (\r\n          <HiChevronDown />\r\n        ) : (\r\n          <FiMinus style={{ opacity: 0.6 }} />\r\n        )}\r\n      </div>\r\n      <div className=\"FullScreenPlayer\">\r\n        <div\r\n          className=\"leftSide\"\r\n          style={\r\n            !openMenu\r\n              ? { width: \"100%\" }\r\n              : isMobile\r\n              ? {\r\n                  opacity: 0.6,\r\n                  visibility: \"visible\",\r\n                  transform: `translateY(20px)`,\r\n                  borderRadius: `10px`,\r\n                  transition: `.4s`,\r\n                }\r\n              : null\r\n          }\r\n        >\r\n          <Player inputRef={inputRef} />\r\n        </div>\r\n        {window.innerWidth > 1000 ? (\r\n          <div\r\n            className=\"rightSideWrapper\"\r\n            style={\r\n              !openMenu\r\n                ? { transform: \"translateX(calc(100% - 90px))\", width: 0 }\r\n                : {}\r\n            }\r\n          >\r\n            <button\r\n              className=\"menuBtn\"\r\n              style={\r\n                openMenu\r\n                  ? { transform: \"rotate(180deg)\" }\r\n                  : { opacity: 0, visibility: \"hidden\" }\r\n              }\r\n              onClick={() => setOpenMenu(!openMenu)}\r\n            >\r\n              <BiChevronLeft />\r\n            </button>\r\n            <div className=\"rightSideControl\">\r\n              {rightSide.map((el, i) => {\r\n                return (\r\n                  <div\r\n                    className=\"controlIcon\"\r\n                    key={el.id}\r\n                    style={\r\n                      el.id === rightSideCurrentPage && openMenu\r\n                        ? { background: \"var(--themeColor)\" }\r\n                        : el.id === 2 && noLyrics()\r\n                        ? { opacity: 0.4 }\r\n                        : {}\r\n                    }\r\n                    onClick={() => changeRightSidePage(el)}\r\n                  >\r\n                    {el.icon}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div\r\n              className=\"rightSide\"\r\n              ref={lyricsRef}\r\n              style={!openMenu ? { display: \"none\" } : {}}\r\n            >\r\n              {rightSideContent(rightSideCurrentPage)}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div\r\n            className=\"mobilePlayerMenu\"\r\n            {...handlersForMobileMenu}\r\n            ref={refPassthroughMobileMenu}\r\n            style={\r\n              openMenu\r\n                ? {\r\n                    top: `calc(100% - calc(70vh + 55px) + ${deltaYMobileMenu}px)`,\r\n                    transition: `${mobileMenuTransition}s`,\r\n                  }\r\n                : {\r\n                    top: `calc(100% - 55px + ${deltaYMobileMenu}px)`,\r\n                    transition: `${mobileMenuTransition}s`,\r\n                  }\r\n            }\r\n            // onTouchStart = {returnToInitialMobileMenu}\r\n          >\r\n            <div className=\"mobilePlayerMenuClose\">\r\n              <FiMinus\r\n                style={{ opacity: 0.6, width: \"50px\" }}\r\n                onClick={() => setOpenMenu(!openMenu)}\r\n              />\r\n            </div>\r\n            <div className=\"controlIconsWrapper\">\r\n              {rightSide.map((el, i) => {\r\n                if (i <= 3) {\r\n                  return (\r\n                    <div\r\n                      className=\"controlIcon\"\r\n                      key={el.id}\r\n                      style={\r\n                        el.id === rightSideCurrentPage && openMenu\r\n                          ? { background: \"var(--transparentWhite)\" }\r\n                          : el.id === 2 && noLyrics()\r\n                          ? { opacity: 0.4 }\r\n                          : {}\r\n                      }\r\n                      onClick={(e) => changeRightSidePage(el)}\r\n                    >\r\n                      {el.title}\r\n                    </div>\r\n                  );\r\n                }\r\n              })}\r\n            </div>\r\n            <div\r\n              className=\"mobilePlayerMenuContent\"\r\n              ref={mobileContentScroll}\r\n              style={!openMenu ? { opacity: 0 } : {}}\r\n            >\r\n              {rightSideContent(rightSideCurrentPage)}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useScreen } from \"../../contexts/ScreenContext\";\r\nimport { useSong } from \"../../contexts/SongContext\";\r\nimport { LeftsideBar } from \"../../features/leftside-bar/ui/organisms/leftside-bar\";\r\nimport { firestore } from \"../../firebase\";\r\nimport { useMediaMetadata } from \"../../hooks/useMediaMetadata\";\r\nimport { useUpdateListenCount } from \"../../hooks/useUpdateListenCount\";\r\nimport { ContentRouter } from \"../../routers/ContentRouter\";\r\nimport useChatNotifications from \"../../shared/lib/hooks/use-chat-notifications\";\r\nimport \"../../styles/FullScreenPlayer.css\";\r\nimport { FullBottomSide } from \"../Mobile/FullBottomSide\";\r\nimport ChatNotificationWindow from \"../Windows/chat-notification-window\";\r\nimport { ConfirmWindow } from \"../Windows/ConfirmWindow\";\r\nimport { MessageWindow } from \"../Windows/MessageWindow\";\r\nimport { ModalWindow } from \"../Windows/ModalWindow\";\r\nimport FullScreenPlayer from \"./FullScreenPlayer\";\r\n\r\nexport const ContentWrapper = () => {\r\n  const {\r\n    songRef,\r\n    loadSongData,\r\n    playing,\r\n    songSrc,\r\n    openFullScreenPlayer,\r\n    repeatMode,\r\n    setPlay,\r\n    prevSong,\r\n    currentSongQueue,\r\n    nextSong,\r\n  } = useSong();\r\n  const { isMobile, screenHeight } = useScreen();\r\n  const { currentUser } = useAuth();\r\n  const fiveMinutes = 300000; // 10min\r\n  const [intervalExciter, setIntervalExciter] = useState(true);\r\n  const [notifications, setNotifications] = useChatNotifications();\r\n\r\n  useMediaMetadata();\r\n  const updateListenCount = useUpdateListenCount();\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      firestore\r\n        .collection(\"users\")\r\n        .doc(currentUser.uid)\r\n        .update({ online: new Date().getTime() });\r\n      setIntervalExciter(!intervalExciter);\r\n    }, fiveMinutes);\r\n    return () => clearInterval(interval);\r\n  }, [intervalExciter]);\r\n\r\n  useEffect(() => {\r\n    firestore\r\n      .collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .update({ online: new Date().getTime() });\r\n  }, []);\r\n\r\n  function audioEnded() {\r\n    if (repeatMode === 0) {\r\n      songRef.current.pause();\r\n      setPlay(false);\r\n      return prevSong();\r\n    } else if (repeatMode === 1) {\r\n      if (currentSongQueue.length === 1) {\r\n        prevSong();\r\n        updateListenCount();\r\n        return songRef.current.play();\r\n      }\r\n      return nextSong();\r\n    }\r\n    prevSong();\r\n    updateListenCount();\r\n    songRef.current.play();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <audio\r\n        src={songSrc}\r\n        ref={songRef}\r\n        onLoadedData={loadSongData}\r\n        onTimeUpdate={playing}\r\n        onEnded={audioEnded}\r\n      ></audio>\r\n      <div\r\n        className={\"Wrapper \" + (openFullScreenPlayer ? \"turnedOff\" : \"\")}\r\n        style={isMobile ? { height: screenHeight } : { height: \"100vh\" }}\r\n      >\r\n        {!isMobile ? (\r\n          <LeftsideBar />\r\n        ) : window.location.hash.substr(2, 4) === \"chat\" &&\r\n          window.location.hash.length > 6 ? null : (\r\n          <FullBottomSide />\r\n        )}\r\n        <div className=\"Content\">\r\n          <ContentRouter />\r\n        </div>\r\n        <MessageWindow />\r\n        <ModalWindow />\r\n        <ConfirmWindow />\r\n        {notifications.map((notif, index) => {\r\n          return (\r\n            <ChatNotificationWindow\r\n              {...notif}\r\n              index={index}\r\n              notifsLen={notifications.length}\r\n              setNotifications={setNotifications}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <FullScreenPlayer />\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useSong } from '../contexts/SongContext'\r\nimport { firestore } from '../firebase'\r\n\r\nexport const useUpdateListenCount = () => {\r\n\tlet listenCountTimeOut = useRef()\r\n\tconst { currentSongData, currentSongPlaylistSource, songDuration, play } = useSong()\r\n\tfunction updateListenCount() {\r\n\t\tif (currentSongData.id !== -1) {\r\n\t\t\tlistenCountTimeOut.current = setTimeout(async () => {\r\n\t\t\t\tlet listens = (await firestore.collection('songs').doc(currentSongData.id).get()).data().listens\r\n\t\t\t\t++listens\r\n\t\t\t\tfirestore.collection('songs').doc(currentSongData.id).update({\r\n\t\t\t\t\tlistens: listens\r\n\t\t\t\t})\r\n\r\n\t\t\t\t//update playlist listens\r\n\t\t\t\tif (currentSongPlaylistSource.source.substr(1, 6) === 'albums') {\r\n\t\t\t\t\tconst sourceId = currentSongPlaylistSource.source.substr(8, currentSongPlaylistSource.source.length - 8)\r\n\t\t\t\t\tfirestore.collection('playlists').doc(sourceId).get().then((res) => {\r\n\t\t\t\t\t\tlet listedData = res.data().listens\r\n\t\t\t\t\t\tlistedData++\r\n\t\t\t\t\t\tfirestore.collection('playlists').doc(sourceId).update({\r\n\t\t\t\t\t\t\tlistens: listedData\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//update authors' listens\r\n\t\t\t\tcurrentSongData.authors.forEach(async author => {\r\n\t\t\t\t\tlet authorNumberOfListenersPerMonth = (await firestore.collection('users').doc(author.uid).get()).data().numberOfListenersPerMonth\r\n\t\t\t\t\t++authorNumberOfListenersPerMonth\r\n\t\t\t\t\tfirestore.collection('users').doc(author.uid).update({\r\n\t\t\t\t\t\tnumberOfListenersPerMonth: authorNumberOfListenersPerMonth\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t}, songDuration * 1000 * 0.5)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tclearTimeout(listenCountTimeOut.current)\r\n\t\tif (play) {\r\n\t\t\tupdateListenCount()\r\n\t\t}\r\n\t}, [play, currentSongData.id])\r\n\r\n\treturn updateListenCount\r\n}\r\n","import React from 'react'\r\nimport {Route, Switch, Redirect} from 'react-router-dom'\r\nimport { ContentWrapper } from '../components/Basic/ContentWrapper'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { publicRoutes } from '../routes'\r\nimport { LOGIN_ROUTE} from '../utils/consts'\r\nexport const AppRouter = () => {\r\n\tconst {currentUser} = useAuth()\r\n\treturn currentUser.uid ?\r\n\t(\r\n\t\t<Switch>\r\n\t\t\t<Route path='/' component = {ContentWrapper} />\r\n\t\t</Switch>\r\n\t):\r\n\t(\r\n\t\t<Switch>\r\n\t\t\t{publicRoutes.map(({path, Component}, i)=>{\r\n\t\t\t\treturn <Route path={path} component={Component} exact = {true} key = {i}/>\r\n\t\t\t})}\r\n\t\t\t<Redirect to={LOGIN_ROUTE} />\r\n\t\t</Switch>\r\n\t)\r\n}\r\n","import './index.css';\r\nimport React from 'react'\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { AppRouter } from '../routers/AppRouter';\r\nexport default function App() {\r\n  return (\r\n    <HashRouter basename=\"/\">\r\n      <AppRouter />\r\n    </HashRouter>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app';\r\nimport { AuthProvider } from './contexts/AuthContext';\r\nimport { ModalClassProvider } from './contexts/ModalContext';\r\nimport { ScreenProvider } from './contexts/ScreenContext';\r\nimport { SongProvider } from './contexts/SongContext';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ScreenProvider>\r\n      <AuthProvider>\r\n        <ModalClassProvider>\r\n          <SongProvider>\r\n            <App />\r\n          </SongProvider>\r\n        </ModalClassProvider>\r\n      </AuthProvider>\r\n    </ScreenProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}
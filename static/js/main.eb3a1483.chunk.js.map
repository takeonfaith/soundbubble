{"version":3,"sources":["firebase.js","shared/lib/normalize-string.js","shared/lib/find-variations-of-name.js","contexts/auth.jsx","shared/data/consts.js","features/loading/ui/atoms/loading-circle.jsx","shared/ui/images/Logo3.svg","features/loading/ui/atoms/loading-vital-data.jsx","entities/song/lib/add-song-to-history.js","shared/ui/molecules/add-to-list-circle.jsx","shared/lib/display-date.js","shared/ui/atoms/last-seen.jsx","entities/user/ui/organisms/person-tiny.jsx","entities/song/lib/shuffle-songs.js","shared/lib/check-number.js","shared/lib/fetch-item-list.js","shared/lib/hooks/use-condition-func.js","contexts/modal.jsx","contexts/song.jsx","features/full-screen-player/lib/check-karaoke.js","shared/ui/atoms/button.jsx","shared/ui/atoms/input.jsx","shared/ui/atoms/submit-button.jsx","features/search/lib/hooks/use-search.jsx","features/search/lib/rank-current-hint.js","features/search/ui/molecules/search-bar-buttons.jsx","features/search/ui/atoms/search-filter-item.jsx","features/search/ui/molecules/search-filters.jsx","features/search/lib/find-search-hints.js","features/search/lib/translite-word.js","features/search/lib/hooks/use-load-hints.jsx","shared/lib/find-right-icon.js","features/search/ui/atoms/search-hint-item.jsx","features/search/ui/organisms/search-hints.jsx","shared/lib/hooks/use-outside-click.js","shared/ui/organisms/search-bar.jsx","features/full-screen-player/lib/transform-lyrics-to-array-of-object.js","features/admin/lib/hooks/use-edit-song.js","features/admin/ui/organisms/edit-song.jsx","entities/song/lib/add-song-to-library.js","shared/lib/filter-array-with-array.js","entities/song/lib/delete-song-from-library.js","features/full-screen-player/ui/molecules/add-or-delete-song-button.jsx","entities/playlist/lib/hooks/use-add-or-delete-song.js","contexts/screen.jsx","shared/ui/atoms/hint.jsx","features/full-screen-player/ui/atoms/add-to-playlist-item.jsx","features/full-screen-player/ui/molecules/add-to-playlists.jsx","features/author/ui/atoms/person-tiny-vertical-item.jsx","shared/ui/atoms/see-more-round-button.jsx","features/author/ui/templates/tiny-persons-list.jsx","shared/lib/get-uid.js","shared/lib/create-—Åhat.js","shared/lib/find-chat-url.js","features/dialogue/lib/send-message.js","features/share/lib/share-with-friends.js","features/share/ui/organisms/friends-to-share-with.jsx","features/song/ui/organisms/song-info.jsx","features/song/ui/molecules/song-more-window.jsx","features/search/lib/save-search-history.js","entities/song/lib/hooks/use-song-logic.js","features/full-screen-player/ui/atoms/color-circles.jsx","shared/lib/get-short-string.js","shared/lib/display-authors-str.js","shared/lib/big-number-format.js","entities/song/ui/molecules/show-additional-info.jsx","entities/song/ui/organisms/image-and-name.jsx","features/full-screen-player/ui/atoms/authors-list.jsx","features/mobile/ui/organisms/song-item-mobile-more-window.jsx","entities/song/lib/hooks/use-add-or-delete-song.js","entities/song/ui/molecules/add-or-delete-button.jsx","entities/song/ui/organisms/more-button.jsx","entities/song/ui/song-item.jsx","shared/ui/atoms/more-button.jsx","pages/settings/ui/molecules/title-with-more-btn.jsx","features/song/ui/templates/song-list.jsx","entities/playlist/lib/hooks/use-album-authors.js","features/album/ui/atoms/small-images.jsx","features/author/ui/molecules/chat-with-friend-button.jsx","shared/api/song-api.js","features/author/lib/hooks/use-last-song-listened.jsx","features/author/ui/molecules/last-song-listened.jsx","entities/playlist/lib/add-playlist-to-library.js","entities/playlist/lib/remove-playlist-from-library.js","shared/ui/atoms/go-back-button.jsx","features/album/ui/organisms/album-info.jsx","shared/ui/atoms/download-button.jsx","shared/ui/atoms/radio-button.jsx","features/album/ui/organisms/customize-album.jsx","features/author/lib/add-author-to-library.js","features/author/lib/add-friend.js","features/author/lib/delete-author-from-library.js","features/author/ui/organisms/author-info.jsx","features/author/ui/molecules/author-more-window.jsx","features/author/ui/organisms/customize-author.jsx","features/template-header/ui/molecules/top-buttons.jsx","entities/playlist/lib/delete-playlist.js","entities/playlist/lib/quit-playlist.js","features/author/lib/delete-friend.js","features/template-header/header.jsx","shared/ui/atoms/content-container.jsx","pages/album/index.jsx","features/author/ui/atoms/friend-request-item.jsx","features/author/lib/hooks/use-friend-request.jsx","features/author/ui/molecules/friend-request.jsx","entities/song/lib/find-if-song-is-new.js","features/author/ui/molecules/top-songs.jsx","features/author/lib/find-authors-albums.js","entities/playlist/ui/molecules/deleted-playlist.jsx","entities/playlist/lib/hooks/use-playlist-songs.js","entities/playlist/ui/playlist-item.jsx","features/album/ui/template/album-list.jsx","features/author/ui/organisms/playlists.jsx","shared/lib/find-similar-artists.js","features/author/ui/molecules/author-item-big.jsx","features/author/ui/templates/authors-list.jsx","features/author/ui/organisms/similar-artists.jsx","features/loading/ui/atoms/full-screen-loading.jsx","features/author/lib/hooks/use-add-playlist.jsx","features/author/ui/templates/person-tiny-list.jsx","features/author/ui/organisms/add-playlist.jsx","features/author/ui/organisms/add-song.jsx","shared/ui/molecules/slider.jsx","features/author/ui/templates/add-window.jsx","pages/author/index.jsx","features/chats/ui/atoms/amount-of-unseen-messages.jsx","features/dialogue/ui/atoms/seen-by-circle.jsx","features/dialogue/ui/atoms/typing-animation.jsx","features/chats/ui/molecules/last-sent-message.jsx","features/chats/lib/amount-of-unseen-messages.js","shared/lib/hooks/use-user-online.js","shared/ui/atoms/is-online-circle.jsx","features/chats/ui/organisms/chat-item.jsx","features/chats/lib/hooks/use-create-chat.jsx","features/chats/ui/organisms/create-chat.jsx","pages/chats/index.jsx","features/dialogue/ui/atoms/date-on-top.jsx","features/dialogue/lib/hooks/use-chat-header.js","features/dialogue/lib/leave-chat.js","features/dialogue/ui/atoms/leave-chat-button.jsx","features/dialogue/ui/molecules/attachment-list.jsx","shared/lib/filter-array-of-objects-with-array.js","features/dialogue/lib/add-people-to-chat.js","features/dialogue/ui/organisms/add-people-to-chat.jsx","features/dialogue/ui/organisms/chat-info.jsx","shared/lib/fetch-collection.js","features/dialogue/ui/atoms/wallpaper-item.jsx","features/dialogue/ui/molecules/wallpapers.jsx","features/dialogue/ui/molecules/chat-more-button.jsx","features/dialogue/ui/organisms/chat-header.jsx","features/dialogue/lib/what-to-write-in-response-item.js","features/dialogue/ui/molecules/attached-items-in-chat-input.jsx","features/dialogue/ui/organisms/chat-input.jsx","features/song/ui/atoms/song-loading.jsx","shared/lib/hooks/use-on-screen.js","features/dialogue/lib/hooks/use-mark-message-read.js","features/dialogue/ui/molecules/message-item.jsx","features/dialogue/ui/organisms/message-field.jsx","features/dialogue/ui/molecules/system-message.jsx","features/dialogue/ui/molecules/display-chat-messages.jsx","features/dialogue/ui/organisms/chat-messages-window.jsx","pages/dialogue/index.jsx","features/dialogue/lib/hooks/use-realtime-messages.js","pages/history/index.jsx","features/home/ui/organisms/main-banner.jsx","features/home/ui/organisms/recent-songs.jsx","features/home/ui/organisms/recommended-authors.jsx","shared/ui/atoms/important-message.jsx","features/home/ui/organisms/recommended-songs.jsx","features/home/ui/organisms/top-15-Songs.jsx","pages/home/index.jsx","pages/library/pages/authors.jsx","pages/library/ui/atoms/create-playlist.jsx","pages/library/pages/playlists.jsx","features/library/lib/find-visible-playlists.js","shared/ui/images/wave2.svg","pages/library/ui/molecules/library-playlist-item.jsx","pages/library/pages/songs.jsx","pages/library/index.jsx","shared/ui/atoms/title-and-logo.jsx","features/login/ui/atoms/error-plate.jsx","shared/ui/atoms/blurred-background.jsx","pages/login/index.jsx","features/lyrics-editing/ui/molecules/lyrics.jsx","features/lyrics-editing/ui/molecules/song-image-and-name.jsx","pages/lyrics-editing/index.jsx","pages/page-not-found/index.jsx","features/search/lib/hooks/use-search-history.jsx","features/search/ui/organisms/search-history.jsx","pages/search/index.jsx","pages/settings/ui/orgamisms/account-settings.jsx","pages/settings/ui/molecules/switch-toggle.jsx","pages/settings/ui/atoms/settings-item.jsx","pages/settings/ui/orgamisms/chat-settings.jsx","pages/settings/ui/orgamisms/music-settings.jsx","pages/settings/ui/molecules/settings-list.jsx","pages/settings/ui/atoms/settings-section-item.jsx","pages/settings/ui/molecules/settings-sections.jsx","pages/settings/index.jsx","app/routes.js","pages/signup/index.jsx","app/routers/content-router.js","features/bottom-message/ui/message-window.jsx","shared/music/notification.mp3","features/chats/ui/organisms/chat-notification-window.jsx","features/confirm/ui/confirm-window.jsx","shared/lib/display-time.js","features/full-screen-player/lib/find-len-of-authors.js","features/full-screen-player/ui/organisms/player.jsx","features/full-screen-player/ui/atoms/loading.jsx","features/full-screen-player/ui/molecules/lyrics-paragraph.jsx","shared/data/player-right-side.js","features/full-screen-player/ui/organisms/share.jsx","features/full-screen-player/ui/organisms/options.jsx","features/full-screen-player/ui/organisms/lyrics.jsx","features/full-screen-player/ui/organisms/queue.jsx","features/full-screen-player/ui/full-screen-player.jsx","shared/data/left-side-bar.js","shared/ui/atoms/notification-circle.jsx","features/leftside-bar/ui/atoms/container.jsx","features/leftside-bar/lib/use-amount-of-unseen-messages.js","features/leftside-bar/ui/atoms/navigation-item.jsx","features/leftside-bar/ui/molecules/navigation-panel.jsx","shared/ui/atoms/online-circle-animation.jsx","features/leftside-bar/ui/molecules/person.jsx","features/leftside-bar/ui/molecules/tiny-playlist.jsx","features/leftside-bar/ui/organisms/leftside-bar.jsx","features/mobile/ui/atoms/mobile-controlbar-item.jsx","features/mobile/ui/molecules/bottom-control-bar.jsx","features/mobile/ui/organisms/full-bottom-side.jsx","features/modal/ui/modal-window.jsx","shared/lib/hooks/use-chat-notifications.js","shared/lib/hooks/use-media-metadata.js","shared/ui/content-wrapper.jsx","entities/song/lib/hooks/use-update-listen-count.js","app/routers/app-router.js","app/index.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","storage","firestore","normalizeString","str","replace","toLowerCase","findVariationsOfName","name","variantsOfName","personName","i","length","push","substr","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","userId","setUserId","loading","setLoading","searchValue","setSearchValue","useEffect","collection","doc","onSnapshot","user","data","undefined","uid","onAuthStateChanged","a","value","login","email","password","setError","signInWithEmailAndPassword","then","catch","err","message","signup","role","photoURL","imageColors","createUserWithEmailAndPassword","result","set","displayName","isAuthor","parseInt","isVerified","numberOfListenersPerMonth","ownSongs","ownPlaylists","addedSongs","addedPlaylists","addedAuthors","lastSongPlayed","chats","friends","subscribers","regDate","FieldValue","serverTimestamp","place","rank","history","logout","signOut","Provider","LOGIN_ROUTE","SIGNUP_ROUTE","HOME_ROUTE","LIBRARY_ROUTE","SEARCH_ROUTE","CHAT_ROUTE","HISTORY_ROUTE","LoadingCircle","top","className","style","src","alt","LoadingData","Logo","addSongToHistory","songId","get","res","songsList","unshift","update","AddToListCircle","listOfChosenItems","setListOfChosenItems","itemId","onClick","e","preventDefault","width","includes","type","filteredList","filter","el","color","prev","amountOfZeros","number","toDateTime","secs","t","Date","setSeconds","displayDate","stringDate","displayMode","Months","newDate","isNaN","seconds","getMonth","getDate","getFullYear","getHours","getMinutes","LastSeen","userUID","lastSeen","setLastSeen","isOnline","setIsOnline","unsubscribe","fiveMinutesAgo","getTime","online","RightIconWrapper","styled","div","PersonTiny","chosenArray","setChosenArray","rightButton","restProps","shuffleSongs","songsArray","randomIndexesArray","newSongsNumbersArray","Array","counter","randNum","Math","floor","random","checkNumber","max","min","fetchItemList","list","setList","resManipulation","lastFunc","lengthRestrict","assignMode","tempArray","map","Promise","all","finalResult","temp","forEach","item","find","useConditionFunc","fetchFunc","changeCondition","dep","JSON","stringify","ModalContext","useModal","ModalClassProvider","openModal","setOpenModal","content","setContent","isOpenned","bottomMessage","setBottomMessage","isOpenConfirm","setIsOpenConfirm","confirmText","rejectText","onConfirmL","onReject","confirmContent","setConfirmContent","closeConfirm","toggleModal","openConfirm","question","onConfirm","openBottomMessage","time","setTimeout","SongContext","useSong","SongProvider","yourSongs","setYourSongs","yourPlaylists","setYourPlaylists","yourAuthors","setYourAuthors","yourFriends","setYourFriends","currentSongQueue","setCurrentSongQueue","currentSong","setCurrentSong","currentSongInQueue","setCurrentSongInQueue","currentSongPlaylistSource","setCurrentSongPlaylistSource","inputRange","setInputRange","id","currentSongData","setCurrentSongData","imgColors","setImgColors","play","setPlay","currentTime","setCurrentTime","songDuration","setSongDuration","repeatMode","setRepeatMode","shuffleMode","setShuffleMode","currentParagraph","setCurrentParagraph","isThereKaraoke","setIsThereKaraoke","openFullScreenPlayer","setOpenFullScreenPlayer","songRef","useRef","currentParagraphRef","inputRef","leftSideBarInputRef","rightSideCurrentPage","setRightSideCurrentPage","openMenu","setOpenMenu","fetchQueue","lastQueue","findIndex","fetchYourSongs","slice","reverse","fetchCurrentSongInitial","tempSongObject","songSrc","authors","cover","listens","releaseDate","lyrics","curSong","curQueue","source","image","docRef","exists","songData","error","console","log","defineCurrentParagraph","first","last","roundedTime","parseFloat","current","toFixed","midPoint","blockStartTime","startTime","nextBlockStartTime","correctSongNumber","currentSongId","playlistId","String","concat","friend","status","obj","shuffledSongsArray","song","document","title","nextSong","prevSong","playSong","pause","playing","event","target","defineCurrentParagraphLight","changeCurrentTime","localName","displayAuthors","authorsList","separatingSign","to","stopPropagation","displayAuthorsFull","loadSongData","duration","window","innerWidth","ButtonWrapper","button","textLen","Button","text","icon","visible","Wrapper","margin","InputWrapper","input","Input","setValue","placeholder","required","onChange","SubmitButtonWrapper","props","isLoading","isActive","completed","SubmitButton","action","setCompleted","useSearch","setAllFoundSongs","setResultAuthorList","setResultPlaylists","defaultSearchMode","searchMode","defaultSongsListValue","defaultAuthorsListValue","defaultPlaylistsListValue","setMessage","foundAnything","setFoundAnything","inputValue","setInputValue","findItem","defaultList","foundItemTempArray","normalizedSearch","where","docs","itemData","realData","isPrivate","authorsIdsArray","author","sort","b","songsIdsArray","albumsIdsArray","findSomething","searchText","rankCurrentHint","hintName","hintUid","SearchBarButtons","opacity","visibility","cursor","SearchFilterItem","setSearchMode","index","background","SearchFilters","display","findSearchHints","hints","hint","transliteWord","word","dictionaryRuToEn","dictionaryEnToRu","'","split","reduce","acc","letter","useLoadHints","setCurrentHint","inputFocused","setSearchHints","resolve","sortedHints","findRightIcon","SearcHintItem","currentHint","setInputFocused","height","marginLeft","SearchHints","searchHints","transform","key","useOutsideClick","ref","setFunc","handleClickOutside","contains","addEventListener","removeEventListener","SearchBar","focus","inputText","marginTop","onFocus","borderRadius","onKeyDown","handleCurrentHint","position","transformLyricsToArrayOfObjects","arrayOfParagraphs","startSubstr","fixedLyrics","useEditSong","songName","setSongName","songAuthors","setSongAuthors","songCover","setSongCover","setImageColors","join","setLyrics","foundAuthors","setFoundAuthors","errorMessage","setErrorMessage","removeAuthorFromList","filtered","people","manuallyChangeColor","addAuthor","some","person","updateSong","authorRef","authorData","authorSongs","filteredSongs","EditSong","flexDirection","marginBottom","justifyContent","alignItems","padding","isAdmin","fontWeight","addSongToLibrary","songAuthorsUIDS","finalAuthorsUIDS","authorId","newList","filterArrayWithArray","whatToFilter","withWhatToFilter","this","indexOf","deleteSongFromLibrary","songNum","songObj","finalFilteredAuthors","AddOrDeleteButtonFull","useAddOrDeleteSong","playlistSongs","setPlaylistSongs","isAdded","setIsAdded","response","songs","newSongsList","sortedPlaylists","ScreenContext","useScreen","ScreenProvider","screenWidth","setScreenWidth","innerHeight","screenHeight","setScreenHeight","isMobile","setIsMobile","handleResize","Hint","direction","AddToPlaylistItem","playlist","addFunc","AddToPlaylists","setSongData","PersonTinyVerticalItem","SeeMoreRoundButton","TinyPersonsList","listOfPeople","restriction","getUID","c","piece","toString","createChat","participants","chatUID","chatName","chatImage","admins","messages","wallpaper","typing","personId","chatInfo","findChatURL","allParticipants","setShouldCreate","setFriendChatId","foundChat","chatId","chat","count","every","sendMessage","chatData","sender","messageText","attachedSongs","attachedAlbums","attachedAuthors","inResponseToMessage","trim","tempMessages","sentTime","seenBy","shareWithFriends","shareList","whatToShare","sortedFriends","FriendsToShareWith","chosenFriends","setChosenFriends","setMessageText","foundPeople","setFoundPeople","maxHeight","overflowY","SongInfo","friendsThatHaveThisSong","setFriendsThatHaveThisSong","findFriendsThatHaveThisSong","backgroundImage","fontSize","marginRight","minHeight","SongItemMoreWindow","openMoreWindow","moreWindowPosRelativeToViewport","bottom","saveSearchHistory","itemType","newItemSaved","useSongLogic","localIndex","shouldSaveSearchHistory","setOpenMoreWindow","setMoreWindowPosRelativeToViewport","currentItemRef","openSongItemMoreWindow","getBoundingClientRect","chooseSongItem","ColorCircles","getShortString","len","displayAuthorsStr","authorslist","separator","lenLimit","authorsString","bigNumberFormat","ShowAdditionInfo","showListens","isNewSong","ImageAndName","maxWidth","AuthorsList","listOfAuthors","SongItemMobileMoreWindow","AddOrDeleteButton","addSong","removeSong","MoreButton","SongItem","memo","listOfChosenSongs","setListOfSongs","MoreBtn","func","lenOfList","maxLen","boolVal","TitleWithMoreBtn","SongList","listOfSongs","showCount","showSearch","displayIfEmpty","showhistory","isHorizontal","showMoreSongs","setShowMoreSongs","localSearchValue","setLocalSearchValue","displaySongs","setDisplaySongs","listSongsIds","allFoundSongs","useAlbumAuthors","albumAuthors","setAlbumAuthors","authorsImages","setAuthorsImages","ids","authrorsData","tempArrayAuthors","tempArrayImages","fetchAuthorsData","SmallImages","imagesList","borderColor","border","ChatWithFriendButton","shouldCreate","friendChatId","textDecoration","getSongById","useLastSongListened","LastSongListened","addPlaylistToLibrary","playlistData","removePlaylistFromLibrary","filteredPlaylists","GoBackBtn","useHistory","goBack","AlbumInfo","album","friendsThatHaveThisAlbum","setFriendsThatHaveThisAlbum","findFriendsThatHaveThisAlbum","isAlbum","creationDate","DownloadButtonWrapper","DownloadButton","setItemSrc","setImageLocalPath","isImage","file","files","isValid","validExtensions","ext","ex","URL","createObjectURL","storageRef","fileRef","child","put","getDownloadURL","onFileChange","RadioBtn","currentActive","label","CustomizeAlbum","playlistName","setPlaylistName","playlistCover","setPlaylistCover","authorsInputValue","setAuthorsInputValue","allAuthors","setAllAuthors","chosenAuthors","setChosenAuthors","setReleaseDate","songsSearch","setSongsSearch","allSongs","setAllSongs","chosenSongs","setChosenSongs","playlistStatus","setPlaylistStatus","isPlaylistPrivate","setIsPlaylistPrivate","loadingAuthors","loadingSongs","setLoadingSongs","imageLocalPath","authorPlaylists","getColors","colors","addAuthorToLibrary","addFriend","friendData","updatedDataForFriend","updatedDataForCurrentUser","deleteAuthorFromLibrary","AuthorInfo","setFriendsThatHaveThisAuthor","findFriendsThatHaveThisAuthor","AuthorMoreWindow","CustomizeAuthor","authorName","authorCover","setAuthorCover","onSubmit","TopButtons","headerColors","moreWindowRef","personFilteredPlaylists","pId","delete","quitPlaylist","filteredUserFriends","filteredOtherUserFriends","deleteFriend","animation","Header","isFriend","backgroundColor","left","ContentContainer","AlbumPage","match","useRouteMatch","setHeaderColors","albumId","params","albumData","setAlbumData","fetchAlbumsData","fetchSongsInAlbum","flex","overflow","boxShadow","FriendRequestItem","rejectFriend","useFriendRequest","friendRequests","setFriendRequests","friendObj","personData","fetchFriendRequests","friendsList","otherUserFriendList","arrOfReqs","FriendRequest","findIfSongIsNew","songReleaseDate","TopSongs","authorsData","popularSongs","setPopularSongs","newSongs","setNewSongs","prevSongs","findAuthorsSongs","findAuthorsAlbums","setAuthorsPlaylists","currentUserUID","DeletedPlaylist","usePlaylistSongs","albumSong","PlaylistItem","listOfChosenAlbums","setListOfChosenAlbums","playlistDate","playSongsInPlaylist","AlbumList","listOfAlbums","scrollLeft","setScrollLeft","wrapperRef","shouldRenderRightArrow","setShouldRenderRightArrow","scrollWidth","offsetWidth","onScroll","Playlists","authorsPlaylists","findSimilarArtistsNames","authorsSongsArr","setSimilarAuthors","peopleArray","newAuthors","flat","uniqueAuthorsSet","Set","uniqueAuthorsIdsArray","from","uniqueAuthorsDataArray","j","findSimilarArtists","authorsSongsArray","AuthorItemBig","listOfChosenAuthors","setListOfChosenAuthors","SimilarArtists","similarArtists","setSimilarArtists","FullScreenLoading","useAddPlaylist","loadingPlaylist","setLoadingPlaylist","removeSongFromList","addPlaylistToFirebase","PersonTinyList","setListOfPeople","personObj","AddPlaylist","AddSong","setSongSrc","loadingSong","setLoadingSong","Slider","pages","currentPage","setCurrentPage","pageName","AddWindow","openAddSongWindow","setOpenAddSongWindow","currentSliderPage","setCurrentSliderPage","sliderPages","AuthorPage","setAuthorsData","AmountOfUnseenMessages","amountOfUnseen","SeenByCircle","listOfSeen","TypingAnimation","typingPeople","typingPeopleData","setTypingPeopleData","LastSentMessage","isGroup","showUnseenCircle","messageLen","lastAttachedItem","setLastAttachedItem","shouldPutDot","setShouldPutDot","lastMessage","setLastMessage","messageIcons","lastIcon","setLastIcon","findWhatToWriteUnderName","amountOfUnseenMessages","accum","useUserOnline","IsOnlineCircle","ChatItem","otherPerson","setOtherPerson","setAmountOfUnseen","setMessages","setTyping","otherPersonId","snapshot","fetchOtherPerson","now","useCreateChat","foundFriends","setFoundFriends","chatCover","setChatCover","setChatName","allowedToCreate","setAllowedToCreate","handleCreateChat","CreateChat","ChatPage","yourChats","setYourChats","DateOnTop","date","useChatHeader","leaveChat","newParticipants","participantId","LeaveChatButton","isCurrentUserLeaving","AttachmentList","attachmentList","setAttachmentList","sliderCurrentPage","setSliderCurrentPage","attachmentContent","fetchAttachedData","attachedType","firebaseCollection","page","filterArrayOfObjectsWithArray","filterParametr","isInverted","addPeopleToChat","AddPeopleToChat","filteredFriends","ChatInfo","setParticipants","chatNameValue","setChatNameValue","newChatPhoto","setNewChatPhoto","newImageLocalPath","setNewImageLocalPath","newImageColors","setNewImageColors","participantsPage","setParticipantsPage","showUpdateBtn","setShowUpdateBtn","fetchCollection","WallpaperItem","currentWallpaper","Wallpapers","wallpapers","setwallpapers","ChatMoreBtn","chatMoreBtnRef","ChatHeader","whatToWriteInResponseToItem","referedMessage","AttachedItemsInChatInput","attachedItems","setAttachedItems","setItems","removeItemFromAttached","ChatInput","setInResponseToMessage","otherMessages","openAttachWindow","setOpenAttachWindow","setAttachedSongs","setAttachedAlbums","setAttachedAuthors","resultPlaylists","resultAuthorList","inResponseNames","setInResponseNames","attachedSongsNames","setAttachedSongsNames","attachWindowRef","sendMessageFull","transition","messageId","outline","SongItemLoading","useOnScreen","isIntersecting","setIntersecting","observer","IntersectionObserver","entry","observe","disconnect","useMarkMessageRead","messageData","messageRef","isVisible","MessageItem","scrollToMessageRef","setScrollToMessageId","scrollToMessageId","showPhoto","inResponseToMessageArr","setInResponseToMessageArr","userThatSentMessage","setUserThatSentMessage","messageSentTime","attachedSongsData","setAttachedSongsData","attachedAuthorsData","setAttachedAuthorsData","attachedPlaylistsData","setAttachedPlaylistsData","inResponseToMessagesData","setInResponseToMessagesData","swipeDeltaX","setSwipeDeltaX","transformTransition","setTransformTransition","handlers","useSwipeable","onSwiping","deltaX","addMessageToResponseList","returnToInitial","dropDelta","clearTimeout","fetchSentMessageUser","paddingBottom","onTouchEnd","MessageField","messageList","setDateRefsArray","setShowPhoto","showDate","setShowDate","dateRef","SystemMessageWrapper","SystemMessage","DisplayChatMessages","messagesWindowRef","scrollTo","offsetTop","ChatMessagesWindow","findTopDate","scroll","scrollHeight","clientHeight","scrollToBottom","DialoguePage","dateRefsArray","setChatData","setMessageList","currentDateOnTop","setCurrentDateOnTop","scrollTop","innerHTML","useRealTimeMessages","HistoryPage","historySongsIds","setHistorySongsIds","historySongs","setHistorySongs","MainBanner","bannerColors","setBannerColors","setcurrentSliderPage","topAuthor","setTopAuthor","topSong","setTopSong","topAlbum","setTopAlbum","findTop","criterion","orderBy","limit","RecentSongs","recentSongs","setRecentSongs","tempSongsIds","findRecentSongs","RecommendedAuthors","recommendationAuthors","setRecommendationAuthors","uniqueAuthors","setUniqueAuthors","uniqueAuthorsUIDSArray","ImportantMessage","RecommendedSongs","recommendedSongs","setRecommendedSongs","fetchRecommendedSongs","Top15Songs","topSongs","setTopSongs","HomePage","AuthorsPage","setDisplayAuthors","CreatePlaylistWrapper","CreatePlaylist","PlaylistsPage","playlistsDisplay","setPlaylistsDisplay","findVisiblePlaylists","LibraryPlaylistItem","SongsPage","playlistsVisible","setPlaylistsVisible","p","wave","LibraryPage","libraryPages","TitleAndLogo","ErrorPlate","BlurredBg","LogInPage","setEmail","setPassword","disabled","LyricsWrapper","Lyrics","lyricItem","SongImageAndNameWrapper","SongImageAndName","LyricsEditingWrapper","LyricsEditingPage","PageNotFound","useSearchHistory","historyPlaylists","setHistoryPlaylists","historyAuthors","setHistoryAuthors","SearchHistory","SearchPage","resultSongList","setResultSongList","resultAlbumList","setResultAlbumList","shadowColor","setShadowColor","AccountSettings","SwitchToggle","boolValue","setBoolValue","SettingsItemWrapper","SettingsItem","handleChangeToggle","val","ChatSettings","MusicSettings","SettingsListWrapper","SettingsList","settingsPages","SettingsSectionItemWrapper","SettingsSectionItem","SettingsSectionsWrapper","SettingsSections","SettingsPageWrapper","SettingsPage","publicRoutes","path","Component","currentRoleChoice","setCurrentRoleChoice","setName","setPhotoURL","privateRoutes","ContentRouter","component","exact","MessageWindow","findColor","light","dark","findIcon","ChatNotificationWindowWrapper","show","ChatNotificationWindow","userData","setUserData","setShow","Audio","notifSound","ConfirmWindow","confirmRef","correctTimeDisplay","findLenOfAuthors","Player","textLimit","linkToAuthors","whiteSpace","step","displayTime","Loading","timeSpan","pointerEvents","LyricsParagraph","lyricsModeratorMode","karaokeModeratorTimes","setKaraokeModeratorTimes","setInputKaraokeTime","inputKaraokeTime","paragraphRef","paragraphStyle","abs","addLyricsBlock","indexOfRelativeElement","tempTimes","splice","convertedToNumber","inputKaraoke","rightSide","socialMedia","social","setLyricsModeratorMode","canUpdateLyrics","setCanUpdateLyrics","scrollIntoView","paragraph","tempSongData","FullScreenPlayer","lyricsRef","mobileMenuTransition","setMobileMenuTransition","deltaY","setDeltaY","deltaYMobileMenu","setDeltaYMobileMenu","mobileContentScroll","mobileMenuRef","bgRef","handlersForMobileMenu","onSwipedLeft","onSwipedRight","returnToInitialMobileMenu","rightSideContent","RightSidePage","noLyrics","changeRightSidePage","documentElement","setProperty","zIndex","leftSideBar","link","NotificationCircleWrapper","NotificationCircle","LeftsideBarContainer","useAmountOfUnseenMessages","amount","setAmount","NavigationItem","notificationValue","NavigationPanel","home","library","search","OnlineCircleAnimationWrapper","OnlineCircleAnimation","Person","sendAnimation","setSendAnimation","loadingSendSong","setLoadingSendSong","TinyPlaylist","backgroundPosition","backgroundSize","LeftsideBar","userNotifications","setUserNotifications","currentFriendToPlaylistPage","setCurrentFriendToPlaylistPage","location","hash","alignSelf","MobileControlBarItem","element","BottomControlBar","userElement","FullBottomSide","ModalWindow","modalRef","useChatNotifications","notifications","setNotifications","tempObj","docChanges","timeout","useMediaMetadata","updatePositionState","navigator","mediaSession","setPositionState","playbackRate","pauseSong","metadata","MediaMetadata","artist","artwork","sizes","setActionHandler","ContentWrapper","updateListenCount","listenCountTimeOut","sourceId","listedData","authorNumberOfListenersPerMonth","useUpdateListenCount","interval","setInterval","clearInterval","onLoadedData","onTimeUpdate","onEnded","notif","notifsLen","AppRouter","App","basename","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eb3a1483.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/storage'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\nimport 'firebase/analytics'\r\nimport seedDatabase from './seedDatabase';\r\n\r\nconst app = firebase.initializeApp({\r\n\tapiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n\tauthDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n\tprojectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n\tstorageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n\tmessagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n\tappId:process.env.REACT_APP_FIREBASE_APP_ID,\r\n\tmeasurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n});\r\nfirebase.analytics();\r\nexport const auth = app.auth()\r\nexport const storage = app.storage()\r\nexport const firestore = app.firestore()\r\n// seedDatabase(firestore)\r\nexport default app","export default function normalizeString(str) {\r\n\treturn str.replace(/\\s/g, '').replace(/\\$/g, \"s\").replace(/[,'._/]/g, '').replace(/-/g, '').toLowerCase()\r\n}","import normalizeString from \"./normalize-string\"\r\n\r\nexport const findVariationsOfName = (name) => {\r\n\tlet variantsOfName = []\r\n\tlet personName = normalizeString(name)\r\n\tfor (let i = 1; i < personName.length + 1; i++) {\r\n\t\tvariantsOfName.push(personName.substr(0, i))\r\n\t}\r\n\treturn variantsOfName\r\n}","import firebase from \"firebase\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { auth, firestore } from \"../firebase\";\r\nimport { findVariationsOfName } from \"../shared/lib/find-variations-of-name\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [userId, setUserId] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  function login(email, password, setError, setLoading) {\r\n    setLoading(true);\r\n    return auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then()\r\n      .catch((err) => {\r\n        setError(err.message);\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut();\r\n  }\r\n\r\n  function signup(\r\n    email,\r\n    name,\r\n    password,\r\n    role,\r\n    photoURL,\r\n    imageColors,\r\n    setError,\r\n    setLoading\r\n  ) {\r\n    setLoading(true);\r\n    return auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((result) => {\r\n        firestore\r\n          .collection(\"users\")\r\n          .doc(result.user.uid)\r\n          .set({\r\n            uid: result.user.uid,\r\n            displayName: name,\r\n            photoURL:\r\n              photoURL ||\r\n              \"https://images.fineartamerica.com/images/artworkimages/mediumlarge/1/music-icon-mohammed-jabir-ap.jpg\",\r\n            isAuthor: parseInt(role) === 1,\r\n            isVerified: parseInt(role) === 1,\r\n            numberOfListenersPerMonth: 0,\r\n            ownSongs: [],\r\n            ownPlaylists: [],\r\n            addedSongs: [],\r\n            addedPlaylists: [],\r\n            addedAuthors: [],\r\n            lastSongPlayed: \"\",\r\n            chats: [],\r\n            friends: [],\r\n            subscribers: 0,\r\n            regDate: firebase.firestore.FieldValue.serverTimestamp(),\r\n            imageColors: imageColors,\r\n          });\r\n        firestore\r\n          .collection(\"search\")\r\n          .doc(result.user.uid)\r\n          .set({\r\n            place: \"users\",\r\n            uid: result.user.uid,\r\n            rank: 0,\r\n            variantsOfName: findVariationsOfName(name),\r\n          });\r\n\r\n        firestore.collection(\"searchHistory\").doc(result.user.uid).set({\r\n          history: [],\r\n        });\r\n\r\n        firestore.collection(\"history\").doc(result.user.uid).set({\r\n          history: [],\r\n        });\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setError(err.message);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (userId !== null) {\r\n      const unsubscribe = firestore\r\n        .collection(\"users\")\r\n        .doc(userId)\r\n        .onSnapshot((user) => {\r\n          if (user.data()) {\r\n            if (currentUser.uid === undefined) {\r\n              setCurrentUser(user.data());\r\n            }\r\n          }\r\n        });\r\n      return unsubscribe;\r\n    }\r\n  }, [firestore, userId]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        setUserId(user.uid);\r\n      } else {\r\n        setUserId(null);\r\n        setCurrentUser({});\r\n        setLoading(false);\r\n      }\r\n    });\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    setCurrentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    loading,\r\n    setLoading,\r\n    searchValue,\r\n    setSearchValue,\r\n  };\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n","export const LOGIN_ROUTE = '/login'\r\nexport const SIGNUP_ROUTE = '/signup'\r\nexport const HOME_ROUTE = '/home'\r\nexport const LIBRARY_ROUTE = '/library'\r\nexport const SEARCH_ROUTE = '/search'\r\nexport const CHAT_ROUTE = '/chat'\r\nexport const NOTFOUND_ROUTE = '/not-found'\r\nexport const HISTORY_ROUTE = '/history'\r\nexport const SETTINGS_ROUTE = '/settings'\r\nexport const LYRICS_EDITING_ROUTE = '/lyrics-editing'\r\n\r\nexport const TEMPLATE_CHAT = '/chat/:chatId'\r\nexport const TEMPLATE_ALBUM = '/albums/:albumId'\r\nexport const TEMPLATE_AUTHOR = '/authors/:authorId'","import React from 'react'\r\n\r\nexport const LoadingCircle = ({top = '20%'}) => {\r\n\treturn (\r\n\t\t<div className = \"LoadingCircle\" style = {{top:top}}>\r\n\t\t\t<img loading = \"lazy\" src=\"https://icon-library.com/images/spinner-icon-gif/spinner-icon-gif-28.jpg\" alt=\"\"/>\r\n\t\t</div>\r\n\t)\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Logo3.fc53f4ac.svg\";","import React from \"react\";\r\nimport Logo from \"../../../../shared/ui/images/Logo3.svg\";\r\nexport const LoadingData = () => {\r\n  return (\r\n    <div className=\"LoadingData\">\r\n      <img loading=\"lazy\" src={Logo} alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n","import { firestore } from \"../../../firebase\"\r\n\r\nexport const addSongToHistory = (songId, currentUser) => {\r\n\tfirestore.collection('history').doc(currentUser.uid).get().then(res => {\r\n\t\tconst songsList = res.data().history\r\n\t\tif (songsList[0] !== songId) songsList.unshift(songId)\r\n\t\tif (songsList.length > 30) songsList.length = 30\r\n\r\n\t\tfirestore.collection('history').doc(currentUser.uid).update({\r\n\t\t\thistory: songsList\r\n\t\t})\r\n\t})\r\n}","import React from \"react\";\r\nimport { IoIosCheckmarkCircle, IoIosRadioButtonOff } from \"react-icons/io\";\r\n\r\nexport const AddToListCircle = ({\r\n  listOfChosenItems,\r\n  setListOfChosenItems,\r\n  itemId,\r\n}) => {\r\n  return listOfChosenItems !== undefined ? (\r\n    <div onClick={(e) => e.preventDefault()} style={{ width: \"35px\" }}>\r\n      {listOfChosenItems.includes(itemId) ? (\r\n        <button\r\n          type=\"button\"\r\n          onClick={(e) => {\r\n            let filteredList = listOfChosenItems.filter((el) => el !== itemId);\r\n            setListOfChosenItems(filteredList);\r\n          }}\r\n          className=\"addToListBtn\"\r\n        >\r\n          <IoIosCheckmarkCircle style={{ color: \"var(--lightBlue)\" }} />\r\n        </button>\r\n      ) : (\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setListOfChosenItems((prev) => [...prev, itemId])}\r\n          className=\"addToListBtn\"\r\n        >\r\n          <IoIosRadioButtonOff />\r\n        </button>\r\n      )}\r\n    </div>\r\n  ) : null;\r\n};\r\n","\r\nfunction amountOfZeros(number) {\r\n\treturn number % 10 === number ? \"0\" + number : number\r\n}\r\n\r\nfunction toDateTime(secs) {\r\n\tvar t = new Date(1970, 0, 1); // Epoch\r\n\tt.setSeconds(secs);\r\n\treturn t;\r\n}\r\n\r\nexport default function displayDate(stringDate, displayMode = 0){\r\n\tconst Months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n\tlet newDate = !isNaN(stringDate)?stringDate.seconds?toDateTime(stringDate.seconds + 10800):toDateTime((stringDate/1000) + 10800):new Date(stringDate)\r\n\tif(displayMode === 0){\r\n\t\treturn Months[newDate.getMonth()] + \" \" + newDate.getDate() + \", \" + newDate.getFullYear() \r\n\t}\r\n\r\n\tif(displayMode === 1){\r\n\t\treturn Months[newDate.getMonth()] + \" \" + newDate.getDate()\r\n\t}\r\n\r\n\tif(displayMode === 2){\r\n\t\treturn amountOfZeros(newDate.getHours()) + \":\" + amountOfZeros(newDate.getMinutes())\r\n\t}\r\n\r\n\tif(displayMode === 3){\r\n\t\treturn Months[newDate.getMonth()] + \" \" + newDate.getDate() + \", \" + newDate.getFullYear() + \" at \" + amountOfZeros(newDate.getHours()) + \":\" + amountOfZeros(newDate.getMinutes())\r\n\t}\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { firestore } from \"../../../firebase\";\r\nimport displayDate from \"../../lib/display-date\";\r\n\r\nexport const LastSeen = ({ userUID, ...restProps }) => {\r\n  const [lastSeen, setLastSeen] = useState(\"\");\r\n  const [isOnline, setIsOnline] = useState(false);\r\n  useEffect(() => {\r\n    const unsubscribe = firestore\r\n      .collection(\"users\")\r\n      .doc(userUID)\r\n      .onSnapshot((doc) => {\r\n        if (userUID !== undefined) {\r\n          const fiveMinutesAgo = new Date().getTime() - 300000;\r\n          const isOnline = doc.data().online > fiveMinutesAgo;\r\n          setIsOnline(isOnline);\r\n          if (doc.data().online === undefined) setLastSeen(\"offline\");\r\n          else if (!isOnline)\r\n            setLastSeen(\"last seen \" + displayDate(doc.data().online, 3));\r\n        }\r\n      });\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [firestore, userUID]);\r\n  return isOnline ? (\r\n    <span className=\"is-online\">Online</span>\r\n  ) : (\r\n    <span className=\"is-not-online\">{lastSeen}</span>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { AddToListCircle } from \"../../../../shared/ui/molecules/add-to-list-circle\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { LastSeen } from \"../../../../shared/ui/atoms/last-seen\";\r\n\r\nconst RightIconWrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 8px;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nexport const PersonTiny = ({\r\n  data,\r\n  chosenArray,\r\n  setChosenArray,\r\n  lastSeen = false,\r\n  rightButton,\r\n  ...restProps\r\n}) => {\r\n  return (\r\n    <div className=\"person\" {...restProps}>\r\n      <AddToListCircle\r\n        listOfChosenItems={chosenArray}\r\n        setListOfChosenItems={setChosenArray}\r\n        itemId={data.uid}\r\n      />\r\n      <div className=\"personImg\">\r\n        <img loading=\"lazy\" src={data.photoURL} alt=\"\" />\r\n      </div>\r\n      <div className=\"personName\">{data.displayName}</div>\r\n      {lastSeen && <LastSeen userUID={data.uid} className=\"is-online\" />}\r\n      <RightIconWrapper>{rightButton}</RightIconWrapper>\r\n    </div>\r\n  );\r\n};\r\n","export default function shuffleSongs(songsArray){\r\n\tconst randomIndexesArray = []\r\n\tconst newSongsNumbersArray = new Array(songsArray.length)\r\n\tlet counter = 0\r\n\twhile(counter < songsArray.length){\r\n\t\tconst randNum = Math.floor(Math.random()*(songsArray.length))\r\n\t\tif(!randomIndexesArray.includes(randNum)){\r\n\t\t\trandomIndexesArray.push(randNum)\r\n\t\t\tnewSongsNumbersArray[randNum] = songsArray[counter]\r\n\t\t\tcounter++\r\n\t\t}\r\n\t}\r\n\treturn newSongsNumbersArray\r\n}","export default function checkNumber(number, max, min = 0){\r\n\tif(number > max) return min\r\n\tif(number < min) return max\r\n\r\n\treturn number\r\n}","import { firestore } from \"../../firebase\"\r\n\r\nexport const fetchItemList = (list, collection, setList, resManipulation = (res) => res, lastFunc = () => null, lengthRestrict, assignMode = 0) => {\r\n\tif (list?.length) {\r\n\t\tconst tempArray = list.map(async (itemId, i) => {\r\n\t\t\treturn (await firestore.collection(collection).doc(itemId).get()).data()\r\n\t\t})\r\n\t\tPromise.all(tempArray).then(res => {\r\n\t\t\tlet finalResult = resManipulation(res)\r\n\t\t\tif (finalResult?.length > lengthRestrict) finalResult.length = lengthRestrict\r\n\t\t\tif (assignMode === 0) setList(finalResult)\r\n\t\t\telse setList(prev => {\r\n\t\t\t\tlet temp = []\r\n\t\t\t\tfinalResult.forEach(item => {\r\n\t\t\t\t\tif (item) {\r\n\t\t\t\t\t\tif (!prev.find(el => el['id'] === item['id'])) {\r\n\t\t\t\t\t\t\ttemp.push(item)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn [...prev, ...temp]\r\n\t\t\t})\r\n\t\t\tlastFunc()\r\n\t\t})\r\n\t}\r\n}","import { useEffect } from 'react'\r\n\r\nexport const useConditionFunc = (currentUser, fetchFunc, changeCondition, dep) => {\r\n\tuseEffect(() => {\r\n\t\tif (currentUser.uid) {\r\n\t\t\tif (changeCondition) {\r\n\t\t\t\tfetchFunc()\r\n\t\t\t}\r\n\t\t}\r\n\t}, [JSON.stringify(dep)])\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\n\r\nconst ModalContext = React.createContext();\r\n\r\nexport const useModal = () => {\r\n  return useContext(ModalContext);\r\n};\r\n\r\nexport const ModalClassProvider = ({ children }) => {\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [content, setContent] = useState(<h1>Test</h1>);\r\n  const [bottomMessage, setBottomMessage] = useState({\r\n    isOpenned: false,\r\n    type: \"success\",\r\n    message: \"Action is successfully done!\",\r\n  });\r\n  const [isOpenConfirm, setIsOpenConfirm] = useState(false);\r\n  const [confirmContent, setConfirmContent] = useState({\r\n    confirmText: \"Confirm Action\",\r\n    rejectText: \"Cancel\",\r\n    onConfirmL: () => {\r\n      return null;\r\n    },\r\n    onReject: () => {\r\n      return null;\r\n    },\r\n  });\r\n  function toggleModal() {\r\n    setOpenModal(!openModal);\r\n  }\r\n\r\n  //{question:question, confirmText:..., rejectText:..., onConfirm..., onReject:...}\r\n  function openConfirm(\r\n    question,\r\n    confirmText,\r\n    rejectText = \"Cancel\",\r\n    onConfirm,\r\n    onReject = closeConfirm\r\n  ) {\r\n    setIsOpenConfirm(true);\r\n    setConfirmContent({\r\n      question: question,\r\n      confirmText: confirmText,\r\n      rejectText: rejectText,\r\n      onConfirm: onConfirm,\r\n      onReject: onReject,\r\n    });\r\n  }\r\n\r\n  function closeConfirm() {\r\n    setIsOpenConfirm(false);\r\n  }\r\n\r\n  const openBottomMessage = (\r\n    message = \"Success\",\r\n    type = \"success\",\r\n    time = 3000\r\n  ) => {\r\n    setBottomMessage({\r\n      isOpenned: true,\r\n      type: type,\r\n      message: message,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      setBottomMessage({\r\n        isOpenned: false,\r\n        type: type,\r\n        message: message,\r\n      });\r\n    }, time);\r\n  };\r\n\r\n  const value = {\r\n    openModal,\r\n    setOpenModal,\r\n    toggleModal,\r\n    setContent,\r\n    content,\r\n    isOpenConfirm,\r\n    setIsOpenConfirm,\r\n    openConfirm,\r\n    closeConfirm,\r\n    confirmContent,\r\n    bottomMessage,\r\n    openBottomMessage,\r\n  };\r\n  return (\r\n    <ModalContext.Provider value={value}>{children}</ModalContext.Provider>\r\n  );\r\n};\r\n","import React, {\r\n  createContext,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LoadingData } from \"../features/loading/ui/atoms/loading-vital-data\";\r\nimport { addSongToHistory } from \"../entities/song/lib/add-song-to-history\";\r\nimport { PersonTiny } from \"../entities/user/ui/organisms/person-tiny\";\r\nimport { firestore } from \"../firebase\";\r\nimport { checkKaraoke } from \"../features/full-screen-player/lib/check-karaoke\";\r\nimport shuffleSongs from \"../entities/song/lib/shuffle-songs\";\r\nimport checkNumber from \"../shared/lib/check-number\";\r\nimport { fetchItemList } from \"../shared/lib/fetch-item-list\";\r\nimport { useConditionFunc } from \"../shared/lib/hooks/use-condition-func\";\r\nimport { useAuth } from \"./auth\";\r\nimport { useModal } from \"./modal\";\r\n\r\nconst SongContext = createContext(null);\r\n\r\nexport const useSong = () => {\r\n  return useContext(SongContext);\r\n};\r\n\r\nexport const SongProvider = ({ children }) => {\r\n  const { currentUser, loading, setLoading } = useAuth();\r\n  const { setOpenModal } = useModal();\r\n  const [yourSongs, setYourSongs] = useState([]);\r\n  const [yourPlaylists, setYourPlaylists] = useState([]);\r\n  const [yourAuthors, setYourAuthors] = useState([]);\r\n  const [yourFriends, setYourFriends] = useState([]);\r\n  const [currentSongQueue, setCurrentSongQueue] = useState([]);\r\n  const [currentSong, setCurrentSong] = useState(-1);\r\n  const [currentSongInQueue, setCurrentSongInQueue] = useState(0);\r\n  const [currentSongPlaylistSource, setCurrentSongPlaylistSource] = useState(\r\n    {}\r\n  );\r\n  const [inputRange, setInputRange] = useState(0);\r\n  const [currentSongData, setCurrentSongData] = useState({ id: -1 });\r\n\r\n  const [imgColors, setImgColors] = useState([]);\r\n  const [play, setPlay] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [songDuration, setSongDuration] = useState(0);\r\n  const [repeatMode, setRepeatMode] = useState(1);\r\n  const [shuffleMode, setShuffleMode] = useState(0);\r\n  const [currentParagraph, setCurrentParagraph] = useState(0);\r\n  const [isThereKaraoke, setIsThereKaraoke] = useState(false);\r\n  const [openFullScreenPlayer, setOpenFullScreenPlayer] = useState(false);\r\n  const songRef = useRef(null);\r\n  const currentParagraphRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n  const leftSideBarInputRef = useRef(null);\r\n  const [rightSideCurrentPage, setRightSideCurrentPage] = useState(0);\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n\r\n  function fetchYourFriends() {\r\n    fetchItemList(\r\n      currentUser.friends\r\n        .filter((friend) => friend.status === \"added\")\r\n        .map((obj) => obj.uid),\r\n      \"users\",\r\n      setYourFriends\r\n    );\r\n  }\r\n\r\n  function fetchQueue() {\r\n    fetchItemList(\r\n      currentUser?.lastQueue?.songsList,\r\n      \"songs\",\r\n      setCurrentSongQueue,\r\n      (res) => res,\r\n      () =>\r\n        setCurrentSongInQueue(\r\n          currentUser.lastQueue.songsList.findIndex(\r\n            (songId) => songId === currentUser.lastSongPlayed\r\n          )\r\n        )\r\n    );\r\n  }\r\n\r\n  function fetchYourSongs() {\r\n    fetchItemList(\r\n      currentUser.addedSongs.slice(0).reverse(),\r\n      \"songs\",\r\n      setYourSongs,\r\n      (res) => res,\r\n      fetchQueue\r\n    );\r\n  }\r\n\r\n  function fetchYourAuthors() {\r\n    fetchItemList(currentUser.addedAuthors, \"users\", setYourAuthors);\r\n  }\r\n\r\n  async function fetchCurrentSongInitial() {\r\n    if (currentUser.uid !== undefined) {\r\n      const tempSongObject = {\r\n        id: -1,\r\n        name: \"\",\r\n        songSrc: \"\",\r\n        authors: [],\r\n        cover: \"\",\r\n        listens: 0,\r\n        releaseDate: \"\",\r\n        lyrics: [],\r\n        imageColors: [],\r\n      };\r\n      const curSong =\r\n        currentUser.lastSongPlayed ||\r\n        currentUser.addedSongs[0] ||\r\n        tempSongObject.id;\r\n      const curQueue =\r\n        currentUser.lastQueue || {\r\n          source: \"/library\",\r\n          name: \"Your Library\",\r\n          image: currentUser.photoURL,\r\n          songsList: yourSongs,\r\n        } ||\r\n        [];\r\n      setCurrentSong(curSong);\r\n      setCurrentSongPlaylistSource(curQueue);\r\n\r\n      if (curSong !== -1) {\r\n        const docRef = firestore.collection(\"songs\").doc(curSong);\r\n        const docData = docRef\r\n          .get()\r\n          .then((doc) => {\r\n            if (doc.exists) {\r\n              const songData = doc.data();\r\n              setCurrentSongData(songData);\r\n              setImgColors(songData.imageColors || []);\r\n              setLoading(false);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Error getting document:\", error);\r\n            setLoading(false);\r\n          });\r\n      } else {\r\n        setCurrentSongData(tempSongObject);\r\n        setImgColors([]);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  async function fetchCurrentSong() {\r\n    if (currentSong !== -1) {\r\n      firestore\r\n        .collection(\"songs\")\r\n        .doc(currentSong)\r\n        .get()\r\n        .then((doc) => {\r\n          if (doc.exists) {\r\n            const songData = doc.data();\r\n            setImgColors(songData.imageColors || []);\r\n            setCurrentSongData(songData);\r\n          }\r\n        });\r\n    } else fetchCurrentSongInitial();\r\n  }\r\n\r\n  function fetchYourPlaylists() {\r\n    const tempArray = [];\r\n    if (currentUser.ownPlaylists) {\r\n      currentUser.ownPlaylists.map((playlistId, i) => {\r\n        const response = firestore.collection(\"playlists\").doc(playlistId);\r\n        response\r\n          .get()\r\n          .then((doc) => {\r\n            if (doc.exists) {\r\n              tempArray.push(doc.data());\r\n              if (i === currentUser.ownPlaylists.length - 1)\r\n                setYourPlaylists(tempArray);\r\n            } else {\r\n              console.log(\"No such document!\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Error getting document:\", error);\r\n          });\r\n      });\r\n    }\r\n\r\n    if (currentUser.addedPlaylists) {\r\n      currentUser.addedPlaylists.map((playlistId, i) => {\r\n        const response = firestore.collection(\"playlists\").doc(playlistId);\r\n        response\r\n          .get()\r\n          .then((doc) => {\r\n            if (doc.exists) {\r\n              tempArray.push(doc.data());\r\n              if (i === currentUser.addedPlaylists.length - 1)\r\n                setYourPlaylists(tempArray);\r\n            } else {\r\n              console.log(\"No such document!\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Error getting document:\", error);\r\n          });\r\n      });\r\n    }\r\n  }\r\n\r\n  useConditionFunc(\r\n    currentUser,\r\n    fetchYourSongs,\r\n    currentUser.addedSongs &&\r\n      currentUser.addedSongs.length !== yourSongs.length,\r\n    [currentUser.addedSongs]\r\n  );\r\n  useConditionFunc(\r\n    currentUser,\r\n    fetchYourPlaylists,\r\n    currentUser.ownPlaylists &&\r\n      String(currentUser.ownPlaylists.concat(currentUser.addedPlaylists)) !==\r\n        String(yourPlaylists),\r\n    [currentUser.ownPlaylists]\r\n  );\r\n  useConditionFunc(\r\n    currentUser,\r\n    fetchYourFriends,\r\n    currentUser.friends &&\r\n      String(currentUser.friends.filter((obj) => obj.status === \"added\")) !==\r\n        String(yourFriends),\r\n    [currentUser.friends]\r\n  );\r\n  useConditionFunc(\r\n    currentUser,\r\n    fetchYourAuthors,\r\n    currentUser.addedAuthors &&\r\n      currentUser.addedAuthors.length !== yourAuthors.length,\r\n    [currentUser.addedAuthors]\r\n  );\r\n  useConditionFunc(\r\n    currentUser,\r\n    fetchCurrentSong,\r\n    currentUser &&\r\n      (currentSongData.id === -1 || currentSong || currentUser.lastSongPlayed),\r\n    [currentSong, currentUser.lastSongPlayed]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (currentUser.uid === undefined) {\r\n      setCurrentSongData({ id: -1 });\r\n      setCurrentSong(-1);\r\n      setCurrentSongQueue([]);\r\n      setYourAuthors([]);\r\n      setYourSongs([]);\r\n      setYourFriends([]);\r\n      setYourPlaylists([]);\r\n    }\r\n  }, [currentUser.uid]);\r\n\r\n  useEffect(() => {\r\n    setIsThereKaraoke(checkKaraoke(currentSongData.lyrics));\r\n  }, [currentSongData.lyrics]);\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      if (shuffleMode) {\r\n        let shuffledSongsArray = shuffleSongs(currentSongQueue);\r\n        setCurrentSongQueue(shuffledSongsArray);\r\n        setCurrentSongInQueue(\r\n          shuffledSongsArray.findIndex((song) => song.id === currentSong)\r\n        );\r\n      } else {\r\n        setCurrentSongQueue(currentSongPlaylistSource.songsList);\r\n        setCurrentSongInQueue(\r\n          currentSongPlaylistSource.songsList.findIndex(\r\n            (song) => song.id === currentSong\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }, [shuffleMode]);\r\n\r\n  function playSong() {\r\n    if (play) {\r\n      songRef.current.pause();\r\n    } else {\r\n      songRef.current.play();\r\n    }\r\n\r\n    setPlay(!play);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setCurrentParagraph(0);\r\n  }, [currentSongData.id]);\r\n\r\n  function loadSongData(e) {\r\n    setCurrentTime(e.target.currentTime);\r\n    setSongDuration(e.target.duration);\r\n    inputRef.current.max = e.target.duration;\r\n    if (window.innerWidth > 1000)\r\n      leftSideBarInputRef.current.max = e.target.duration;\r\n    setInputRange(0);\r\n    if (play) {\r\n      e.target.play();\r\n    } else e.target.pause();\r\n  }\r\n\r\n  function defineCurrentParagraph() {\r\n    //Binary Search\r\n    let first = 0,\r\n      last = currentSongData.lyrics.length - 1;\r\n    let roundedTime = parseFloat(\r\n      parseFloat(songRef.current.currentTime).toFixed(1)\r\n    );\r\n    while (first <= last) {\r\n      let midPoint = Math.floor((first + last) / 2);\r\n      let blockStartTime = parseFloat(\r\n        parseFloat(currentSongData.lyrics[midPoint].startTime).toFixed(1)\r\n      );\r\n      let nextBlockStartTime =\r\n        midPoint !== currentSongData.lyrics.length - 1\r\n          ? parseFloat(\r\n              parseFloat(\r\n                currentSongData.lyrics[midPoint + 1].startTime\r\n              ).toFixed(1)\r\n            )\r\n          : last;\r\n      if (currentSongData.lyrics[midPoint].startTime !== \"undefined\") {\r\n        if (\r\n          roundedTime >= blockStartTime &&\r\n          roundedTime <= nextBlockStartTime\r\n        ) {\r\n          setCurrentParagraph(midPoint);\r\n          break;\r\n        } else if (blockStartTime < roundedTime) first = midPoint + 1;\r\n        else last = midPoint - 1;\r\n      } else return;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (rightSideCurrentPage === 2) defineCurrentParagraph();\r\n  }, [rightSideCurrentPage]);\r\n\r\n  function defineCurrentParagraphLight() {\r\n    if (\r\n      currentParagraph !== currentSongData.lyrics.length - 1 &&\r\n      parseFloat(currentSongData.lyrics[currentParagraph + 1].startTime) <=\r\n        songRef.current.currentTime\r\n    ) {\r\n      return setCurrentParagraph(currentParagraph + 1);\r\n    }\r\n  }\r\n  function playing(event) {\r\n    setCurrentTime(event.target.currentTime);\r\n    if (\r\n      isThereKaraoke &&\r\n      rightSideCurrentPage === 2 &&\r\n      openFullScreenPlayer &&\r\n      openMenu\r\n    ) {\r\n      defineCurrentParagraphLight();\r\n    }\r\n\r\n    setInputRange((event.target.currentTime / songDuration) * 100);\r\n  }\r\n\r\n  async function nextSong() {\r\n    let correctSongNumber = checkNumber(\r\n      currentSongInQueue + 1,\r\n      currentSongQueue.length - 1\r\n    );\r\n    let currentSongId = await (\r\n      await firestore\r\n        .collection(\"songs\")\r\n        .doc(currentSongQueue[correctSongNumber].id)\r\n        .get()\r\n    ).data().id;\r\n    addSongToHistory(currentSongId, currentUser);\r\n    setCurrentParagraph(0);\r\n    setCurrentSong(currentSongId);\r\n    setCurrentSongInQueue(\r\n      checkNumber(correctSongNumber, currentSongQueue.length - 1)\r\n    );\r\n    firestore.collection(\"users\").doc(currentUser.uid).update({\r\n      lastSongPlayed: currentSongId,\r\n    });\r\n  }\r\n\r\n  async function prevSong() {\r\n    if (currentTime > 5) {\r\n      songRef.current.currentTime = 0;\r\n      setCurrentTime(0);\r\n      setCurrentParagraph(0);\r\n      return;\r\n    }\r\n    let correctSongNumber = checkNumber(\r\n      currentSongInQueue - 1,\r\n      currentSongQueue.length - 1\r\n    );\r\n    let currentSongId = await (\r\n      await firestore\r\n        .collection(\"songs\")\r\n        .doc(currentSongQueue[correctSongNumber].id)\r\n        .get()\r\n    ).data().id;\r\n    addSongToHistory(currentSongId, currentUser);\r\n    setCurrentParagraph(0);\r\n    setCurrentSong(currentSongId);\r\n    setCurrentSongInQueue(\r\n      checkNumber(correctSongNumber, currentSongQueue.length - 1)\r\n    );\r\n    firestore.collection(\"users\").doc(currentUser.uid).update({\r\n      lastSongPlayed: currentSongId,\r\n    });\r\n  }\r\n\r\n  function changeCurrentTime(event, startTime = 0) {\r\n    if (event.target.localName === \"div\" || event.target.localName === \"p\") {\r\n      if (startTime !== undefined) {\r\n        setCurrentTime(startTime);\r\n        songRef.current.currentTime = startTime;\r\n        setInputRange((startTime / songDuration) * 100);\r\n        if (\r\n          isThereKaraoke &&\r\n          rightSideCurrentPage === 2 &&\r\n          openFullScreenPlayer\r\n        )\r\n          setCurrentParagraph(parseInt(event.target.id));\r\n        songRef.current.play();\r\n        setPlay(true);\r\n        return;\r\n      }\r\n    } else {\r\n      setCurrentTime(event.target.value);\r\n      songRef.current.currentTime = event.target.value;\r\n      setInputRange((event.target.value / songDuration) * 100);\r\n      if (isThereKaraoke && rightSideCurrentPage === 2 && openFullScreenPlayer)\r\n        defineCurrentParagraph();\r\n    }\r\n  }\r\n\r\n  function displayAuthors(\r\n    authorsList = currentSongData.authors,\r\n    separatingSign = \" & \"\r\n  ) {\r\n    return authorsList.map((el, i) => {\r\n      return (\r\n        <>\r\n          <Link\r\n            to={`/authors/${el.uid}`}\r\n            key={el.uid}\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              setOpenFullScreenPlayer(false);\r\n            }}\r\n          >\r\n            {el.displayName}\r\n          </Link>\r\n          {i === authorsList.length - 1 ? \"\" : separatingSign}\r\n        </>\r\n      );\r\n    });\r\n  }\r\n\r\n  function displayAuthorsFull(\r\n    authorsList = currentSongData.authors,\r\n    separatingSign = \" & \"\r\n  ) {\r\n    return authorsList.map((el, i) => {\r\n      return (\r\n        <>\r\n          <Link\r\n            to={`/authors/${el.uid}`}\r\n            key={el.uid}\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              setOpenFullScreenPlayer(false);\r\n              setOpenModal(false);\r\n            }}\r\n          >\r\n            <PersonTiny data={el} />\r\n          </Link>\r\n        </>\r\n      );\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = currentSongData.name || \"Soundbubble\";\r\n  }, [currentSongData.name]);\r\n  return (\r\n    <SongContext.Provider\r\n      value={{\r\n        yourSongs,\r\n        setYourSongs,\r\n        yourPlaylists,\r\n        yourFriends,\r\n        currentSongQueue,\r\n        currentSongPlaylistSource,\r\n        setCurrentSongPlaylistSource,\r\n        setCurrentSongQueue,\r\n        setCurrentSongInQueue,\r\n        play,\r\n        setPlay,\r\n        songSrc: currentSongData.songSrc,\r\n        currentTime,\r\n        setCurrentTime,\r\n        songDuration,\r\n        songRef,\r\n        name: currentSongData.name,\r\n        authors: currentSongData.authors,\r\n        lyrics: currentSongData.lyrics,\r\n        cover: currentSongData.cover,\r\n        imgColors,\r\n        setImgColors,\r\n        currentSong,\r\n        setCurrentSong,\r\n        repeatMode,\r\n        setRepeatMode,\r\n        shuffleMode,\r\n        setShuffleMode,\r\n        inputRef,\r\n        leftSideBarInputRef,\r\n        isThereKaraoke,\r\n        rightSideCurrentPage,\r\n        currentParagraph,\r\n        currentParagraphRef,\r\n        nextSong,\r\n        prevSong,\r\n        playSong,\r\n        playing,\r\n        defineCurrentParagraph,\r\n        setRightSideCurrentPage,\r\n        changeCurrentTime,\r\n        displayAuthors,\r\n        displayAuthorsFull,\r\n        openFullScreenPlayer,\r\n        setOpenFullScreenPlayer,\r\n        loadSongData,\r\n        fetchYourSongs,\r\n        setOpenMenu,\r\n        openMenu,\r\n        currentSongData,\r\n        setCurrentSongData,\r\n        setIsThereKaraoke,\r\n        setYourPlaylists,\r\n        yourAuthors,\r\n        setYourAuthors,\r\n        inputRange,\r\n      }}\r\n    >\r\n      {!loading ? children : <LoadingData />}\r\n    </SongContext.Provider>\r\n  );\r\n};\r\n","export function checkKaraoke(lyrics) {\r\n\tif (lyrics !== undefined && lyrics.length === 0) return false\r\n\r\n\tif (lyrics !== undefined) {\r\n\t\tif (lyrics[0].startTime === 'undefined') return false\r\n\t}\r\n\r\n\treturn true\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ButtonWrapper = styled.button`\r\n  border: none;\r\n  color: var(--lightBlue);\r\n  background: var(--lightGrey);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 5px 10px;\r\n  border-radius: var(--standartBorderRadius3);\r\n  font-weight: 600;\r\n\r\n  svg {\r\n    margin-right: ${({ textLen }) => (textLen === 0 ? \"0\" : \"5px\")};\r\n    width: 16px;\r\n    height: 16px;\r\n  }\r\n`;\r\n\r\nconst Button = ({ text = \"\", icon, onClick, visible = true }) => {\r\n  return (\r\n    visible && (\r\n      <ButtonWrapper onClick={onClick} textLen={text.length}>\r\n        {icon}\r\n        <span>{text}</span>\r\n      </ButtonWrapper>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { FiXCircle } from \"react-icons/fi\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"./button\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n  margin: ${({ margin }) => (margin ? \"0 0 10px 0\" : 0)};\r\n\r\n  button {\r\n    position: absolute;\r\n    right: 8px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n`;\r\n\r\nconst InputWrapper = styled.input`\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  padding: 12px;\r\n  border-radius: var(--standartBorderRadius);\r\n  border: none;\r\n  background: var(--leftSideBarColor);\r\n  outline: none;\r\n  color: #fff;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Input = ({\r\n  title,\r\n  type = \"text\",\r\n  value,\r\n  setValue,\r\n  placeholder = \"\",\r\n  required = false,\r\n  margin = false,\r\n}) => {\r\n  return (\r\n    <>\r\n      {!!title && <h3>{title}</h3>}\r\n      <Wrapper margin>\r\n        <InputWrapper\r\n          value={value}\r\n          onChange={(e) => setValue(e.target.value)}\r\n          placeholder={placeholder}\r\n          type={type}\r\n          required={required}\r\n        />\r\n        <Button\r\n          icon={<FiXCircle />}\r\n          onClick={() => setValue(\"\")}\r\n          visible={!!value.length}\r\n        />\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { useEffect } from \"react\";\r\nimport { ImCheckmark } from \"react-icons/im\";\r\nimport styled from \"styled-components\";\r\nimport { LoadingCircle } from \"../../../features/loading/ui/atoms/loading-circle\";\r\nimport { useModal } from \"../../../contexts/modal\";\r\n\r\nconst SubmitButtonWrapper = styled.button`\r\n  width: 100%;\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n  opacity: ${(props) => (props.isLoading || !props.isActive ? 0.5 : 1)};\r\n  background: var(--purpleAndBlueGrad);\r\n  color: #fff;\r\n  font-weight: bold;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 40px;\r\n  border-radius: var(--standartBorderRadius3);\r\n  position: relative;\r\n  overflow: hidden;\r\n\r\n  @keyframes button-animation-in {\r\n    0% {\r\n      opacity: 0;\r\n      transform: scale(0.95);\r\n    }\r\n    50% {\r\n      opacity: 1;\r\n      transform: scale(1);\r\n    }\r\n    100% {\r\n      opacity: 0;\r\n      transform: scale(0.95);\r\n    }\r\n  }\r\n\r\n  @keyframes button-animation-out {\r\n    0% {\r\n      opacity: 0;\r\n      transform: scale(0.95);\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n      transform: scale(1);\r\n    }\r\n  }\r\n\r\n  .inner-button {\r\n    z-index: 1;\r\n\r\n    .inner-button-success {\r\n      animation: button-animation-in 2s forwards;\r\n    }\r\n\r\n    .inner-button-text {\r\n      animation: button-animation-out 0.5s forwards;\r\n    }\r\n  }\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    display: block;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background: var(--green);\r\n    width: ${(props) => (props.completed ? \"2000px\" : \"0\")};\r\n    height: ${(props) => (props.completed ? \"2000px\" : \"0\")};\r\n    border-radius: 100%;\r\n    transition: 0.6s;\r\n    z-index: 0;\r\n  }\r\n\r\n  .LoadingCircle {\r\n    position: relative;\r\n    transform: none;\r\n    left: auto;\r\n    top: auto;\r\n    width: 30px;\r\n    height: 30px;\r\n\r\n    img {\r\n      width: 30px;\r\n      height: 30px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SubmitButton = ({\r\n  text,\r\n  action,\r\n  isLoading,\r\n  completed = false,\r\n  setCompleted,\r\n  bottomMessage,\r\n  isActive = true,\r\n}) => {\r\n  const { openBottomMessage } = useModal();\r\n\r\n  useEffect(() => {\r\n    if (completed) {\r\n      openBottomMessage(bottomMessage ?? undefined);\r\n      setTimeout(() => {\r\n        setCompleted(false);\r\n      }, 2000);\r\n    }\r\n  }, [completed]);\r\n\r\n  return (\r\n    <SubmitButtonWrapper\r\n      isLoading={isLoading}\r\n      className=\"submit-button\"\r\n      completed={completed}\r\n      isActive={isActive}\r\n      onClick={isActive ? action : () => openBottomMessage(\"Nope\", \"failure\")}\r\n    >\r\n      <div className=\"inner-button\">\r\n        {completed ? (\r\n          <div className=\"inner-button-success\">\r\n            <ImCheckmark /> Done\r\n          </div>\r\n        ) : !isLoading ? (\r\n          <div className=\"inner-button-text\">{text}</div>\r\n        ) : (\r\n          <LoadingCircle top={0} />\r\n        )}\r\n      </div>\r\n    </SubmitButtonWrapper>\r\n  );\r\n};\r\n\r\nexport default SubmitButton;\r\n","import { useEffect, useState } from \"react\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport normalizeString from \"../../../../shared/lib/normalize-string\";\r\nimport { fetchItemList } from \"../../../../shared/lib/fetch-item-list\";\r\n\r\nconst useSearch = (\r\n  value,\r\n  setAllFoundSongs,\r\n  setResultAuthorList,\r\n  setResultPlaylists,\r\n  defaultSearchMode,\r\n  searchMode,\r\n  defaultSongsListValue,\r\n  defaultAuthorsListValue,\r\n  defaultPlaylistsListValue\r\n) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [foundAnything, setFoundAnything] = useState(false);\r\n\r\n  const [inputValue, setInputValue] = useState(value);\r\n\r\n  async function findItem(value, place, defaultList = [], setList) {\r\n    const foundItemTempArray = [];\r\n    let normalizedSearch = normalizeString(value);\r\n    const itemsList = await firestore\r\n      .collection(\"search\")\r\n      .where(\"variantsOfName\", \"array-contains\", normalizedSearch)\r\n      .get();\r\n    itemsList.docs.forEach(async (item) => {\r\n      const itemData = item.data();\r\n      if (itemData.place === place) {\r\n        const realData = (\r\n          await firestore.collection(itemData.place).doc(itemData.uid).get()\r\n        ).data();\r\n        if (defaultList !== undefined && defaultList.length) {\r\n          if (\r\n            defaultList\r\n              .map((song) => song.id || song.uid)\r\n              .includes(itemData.uid)\r\n          )\r\n            foundItemTempArray.push(realData);\r\n        } else if (!realData.isPrivate) foundItemTempArray.push(realData);\r\n        if (\r\n          defaultSearchMode === undefined &&\r\n          searchMode === 0 &&\r\n          foundItemTempArray.length !== 0\r\n        ) {\r\n          setList(foundItemTempArray);\r\n          switch (itemData.place) {\r\n            case \"songs\":\r\n              for (let i = 0; i < foundItemTempArray.length; i++) {\r\n                const authorsIdsArray = realData.authors;\r\n                fetchItemList(\r\n                  authorsIdsArray.map((author) => author.uid),\r\n                  \"users\",\r\n                  setResultAuthorList,\r\n                  (res) => res.sort((a, b) => b.subscribers - a.subscribers),\r\n                  undefined,\r\n                  undefined,\r\n                  1\r\n                );\r\n              }\r\n              break;\r\n            case \"users\":\r\n              for (let i = 0; i < foundItemTempArray.length; i++) {\r\n                const songsIdsArray = realData.ownSongs;\r\n                const albumsIdsArray = realData.ownPlaylists;\r\n                fetchItemList(\r\n                  songsIdsArray,\r\n                  \"songs\",\r\n                  setAllFoundSongs,\r\n                  (res) => res.sort((a, b) => b.listens - a.listens),\r\n                  () => null,\r\n                  3,\r\n                  1\r\n                );\r\n                fetchItemList(\r\n                  albumsIdsArray,\r\n                  \"playlists\",\r\n                  setResultPlaylists,\r\n                  (res) => res.sort((a, b) => b.listens - a.listens),\r\n                  () => null,\r\n                  3,\r\n                  1\r\n                );\r\n              }\r\n              break;\r\n            case \"playlists\":\r\n              for (let i = 0; i < foundItemTempArray.length; i++) {\r\n                const authorsIdsArray = realData.authors;\r\n                fetchItemList(\r\n                  authorsIdsArray.map((author) => author.uid),\r\n                  \"users\",\r\n                  setResultAuthorList,\r\n                  (res) => res.sort((a, b) => b.subscribers - a.subscribers),\r\n                  undefined,\r\n                  undefined,\r\n                  1\r\n                );\r\n              }\r\n              break;\r\n            default:\r\n              setMessage(\"Wrong search mode\");\r\n              break;\r\n          }\r\n        }\r\n\r\n        if (foundItemTempArray.length !== 0) {\r\n          setLoading(false);\r\n          setFoundAnything(true);\r\n          setList(foundItemTempArray);\r\n        }\r\n      }\r\n    });\r\n    setLoading(false);\r\n    if (foundItemTempArray.length === 0) {\r\n      setList([]);\r\n      setFoundAnything(false);\r\n    }\r\n  }\r\n  function findSomething(str) {\r\n    if (value.length !== 0) {\r\n      const searchText = str ?? value;\r\n      setInputValue(searchText);\r\n      setLoading(true);\r\n      setFoundAnything(false);\r\n      if (defaultSearchMode === undefined) {\r\n        if (searchMode === 0 || searchMode === 1) {\r\n          findItem(\r\n            searchText,\r\n            \"songs\",\r\n            defaultSongsListValue,\r\n            setAllFoundSongs\r\n          );\r\n          setResultAuthorList([]);\r\n          setResultPlaylists([]);\r\n        }\r\n        if (searchMode === 0 || searchMode === 2) {\r\n          findItem(\r\n            searchText,\r\n            \"users\",\r\n            defaultAuthorsListValue,\r\n            setResultAuthorList\r\n          );\r\n          setAllFoundSongs([]);\r\n          setResultPlaylists([]);\r\n        }\r\n        if (searchMode === 0 || searchMode === 3) {\r\n          findItem(\r\n            searchText,\r\n            \"playlists\",\r\n            defaultPlaylistsListValue,\r\n            setResultPlaylists\r\n          );\r\n          setResultAuthorList([]);\r\n          setAllFoundSongs([]);\r\n        }\r\n      } else {\r\n        switch (defaultSearchMode) {\r\n          case \"songs\":\r\n            findItem(\r\n              searchText,\r\n              \"songs\",\r\n              defaultSongsListValue,\r\n              setAllFoundSongs\r\n            );\r\n            break;\r\n          case \"playlists\":\r\n            findItem(\r\n              searchText,\r\n              \"playlists\",\r\n              defaultPlaylistsListValue,\r\n              setResultPlaylists\r\n            );\r\n            break;\r\n          case \"authors\":\r\n            findItem(\r\n              searchText,\r\n              \"users\",\r\n              defaultAuthorsListValue,\r\n              setResultAuthorList\r\n            );\r\n            break;\r\n          default:\r\n            findItem(\r\n              searchText,\r\n              \"songs\",\r\n              defaultSongsListValue,\r\n              setAllFoundSongs\r\n            );\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (value.length === 0) {\r\n      if (defaultSongsListValue !== undefined)\r\n        setAllFoundSongs(defaultSongsListValue);\r\n      if (defaultAuthorsListValue !== undefined)\r\n        setResultAuthorList(defaultAuthorsListValue);\r\n      if (defaultPlaylistsListValue !== undefined)\r\n        setResultPlaylists(defaultPlaylistsListValue);\r\n      setLoading(false);\r\n    }\r\n  }, [value]);\r\n\r\n  useEffect(() => {\r\n    findSomething();\r\n  }, [searchMode]);\r\n\r\n  return {\r\n    findSomething,\r\n    message,\r\n    loading,\r\n    foundAnything,\r\n    inputValue,\r\n    setInputValue,\r\n  };\r\n};\r\n\r\nexport default useSearch;\r\n","import { firestore } from \"../../../firebase\";\r\n\r\nconst rankCurrentHint = (hintName, hintUid) => {\r\n\tif (hintName) {\r\n\t\tfirestore\r\n\t\t\t.collection(\"search\")\r\n\t\t\t.doc(hintUid)\r\n\t\t\t.get()\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconst rank = res.data().rank ? res.data().rank + 1 : 1;\r\n\t\t\t\tfirestore\r\n\t\t\t\t\t.collection(\"search\")\r\n\t\t\t\t\t.doc(hintUid)\r\n\t\t\t\t\t.update({\r\n\t\t\t\t\t\trank: rank,\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n};\r\n\r\nexport default rankCurrentHint","import React from \"react\";\r\nimport { FiSearch, FiXCircle } from \"react-icons/fi\";\r\n\r\nconst SearchBarButtons = (props) => {\r\n  const { length, setInputValue, setValue } = props;\r\n  return (\r\n    <div className=\"searchBarElement\">\r\n      <FiSearch />\r\n      <span\r\n        onClick={() => {\r\n          setValue(\"\");\r\n          setInputValue(\"\");\r\n        }}\r\n        style={\r\n          !length\r\n            ? {\r\n                opacity: 0,\r\n                visibility: \"hidden\",\r\n                cursor: \"default\",\r\n              }\r\n            : {}\r\n        }\r\n      >\r\n        <FiXCircle />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBarButtons;\r\n","import React from \"react\";\r\n\r\nconst SearchFilterItem = ({ text, searchMode, setSearchMode, index }) => {\r\n  return (\r\n    <button\r\n      onClick={() => setSearchMode(index)}\r\n      style={\r\n        searchMode === index\r\n          ? {\r\n              background: \"var(--lightBlue)\",\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SearchFilterItem;\r\n","import React from \"react\";\r\nimport SearchFilterItem from \"../atoms/search-filter-item\";\r\n\r\nconst SearchFilters = ({ defaultSearchMode, searchMode, setSearchMode }) => {\r\n  const filters = [\"All\", \"Songs\", \"Authors\", \"Playlists\"];\r\n  return (\r\n    <div\r\n      className=\"searchFilters\"\r\n      style={\r\n        defaultSearchMode !== undefined\r\n          ? {\r\n              display: \"none\",\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      {filters.map((filter, index) => {\r\n        return (\r\n          <SearchFilterItem\r\n            text={filter}\r\n            searchMode={searchMode}\r\n            setSearchMode={setSearchMode}\r\n            index={index}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchFilters;\r\n","import { firestore } from \"../../../firebase\"\r\n\r\nconst findSearchHints = async (searchValue) => {\r\n\tif (searchValue.length > 0) {\r\n\t\tconst hints = (await firestore.collection('search')\r\n\t\t\t.where('variantsOfName', 'array-contains', searchValue).get())\r\n\t\t\t.docs.map(async (hint) => {\r\n\t\t\t\tconst { place, uid, rank } = hint.data()\r\n\t\t\t\tconst { name, authors, displayName, isVerified } = (await firestore.collection(place).doc(uid).get()).data()\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttype: place,\r\n\t\t\t\t\tname: name ? name : displayName,\r\n\t\t\t\t\tauthor: authors ? authors[0].displayName : null,\r\n\t\t\t\t\tuid: uid,\r\n\t\t\t\t\trank: rank || 0,\r\n\t\t\t\t\tisVerified: isVerified ?? false\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\treturn hints\r\n\t}\r\n\telse return []\r\n}\r\n\r\nexport default findSearchHints","const transliteWord = (word) => {\r\n\tconst dictionaryRuToEn = {\r\n\t\t'–∞': 'f', '–±': ',', '–≤': 'd', '–≥': 'u', '–¥': 'l', '–µ': 't', '—ë': '`', '–∂': ';',\r\n\r\n\t\t'–∑': 'p', '–∏': 'b', '–π': 'q', '–∫': 'r', '–ª': 'k', '–º': 'v', '–Ω': 'y',\r\n\r\n\t\t'–æ': 'j', '–ø': 'g', '—Ä': 'h', '—Å': 'c', '—Ç': 'n', '—É': 'e', '—Ñ': 'a', '—Ö': '[',\r\n\r\n\t\t'—Ü': 'w', '—á': 'x', '—à': 'i', '—â': 'o', '—ä': ']', '—ã': 's', '—å': 'm', '—ç': '\\'', '—é': '.', '—è': 'z'\r\n\t}\r\n\r\n\tconst dictionaryEnToRu = {\r\n\t\t'f': '–∞', ',': '–±', 'd': '–≤', 'u': '–≥', 'l': '–¥', 't': '–µ', '`': '—ë', ';': '–∂',\r\n\r\n\t\t'p': '–∑', 'b': '–∏', 'q': '–π', 'r': '–∫', 'k': '–ª', 'v': '–º', 'y': '–Ω',\r\n\r\n\t\t'j': '–æ', 'g': '–ø', 'h': '—Ä', 'c': '—Å', 'n': '—Ç', 'e': '—É', 'a': '—Ñ', '[': '—Ö',\r\n\r\n\t\t'w': '—Ü', 'x': '—á', 'i': '—à', 'o': '—â', ']': '—ä', 's': '—ã', 'm': '—å', '\\'': '—ç', '.': '—é', 'z': '—è'\r\n\t}\r\n\r\n\tif (dictionaryRuToEn[word[0]])\r\n\t\treturn word.split('').reduce((acc, letter) => acc + dictionaryRuToEn[letter], '')\r\n\telse return word.split('').reduce((acc, letter) => acc + dictionaryEnToRu[letter], '')\r\n\r\n}\r\n\r\nexport default transliteWord","import { useEffect } from \"react\";\r\nimport normalizeString from \"../../../../shared/lib/normalize-string\";\r\nimport findSearchHints from \"../find-search-hints\";\r\nimport transliteWord from \"../translite-word\";\r\n\r\nconst useLoadHints = ({\r\n  setCurrentHint,\r\n  searchValue,\r\n  inputFocused,\r\n  setSearchHints,\r\n}) => {\r\n  useEffect(() => {\r\n    setCurrentHint(-1);\r\n    if (searchValue.length !== 0 && inputFocused) {\r\n      Promise.resolve(findSearchHints(normalizeString(searchValue))).then(\r\n        (res) => {\r\n          Promise.all(res).then((hint) => {\r\n            const sortedHints = hint.sort((a, b) => b.rank - a.rank);\r\n\r\n            if (sortedHints.length) setSearchHints(sortedHints.slice(0, 10));\r\n            else {\r\n              Promise.resolve(\r\n                findSearchHints(transliteWord(normalizeString(searchValue)))\r\n              ).then((res) => {\r\n                Promise.all(res).then((hint) => {\r\n                  const sortedHints = hint.sort((a, b) => b.rank - a.rank);\r\n                  setSearchHints(sortedHints.slice(0, 10));\r\n                });\r\n              });\r\n            }\r\n          });\r\n        }\r\n      );\r\n    } else setSearchHints([]);\r\n  }, [searchValue, inputFocused]);\r\n};\r\n\r\nexport default useLoadHints;\r\n","import { BiAlbum } from \"react-icons/bi\";\r\nimport { FiMusic, FiSearch, FiUser } from \"react-icons/fi\";\r\n\r\nconst findRightIcon = (type) => {\r\n\tswitch (type) {\r\n\t\tcase \"songs\":\r\n\t\t\treturn <FiMusic style={{ color: 'var(--reallyLightBlue)' }} />;\r\n\t\tcase \"playlists\":\r\n\t\t\treturn <BiAlbum style={{ color: 'var(--lightPurple)' }} />;\r\n\t\tcase \"users\":\r\n\t\t\treturn <FiUser style={{ color: 'var(--pink)' }} />;\r\n\t\tcase \"search\":\r\n\t\t\treturn <FiSearch />;\r\n\t\tdefault:\r\n\t\t\treturn <FiMusic />;\r\n\t}\r\n};\r\n\r\nexport default findRightIcon\r\n","import React from \"react\";\r\nimport { ImCheckmark } from \"react-icons/im\";\r\nimport findRightIcon from \"../../../../shared/lib/find-right-icon\";\r\n\r\nconst SearcHintItem = (props) => {\r\n  const {\r\n    name,\r\n    author,\r\n    isVerified,\r\n    type,\r\n    index,\r\n    currentHint,\r\n    setCurrentHint,\r\n    findSomething,\r\n    setInputFocused,\r\n  } = props;\r\n  return (\r\n    <div\r\n      className={\"search-hint-item\" + (currentHint === index ? \" current\" : \"\")}\r\n      onClick={() => {\r\n        setCurrentHint(index);\r\n        setInputFocused(false);\r\n        findSomething(name);\r\n      }}\r\n    >\r\n      {findRightIcon(type)}\r\n      <span>{name}</span>\r\n      {author && <span className=\"search-hint-item-author\">{author}</span>}\r\n      {isVerified ? (\r\n        <ImCheckmark\r\n          style={{\r\n            width: \"12px\",\r\n            height: \"12px\",\r\n            opacity: 0.5,\r\n            marginLeft: \"10px\",\r\n          }}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearcHintItem;\r\n","import React from \"react\";\r\nimport useLoadHints from \"../../lib/hooks/use-load-hints\";\r\nimport SearcHintItem from \"../atoms/search-hint-item\";\r\n\r\nexport const SearchHints = ({\r\n  searchValue,\r\n  searchHints,\r\n  setSearchHints,\r\n  currentHint,\r\n  setCurrentHint,\r\n  inputFocused,\r\n  defaultSearchMode,\r\n  findSomething,\r\n  setInputFocused,\r\n}) => {\r\n  useLoadHints({\r\n    setCurrentHint,\r\n    searchValue,\r\n    inputFocused,\r\n    setSearchHints,\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className=\"search-hints\"\r\n      style={\r\n        !searchHints.length\r\n          ? { display: \"none\" }\r\n          : defaultSearchMode\r\n          ? { transform: \"translateY(0px)\" }\r\n          : { transform: \"translateY(-35px)\" }\r\n      }\r\n    >\r\n      <SearcHintItem\r\n        name={searchValue}\r\n        type={\"search\"}\r\n        index={-1}\r\n        key={-1}\r\n        currentHint={currentHint}\r\n        setCurrentHint={setCurrentHint}\r\n        findSomething={findSomething}\r\n        setInputFocused={setInputFocused}\r\n      />\r\n      {searchHints.map((hint, index) => {\r\n        return (\r\n          <SearcHintItem\r\n            {...hint}\r\n            currentHint={currentHint}\r\n            setCurrentHint={setCurrentHint}\r\n            index={index}\r\n            key={hint.uid}\r\n            findSomething={findSomething}\r\n            setInputFocused={setInputFocused}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect } from 'react';\r\n\r\nconst useOutsideClick = (ref, setFunc) => {\r\n\tuseEffect(() => {\r\n\t\tfunction handleClickOutside(event) {\r\n\t\t\tif (ref.current && !ref.current.contains(event.target)) {\r\n\t\t\t\tsetFunc(false)\r\n\t\t\t}\r\n\t\t}\r\n\t\tdocument.addEventListener(\"mousedown\", handleClickOutside);\r\n\t\treturn () => {\r\n\t\t\tdocument.removeEventListener(\"mousedown\", handleClickOutside);\r\n\t\t};\r\n\t}, [ref]);\r\n}\r\n\r\nexport default useOutsideClick\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { LoadingCircle } from \"../../../features/loading/ui/atoms/loading-circle\";\r\nimport useSearch from \"../../../features/search/lib/hooks/use-search\";\r\nimport rankCurrentHint from \"../../../features/search/lib/rank-current-hint\";\r\nimport SearchBarButtons from \"../../../features/search/ui/molecules/search-bar-buttons\";\r\nimport SearchFilters from \"../../../features/search/ui/molecules/search-filters\";\r\nimport { SearchHints } from \"../../../features/search/ui/organisms/search-hints\";\r\nimport checkNumber from \"../../lib/check-number\";\r\nimport useOutsideClick from \"../../lib/hooks/use-outside-click\";\r\n\r\nconst SearchBar = ({\r\n  value,\r\n  setValue,\r\n  setAllFoundSongs,\r\n  setResultPlaylists,\r\n  setResultAuthorList,\r\n  focus = false,\r\n  defaultSearchMode = undefined,\r\n  inputText = \"Search for songs or for people\",\r\n  defaultSongsListValue,\r\n  defaultAuthorsListValue,\r\n  defaultPlaylistsListValue,\r\n  background,\r\n}) => {\r\n  const [searchMode, setSearchMode] = useState(0);\r\n  const [currentHint, setCurrentHint] = useState(-1);\r\n  const [searchHints, setSearchHints] = useState([]);\r\n  const [inputFocused, setInputFocused] = useState(focus);\r\n  const inputRef = useRef(null);\r\n\r\n  const { findSomething, loading, foundAnything, inputValue, setInputValue } =\r\n    useSearch(\r\n      searchHints[currentHint]?.name ?? value,\r\n      setAllFoundSongs,\r\n      setResultAuthorList,\r\n      setResultPlaylists,\r\n      defaultSearchMode,\r\n      searchMode,\r\n      defaultSongsListValue,\r\n      defaultAuthorsListValue,\r\n      defaultPlaylistsListValue\r\n    );\r\n\r\n  useEffect(() => {\r\n    if (focus) inputRef.current.focus();\r\n  }, []);\r\n\r\n  const handleCurrentHint = (e) => {\r\n    if (inputFocused) {\r\n      switch (e.key) {\r\n        case \"ArrowDown\":\r\n          setCurrentHint(\r\n            checkNumber(currentHint + 1, searchHints.length - 1, -1)\r\n          );\r\n          setInputValue(\r\n            searchHints[\r\n              checkNumber(currentHint + 1, searchHints.length - 1, -1)\r\n            ]?.name ?? value\r\n          );\r\n          break;\r\n        case \"ArrowUp\":\r\n          setCurrentHint(\r\n            checkNumber(currentHint - 1, searchHints.length - 1, -1)\r\n          );\r\n          setInputValue(\r\n            searchHints[\r\n              checkNumber(currentHint - 1, searchHints.length - 1, -1)\r\n            ]?.name ?? value\r\n          );\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  useOutsideClick(inputRef, setInputFocused);\r\n\r\n  return (\r\n    <div\r\n      style={{ marginTop: \"10px\", width: \"100%\" }}\r\n      className=\"searchBarWrapper\"\r\n    >\r\n      <div className=\"searchBar\" ref={inputRef}>\r\n        <SearchBarButtons\r\n          setInputValue={setInputValue}\r\n          length={value.length}\r\n          setValue={setValue}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          onFocus={() => setInputFocused(true)}\r\n          style={\r\n            searchHints.length\r\n              ? {\r\n                  borderRadius:\r\n                    \"var(--standartBorderRadius) var(--standartBorderRadius) 0 0\",\r\n                  background: !!background && background,\r\n                }\r\n              : { background: !!background && background }\r\n          }\r\n          placeholder={inputText}\r\n          value={inputValue}\r\n          onChange={(e) => {\r\n            setInputValue(e.target.value);\r\n            setValue(e.target.value);\r\n          }}\r\n          onKeyDown={(e) => {\r\n            handleCurrentHint(e);\r\n            if (e.key === \"Enter\") {\r\n              findSomething();\r\n              // setValue(inputValue);\r\n              rankCurrentHint(\r\n                searchHints[currentHint]?.name,\r\n                searchHints[currentHint]?.uid\r\n              );\r\n              setSearchHints([]);\r\n            }\r\n          }}\r\n        />\r\n        <SearchFilters\r\n          defaultSearchMode={defaultSearchMode}\r\n          searchMode={searchMode}\r\n          setSearchMode={setSearchMode}\r\n        />\r\n        <SearchHints\r\n          searchValue={value}\r\n          currentHint={currentHint}\r\n          searchHints={searchHints}\r\n          setSearchHints={setSearchHints}\r\n          setCurrentHint={setCurrentHint}\r\n          inputFocused={inputFocused}\r\n          defaultSearchMode={defaultSearchMode}\r\n          findSomething={findSomething}\r\n          setInputFocused={setInputFocused}\r\n        />\r\n      </div>\r\n      <div className=\"authorsResult\">\r\n        {loading ? (\r\n          <div\r\n            style={{\r\n              position: \"relative\",\r\n              width: \"100%\",\r\n              height: \"50px\",\r\n              marginTop: \"40px\",\r\n            }}\r\n          >\r\n            <LoadingCircle />\r\n          </div>\r\n        ) : !foundAnything && value.length !== 0 ? (\r\n          <h2>Not found</h2>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","export function transformLyricsToArrayOfObjects(lyrics) {\r\n\tconst arrayOfParagraphs = []\r\n\tlet startSubstr = 0\r\n\tconst fixedLyrics = lyrics + ' '\r\n\tfor (let i = 0; i < fixedLyrics.length; i++) {\r\n\t\tif (fixedLyrics[i] === '\\n' || fixedLyrics[i + 1] === undefined) {\r\n\t\t\tarrayOfParagraphs.push({\r\n\t\t\t\tstartTime: 'undefined',\r\n\t\t\t\ttext: fixedLyrics.substr(startSubstr, i - startSubstr)\r\n\t\t\t})\r\n\t\t\tstartSubstr = i + 1\r\n\t\t}\r\n\t}\r\n\treturn arrayOfParagraphs\r\n}","import { useEffect, useState } from 'react';\r\nimport { useModal } from '../../../../contexts/modal';\r\nimport { firestore } from '../../../../firebase';\r\nimport { transformLyricsToArrayOfObjects } from '../../../full-screen-player/lib/transform-lyrics-to-array-of-object';\r\n\r\nconst useEditSong = (song) => {\r\n\r\n\tconst { toggleModal, openBottomMessage } = useModal();\r\n\tconst [songName, setSongName] = useState(song.name);\r\n\tconst [songAuthors, setSongAuthors] = useState(song.authors);\r\n\tconst [songCover, setSongCover] = useState(song.cover);\r\n\tconst [imageColors, setImageColors] = useState(song.imageColors);\r\n\tconst [lyrics, setLyrics] = useState(\r\n\t\tsong.lyrics.map((obj) => obj.text).join(\"\\n\")\r\n\t);\r\n\tconst [foundAuthors, setFoundAuthors] = useState([]);\r\n\tconst [searchValue, setSearchValue] = useState(\"\");\r\n\tconst [errorMessage, setErrorMessage] = useState(\"\");\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [completed, setCompleted] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSongName(song.name);\r\n\t\tsetSongAuthors(song.authors);\r\n\t\tsetSongCover(song.cover);\r\n\t\tsetImageColors(song.imageColors);\r\n\t\tsetLyrics(song.lyrics.map((obj) => obj.text).join(\"\\n\"));\r\n\t}, [song.id]);\r\n\r\n\tfunction manuallyChangeColor(e, i) {\r\n\t\timageColors[i] = e.target.value;\r\n\t\tsetImageColors([...imageColors]);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (errorMessage) openBottomMessage(errorMessage, 'failure')\r\n\t}, [errorMessage])\r\n\r\n\tfunction updateSong() {\r\n\t\tif (songName.length === 0) {\r\n\t\t\tsetErrorMessage(\"Name shouldn't be empty\");\r\n\t\t} else if (songAuthors.length === 0) {\r\n\t\t\tsetErrorMessage(\"Song has to have at least 1 author\");\r\n\t\t} else if (songCover.length === 0) {\r\n\t\t\tsetErrorMessage(\"Song has to have cover\");\r\n\t\t} else {\r\n\t\t\tsetLoading(true);\r\n\t\t\tif (songAuthors.length > song.authors.length) {\r\n\t\t\t\tconst newAuthors = songAuthors.filter((author) => {\r\n\t\t\t\t\treturn !song.authors.find((a) => a.uid === author.uid);\r\n\t\t\t\t});\r\n\t\t\t\tnewAuthors.forEach(async (author) => {\r\n\t\t\t\t\tconst authorRef = await firestore\r\n\t\t\t\t\t\t.collection(\"users\")\r\n\t\t\t\t\t\t.doc(author.uid)\r\n\t\t\t\t\t\t.get();\r\n\t\t\t\t\tconst authorData = authorRef.data();\r\n\t\t\t\t\tconst authorSongs = authorData.ownSongs;\r\n\t\t\t\t\tauthorSongs.push(song.id);\r\n\t\t\t\t\tfirestore.collection(\"users\").doc(author.uid).update({\r\n\t\t\t\t\t\townSongs: authorSongs,\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else if (songAuthors.length < song.authors.length) {\r\n\t\t\t\tconst newAuthors = song.authors.filter((author) => {\r\n\t\t\t\t\treturn !songAuthors.find((a) => a.uid === author.uid);\r\n\t\t\t\t});\r\n\t\t\t\tnewAuthors.forEach(async (author) => {\r\n\t\t\t\t\tconst authorRef = await firestore\r\n\t\t\t\t\t\t.collection(\"users\")\r\n\t\t\t\t\t\t.doc(author.uid)\r\n\t\t\t\t\t\t.get();\r\n\t\t\t\t\tconst authorData = authorRef.data();\r\n\t\t\t\t\tconst authorSongs = authorData.ownSongs;\r\n\t\t\t\t\tconst filteredSongs = authorSongs.filter(\r\n\t\t\t\t\t\t(songId) => songId !== song.id\r\n\t\t\t\t\t);\r\n\t\t\t\t\tfirestore.collection(\"users\").doc(author.uid).update({\r\n\t\t\t\t\t\townSongs: filteredSongs,\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tfirestore\r\n\t\t\t\t.collection(\"songs\")\r\n\t\t\t\t.doc(song.id)\r\n\t\t\t\t.update({\r\n\t\t\t\t\tname: songName,\r\n\t\t\t\t\tauthors: songAuthors,\r\n\t\t\t\t\timage: songCover,\r\n\t\t\t\t\timageColors: imageColors,\r\n\t\t\t\t\tlyrics: transformLyricsToArrayOfObjects(lyrics),\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\tsetCompleted(true);\r\n\t\t\t\t\ttoggleModal();\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction removeAuthorFromList(data) {\r\n\t\tconst filtered = songAuthors.filter((people) => people.uid !== data.uid);\r\n\t\treturn setSongAuthors(filtered);\r\n\t}\r\n\tfunction addAuthor(data) {\r\n\t\tif (!songAuthors.some((person) => person.uid === data.uid)) {\r\n\t\t\treturn setSongAuthors((prev) => [\r\n\t\t\t\t...prev,\r\n\t\t\t\t{\r\n\t\t\t\t\tuid: data.uid,\r\n\t\t\t\t\tdisplayName: data.displayName,\r\n\t\t\t\t\tphotoURL: data.photoURL,\r\n\t\t\t\t},\r\n\t\t\t]);\r\n\t\t}\r\n\r\n\t\tremoveAuthorFromList(data);\r\n\t}\r\n\r\n\treturn {\r\n\t\tsongCover,\r\n\t\tsongName,\r\n\t\tsetSongName,\r\n\t\timageColors,\r\n\t\tmanuallyChangeColor,\r\n\t\tsearchValue,\r\n\t\tsetSearchValue,\r\n\t\tfoundAuthors,\r\n\t\tsetFoundAuthors,\r\n\t\tsongAuthors,\r\n\t\tremoveAuthorFromList,\r\n\t\taddAuthor,\r\n\t\tlyrics,\r\n\t\tsetLyrics,\r\n\t\tupdateSong,\r\n\t\tloading,\r\n\t\tcompleted,\r\n\t\tsetCompleted\r\n\t}\r\n}\r\n\r\nexport default useEditSong\r\n","import React from \"react\";\r\nimport { FiXCircle } from \"react-icons/fi\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { PersonTiny } from \"../../../../entities/user/ui/organisms/person-tiny\";\r\nimport Input from \"../../../../shared/ui/atoms/input\";\r\nimport SubmitButton from \"../../../../shared/ui/atoms/submit-button\";\r\nimport SearchBar from \"../../../../shared/ui/organisms/search-bar\";\r\nimport useEditSong from \"../../lib/hooks/use-edit-song\";\r\nexport const EditSong = ({ song }) => {\r\n  const { currentUser } = useAuth();\r\n  const {\r\n    songCover,\r\n    songName,\r\n    setSongName,\r\n    imageColors,\r\n    manuallyChangeColor,\r\n    searchValue,\r\n    setSearchValue,\r\n    foundAuthors,\r\n    setFoundAuthors,\r\n    songAuthors,\r\n    removeAuthorFromList,\r\n    addAuthor,\r\n    lyrics,\r\n    setLyrics,\r\n    updateSong,\r\n    loading,\r\n    completed,\r\n    setCompleted,\r\n  } = useEditSong(song);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"SongInfo\"\r\n        style={{ flexDirection: \"column\", marginBottom: \"10px\" }}\r\n      >\r\n        <h3>Song cover</h3>\r\n        <div style={{ display: \"flex\" }}>\r\n          <div>\r\n            <img loading=\"lazy\" src={songCover} alt=\"\" className=\"songImage\" />\r\n          </div>\r\n          <div\r\n            style={{\r\n              background: `linear-gradient(-135deg, ${imageColors[0]}, ${imageColors[5]}`,\r\n              width: \"100%\",\r\n              height: \"200px\",\r\n              borderRadius: \"var(--standartBorderRadius2)\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <h4 style={{ color: imageColors[1] }}>{songName}</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={{ width: \"100%\", display: \"flex\" }}>\r\n        {imageColors.map((color, index) => {\r\n          return (\r\n            <input\r\n              type=\"color\"\r\n              value={color}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"60px\",\r\n                padding: \"0\",\r\n                borderRadius: \"0px\",\r\n              }}\r\n              onChange={(e) => {\r\n                manuallyChangeColor(e, index);\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <Input\r\n        title=\"Song name\"\r\n        value={songName}\r\n        setValue={setSongName}\r\n        placeholder=\"Enter song name\"\r\n        required\r\n      />\r\n      <div>\r\n        <h3>Authors</h3>\r\n        <SearchBar\r\n          value={searchValue}\r\n          setValue={setSearchValue}\r\n          setResultAuthorList={setFoundAuthors}\r\n          defaultSearchMode={\"authors\"}\r\n        />\r\n        <div className=\"songAuthorsList\">\r\n          {songAuthors.map((author) => {\r\n            return (\r\n              <div className=\"chosenAuthorItem\">\r\n                <span>{author.displayName}</span>\r\n                <FiXCircle\r\n                  onClick={() => {\r\n                    if (currentUser.isAdmin) removeAuthorFromList(author);\r\n                    else if (author.uid !== currentUser.uid)\r\n                      removeAuthorFromList(author);\r\n                  }}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"authorsResult\">\r\n          {foundAuthors.map((data, index) => {\r\n            return (\r\n              <PersonTiny\r\n                data={data}\r\n                onClick={() => addAuthor(data)}\r\n                style={\r\n                  songAuthors.includes(data.uid)\r\n                    ? { background: \"var(--green)\" }\r\n                    : {}\r\n                }\r\n                key={index}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <h3>Lyrics</h3>\r\n        <textarea\r\n          type=\"text\"\r\n          className=\"standartInput\"\r\n          style={{ height: \"200px\", fontWeight: \"500\" }}\r\n          value={lyrics}\r\n          onChange={(e) => setLyrics(e.target.value)}\r\n        />\r\n      </div>\r\n      <SubmitButton\r\n        text={\"Update song\"}\r\n        action={updateSong}\r\n        isLoading={loading}\r\n        completed={completed}\r\n        setCompleted={setCompleted}\r\n        bottomMessage={\"Song was updated\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { firestore } from \"../../../firebase\"\r\n\r\nexport const addSongToLibrary = (e, song, currentUser, setCurrentUser) => {\r\n\te.stopPropagation()\r\n\tconst songAuthorsUIDS = song.authors.map(author => author.uid)\r\n\tconst finalAuthorsUIDS = []\r\n\tsongAuthorsUIDS.forEach(authorId => {\r\n\t\tif (!currentUser.addedAuthors.includes(authorId)) {\r\n\t\t\tfinalAuthorsUIDS.push(authorId)\r\n\t\t}\r\n\t})\r\n\tlet newList = currentUser.addedSongs\r\n\tnewList.push(song.id)\r\n\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\taddedSongs: newList,\r\n\t\taddedAuthors: [...finalAuthorsUIDS, ...currentUser.addedAuthors]\r\n\t})\r\n\r\n\tfinalAuthorsUIDS.forEach(async authorId => {\r\n\t\tlet subscribers = (await firestore.collection('users').doc(authorId).get()).data().subscribers\r\n\t\tsubscribers++\r\n\t\tfirestore.collection('users').doc(authorId).update({\r\n\t\t\tsubscribers: subscribers\r\n\t\t})\r\n\t})\r\n}","export default function filterArrayWithArray(whatToFilter, withWhatToFilter){\r\n\treturn whatToFilter.filter(\r\n\t\tfunction (e) {\r\n\t\t\treturn this.indexOf(e) < 0;\r\n\t\t},\r\n\t\twithWhatToFilter\r\n\t);\r\n}","import { firestore } from \"../../../firebase\"\r\nimport filterArrayWithArray from \"../../../shared/lib/filter-array-with-array\"\r\n\r\nexport const deleteSongFromLibrary = (e, song, currentUser, yourSongs) => {\r\n\te.stopPropagation()\r\n\tconst songAuthorsUIDS = song.authors.map(author => author.uid)\r\n\tconst finalAuthorsUIDS = [] // –º–∞—Å—Å–∏–≤ –∞–≤—Ç–æ—Ä–æ–≤, –ø–µ—Å–Ω–∏ –∫–æ—Ç–æ—Ä—ã—Ö –µ—â–µ –æ—Å—Ç–∞–ª–∏—Å—å –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–µ—Å–Ω–∏\r\n\tlet newList = currentUser.addedSongs.filter(songNum => songNum !== song.id)\r\n\tsongAuthorsUIDS.forEach(authorId => {\r\n\t\tyourSongs.forEach(songObj => {\r\n\t\t\tif (newList.includes(songObj.id) && songObj.authors.find(a => a.uid === authorId)) {\r\n\t\t\t\tfinalAuthorsUIDS.push(authorId)\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\tconst filtered = filterArrayWithArray(songAuthorsUIDS, finalAuthorsUIDS) // –º–∞—Å—Å–∏–≤ –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã—Ö –Ω—É–∂–Ω–æ —É–±—Ä–∞—Ç—å –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏\r\n\tconst finalFilteredAuthors = filterArrayWithArray(currentUser.addedAuthors, filtered) // –º–∞—Å—Å–∏–≤ –ª—é–¥–µ–π, –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ\r\n\r\n\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\taddedSongs: newList,\r\n\t\taddedAuthors: finalFilteredAuthors\r\n\t})\r\n\r\n\tfiltered.forEach(async authorId => {\r\n\t\tlet subscribers = (await firestore.collection('users').doc(authorId).get()).data().subscribers\r\n\t\tsubscribers--\r\n\t\tfirestore.collection('users').doc(authorId).update({\r\n\t\t\tsubscribers: subscribers\r\n\t\t})\r\n\t})\r\n\r\n}","import { useAuth } from \"../../../../contexts/auth\";\r\nimport { addSongToLibrary } from \"../../../../entities/song/lib/add-song-to-library\";\r\nimport { deleteSongFromLibrary } from \"../../../../entities/song/lib/delete-song-from-library\";\r\nimport { FiPlusCircle, FiX } from \"react-icons/fi\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nexport default function AddOrDeleteButtonFull({ song }) {\r\n  const { currentUser } = useAuth();\r\n  const { yourSongs } = useSong();\r\n  const { openConfirm, setOpenModal } = useModal();\r\n  if (!currentUser.addedSongs.includes(song.id)) {\r\n    return (\r\n      <span onClick={(e) => addSongToLibrary(e, song, currentUser)}>\r\n        <FiPlusCircle />\r\n        Add\r\n      </span>\r\n    );\r\n  } else {\r\n    return (\r\n      <span\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          setOpenModal(false);\r\n          openConfirm(\r\n            \"You sure you want to delete this song from library?\",\r\n            \"Yes, delete it\",\r\n            \"No, just kidding\",\r\n            (e) => deleteSongFromLibrary(e, song, currentUser, yourSongs)\r\n          );\r\n        }}\r\n      >\r\n        <FiX />\r\n        Delete\r\n      </span>\r\n    );\r\n  }\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { useAuth } from '../../../../contexts/auth'\r\nimport { useSong } from '../../../../contexts/song'\r\nimport { firestore } from '../../../../firebase'\r\n\r\nexport const useAddOrDeleteSong = (playlistId, songId) => {\r\n\tconst [playlistSongs, setPlaylistSongs] = useState([])\r\n\tconst [isAdded, setIsAdded] = useState(false)\r\n\tconst { currentUser } = useAuth()\r\n\tconst { currentSong } = useSong()\r\n\tconst songData = songId || currentSong\r\n\tuseEffect(() => {\r\n\t\tconst response = firestore.collection('playlists').doc(playlistId).onSnapshot(res => {\r\n\t\t\tif (res.exists) setPlaylistSongs(res.data().songs)\r\n\t\t})\r\n\t\treturn () => response()\r\n\t}, [firestore])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetIsAdded(playlistSongs.includes(songData))\r\n\t}, [playlistSongs, songData])\r\n\r\n\tfunction addOrDelete() {\r\n\t\tif (playlistSongs.length > 0 && playlistId !== undefined) {\r\n\t\t\tif (playlistSongs.includes(songData)) {\r\n\t\t\t\tconst newSongsList = playlistSongs.filter(songNum => songNum !== songData)\r\n\t\t\t\tfirestore.collection('playlists').doc(playlistId).update({\r\n\t\t\t\t\tsongs: newSongsList\r\n\t\t\t\t})\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tconst newSongsList = playlistSongs\r\n\t\t\tnewSongsList.unshift(songData)\r\n\t\t\tfirestore.collection('playlists').doc(playlistId).update({\r\n\t\t\t\tsongs: newSongsList\r\n\t\t\t})\r\n\r\n\t\t\tconst sortedPlaylists = [playlistId, ...currentUser.ownPlaylists.filter(id => id !== playlistId)]\r\n\t\t\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\t\t\townPlaylists: sortedPlaylists\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\treturn [addOrDelete, isAdded]\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nconst ScreenContext = React.createContext();\r\n\r\nexport const useScreen = () => {\r\n  return useContext(ScreenContext);\r\n};\r\n\r\nexport const ScreenProvider = ({ children }) => {\r\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n  const [screenHeight, setScreenHeight] = useState(window.innerHeight);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 1000);\r\n  function handleResize() {\r\n    setScreenWidth(window.innerWidth);\r\n    setScreenHeight(window.innerHeight);\r\n    setIsMobile(window.innerWidth < 1000);\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  const value = {\r\n    screenWidth,\r\n    screenHeight,\r\n    isMobile,\r\n  };\r\n  return (\r\n    <ScreenContext.Provider value={value}>{children}</ScreenContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useScreen } from \"../../../contexts/screen\";\r\n\r\nexport const Hint = ({ text, direction = \"top\", ...restProps }) => {\r\n  const { isMobile } = useScreen();\r\n  return !isMobile ? (\r\n    <div className={\"Hint \" + direction} {...restProps}>\r\n      <h5>{text}</h5>\r\n    </div>\r\n  ) : null;\r\n};\r\n","import React from \"react\";\r\nimport { FiCheck, FiPlusCircle } from \"react-icons/fi\";\r\nimport { useAddOrDeleteSong } from \"../../../../entities/playlist/lib/hooks/use-add-or-delete-song\";\r\nimport { Hint } from \"../../../../shared/ui/atoms/hint\";\r\n\r\nexport const AddToPlaylistItem = ({ playlist, song }) => {\r\n  const [addFunc, isAdded] = useAddOrDeleteSong(playlist.id, song.id);\r\n  return (\r\n    <div className=\"songItemMenuWindowItem\" onClick={addFunc}>\r\n      {!isAdded ? (\r\n        <>\r\n          <Hint text={`Add \"${song.name}\" to playlist`} />\r\n          <FiPlusCircle />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Hint text={`Remove ${song.name} from playlist`} />\r\n          <FiCheck />\r\n        </>\r\n      )}\r\n      {playlist.name}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { AddToPlaylistItem } from \"../atoms/add-to-playlist-item\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nexport const AddToPlaylists = ({ song }) => {\r\n  const { yourPlaylists, currentSongData } = useSong();\r\n  const { currentUser } = useAuth();\r\n\r\n  const [songData, setSongData] = useState(song || currentSongData);\r\n  useEffect(() => {\r\n    if (song?.id) {\r\n      setSongData(song);\r\n    }\r\n  }, [song?.id]);\r\n  return (\r\n    <div className=\"AddToPlaylists\">\r\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n        {yourPlaylists.length ? (\r\n          yourPlaylists.map((playlist, key) => {\r\n            if (currentUser.ownPlaylists.includes(playlist.id)) {\r\n              return <AddToPlaylistItem playlist={playlist} song={songData} />;\r\n            }\r\n          })\r\n        ) : (\r\n          <div className=\"songItemMenuWindowItem\">No playlists created</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\n\r\nexport const PersonTinyVerticalItem = ({ person }) => {\r\n  const { setOpenModal } = useModal();\r\n  return (\r\n    <Link to={`/authors/${person.uid}`}>\r\n      <div\r\n        className=\"PersonTinyVerticalItem\"\r\n        onClick={() => setOpenModal(false)}\r\n      >\r\n        <div className=\"personTinyImage\">\r\n          <img loading=\"lazy\" src={person.photoURL} alt=\"\" />\r\n        </div>\r\n        <div className=\"personTinyName\">{person.displayName}</div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { FiArrowRight } from 'react-icons/fi'\r\n\r\nexport const SeeMoreRoundButton = ({text = \"See more\", ...restProps}) => {\r\n\treturn (\r\n\t\t<div className = \"SeeMoreRoundButton\" {...restProps}>\r\n\t\t\t<button>\r\n\t\t\t\t<FiArrowRight/>\r\n\t\t\t</button>\r\n\t\t\t<span>{text}</span>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from \"react\";\r\nimport { PersonTiny } from \"../../../../entities/user/ui/organisms/person-tiny\";\r\n\r\nexport const TinyPersonsList = ({\r\n  listOfPeople,\r\n  restriction = null,\r\n  title,\r\n  chosenArray,\r\n  setChosenArray = () => null,\r\n  lastSeen = false,\r\n}) => {\r\n  return (\r\n    <div>\r\n      {title ? (\r\n        <h2 style={{ marginTop: \"0\", marginBottom: \"7px\" }}>{title}</h2>\r\n      ) : null}\r\n      {!restriction\r\n        ? listOfPeople.map((person) => {\r\n            return (\r\n              <PersonTiny\r\n                data={person}\r\n                chosenArray={chosenArray}\r\n                setChosenArray={setChosenArray}\r\n                lastSeen={lastSeen}\r\n              />\r\n            );\r\n          })\r\n        : listOfPeople.slice(0, restriction).map((person) => {\r\n            return (\r\n              <PersonTiny\r\n                data={person}\r\n                chosenArray={chosenArray}\r\n                setChosenArray={setChosenArray}\r\n                lastSeen={lastSeen}\r\n              />\r\n            );\r\n          })}\r\n    </div>\r\n  );\r\n};\r\n","export default function getUID() {\r\n\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n\t\tconst piece = (Math.random() * 16) | 0;\r\n\t\tconst elem = c === 'x' ? piece : (piece & 0x3) | 0x8;\r\n\t\treturn elem.toString(16);\r\n\t});\r\n}\r\n","\r\nimport { firestore } from \"../../firebase\"\r\nimport getUID from \"./get-uid\"\r\n\r\nexport const createChat = async (participants, chatUID = getUID(), chatName = \"\", chatImage = \"\", admins = [], imageColors = []) => {\r\n\tfirestore.collection('chats').doc(chatUID).set({\r\n\t\tchatImage: chatImage,\r\n\t\tchatName: chatName,\r\n\t\tid: chatUID,\r\n\t\tmessages: [],\r\n\t\tparticipants: participants,\r\n\t\twallpaper: 'undefined',\r\n\t\tadmins: participants.length > 2 ? admins : [],\r\n\t\ttyping: [],\r\n\t\timageColors: imageColors\r\n\t})\r\n\r\n\tparticipants.map(async personId => {\r\n\t\tlet chatInfo = (await firestore.collection('users').doc(personId).get()).data().chats\r\n\t\tchatInfo.push(chatUID)\r\n\t\tfirestore.collection('users').doc(personId).update({\r\n\t\t\tchats: chatInfo\r\n\t\t})\r\n\t})\r\n}","import { firestore } from \"../../firebase\"\r\nimport getUID from \"./get-uid\"\r\n\r\n\r\nexport const findChatURL = async (allParticipants, currentUser, setShouldCreate, setFriendChatId) => {\r\n\tlet foundChat = false\r\n\tlet chatId = 0\r\n\tif (currentUser.chats) {\r\n\t\t// –ü—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã —Ç–∞–∫–æ–≤: –æ–Ω –∏—â–µ—Ç –≤—Å–µ —á–∞—Ç—ã, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å —é–∑–µ—Ä. –ó–∞—Ç–µ–º –æ–Ω –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ –Ω–∏–º. –ó–∞—Ç–µ–º –æ–Ω –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –¥—Ä—É–∑—å—è–º\r\n\t\t// –ï—Å–ª–∏ –æ–Ω –Ω–∞—Ö–æ–¥–∏—Ç, —á—Ç–æ –¥—Ä—É–≥ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞, –¥–æ–±–∞–≤–ª—è–µ—Ç –∫ count 1, –µ—Å–ª–∏ –Ω–µ—Ç, —Å—Ä–∞–∑—É –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ —Ü–∏–∫–ª–∞ —É—á–∞—Ç—Å–Ω–∏–∫–æ–≤\r\n\t\t// –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ü–∏–∫–ª–∞ –æ–Ω –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π + 1 (–ø–æ—Ç–æ–º—É —á—Ç–æ –≤ –º–∞—Å—Å–∏–≤ –¥—Ä—É–∑–µ–π –Ω–µ –≤—Ö–æ–¥–∏—Ç —Å–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å) —Ä–∞–≤–Ω–æ\r\n\t\t// –¥–ª–∏–Ω–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–∞—Ç–∞ –∏ –µ—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π —Ä–∞–≤–Ω–æ –¥–ª–∏–Ω–µ –ø–æ—Å—Ç—É–ø–∏–≤—à–µ–≥–æ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –º–∞—Å—Å–∏–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, —Ç–æ–≥–¥–∞ –Ω—É–∂–Ω—ã–π —á–∞—Ç –Ω–∞–π–¥–µ–Ω\r\n\t\tconst chatsWhereUserIn = await firestore.collection('chats').where('participants', 'array-contains', currentUser.uid).get()\r\n\t\tchatsWhereUserIn.docs.forEach(chat => {\r\n\t\t\tlet count = 0\r\n\t\t\tallParticipants.every(personId => {\r\n\t\t\t\tif (chat.data().participants.includes(personId)) {\r\n\t\t\t\t\tcount++\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t\telse return false\r\n\t\t\t})\r\n\t\t\tif (count + 1 === chat.data().participants.length && count === allParticipants.length) {\r\n\t\t\t\tfoundChat = true\r\n\t\t\t\tsetShouldCreate(false)\r\n\t\t\t\tsetFriendChatId(chat.data().id)\r\n\t\t\t\tchatId = chat.data().id\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\telse return true\r\n\t\t})\r\n\r\n\t\tif (!foundChat) {\r\n\t\t\tconst random = getUID()\r\n\t\t\tfoundChat = true\r\n\t\t\tsetShouldCreate(true)\r\n\t\t\tsetFriendChatId(random)\r\n\t\t\tchatId = random\r\n\t\t}\r\n\t\treturn chatId\r\n\t}\r\n}","import { firestore } from \"../../../firebase\"\r\n\r\nexport const sendMessage = (chatId, chatData, sender, messageText, attachedSongs = [], attachedAlbums = [], attachedAuthors = [], inResponseToMessage) => {\r\n\tif (messageText.trim().length !== 0 || attachedSongs.length !== 0 || attachedAlbums.length !== 0 || attachedAuthors.length !== 0) {\r\n\t\tconst tempMessages = chatData?.messages || []\r\n\r\n\t\ttempMessages.push({\r\n\t\t\tid: tempMessages.length,\r\n\t\t\tsender: sender,\r\n\t\t\tmessage: messageText,\r\n\t\t\tsentTime: new Date().toString(),\r\n\t\t\tinResponseToMessage: inResponseToMessage || null,\r\n\t\t\tattachedSongs: attachedSongs,\r\n\t\t\tattachedAlbums: attachedAlbums,\r\n\t\t\tattachedAuthors: attachedAuthors,\r\n\t\t\tseenBy: [sender]\r\n\t\t})\r\n\r\n\t\tfirestore.collection('chats').doc(chatId).update({\r\n\t\t\tmessages: tempMessages\r\n\t\t})\r\n\t}\r\n}","import { firestore } from \"../../../firebase\";\r\nimport { createChat } from \"../../../shared/lib/create-—Åhat\";\r\nimport { findChatURL } from \"../../../shared/lib/find-chat-url\";\r\nimport { sendMessage } from \"../../dialogue/lib/send-message\";\r\n\r\nexport default function shareWithFriends({ shareList, currentUser, itemId, whatToShare, messageText = \"\", setShouldCreate = () => null, setFriendChatId = () => null, setLoading = () => null, setCompleted = () => null }) {\r\n\tsetLoading(true)\r\n\tsetCompleted(false)\r\n\t//–°–¥–µ–ª–∞—Ç—å —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é sendMessage\r\n\tshareList.map(async userId => {\r\n\t\t//–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—é\r\n\t\tconst sortedFriends = [{ uid: userId, status: 'added' }, ...currentUser.friends.filter(obj => obj.uid !== userId)]\r\n\t\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\t\tfriends: sortedFriends\r\n\t\t})\r\n\t\tPromise.resolve(findChatURL([userId], currentUser, () => null, setFriendChatId)).then(async chatId => {\r\n\t\t\tlet chatData = (await firestore.collection('chats').doc(chatId).get()).data()\r\n\t\t\tif (chatData !== undefined) {\r\n\t\t\t\tswitch (whatToShare) {\r\n\t\t\t\t\tcase \"song\":\r\n\t\t\t\t\t\tsendMessage(chatId, chatData, currentUser.uid, messageText, [itemId])\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"playlist\":\r\n\t\t\t\t\t\tsendMessage(chatId, chatData, currentUser.uid, messageText, [], [itemId])\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"author\":\r\n\t\t\t\t\t\tsendMessage(chatId, chatData, currentUser.uid, messageText, [], [], [itemId])\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tsendMessage(chatId, chatData, currentUser.uid, messageText, [itemId])\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcreateChat([currentUser.uid, userId], chatId).then(async () => {\r\n\t\t\t\t\tchatData = (await firestore.collection('chats').doc(chatId).get()).data()\r\n\t\t\t\t\tsetShouldCreate(false)\r\n\t\t\t\t\tswitch (whatToShare) {\r\n\t\t\t\t\t\tcase \"song\":\r\n\t\t\t\t\t\t\tsendMessage(chatId, chatData, currentUser.uid, messageText, [itemId])\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"playlist\":\r\n\t\t\t\t\t\t\tsendMessage(chatId, chatData, currentUser.uid, messageText, [], [itemId])\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"author\":\r\n\t\t\t\t\t\t\tsendMessage(chatId, chatData, currentUser.uid, messageText, [], [], [itemId])\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tsendMessage(chatId, chatData, currentUser.uid, messageText, [itemId])\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}).then(() => {\r\n\t\t\tsetLoading(false)\r\n\t\t\tsetCompleted(true)\r\n\t\t})\r\n\t})\r\n\r\n\r\n}","import React, { useState } from \"react\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport shareWithFriends from \"../../lib/share-with-friends\";\r\nimport Input from \"../../../../shared/ui/atoms/input\";\r\nimport SubmitButton from \"../../../../shared/ui/atoms/submit-button\";\r\nimport SearchBar from \"../../../../shared/ui/organisms/search-bar\";\r\nimport { TinyPersonsList } from \"../../../author/ui/templates/tiny-persons-list\";\r\n\r\nexport const FriendsToShareWith = ({ item, whatToShare = \"song\" }) => {\r\n  const { yourFriends } = useSong();\r\n  const [chosenFriends, setChosenFriends] = useState([]);\r\n  const { currentUser } = useAuth();\r\n  const [messageText, setMessageText] = useState(\"\");\r\n  const [completed, setCompleted] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const { toggleModal } = useModal();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [foundPeople, setFoundPeople] = useState([]);\r\n\r\n  return yourFriends.length ? (\r\n    <div className=\"FriendsToShareWith\">\r\n      <div\r\n        style={{\r\n          maxHeight: \"300px\",\r\n          overflowY: \"hidden\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <SearchBar\r\n          value={searchValue}\r\n          setValue={setSearchValue}\r\n          setResultAuthorList={setFoundPeople}\r\n          defaultAuthorsListValue={yourFriends}\r\n          defaultSearchMode={\"authors\"}\r\n          inputText={\"Search for friends\"}\r\n        />\r\n        <div style={{ overflowY: \"auto\", maxHeight: \"100%\" }}>\r\n          <TinyPersonsList\r\n            listOfPeople={foundPeople}\r\n            chosenArray={chosenFriends}\r\n            setChosenArray={setChosenFriends}\r\n          />\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Input\r\n          value={messageText}\r\n          setValue={setMessageText}\r\n          placeholder=\"Your message\"\r\n        />\r\n        <SubmitButton\r\n          text={`Share with ${chosenFriends.length} ${\r\n            chosenFriends.length > 1 || chosenFriends.length === 0\r\n              ? \"friends\"\r\n              : \"friend\"\r\n          }`}\r\n          action={() => {\r\n            shareWithFriends({\r\n              shareList: chosenFriends,\r\n              currentUser,\r\n              itemId: whatToShare === \"author\" ? item.uid : item.id,\r\n              whatToShare,\r\n              messageText,\r\n              setLoading,\r\n              setCompleted,\r\n            });\r\n            toggleModal();\r\n          }}\r\n          isLoading={loading}\r\n          completed={completed}\r\n          setCompleted={setCompleted}\r\n          bottomMessage={\"Message was sent\"}\r\n          isActive={!!chosenFriends.length}\r\n        />\r\n      </>\r\n    </div>\r\n  ) : (\r\n    <h3 style={{ margin: 0 }}>No friends added</h3>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { CgMusicNote } from \"react-icons/cg\";\r\nimport { PersonTinyVerticalItem } from \"../../../author/ui/atoms/person-tiny-vertical-item\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport displayDate from \"../../../../shared/lib/display-date\";\r\nimport { SeeMoreRoundButton } from \"../../../../shared/ui/atoms/see-more-round-button\";\r\nimport { TinyPersonsList } from \"../../../author/ui/templates/tiny-persons-list\";\r\nimport { LoadingCircle } from \"../../../loading/ui/atoms/loading-circle\";\r\nimport { FriendsToShareWith } from \"../../../share/ui/organisms/friends-to-share-with\";\r\n\r\nexport const SongInfo = ({ song }) => {\r\n  const { currentSongData } = useSong();\r\n  const { setContent } = useModal();\r\n  const [songData, setSongData] = useState(song || currentSongData);\r\n  const { displayAuthors, yourFriends } = useSong();\r\n  const [friendsThatHaveThisSong, setFriendsThatHaveThisSong] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  async function findFriendsThatHaveThisSong() {\r\n    setLoading(true);\r\n    setFriendsThatHaveThisSong([]);\r\n    yourFriends.forEach((friend) => {\r\n      if (friend.addedSongs.includes(songData.id))\r\n        setFriendsThatHaveThisSong((prev) => [...prev, friend]);\r\n    });\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (song !== undefined) setSongData(song);\r\n  }, [song && song.id]);\r\n\r\n  useEffect(() => {\r\n    findFriendsThatHaveThisSong();\r\n  }, [songData.id]);\r\n\r\n  return (\r\n    <div className=\"SongInfo\">\r\n      <div\r\n        className=\"songImage\"\r\n        style={{ backgroundImage: `url(${songData.cover})` }}\r\n      ></div>\r\n      <div className=\"songInfoContent\">\r\n        <h3 style={{ color: songData.imageColors[0] }}>{songData.name}</h3>\r\n        <span>{displayAuthors(songData.authors, \", \")}</span>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            opacity: \"0.6\",\r\n            fontSize: \".9em\",\r\n            position: \"relative\",\r\n            marginTop: \"5px\",\r\n          }}\r\n          className=\"listensAndDate\"\r\n        >\r\n          <p\r\n            className=\"infoListens\"\r\n            style={{\r\n              marginRight: \"15px\",\r\n              marginBottom: \"0\",\r\n              position: \"relative\",\r\n            }}\r\n          >\r\n            {songData.listens} <CgMusicNote />\r\n          </p>\r\n          <span>{displayDate(songData.releaseDate)}</span>\r\n        </div>\r\n        <h4 style={{ margin: \"10px 0\" }}>\r\n          {friendsThatHaveThisSong.length > 0\r\n            ? \"Friends that listen that song\"\r\n            : \"None of your friends listens this\"}\r\n        </h4>\r\n        {!loading ? (\r\n          <div style={{ display: \"flex\" }}>\r\n            {friendsThatHaveThisSong.length > 0 ? (\r\n              friendsThatHaveThisSong.map((person, index) => {\r\n                if (index < 2)\r\n                  return (\r\n                    <PersonTinyVerticalItem person={person} key={person.uid} />\r\n                  );\r\n              })\r\n            ) : (\r\n              <button\r\n                className=\"shareBtn\"\r\n                style={{\r\n                  minHeight: \"35px\",\r\n                  background: songData.imageColors[0],\r\n                }}\r\n                onClick={() => {\r\n                  setContent(\r\n                    <FriendsToShareWith item={songData} whatToShare={\"song\"} />\r\n                  );\r\n                }}\r\n              >\r\n                Share\r\n              </button>\r\n            )}\r\n            {friendsThatHaveThisSong.length > 2 ? (\r\n              <SeeMoreRoundButton\r\n                onClick={() =>\r\n                  setContent(\r\n                    <TinyPersonsList\r\n                      listOfPeople={friendsThatHaveThisSong}\r\n                      title={`Friends listen ${song.name}`}\r\n                    />\r\n                  )\r\n                }\r\n              />\r\n            ) : null}\r\n          </div>\r\n        ) : (\r\n          <div style={{ position: \"relative\", height: \"50px\" }}>\r\n            <LoadingCircle top={\"50%\"} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { BiEditAlt, BiListPlus } from \"react-icons/bi\";\r\nimport { FiInfo, FiShare } from \"react-icons/fi\";\r\nimport { MdKeyboardArrowRight, MdPlaylistAdd } from \"react-icons/md\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { EditSong } from \"../../../admin/ui/organisms/edit-song\";\r\nimport AddOrDeleteButtonFull from \"../../../full-screen-player/ui/molecules/add-or-delete-song-button\";\r\nimport { AddToPlaylists } from \"../../../full-screen-player/ui/molecules/add-to-playlists\";\r\nimport { SongInfo } from \"../organisms/song-info\";\r\nimport { FriendsToShareWith } from \"../../../share/ui/organisms/friends-to-share-with\";\r\n\r\nconst SongItemMoreWindow = ({\r\n  openMoreWindow,\r\n  song,\r\n  moreWindowPosRelativeToViewport,\r\n}) => {\r\n  const { toggleModal, setContent, openBottomMessage } = useModal();\r\n  const { currentUser } = useAuth();\r\n  const { setCurrentSongQueue } = useSong();\r\n\r\n  const addToQueue = () => {\r\n    setCurrentSongQueue((prev) => [...prev, song]);\r\n    openBottomMessage(\"Song was added to queue\");\r\n  };\r\n\r\n  return openMoreWindow ? (\r\n    <div\r\n      className=\"songItemMenuWindow\"\r\n      style={\r\n        moreWindowPosRelativeToViewport > window.innerHeight / 2 + 100\r\n          ? { top: \"auto\", bottom: \"110%\" }\r\n          : { top: \"110%\", bottom: \"auto\" }\r\n      }\r\n      onClick={(e) => e.stopPropagation()}\r\n    >\r\n      {currentUser.isAdmin ||\r\n      song.authors.find((el) => el.uid === currentUser.uid) ? (\r\n        <div\r\n          className=\"songItemMenuWindowItem\"\r\n          onClick={() => {\r\n            toggleModal();\r\n            setContent(<EditSong song={song} />);\r\n          }}\r\n        >\r\n          <BiEditAlt />\r\n          Edit\r\n        </div>\r\n      ) : null}\r\n      <div className=\"songItemMenuWindowItem\">\r\n        <AddOrDeleteButtonFull song={song} />\r\n      </div>\r\n      <div className=\"songItemMenuWindowItem\">\r\n        <div className=\"songItemMenuWindow inner\">\r\n          <AddToPlaylists song={song} />\r\n        </div>\r\n        <MdPlaylistAdd />\r\n        Add to playlist <MdKeyboardArrowRight />\r\n      </div>\r\n      <div\r\n        className=\"songItemMenuWindowItem\"\r\n        onClick={() => {\r\n          toggleModal();\r\n          setContent(<FriendsToShareWith item={song} whatToShare={\"song\"} />);\r\n        }}\r\n      >\r\n        <FiShare />\r\n        Share\r\n      </div>\r\n      <div\r\n        className=\"songItemMenuWindowItem\"\r\n        onClick={() => {\r\n          toggleModal();\r\n          setContent(<SongInfo song={song} />);\r\n        }}\r\n      >\r\n        <FiInfo />\r\n        Info\r\n      </div>\r\n      <div className=\"songItemMenuWindowItem\" onClick={addToQueue}>\r\n        <BiListPlus />\r\n        Add to queue\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default SongItemMoreWindow;\r\n","import { firestore } from \"../../../firebase\";\r\n\r\nconst saveSearchHistory = (uid, itemId, itemType) => {\r\n\tconst newItemSaved = {\r\n\t\tid: itemId,\r\n\t\ttype: itemType\r\n\t}\r\n\r\n\tfirestore\r\n\t\t.collection(\"searchHistory\")\r\n\t\t.doc(uid)\r\n\t\t.get()\r\n\t\t.then((res) => {\r\n\t\t\tif (res.data()?.history) {\r\n\t\t\t\tif (!res.data().history.find(({ id }) => id === itemId)) {\r\n\t\t\t\t\tfirestore\r\n\t\t\t\t\t\t.collection(\"searchHistory\")\r\n\t\t\t\t\t\t.doc(uid)\r\n\t\t\t\t\t\t.update({\r\n\t\t\t\t\t\t\thistory: [newItemSaved, ...res.data().history.slice(0, 15)],\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfirestore\r\n\t\t\t\t\t.collection(\"searchHistory\")\r\n\t\t\t\t\t.doc(uid)\r\n\t\t\t\t\t.set({\r\n\t\t\t\t\t\thistory: [newItemSaved],\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n};\r\n\r\nexport default saveSearchHistory","import { useRef, useState } from 'react';\r\nimport { useAuth } from '../../../../contexts/auth';\r\nimport { useSong } from '../../../../contexts/song';\r\nimport saveSearchHistory from '../../../../features/search/lib/save-search-history';\r\nimport { firestore } from '../../../../firebase';\r\n\r\nimport useOutsideClick from '../../../../shared/lib/hooks/use-outside-click';\r\nimport { addSongToHistory } from '../add-song-to-history';\r\n\r\nconst useSongLogic = ({ song, position, localIndex, shouldSaveSearchHistory }) => {\r\n\tconst {\r\n\t\tsetCurrentSong,\r\n\t\tcurrentSong,\r\n\t\tplay,\r\n\t\tsongRef,\r\n\t\tsetPlay,\r\n\t\tsetCurrentSongInQueue,\r\n\t} = useSong();\r\n\r\n\tconst [openMoreWindow, setOpenMoreWindow] = useState(false);\r\n\tconst [\r\n\t\tmoreWindowPosRelativeToViewport,\r\n\t\tsetMoreWindowPosRelativeToViewport,\r\n\t] = useState(0);\r\n\tconst currentItemRef = useRef(null);\r\n\tconst { currentUser } = useAuth();\r\n\r\n\tuseOutsideClick(currentItemRef, setOpenMoreWindow);\r\n\r\n\tfunction chooseSongItem() {\r\n\t\tsetCurrentSong(song.id);\r\n\t\tfirestore.collection(\"users\").doc(currentUser.uid).update({\r\n\t\t\tlastSongPlayed: song.id,\r\n\t\t});\r\n\r\n\t\tsetCurrentSongInQueue(localIndex);\r\n\t\tif (song.id === currentSong && play) {\r\n\t\t\tsongRef.current.pause();\r\n\t\t\tsetPlay(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsongRef.current.play();\r\n\t\tsetPlay(true);\r\n\r\n\t\tif (shouldSaveSearchHistory)\r\n\t\t\tsaveSearchHistory(currentUser.uid, song.id, \"songs\");\r\n\t\taddSongToHistory(song.id, currentUser);\r\n\t}\r\n\r\n\tfunction openSongItemMoreWindow(e) {\r\n\t\te.stopPropagation();\r\n\t\tsetOpenMoreWindow(!openMoreWindow);\r\n\t\tsetMoreWindowPosRelativeToViewport(\r\n\t\t\tposition || e.target.getBoundingClientRect().top\r\n\t\t);\r\n\t}\r\n\r\n\treturn { openSongItemMoreWindow, chooseSongItem, moreWindowPosRelativeToViewport, openMoreWindow, currentItemRef }\r\n}\r\n\r\nexport default useSongLogic\r\n","import React from \"react\";\r\n\r\nconst ColorCircles = ({ play }) => {\r\n  return (\r\n    <div\r\n      className=\"ColorCircles\"\r\n      style={!play ? { opacity: 0, transform: \"scale(.95)\" } : {}}\r\n    >\r\n      <span className=\"colorCircle\"></span>\r\n      <span className=\"colorCircle\"></span>\r\n      <span className=\"colorCircle\"></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorCircles;\r\n","export default function getShortString(word, len = 50) {\r\n\treturn word.substr(0, len) + (word.length > len ? \"...\" : \"\")\r\n}","import getShortString from \"./get-short-string\"\r\n\r\n\r\nconst displayAuthorsStr = (authorslist, separator = ' & ', lenLimit = 100) => {\r\n\tconst authorsString = authorslist?.map(author => author.displayName).join(separator)\r\n\treturn authorsString ? getShortString(authorsString, lenLimit) : \"\"\r\n}\r\n\r\nexport default displayAuthorsStr","export default function bigNumberFormat(number) {\r\n\tif (number < 1000) return number\r\n\r\n\tif (number < 1000000) return parseFloat(number / 1000).toFixed(1) + 'K'\r\n\r\n\tif (number < 1000000000) return parseFloat(number / 1000000).toFixed(1) + 'M'\r\n}","import React from \"react\";\r\nimport { CgMusicNote } from \"react-icons/cg\";\r\nimport bigNumberFormat from \"../../../../shared/lib/big-number-format\";\r\n\r\nconst ShowAdditionInfo = ({ showListens, isNewSong, song }) => {\r\n  return showListens ? (\r\n    <span\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        opacity: 0.7,\r\n        fontSize: \".8em\",\r\n      }}\r\n      className={isNewSong ? \"newSongMarker\" : \"\"}\r\n    >\r\n      {bigNumberFormat(song.listens)} <CgMusicNote />\r\n    </span>\r\n  ) : isNewSong ? (\r\n    <span\r\n      style={{ display: \"flex\", alignItems: \"center\", fontSize: \".7em\" }}\r\n      className={\"newSongMarker\"}\r\n    >\r\n      New\r\n    </span>\r\n  ) : null;\r\n};\r\n\r\nexport default ShowAdditionInfo;\r\n","import React from \"react\";\r\nimport { HiPause, HiPlay } from \"react-icons/hi\";\r\nimport { useScreen } from \"../../../../contexts/screen\";\r\nimport ColorCircles from \"../../../../features/full-screen-player/ui/atoms/color-circles\";\r\nimport displayAuthorsStr from \"../../../../shared/lib/display-authors-str\";\r\n\r\nimport getShortString from \"../../../../shared/lib/get-short-string\";\r\nimport ShowAdditionInfo from \"../molecules/show-additional-info\";\r\n\r\nconst ImageAndName = ({\r\n  song,\r\n  currentSong,\r\n  play,\r\n  isMobile,\r\n  showListens,\r\n  displayAuthors,\r\n  isNewSong,\r\n}) => {\r\n  const { screenWidth } = useScreen();\r\n\r\n  return (\r\n    <div className=\"songItemImageAndName\">\r\n      <div className=\"songItemImage\">\r\n        <div className=\"songItemPlayOrPause\">\r\n          {song.id === currentSong && play ? null : <HiPlay />}\r\n        </div>\r\n        <div\r\n          className=\"playingAnimation\"\r\n          style={\r\n            song.id === currentSong && play\r\n              ? { opacity: 1, visibility: \"visible\" }\r\n              : {}\r\n          }\r\n        >\r\n          <HiPause />\r\n          <ColorCircles play={play} />\r\n        </div>\r\n        <img loading=\"lazy\" src={song.cover} alt=\"\" />\r\n      </div>\r\n      <div className=\"songItemNameAndAuthor\">\r\n        <div\r\n          className=\"songItemName\"\r\n          style={{ display: \"flex\", alignItems: \"center\" }}\r\n        >\r\n          {getShortString(song.name, !isMobile ? 30 : 17)}\r\n          <span style={{ marginLeft: \"10px\", fontWeight: \"500\" }}>\r\n            <ShowAdditionInfo\r\n              showListens={showListens}\r\n              isNewSong={isNewSong}\r\n              song={song}\r\n            />\r\n          </span>\r\n        </div>\r\n        {!isMobile ? (\r\n          <div className=\"songItemAuthor\">{displayAuthors(song.authors)}</div>\r\n        ) : (\r\n          <div\r\n            className=\"songItemAuthor\"\r\n            style={{ maxWidth: screenWidth - 180 }}\r\n          >\r\n            {displayAuthorsStr(song.authors, \" & \", 130)}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageAndName;\r\n","import React from \"react\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\n\r\nexport const AuthorsList = ({ listOfAuthors }) => {\r\n  const { displayAuthorsFull } = useSong();\r\n  return (\r\n    <div className=\"rightSideAuthorsList\">\r\n      <div className=\"rightSideAuthorsListCentralBlock\">\r\n        {displayAuthorsFull(listOfAuthors)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { BiEditAlt } from \"react-icons/bi\";\r\nimport { FiInfo, FiShare, FiUsers } from \"react-icons/fi\";\r\nimport { MdPlaylistAdd } from \"react-icons/md\";\r\nimport { SongInfo } from \"../../../song/ui/organisms/song-info\";\r\nimport { FriendsToShareWith } from \"../../../share/ui/organisms/friends-to-share-with\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { EditSong } from \"../../../admin/ui/organisms/edit-song\";\r\nimport { AuthorsList } from \"../../../full-screen-player/ui/atoms/authors-list\";\r\nimport AddOrDeleteButtonFull from \"../../../full-screen-player/ui/molecules/add-or-delete-song-button\";\r\nimport { AddToPlaylists } from \"../../../full-screen-player/ui/molecules/add-to-playlists\";\r\n\r\nexport const SongItemMobileMoreWindow = ({ song }) => {\r\n  const { setContent } = useModal();\r\n  const { currentUser } = useAuth();\r\n  return (\r\n    <div className=\"SongItemMobileMoreWindow\">\r\n      <div\r\n        className=\"simpleSongElement\"\r\n        style={{ background: song.imageColors[0] }}\r\n      >\r\n        <div className=\"simpleSongElementImage\">\r\n          <img loading=\"lazy\" src={song.cover} alt=\"\" />\r\n        </div>\r\n        <span>{song.name}</span>\r\n      </div>\r\n      {currentUser.isAdmin ? (\r\n        <div\r\n          className=\"songItemMenuWindowItem\"\r\n          onClick={() => {\r\n            setContent(<EditSong song={song} />);\r\n          }}\r\n        >\r\n          <BiEditAlt />\r\n          Edit\r\n        </div>\r\n      ) : null}\r\n      <div className=\"songItemMenuWindowItem\">\r\n        <AddOrDeleteButtonFull song={song} />\r\n      </div>\r\n      <div\r\n        className=\"songItemMenuWindowItem\"\r\n        onClick={() => setContent(<AddToPlaylists song={song} />)}\r\n      >\r\n        <MdPlaylistAdd />\r\n        Add to playlist\r\n      </div>\r\n      <div\r\n        className=\"songItemMenuWindowItem\"\r\n        onClick={() => {\r\n          setContent(<FriendsToShareWith item={song} whatToShare={\"song\"} />);\r\n        }}\r\n      >\r\n        <FiShare />\r\n        Share\r\n      </div>\r\n      <div\r\n        className=\"songItemMenuWindowItem\"\r\n        onClick={() => {\r\n          setContent(<SongInfo song={song} />);\r\n        }}\r\n      >\r\n        <FiInfo />\r\n        Info\r\n      </div>\r\n      <div\r\n        className=\"songItemMenuWindowItem\"\r\n        onClick={() => {\r\n          setContent(\r\n            <AuthorsList listOfAuthors={song.authors} title={\"Authors\"} />\r\n          );\r\n        }}\r\n      >\r\n        <FiUsers />\r\n        Authors\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useAuth } from \"../../../../contexts/auth\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport getShortString from \"../../../../shared/lib/get-short-string\";\r\nimport { addSongToLibrary } from \"../add-song-to-library\";\r\nimport { deleteSongFromLibrary } from \"../delete-song-from-library\";\r\n\r\nconst useAddOrDeleteSong = (song) => {\r\n\tconst { currentUser, setCurrentUser } = useAuth();\r\n\tconst { yourSongs } = useSong();\r\n\tconst { openBottomMessage, openConfirm, closeConfirm } = useModal();\r\n\r\n\tconst addSong = (e) => {\r\n\t\taddSongToLibrary(e, song, currentUser, setCurrentUser);\r\n\t\topenBottomMessage(\r\n\t\t\t`${getShortString(song.name, 15)} added to your library`\r\n\t\t);\r\n\t}\r\n\r\n\tconst removeSong = (e) => {\r\n\t\te.stopPropagation();\r\n\t\topenConfirm(\r\n\t\t\t`You sure you want to delete \"${song.name}\" from library?`,\r\n\t\t\t\"Yes, delete it\",\r\n\t\t\t\"No, just kidding\",\r\n\t\t\t(e) => {\r\n\t\t\t\tdeleteSongFromLibrary(e, song, currentUser, yourSongs);\r\n\t\t\t\tcloseConfirm();\r\n\t\t\t\topenBottomMessage(\r\n\t\t\t\t\t`${getShortString(song.name, 15)} removed from your library`,\r\n\t\t\t\t\t\"failure\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\treturn [addSong, removeSong]\r\n}\r\n\r\nexport default useAddOrDeleteSong\r\n","import React from \"react\";\r\nimport { FiPlusCircle, FiX } from \"react-icons/fi\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { Hint } from \"../../../../shared/ui/atoms/hint\";\r\nimport useAddOrDeleteSong from \"../../lib/hooks/use-add-or-delete-song\";\r\n\r\nconst AddOrDeleteButton = ({ song }) => {\r\n  const { currentUser } = useAuth();\r\n  const [addSong, removeSong] = useAddOrDeleteSong(song);\r\n\r\n  if (!currentUser.addedSongs.includes(song.id)) {\r\n    return (\r\n      <button onClick={addSong} style={{ position: \"relative\" }}>\r\n        <Hint text={\"add song\"} />\r\n        <FiPlusCircle />\r\n      </button>\r\n    );\r\n  } else {\r\n    return (\r\n      <button onClick={removeSong} style={{ position: \"relative\" }}>\r\n        <Hint text={\"delete song\"} />\r\n        <FiX />\r\n      </button>\r\n    );\r\n  }\r\n};\r\n\r\nexport default AddOrDeleteButton;\r\n","import React from \"react\";\r\nimport { FiMoreVertical } from \"react-icons/fi\";\r\nimport { SongItemMobileMoreWindow } from \"../../../../features/mobile/ui/organisms/song-item-mobile-more-window\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { Hint } from \"../../../../shared/ui/atoms/hint\";\r\nimport AddOrDeleteButton from \"../molecules/add-or-delete-button\";\r\n\r\nconst MoreButton = ({ song, isMobile, openSongItemMoreWindow }) => {\r\n  const { toggleModal, setContent } = useModal();\r\n\r\n  return (\r\n    <div className=\"songItemMoreBtn\">\r\n      <AddOrDeleteButton song={song} />\r\n      <button\r\n        onClick={\r\n          isMobile\r\n            ? (e) => {\r\n                e.stopPropagation();\r\n                toggleModal();\r\n                setContent(<SongItemMobileMoreWindow song={song} />);\r\n              }\r\n            : openSongItemMoreWindow\r\n        }\r\n      >\r\n        <Hint text={\"more\"} />\r\n        <FiMoreVertical />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoreButton;\r\n","import { memo } from \"react\";\r\nimport SongItemMoreWindow from \"../../../features/song/ui/molecules/song-more-window\";\r\nimport { useScreen } from \"../../../contexts/screen\";\r\nimport { useSong } from \"../../../contexts/song\";\r\nimport { AddToListCircle } from \"../../../shared/ui/molecules/add-to-list-circle\";\r\nimport useSongLogic from \"../lib/hooks/use-song-logic\";\r\nimport ImageAndName from \"./organisms/image-and-name\";\r\nimport MoreButton from \"./organisms/more-button\";\r\n\r\nexport const SongItem = memo(\r\n  ({\r\n    song,\r\n    localIndex,\r\n    showListens = false,\r\n    isNewSong = false,\r\n    listOfChosenSongs,\r\n    setListOfSongs,\r\n    position,\r\n    shouldSaveSearchHistory = false,\r\n  }) => {\r\n    const { isMobile } = useScreen();\r\n    const { currentSong, displayAuthors, play } = useSong();\r\n    const {\r\n      openSongItemMoreWindow,\r\n      chooseSongItem,\r\n      moreWindowPosRelativeToViewport,\r\n      openMoreWindow,\r\n      currentItemRef,\r\n    } = useSongLogic({ song, position, localIndex, shouldSaveSearchHistory });\r\n\r\n    return (\r\n      <div style={{ display: \"flex\", alignItems: \"center\", width: \"100%\" }}>\r\n        <AddToListCircle\r\n          listOfChosenItems={listOfChosenSongs}\r\n          setListOfChosenItems={setListOfSongs}\r\n          itemId={song.id}\r\n        />\r\n        <div\r\n          className={\r\n            \"SongItem \" + (song.id === currentSong && play ? \"playingNow\" : \"\")\r\n          }\r\n          onClick={chooseSongItem}\r\n          ref={openMoreWindow ? currentItemRef : null}\r\n          style={openMoreWindow ? { background: \"var(--playlistsColor)\" } : {}}\r\n        >\r\n          <ImageAndName\r\n            song={song}\r\n            currentSong={currentSong}\r\n            play={play}\r\n            isMobile={isMobile}\r\n            showListens={showListens}\r\n            displayAuthors={displayAuthors}\r\n            isNewSong={isNewSong}\r\n          />\r\n          <MoreButton\r\n            song={song}\r\n            isMobile={isMobile}\r\n            openSongItemMoreWindow={openSongItemMoreWindow}\r\n          />\r\n          <SongItemMoreWindow\r\n            openMoreWindow={openMoreWindow}\r\n            song={song}\r\n            moreWindowPosRelativeToViewport={moreWindowPosRelativeToViewport}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React from 'react'\r\n\r\nexport const MoreBtn = ({func, lenOfList, maxLen = 5, boolVal}) => {\r\n\treturn (\r\n\t\t<div onClick = {lenOfList > maxLen?func:null} className = \"MoreBtn\" style = {lenOfList <= maxLen?{display:'none'}:{}}>\r\n\t\t\t<button style = {boolVal?{background:'var(--pink)', color:'#ff8db2'}:{}}>\r\n\t\t\t\t{boolVal?\"Close\":\"More\"}\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from \"react\";\r\nimport { MoreBtn } from \"../../../../shared/ui/atoms/more-button\";\r\n\r\nexport const TitleWithMoreBtn = ({\r\n  title,\r\n  func,\r\n  boolVal,\r\n  lenOfList,\r\n  maxLen = 5,\r\n  marginBottom = 0,\r\n}) => {\r\n  return lenOfList !== 0 ? (\r\n    <div className=\"topTitle\" style={{ margin: \"10px 0\" }}>\r\n      <h2 style={{ margin: marginBottom }}>{title}</h2>\r\n      <MoreBtn\r\n        func={func}\r\n        boolVal={boolVal}\r\n        lenOfList={lenOfList}\r\n        maxLen={maxLen}\r\n      />\r\n    </div>\r\n  ) : null;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FaHistory } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { SongItem } from \"../../../../entities/song/ui/song-item\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport shuffleSongs from \"../../../../entities/song/lib/shuffle-songs\";\r\nimport { HISTORY_ROUTE } from \"../../../../shared/data/consts\";\r\nimport SearchBar from \"../../../../shared/ui/organisms/search-bar\";\r\nimport { TitleWithMoreBtn } from \"../../../../pages/settings/ui/molecules/title-with-more-btn\";\r\n\r\nexport const SongList = ({\r\n  listOfSongs,\r\n  source,\r\n  title = \"\",\r\n  showListens = false,\r\n  isNewSong = false,\r\n  showCount = false,\r\n  listOfChosenSongs,\r\n  setListOfSongs,\r\n  showSearch = false,\r\n  displayIfEmpty,\r\n  showhistory = false,\r\n  saveSearchHistory = false,\r\n  isHorizontal = false,\r\n}) => {\r\n  const {\r\n    setCurrentSongQueue,\r\n    setCurrentSongPlaylistSource,\r\n    playSong,\r\n    setCurrentSong,\r\n  } = useSong();\r\n  const { currentUser } = useAuth();\r\n  const [showMoreSongs, setShowMoreSongs] = useState(false);\r\n  const [localSearchValue, setLocalSearchValue] = useState(\"\");\r\n  const [displaySongs, setDisplaySongs] = useState(listOfSongs);\r\n\r\n  useEffect(() => {\r\n    setDisplaySongs(listOfSongs);\r\n  }, [listOfSongs]);\r\n\r\n  function setQueueInSongList() {\r\n    if (source !== \"no\" && listOfSongs.length !== 0) {\r\n      setCurrentSongQueue(listOfSongs);\r\n      setCurrentSongPlaylistSource(source);\r\n      const listSongsIds = listOfSongs.map((song) => song.id);\r\n      firestore\r\n        .collection(\"users\")\r\n        .doc(currentUser.uid)\r\n        .update({\r\n          lastQueue: {\r\n            image: source.image,\r\n            name: source.name,\r\n            songsList: listSongsIds,\r\n            source: source.source,\r\n          },\r\n        });\r\n    }\r\n  }\r\n\r\n  function playShuffledList(e) {\r\n    e.stopPropagation();\r\n    let newList = shuffleSongs(listOfSongs);\r\n    setCurrentSongQueue(newList);\r\n    setCurrentSongPlaylistSource(source);\r\n    const listSongsIds = newList.map((song) => song.id);\r\n    firestore\r\n      .collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .update({\r\n        lastQueue: {\r\n          image: source.image,\r\n          name: source.name,\r\n          songsList: listSongsIds,\r\n          source: source.source,\r\n        },\r\n      });\r\n    setCurrentSong(newList[0].id);\r\n    playSong();\r\n  }\r\n\r\n  return (\r\n    <div className=\"SongList\" onClick={setQueueInSongList}>\r\n      {title.length !== 0 ? (\r\n        <TitleWithMoreBtn\r\n          title={title}\r\n          func={() => setShowMoreSongs(!showMoreSongs)}\r\n          boolVal={showMoreSongs}\r\n          lenOfList={listOfSongs.length}\r\n        />\r\n      ) : null}\r\n      {showSearch ? (\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <SearchBar\r\n            value={localSearchValue}\r\n            setValue={setLocalSearchValue}\r\n            allFoundSongs={displaySongs}\r\n            setAllFoundSongs={setDisplaySongs}\r\n            defaultSearchMode={\"songs\"}\r\n            defaultSongsListValue={listOfSongs}\r\n            inputText={\"Search for songs\"}\r\n            background={\"#00000061\"}\r\n          />\r\n          {showhistory ? (\r\n            <Link to={HISTORY_ROUTE}>\r\n              <button\r\n                className=\"standartButton\"\r\n                style={{\r\n                  marginTop: \"10px\",\r\n                  marginBottom: \"0\",\r\n                  height: \"44px\",\r\n                  width: \"44px\",\r\n                  padding: \"0\",\r\n                  marginLeft: \"6px\",\r\n                  background: \"var(--playlistsColor)\",\r\n                }}\r\n              >\r\n                <FaHistory style={{ marginRight: \"0\" }} />\r\n              </button>\r\n            </Link>\r\n          ) : null}\r\n        </div>\r\n      ) : null}\r\n\r\n      <div className={\"list-of-songs\" + (isHorizontal ? \" horizontal\" : \"\")}>\r\n        {displaySongs.map((song, index) => {\r\n          if (title.length !== 0) {\r\n            if (showMoreSongs) {\r\n              return (\r\n                <span className=\"topSongItem\">\r\n                  {showCount ? (\r\n                    <h3 style={{ opacity: \"0.7\" }}>{index + 1}</h3>\r\n                  ) : null}\r\n                  <SongItem\r\n                    song={song}\r\n                    key={song.id}\r\n                    localIndex={index}\r\n                    showListens={showListens}\r\n                    isNewSong={isNewSong}\r\n                    listOfChosenSongs={listOfChosenSongs}\r\n                    setListOfSongs={setListOfSongs}\r\n                    shouldSaveSearchHistory={saveSearchHistory}\r\n                  />\r\n                </span>\r\n              );\r\n            } else {\r\n              if (index < 5) {\r\n                return (\r\n                  <span className=\"topSongItem\">\r\n                    {showCount ? (\r\n                      <h3 style={{ opacity: \"0.7\" }}>{index + 1}</h3>\r\n                    ) : null}\r\n                    <SongItem\r\n                      song={song}\r\n                      key={song.id}\r\n                      localIndex={index}\r\n                      showListens={showListens}\r\n                      isNewSong={isNewSong}\r\n                      listOfChosenSongs={listOfChosenSongs}\r\n                      setListOfSongs={setListOfSongs}\r\n                      shouldSaveSearchHistory={saveSearchHistory}\r\n                    />\r\n                  </span>\r\n                );\r\n              }\r\n            }\r\n          } else {\r\n            return (\r\n              <span className=\"topSongItem\">\r\n                {showCount ? (\r\n                  <h3 style={{ opacity: \"0.7\" }}>{index + 1}</h3>\r\n                ) : null}\r\n                <SongItem\r\n                  song={song}\r\n                  key={song.id}\r\n                  localIndex={index}\r\n                  showListens={showListens}\r\n                  isNewSong={isNewSong}\r\n                  listOfChosenSongs={listOfChosenSongs}\r\n                  setListOfSongs={setListOfSongs}\r\n                  shouldSaveSearchHistory={saveSearchHistory}\r\n                />\r\n              </span>\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        {listOfSongs.length === 0 ? displayIfEmpty : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react'\r\nimport { firestore } from '../../../../firebase'\r\n\r\nexport const useAlbumAuthors = (data) => {\r\n\tconst [albumAuthors, setAlbumAuthors] = useState([])\r\n\tconst [authorsImages, setAuthorsImages] = useState([])\r\n\tasync function fetchAuthorsData() {\r\n\t\tif (data?.authors !== undefined) {\r\n\t\t\tconst ids = data.authors.map(author => author.uid)\r\n\t\t\tconst authrorsData = await firestore.collection(\"users\").where(\"uid\", \"in\", ids).get()\r\n\t\t\tconst tempArrayAuthors = []\r\n\t\t\tconst tempArrayImages = []\r\n\t\t\tauthrorsData.docs.forEach((a) => {\r\n\t\t\t\ttempArrayAuthors.push(a.data())\r\n\t\t\t\ttempArrayImages.push(a.data().photoURL)\r\n\t\t\t})\r\n\t\t\tsetAlbumAuthors(tempArrayAuthors)\r\n\t\t\tsetAuthorsImages(tempArrayImages)\r\n\t\t}\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tfetchAuthorsData()\r\n\t}, [data?.id])\r\n\r\n\treturn [albumAuthors, authorsImages]\r\n}\r\n","import React, {useEffect} from 'react'\r\n\r\nexport const SmallImages = ({imagesList, borderColor = \"#fff\"}) => {\r\n\treturn (\r\n\t\t<div className = \"SmallImages\" style = {{marginRight:-7*(imagesList.length-1)}}>\r\n\t\t\t{imagesList.map((image, index)=>{\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className = \"smallImgContainer\" style = {{border:`3px solid ${borderColor}`, transform:`translateX(${-15*index}px)`}} key = {index}>\r\n\t\t\t\t\t\t<img loading = \"lazy\" src={image} alt=\"\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FiMessageCircle } from \"react-icons/fi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { createChat } from \"../../../../shared/lib/create-—Åhat\";\r\nimport { findChatURL } from \"../../../../shared/lib/find-chat-url\";\r\n\r\nexport const ChatWithFriendButton = ({ data, color }) => {\r\n  const { currentUser } = useAuth();\r\n  const [shouldCreate, setShouldCreate] = useState(false);\r\n  const [friendChatId, setFriendChatId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    findChatURL([data.uid], currentUser, setShouldCreate, setFriendChatId);\r\n  }, [data.uid]);\r\n\r\n  return (\r\n    <Link\r\n      to={`/chat/${friendChatId}`}\r\n      style={{ display: \"block\", width: \"fit-content\", textDecoration: \"none\" }}\r\n    >\r\n      <button\r\n        onClick={() => {\r\n          if (shouldCreate)\r\n            createChat([currentUser.uid, data.uid], friendChatId);\r\n        }}\r\n        style={{ background: color }}\r\n        className=\"ChatWithFriendButton\"\r\n      >\r\n        <FiMessageCircle /> Messages\r\n      </button>\r\n    </Link>\r\n  );\r\n};\r\n","import { firestore } from \"../../firebase\"\r\n\r\nexport const getSongById = async (songId) => {\r\n\tconst data = (await firestore.collection('songs').doc(songId).get()).data()\r\n\treturn data\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport { getSongById } from \"../../../../shared/api/song-api\";\r\n\r\nconst useLastSongListened = (data) => {\r\n  const [songData, setSongData] = useState();\r\n  const {\r\n    setCurrentSong,\r\n    currentSong,\r\n    play,\r\n    songRef,\r\n    setPlay,\r\n    setCurrentSongInQueue,\r\n  } = useSong();\r\n  const { currentUser } = useAuth();\r\n\r\n  function fetchLastSong() {\r\n    getSongById(data.lastSongPlayed).then((song) => setSongData(song));\r\n  }\r\n\r\n  function chooseSongItem() {\r\n    setCurrentSong(songData.id);\r\n    firestore.collection(\"users\").doc(currentUser.uid).update({\r\n      lastSongPlayed: songData.id,\r\n    });\r\n    setCurrentSongInQueue(0);\r\n    if (songData.id === currentSong && play) {\r\n      songRef.current.pause();\r\n      setPlay(false);\r\n      return;\r\n    }\r\n    songRef.current.play();\r\n    setPlay(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (data?.lastSongPlayed) fetchLastSong();\r\n  }, [data.lastSongPlayed]);\r\n\r\n  return [songData, chooseSongItem];\r\n};\r\n\r\nexport default useLastSongListened;\r\n","import React from \"react\";\r\nimport { IoPlayCircleOutline } from \"react-icons/io5\";\r\nimport useLastSongListened from \"../../lib/hooks/use-last-song-listened\";\r\nexport const LastSongListened = ({ data, loading }) => {\r\n  const [songData, chooseSongItem] = useLastSongListened(data, loading);\r\n  return songData !== undefined ? (\r\n    <div className=\"LastSongListened\" onClick={chooseSongItem}>\r\n      <IoPlayCircleOutline />\r\n      <span>{songData.name}</span>\r\n    </div>\r\n  ) : null;\r\n};\r\n","import { firestore } from \"../../../firebase\"\r\n\r\nexport const addPlaylistToLibrary = async (playlistData, currentUser) => {\r\n\tconst addedPlaylists = (await firestore.collection('users').doc(currentUser.uid).get()).data().addedPlaylists\r\n\taddedPlaylists.push(playlistData.id)\r\n\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\taddedPlaylists: addedPlaylists\r\n\t})\r\n\r\n\tfirestore.collection('playlists').doc(playlistData.id).update({\r\n\t\tsubscribers: ++playlistData.subscribers\r\n\t})\r\n}","import { firestore } from \"../../../firebase\"\r\n\r\nexport const removePlaylistFromLibrary = async (playlistData, currentUser) => {\r\n\tconst filteredPlaylists = currentUser.addedPlaylists.filter(id => id !== playlistData.id)\r\n\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\taddedPlaylists: filteredPlaylists\r\n\t})\r\n\tfirestore.collection('playlists').doc(playlistData.id).update({\r\n\t\tsubscribers: --playlistData.subscribers\r\n\t})\r\n}","import React from \"react\";\r\nimport { FiArrowLeft } from \"react-icons/fi\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Hint } from \"./hint\";\r\n\r\nexport const GoBackBtn = ({ color = \"\" }) => {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"GoBackBtn\">\r\n      <button\r\n        onClick={() => history.goBack()}\r\n        style={color.length ? { color: color } : {}}\r\n      >\r\n        <Hint text={\"go back\"} direction={\"bottom\"} />\r\n        <FiArrowLeft />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FiHeadphones, FiUserPlus } from \"react-icons/fi\";\r\nimport { PersonTinyVerticalItem } from \"../../../author/ui/atoms/person-tiny-vertical-item\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport displayDate from \"../../../../shared/lib/display-date\";\r\nimport { SeeMoreRoundButton } from \"../../../../shared/ui/atoms/see-more-round-button\";\r\nimport { TinyPersonsList } from \"../../../author/ui/templates/tiny-persons-list\";\r\nimport { LoadingCircle } from \"../../../loading/ui/atoms/loading-circle\";\r\nimport { FriendsToShareWith } from \"../../../share/ui/organisms/friends-to-share-with\";\r\n\r\nexport const AlbumInfo = ({ album }) => {\r\n  const { setContent } = useModal();\r\n  const { yourFriends } = useSong();\r\n  const [friendsThatHaveThisAlbum, setFriendsThatHaveThisAlbum] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  async function findFriendsThatHaveThisAlbum() {\r\n    setLoading(true);\r\n    setFriendsThatHaveThisAlbum([]);\r\n    yourFriends.forEach((friend) => {\r\n      if (friend.addedPlaylists.includes(album.id))\r\n        setFriendsThatHaveThisAlbum((prev) => [...prev, friend]);\r\n    });\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    findFriendsThatHaveThisAlbum();\r\n  }, [album.uid]);\r\n\r\n  return (\r\n    <div className=\"SongInfo\">\r\n      <div\r\n        className=\"songImage\"\r\n        style={{ backgroundImage: `url(${album.image})` }}\r\n      ></div>\r\n      <div className=\"songInfoContent\">\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <span style={{ opacity: \".5\", fontWeight: 500, fontSize: \".7em\" }}>\r\n            {album.isAlbum ? \"Album\" : \"Playlist\"}\r\n          </span>\r\n          <h3 style={{ color: album.imageColors[1] }}>{album.name}</h3>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            opacity: \"0.6\",\r\n            fontSize: \".9em\",\r\n            position: \"relative\",\r\n          }}\r\n          className=\"listensAndDate\"\r\n        >\r\n          <p\r\n            className=\"infoListens\"\r\n            style={{ marginRight: \"20px\", position: \"relative\" }}\r\n          >\r\n            {album.listens}\r\n            <FiHeadphones />\r\n          </p>\r\n          <p\r\n            className=\"infoListens\"\r\n            style={{ marginRight: \"20px\", position: \"relative\" }}\r\n          >\r\n            {album.subscribers} <FiUserPlus />\r\n          </p>\r\n          <span>{displayDate(album.creationDate)}</span>\r\n        </div>\r\n        <h4 style={{ margin: \"10px 0\" }}>\r\n          {friendsThatHaveThisAlbum.length > 0\r\n            ? \"Friends subscribed\"\r\n            : \"None of your friends subscribed\"}\r\n        </h4>\r\n        {!loading ? (\r\n          <div style={{ display: \"flex\" }}>\r\n            {friendsThatHaveThisAlbum.length > 0 ? (\r\n              <>\r\n                {friendsThatHaveThisAlbum.map((person, index) => {\r\n                  if (index < 2)\r\n                    return (\r\n                      <PersonTinyVerticalItem\r\n                        person={person}\r\n                        key={person.uid}\r\n                      />\r\n                    );\r\n                })}\r\n                {friendsThatHaveThisAlbum.length > 2 ? (\r\n                  <SeeMoreRoundButton\r\n                    onClick={() =>\r\n                      setContent(\r\n                        <TinyPersonsList\r\n                          listOfPeople={friendsThatHaveThisAlbum}\r\n                          title={`Friends subscribed to ${album.name}`}\r\n                        />\r\n                      )\r\n                    }\r\n                  />\r\n                ) : null}\r\n              </>\r\n            ) : (\r\n              <button\r\n                className=\"shareBtn\"\r\n                style={{ minHeight: \"35px\", background: album.imageColors[0] }}\r\n                onClick={() => {\r\n                  setContent(\r\n                    <FriendsToShareWith item={album} whatToShare={\"playlist\"} />\r\n                  );\r\n                }}\r\n              >\r\n                Share\r\n              </button>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div style={{ position: \"relative\", height: \"50px\" }}>\r\n            <LoadingCircle top={\"50%\"} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { AiOutlineCloudDownload } from \"react-icons/ai\";\r\nimport { ImCheckmark } from \"react-icons/im\";\r\nimport styled from \"styled-components\";\r\nimport { LoadingCircle } from \"../../../features/loading/ui/atoms/loading-circle\";\r\nimport { useModal } from \"../../../contexts/modal\";\r\nimport { storage } from \"../../../firebase\";\r\n\r\nconst DownloadButtonWrapper = styled.button`\r\n  width: 100%;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  background: linear-gradient(45deg, #852de5, #5c38c1);\r\n  color: #fff;\r\n  font-weight: bold;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 40px;\r\n  border-radius: var(--standartBorderRadius3);\r\n  position: relative;\r\n  overflow: hidden;\r\n  z-index: 2;\r\n  margin: 8px 0;\r\n\r\n  @keyframes button-animation-out {\r\n    0% {\r\n      opacity: 0;\r\n      transform: scale(0.9);\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n      transform: scale(1);\r\n    }\r\n  }\r\n\r\n  .inner-button {\r\n    z-index: 1;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    .inner-button-content {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n\r\n    .inner-button-success {\r\n      animation: button-animation-out 2s forwards;\r\n    }\r\n\r\n    .inner-button-text {\r\n      cursor: pointer;\r\n      width: 100%;\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n\r\n      svg {\r\n        margin-right: 7px;\r\n        width: 20px;\r\n        height: 20px;\r\n      }\r\n    }\r\n\r\n    .inner-button-download {\r\n      width: 100%;\r\n      background: red;\r\n\r\n      input[type=\"file\"] {\r\n        /* display: none; */\r\n        width: 100%;\r\n        height: 100%;\r\n        position: absolute;\r\n        left: 50%;\r\n        top: 50%;\r\n        transform: translate(-50%, -50%);\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    display: block;\r\n    top: 50%;\r\n    left: 0%;\r\n    transform: translateY(-50%);\r\n    background: var(--green);\r\n    width: ${(props) => (props.completed ? \"100%\" : \"0\")};\r\n    height: 100%;\r\n    transition: 0.6s;\r\n    z-index: 0;\r\n  }\r\n\r\n  .LoadingCircle {\r\n    position: relative;\r\n    transform: none;\r\n    left: auto;\r\n    top: auto;\r\n    width: 30px;\r\n    height: 30px;\r\n\r\n    img {\r\n      width: 30px;\r\n      height: 30px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DownloadButton = ({\r\n  title = \"\",\r\n  text,\r\n  place,\r\n  setItemSrc,\r\n  setImageLocalPath,\r\n}) => {\r\n  const { openBottomMessage } = useModal();\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [completed, setCompleted] = useState(false);\r\n\r\n  async function onFileChange(e, place, setFunc) {\r\n    e.preventDefault();\r\n    setErrorMessage(\"\");\r\n    setLoading(true);\r\n    setCompleted(false);\r\n    const isImage =\r\n      place === \"songsImages/\" ||\r\n      place === \"usersImages/\" ||\r\n      place === \"chatCovers/\";\r\n    const file = e.target.files[0];\r\n    let isValid = false;\r\n    if (isImage) {\r\n      const validExtensions = [\".jpg\", \".png\", \".jpeg\"];\r\n      if (\r\n        validExtensions.find(\r\n          (ext) =>\r\n            file.name.substr(file.name.length - ext.length, ext.length) === ext\r\n        )\r\n      )\r\n        isValid = true;\r\n      else {\r\n        setErrorMessage(\r\n          `Format of your file is not valid. Download file with one of these: ${validExtensions.map(\r\n            (ex) => \" \" + ex\r\n          )}`\r\n        );\r\n        setLoading(false);\r\n      }\r\n    } else if (place === \"songs/\") {\r\n      const validExtensions = [\".mp3\", \".mp4a\", \".flac\", \".wav\", \".wma\"];\r\n      if (\r\n        validExtensions.find(\r\n          (ext) =>\r\n            file.name.substr(file.name.length - ext.length, ext.length) === ext\r\n        )\r\n      )\r\n        isValid = true;\r\n      else {\r\n        setErrorMessage(\r\n          `Format of your file is not valid. Download file with one of these: ${validExtensions.map(\r\n            (ex) => ex\r\n          )}`\r\n        );\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    if (isValid) {\r\n      if (isImage) setImageLocalPath(URL.createObjectURL(file));\r\n      const storageRef = storage.ref();\r\n      const fileRef = storageRef.child(place + file.name);\r\n      await fileRef.put(file);\r\n      setCompleted(true);\r\n      setLoading(false);\r\n      setFunc(await fileRef.getDownloadURL());\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (errorMessage.length) openBottomMessage(errorMessage, \"failure\");\r\n  }, [errorMessage]);\r\n\r\n  return (\r\n    <>\r\n      {!!title && <h3>{title}</h3>}\r\n      <DownloadButtonWrapper completed={completed}>\r\n        <div className=\"inner-button\">\r\n          {completed ? (\r\n            <div className=\"inner-button-success\">\r\n              <ImCheckmark /> Done\r\n            </div>\r\n          ) : !loading ? (\r\n            <div className=\"inner-button-content\">\r\n              <label className=\"inner-button-download\">\r\n                <div className=\"inner-button-text\">\r\n                  <AiOutlineCloudDownload />\r\n                  {text}\r\n                </div>\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"\"\r\n                  id=\"\"\r\n                  onChange={(e) => onFileChange(e, place, setItemSrc)}\r\n                />\r\n              </label>\r\n            </div>\r\n          ) : (\r\n            <LoadingCircle top={0} />\r\n          )}\r\n        </div>\r\n      </DownloadButtonWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DownloadButton;\r\n","import React from 'react'\r\n\r\nexport const RadioBtn = ({currentActive, id, label, onClick}) => {\r\n\treturn (\r\n\t\t<div className = \"RadioBtn\" id = {id} onClick = {onClick}>\r\n\t\t\t<span className = \"radioLabel\" style = {currentActive === id?{color:'var(--blue)', opacity:1, fontWeight:'bold'}:{}}>\r\n\t\t\t\t{label}\r\n\t\t\t</span>\r\n\t\t\t<span className = \"radioCircle\" style = {currentActive === id?{background:'var(--blue)'}:{}}></span>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { ColorExtractor } from \"react-color-extractor\";\r\nimport { FiXCircle } from \"react-icons/fi\";\r\nimport { PersonTiny } from \"../../../../entities/user/ui/organisms/person-tiny\";\r\nimport { SongList } from \"../../../../features/song/ui/templates/song-list\";\r\nimport { LoadingCircle } from \"../../../loading/ui/atoms/loading-circle\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport getUID from \"../../../../shared/lib/get-uid\";\r\nimport DownloadButton from \"../../../../shared/ui/atoms/download-button\";\r\nimport Input from \"../../../../shared/ui/atoms/input\";\r\nimport { RadioBtn } from \"../../../../shared/ui/atoms/radio-button\";\r\nimport SubmitButton from \"../../../../shared/ui/atoms/submit-button\";\r\nimport SearchBar from \"../../../../shared/ui/organisms/search-bar\";\r\n\r\nexport const CustomizeAlbum = ({ playlist }) => {\r\n  const { currentUser } = useAuth();\r\n  const [playlistName, setPlaylistName] = useState(playlist.name);\r\n  const [playlistCover, setPlaylistCover] = useState(playlist.image);\r\n  const [authorsInputValue, setAuthorsInputValue] = useState(\"\");\r\n  const [allAuthors, setAllAuthors] = useState([]);\r\n  const [chosenAuthors, setChosenAuthors] = useState(playlist.authors);\r\n  const [releaseDate, setReleaseDate] = useState(playlist.creationDate);\r\n  const [songsSearch, setSongsSearch] = useState(\"\");\r\n  const [allSongs, setAllSongs] = useState([]);\r\n  const [chosenSongs, setChosenSongs] = useState(playlist.songs);\r\n  const [playlistStatus, setPlaylistStatus] = useState(\r\n    playlist.isAlbum ? 1 : 0\r\n  );\r\n  const [isPlaylistPrivate, setIsPlaylistPrivate] = useState(\r\n    playlist.isPrivate ? 1 : 0\r\n  );\r\n  const [loadingAuthors, setLoadingAuthors] = useState(false);\r\n  const [loadingSongs, setLoadingSongs] = useState(false);\r\n  const [imageLocalPath, setImageLocalPath] = useState(\"\");\r\n  const [imageColors, setImageColors] = useState(playlist.imageColors);\r\n  const [loading, setLoading] = useState(false);\r\n  const [completed, setCompleted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setPlaylistName(playlist.name);\r\n    setPlaylistCover(playlist.image);\r\n    setChosenAuthors(playlist.authors);\r\n  }, [playlist.id]);\r\n\r\n  useEffect(() => {\r\n    if (songsSearch.length === 0) {\r\n      playlist.songs.map(async (songId) => {\r\n        const songData = (\r\n          await firestore.collection(\"songs\").doc(songId).get()\r\n        ).data();\r\n        setLoadingSongs(false);\r\n        setAllSongs((prev) => [...prev, songData]);\r\n      });\r\n    }\r\n  }, [songsSearch]);\r\n\r\n  function removeAuthorFromList(data) {\r\n    const filtered = chosenAuthors.filter((people) => people.uid !== data.uid);\r\n    return setChosenAuthors(filtered);\r\n  }\r\n\r\n  function addAuthor(data) {\r\n    if (!chosenAuthors.some((person) => person.uid === data.uid)) {\r\n      return setChosenAuthors((prev) => [\r\n        ...prev,\r\n        {\r\n          uid: data.uid,\r\n          displayName: data.displayName,\r\n          photoURL: data.photoURL,\r\n        },\r\n      ]);\r\n    }\r\n\r\n    removeAuthorFromList(data);\r\n  }\r\n\r\n  async function addPlaylistToFirebase(e) {\r\n    e.preventDefault();\r\n    const uid = getUID();\r\n    if (chosenAuthors.length > playlist.authors.length) {\r\n      const newAuthors = chosenAuthors.filter((author) => {\r\n        return !playlist.authors.find((a) => a.uid === author.uid);\r\n      });\r\n      newAuthors.forEach(async (author) => {\r\n        const authorRef = await firestore\r\n          .collection(\"users\")\r\n          .doc(author.uid)\r\n          .get();\r\n        const authorData = authorRef.data();\r\n        const authorPlaylists = authorData.ownPlaylists;\r\n        authorPlaylists.push(playlist.id);\r\n        firestore.collection(\"users\").doc(author.uid).update({\r\n          ownPlaylists: authorPlaylists,\r\n        });\r\n      });\r\n    } else if (chosenAuthors.length < playlist.authors.length) {\r\n      const newAuthors = playlist.authors.filter((author) => {\r\n        return !chosenAuthors.find((a) => a.uid === author.uid);\r\n      });\r\n      newAuthors.forEach(async (author) => {\r\n        const authorRef = await firestore\r\n          .collection(\"users\")\r\n          .doc(author.uid)\r\n          .get();\r\n        const authorData = authorRef.data();\r\n        const authorPlaylists = authorData.ownPlaylists;\r\n        const filteredPlaylists = authorPlaylists.filter(\r\n          (playlistId) => playlistId !== playlist.id\r\n        );\r\n        firestore.collection(\"users\").doc(author.uid).update({\r\n          ownPlaylists: filteredPlaylists,\r\n        });\r\n      });\r\n    }\r\n\r\n    firestore\r\n      .collection(\"playlists\")\r\n      .doc(playlist.id)\r\n      .update({\r\n        id: playlist.id,\r\n        name: playlistName,\r\n        songs: chosenSongs,\r\n        authors: chosenAuthors,\r\n        image: playlistCover,\r\n        listens: playlist.listens,\r\n        creationDate: releaseDate,\r\n        subscribers: playlist.subscribers,\r\n        isAlbum: playlistStatus === 1,\r\n        imageColors: imageColors,\r\n        isPrivate: isPlaylistPrivate === 1,\r\n      })\r\n      .then(() => {\r\n        setLoading(false);\r\n        setCompleted(true);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"AddSong\">\r\n      <ColorExtractor\r\n        src={imageLocalPath}\r\n        getColors={(colors) => setImageColors(colors)}\r\n      />\r\n      <Input\r\n        title={\"Playlist name\"}\r\n        value={playlistName}\r\n        setValue={setPlaylistName}\r\n        placeholder=\"Enter playlist name\"\r\n      />\r\n      <label>\r\n        <h3>Playlist authors</h3>\r\n        <SearchBar\r\n          value={authorsInputValue}\r\n          setValue={setAuthorsInputValue}\r\n          setResultAuthorList={setAllAuthors}\r\n          defaultSearchMode={\"authors\"}\r\n          inputText={\"Search for authors\"}\r\n        />\r\n        <div className=\"chosenAuthorsList\">\r\n          {chosenAuthors.map((author) => {\r\n            return (\r\n              <div className=\"chosenAuthorItem\">\r\n                <span>{author.displayName}</span>\r\n                <FiXCircle\r\n                  onClick={() =>\r\n                    author.uid === currentUser.uid\r\n                      ? null\r\n                      : removeAuthorFromList(author)\r\n                  }\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"authorsResult\">\r\n          {loadingAuthors ? (\r\n            <div\r\n              style={{ position: \"relative\", width: \"100%\", height: \"50px\" }}\r\n            >\r\n              <LoadingCircle />\r\n            </div>\r\n          ) : (\r\n            allAuthors.map((data, index) => {\r\n              return (\r\n                <PersonTiny\r\n                  data={data}\r\n                  onClick={() => addAuthor(data)}\r\n                  style={\r\n                    chosenAuthors.includes(data.uid)\r\n                      ? { background: \"var(--green)\" }\r\n                      : {}\r\n                  }\r\n                  key={index}\r\n                />\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n      </label>\r\n\r\n      <label>\r\n        <h3>Search for songs</h3>\r\n        <SearchBar\r\n          value={songsSearch}\r\n          setValue={setSongsSearch}\r\n          setAllFoundSongs={setAllSongs}\r\n          defaultSearchMode={\"songs\"}\r\n          inputText={\"Search for songs\"}\r\n        />\r\n        {/* <div className=\"chosenAuthorsList\">\r\n            {chosenSongs.map((songId) => {\r\n              return (\r\n                <div className=\"chosenAuthorItem\">\r\n                  <span>{songId}</span>\r\n                  <FiXCircle onClick={() => removeSongFromList(songId)} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div> */}\r\n        <div className=\"authorsResult\">\r\n          {loadingSongs ? (\r\n            <div\r\n              style={{ position: \"relative\", width: \"100%\", height: \"50px\" }}\r\n            >\r\n              <LoadingCircle />\r\n            </div>\r\n          ) : (\r\n            <SongList\r\n              listOfSongs={allSongs}\r\n              source={\"no\"}\r\n              listOfChosenSongs={chosenSongs}\r\n              setListOfSongs={setChosenSongs}\r\n            />\r\n          )}\r\n        </div>\r\n      </label>\r\n\r\n      {currentUser.isAdmin || currentUser.isAuthor ? (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-start\",\r\n            margin: \"15px 0\",\r\n          }}\r\n        >\r\n          <RadioBtn\r\n            label=\"Playlist\"\r\n            onClick={() => setPlaylistStatus(0)}\r\n            currentActive={playlistStatus}\r\n            id={0}\r\n          />\r\n          <RadioBtn\r\n            label=\"Album\"\r\n            onClick={() => setPlaylistStatus(1)}\r\n            currentActive={playlistStatus}\r\n            id={1}\r\n          />\r\n        </div>\r\n      ) : null}\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"flex-start\",\r\n          margin: \"15px 0\",\r\n        }}\r\n      >\r\n        <RadioBtn\r\n          label=\"Not Private\"\r\n          onClick={() => setIsPlaylistPrivate(0)}\r\n          currentActive={isPlaylistPrivate}\r\n          id={0}\r\n        />\r\n        <RadioBtn\r\n          label=\"Private\"\r\n          onClick={() => setIsPlaylistPrivate(1)}\r\n          currentActive={isPlaylistPrivate}\r\n          id={1}\r\n        />\r\n      </div>\r\n\r\n      {(currentUser.isAdmin || currentUser.isAuthor) && (\r\n        <Input\r\n          title={\"Release Date\"}\r\n          type={\"date\"}\r\n          value={releaseDate}\r\n          setValue={setReleaseDate}\r\n          placeholder={\"Enter release date\"}\r\n        />\r\n      )}\r\n\r\n      <DownloadButton\r\n        text=\"Download playlist cover\"\r\n        place={\"songsImages/\"}\r\n        setItemSrc={setPlaylistCover}\r\n        setImageLocalPath={setImageLocalPath}\r\n      />\r\n\r\n      <SubmitButton\r\n        text={\"Update playlist\"}\r\n        action={addPlaylistToFirebase}\r\n        isLoading={loading}\r\n        completed={completed}\r\n        setCompleted={setCompleted}\r\n        bottomMessage={\"Playlist was updated\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { firestore } from \"../../../firebase\"\r\n\r\nexport const addAuthorToLibrary = async (authorData, currentUser) => {\r\n\tconst addedAuthors = (await firestore.collection('users').doc(currentUser.uid).get()).data().addedAuthors\r\n\taddedAuthors.push(authorData.uid)\r\n\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\taddedAuthors: addedAuthors\r\n\t})\r\n\tlet subscribers = authorData.subscribers\r\n\tsubscribers++\r\n\tfirestore.collection('users').doc(authorData.uid).update({\r\n\t\tsubscribers: subscribers\r\n\t})\r\n}","import { firestore } from \"../../../firebase\"\r\n\r\nexport default function addFriend(friendData, currentUser) {\r\n\tconst updatedDataForFriend = friendData.friends\r\n\tconst updatedDataForCurrentUser = currentUser.friends\r\n\tupdatedDataForFriend.push({ status: 'requested', uid: currentUser.uid })\r\n\tupdatedDataForCurrentUser.push({ status: 'awaiting', uid: friendData.uid })\r\n\r\n\tfirestore.collection('users').doc(friendData.uid).update({\r\n\t\tfriends: updatedDataForFriend\r\n\t})\r\n\r\n\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\tfriends: updatedDataForCurrentUser\r\n\t})\r\n\r\n}","const deleteAuthorFromLibrary = (authorData, currentUser) => {\r\n\r\n}\r\n\r\nexport default deleteAuthorFromLibrary","import React, { useEffect, useState } from \"react\";\r\nimport { FiHeadphones, FiUserPlus } from \"react-icons/fi\";\r\nimport { ImCheckmark } from \"react-icons/im\";\r\nimport { PersonTinyVerticalItem } from \"../atoms/person-tiny-vertical-item\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport displayDate from \"../../../../shared/lib/display-date\";\r\nimport { SeeMoreRoundButton } from \"../../../../shared/ui/atoms/see-more-round-button\";\r\nimport { LoadingCircle } from \"../../../loading/ui/atoms/loading-circle\";\r\nimport { FriendsToShareWith } from \"../../../share/ui/organisms/friends-to-share-with\";\r\nimport { TinyPersonsList } from \"../templates/tiny-persons-list\";\r\n\r\nexport const AuthorInfo = ({ author }) => {\r\n  const { setContent } = useModal();\r\n  const { yourFriends } = useSong();\r\n  const [friendsThatHaveThisSong, setFriendsThatHaveThisAuthor] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  async function findFriendsThatHaveThisAuthor() {\r\n    setLoading(true);\r\n    setFriendsThatHaveThisAuthor([]);\r\n    yourFriends.forEach((friend) => {\r\n      if (author.isAuthor) {\r\n        if (friend.addedAuthors.includes(author.uid))\r\n          setFriendsThatHaveThisAuthor((prev) => [...prev, friend]);\r\n      } else {\r\n        if (friend.friends.find((person) => person.uid === author.uid))\r\n          setFriendsThatHaveThisAuthor((prev) => [...prev, friend]);\r\n      }\r\n    });\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    findFriendsThatHaveThisAuthor();\r\n  }, [author.uid]);\r\n\r\n  return (\r\n    <div className=\"SongInfo\">\r\n      <div\r\n        className=\"songImage\"\r\n        style={{ backgroundImage: `url(${author.photoURL})` }}\r\n      ></div>\r\n      <div className=\"songInfoContent\">\r\n        <div style={{ display: \"flex\", flexDirection: \"column-reverse\" }}>\r\n          <h3 style={{ color: author.imageColors[1] }}>\r\n            {author.displayName}\r\n            {author.isVerified ? (\r\n              <ImCheckmark\r\n                style={{\r\n                  color: author.imageColors[0],\r\n                  width: \"15px\",\r\n                  height: \"15px\",\r\n                  marginLeft: \"5px\",\r\n                }}\r\n              />\r\n            ) : null}\r\n          </h3>\r\n          <span style={{ opacity: \".5\", fontWeight: 500, fontSize: \".7em\" }}>\r\n            {author.isAuthor ? \"Author\" : \"User\"}\r\n          </span>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            opacity: \"0.6\",\r\n            fontSize: \".9em\",\r\n            position: \"relative\",\r\n          }}\r\n          className=\"listensAndDate\"\r\n        >\r\n          <p\r\n            className=\"infoListens\"\r\n            style={{ marginRight: \"20px\", position: \"relative\" }}\r\n          >\r\n            {author.numberOfListenersPerMonth}\r\n            <FiHeadphones />\r\n          </p>\r\n          <p\r\n            className=\"infoListens\"\r\n            style={{ marginRight: \"20px\", position: \"relative\" }}\r\n          >\r\n            {author.subscribers} <FiUserPlus />\r\n          </p>\r\n          <span>{displayDate(author.regDate)}</span>\r\n        </div>\r\n        <h4 style={{ margin: \"10px 0\" }}>\r\n          {friendsThatHaveThisSong.length > 0\r\n            ? \"Friends subscribed\"\r\n            : \"None of your friends subscribed\"}\r\n        </h4>\r\n        {!loading ? (\r\n          <div style={{ display: \"flex\" }}>\r\n            {friendsThatHaveThisSong.length > 0 ? (\r\n              <>\r\n                {friendsThatHaveThisSong.map((person, index) => {\r\n                  if (index < 2)\r\n                    return (\r\n                      <PersonTinyVerticalItem\r\n                        person={person}\r\n                        key={person.uid}\r\n                      />\r\n                    );\r\n                })}\r\n                {friendsThatHaveThisSong.length > 2 ? (\r\n                  <SeeMoreRoundButton\r\n                    onClick={() =>\r\n                      setContent(\r\n                        <TinyPersonsList\r\n                          listOfPeople={friendsThatHaveThisSong}\r\n                          title={`Friends subscribed to ${author.displayName}`}\r\n                        />\r\n                      )\r\n                    }\r\n                  />\r\n                ) : null}\r\n              </>\r\n            ) : (\r\n              <button\r\n                className=\"shareBtn\"\r\n                style={{ minHeight: \"35px\", background: author.imageColors[0] }}\r\n                onClick={() => {\r\n                  setContent(\r\n                    <FriendsToShareWith item={author} whatToShare={\"author\"} />\r\n                  );\r\n                }}\r\n              >\r\n                Share\r\n              </button>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div style={{ position: \"relative\", height: \"50px\" }}>\r\n            <LoadingCircle top={\"50%\"} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { FiFlag, FiInfo, FiShare } from \"react-icons/fi\";\r\nimport { FriendsToShareWith } from \"../../../share/ui/organisms/friends-to-share-with\";\r\nimport { AlbumInfo } from \"../../../album/ui/organisms/album-info\";\r\nimport { AuthorInfo } from \"../organisms/author-info\";\r\nexport const AuthorMoreWindow = ({ data }) => {\r\n  const { setContent } = useModal();\r\n  return (\r\n    <div\r\n      className=\"AuthorMoreWindow\"\r\n      style={{ top: \"110%\", bottom: \"auto\" }}\r\n      onClick={(e) => e.stopPropagation()}\r\n    >\r\n      <div\r\n        className=\"songItemMenuWindowItem\"\r\n        onClick={() => {\r\n          setContent(\r\n            <FriendsToShareWith\r\n              item={data}\r\n              whatToShare={data.authors !== undefined ? \"playlist\" : \"author\"}\r\n            />\r\n          );\r\n        }}\r\n      >\r\n        <FiShare />\r\n        Share\r\n      </div>\r\n      <div\r\n        className=\"songItemMenuWindowItem\"\r\n        onClick={() => {\r\n          setContent(\r\n            data.authors !== undefined ? (\r\n              <AlbumInfo album={data} />\r\n            ) : (\r\n              <AuthorInfo author={data} />\r\n            )\r\n          );\r\n        }}\r\n      >\r\n        <FiInfo />\r\n        Info\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { ColorExtractor } from \"react-color-extractor\";\r\nimport { MdModeEdit } from \"react-icons/md\";\r\nimport { firestore, storage } from \"../../../../firebase\";\r\nexport const CustomizeAuthor = ({ author }) => {\r\n  const [authorName, setPlaylistName] = useState(author.displayName);\r\n  const [authorCover, setAuthorCover] = useState(author.photoURL);\r\n  const [imageLocalPath, setImageLocalPath] = useState(\"\");\r\n  const [imageColors, setImageColors] = useState(author.imageColors);\r\n\r\n  async function onFileChange(e, place, setFunc) {\r\n    const file = e.target.files[0];\r\n    setImageLocalPath(URL.createObjectURL(file));\r\n    const storageRef = storage.ref();\r\n    const fileRef = storageRef.child(place + file.name);\r\n    await fileRef.put(file);\r\n    setFunc(await fileRef.getDownloadURL());\r\n  }\r\n\r\n  function updateAuthorInFirebase(e) {\r\n    e.preventDefault();\r\n    firestore.collection(\"users\").doc(author.uid).update({\r\n      displayName: authorName,\r\n      photoURL: authorCover,\r\n      imageColors: imageColors,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"AddSong\">\r\n      <ColorExtractor\r\n        src={imageLocalPath}\r\n        getColors={(colors) => setImageColors(colors)}\r\n      />\r\n      <form onSubmit={(e) => e.preventDefault()}>\r\n        <div\r\n          style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}\r\n        >\r\n          <div\r\n            className=\"chatInfoImage\"\r\n            style={{ backgroundImage: `url(${authorCover})` }}\r\n          >\r\n            <label className=\"changePhoto\">\r\n              <MdModeEdit />\r\n              Change photo\r\n              <input\r\n                type=\"file\"\r\n                style={{ display: \"none\" }}\r\n                onChange={(e) => onFileChange(e, \"chatCovers/\", setAuthorCover)}\r\n              />\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <label>\r\n          <h3>Your name</h3>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter your name\"\r\n            value={authorName}\r\n            onChange={(e) => setPlaylistName(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <button\r\n          type=\"button\"\r\n          className=\"addSongBtn\"\r\n          onClick={updateAuthorInFirebase}\r\n        >\r\n          Update author\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useRef, useState } from \"react\";\r\nimport { BiDoorOpen, BiLoaderAlt } from \"react-icons/bi\";\r\nimport { CgCheckO } from \"react-icons/cg\";\r\nimport {\r\n  FiEdit2,\r\n  FiInfo,\r\n  FiMoreVertical,\r\n  FiPlusCircle,\r\n  FiSettings,\r\n  FiShare,\r\n  FiTrash,\r\n  FiUserCheck,\r\n  FiUserPlus,\r\n} from \"react-icons/fi\";\r\nimport { IoMdExit } from \"react-icons/io\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { useScreen } from \"../../../../contexts/screen\";\r\nimport { addPlaylistToLibrary } from \"../../../../entities/playlist/lib/add-playlist-to-library\";\r\nimport { deletePlaylist } from \"../../../../entities/playlist/lib/delete-playlist\";\r\nimport { quitPlaylist } from \"../../../../entities/playlist/lib/quit-playlist\";\r\nimport { removePlaylistFromLibrary } from \"../../../../entities/playlist/lib/remove-playlist-from-library\";\r\nimport useOutsideClick from \"../../../../shared/lib/hooks/use-outside-click\";\r\nimport { GoBackBtn } from \"../../../../shared/ui/atoms/go-back-button\";\r\nimport { Hint } from \"../../../../shared/ui/atoms/hint\";\r\nimport { AlbumInfo } from \"../../../album/ui/organisms/album-info\";\r\nimport { CustomizeAlbum } from \"../../../album/ui/organisms/customize-album\";\r\nimport { addAuthorToLibrary } from \"../../../author/lib/add-author-to-library\";\r\nimport addFriend from \"../../../author/lib/add-friend\";\r\nimport deleteAuthorFromLibrary from \"../../../author/lib/delete-author-from-library\";\r\nimport { deleteFriend } from \"../../../author/lib/delete-friend\";\r\nimport { AuthorMoreWindow } from \"../../../author/ui/molecules/author-more-window\";\r\nimport { AuthorInfo } from \"../../../author/ui/organisms/author-info\";\r\nimport { CustomizeAuthor } from \"../../../author/ui/organisms/customize-author\";\r\nimport { FriendsToShareWith } from \"../../../share/ui/organisms/friends-to-share-with\";\r\n\r\nconst TopButtons = ({ data, headerColors }) => {\r\n  const { currentUser, logout } = useAuth();\r\n  const { isMobile } = useScreen();\r\n  const [openMoreWindow, setOpenMoreWindow] = useState(false);\r\n  const {\r\n    toggleModal,\r\n    setContent,\r\n    openConfirm,\r\n    closeConfirm,\r\n    openBottomMessage,\r\n  } = useModal();\r\n  const moreWindowRef = useRef(null);\r\n  useOutsideClick(moreWindowRef, setOpenMoreWindow);\r\n  function whatButtonToRender() {\r\n    if (data.authors) {\r\n      if (\r\n        currentUser.ownPlaylists.includes(data.id) &&\r\n        data.authors.length === 1\r\n      )\r\n        return (\r\n          <button\r\n            onClick={() =>\r\n              openConfirm(\r\n                \"Are you sure you want to DELETE this playlist forever?!\",\r\n                \"Yes, pretty sure\",\r\n                \"No, I Don't!\",\r\n                () => {\r\n                  deletePlaylist(data.id);\r\n                  closeConfirm();\r\n                  openBottomMessage(`Playlist ${data.name} was deleted`);\r\n                }\r\n              )\r\n            }\r\n          >\r\n            <Hint text={\"delete playlist\"} direction={\"bottom\"} />\r\n            <FiTrash />\r\n          </button>\r\n        );\r\n      else if (currentUser.ownPlaylists.includes(data.id))\r\n        return (\r\n          <button\r\n            onClick={() =>\r\n              openConfirm(\r\n                \"Are you sure you want to quit this playlist?\",\r\n                \"Yes, pretty sure\",\r\n                \"No, I Don't!\",\r\n                () => {\r\n                  quitPlaylist(data, currentUser);\r\n                  closeConfirm();\r\n                  openBottomMessage(`You left ${data.name}`);\r\n                }\r\n              )\r\n            }\r\n          >\r\n            <Hint text={\"quit playlist\"} direction={\"bottom\"} />\r\n            <BiDoorOpen />\r\n          </button>\r\n        );\r\n      else if (currentUser.addedPlaylists.includes(data.id))\r\n        return (\r\n          <button\r\n            onClick={() =>\r\n              openConfirm(\r\n                \"Are you sure you want to remove this playlist from library?\",\r\n                \"Yes, pretty sure\",\r\n                \"No-no-no, go away\",\r\n                () => {\r\n                  removePlaylistFromLibrary(data, currentUser);\r\n                  closeConfirm();\r\n                  openBottomMessage(\"Playlist was removed from library\");\r\n                }\r\n              )\r\n            }\r\n          >\r\n            <Hint text={\"remove playlist from library\"} direction={\"bottom\"} />\r\n            <CgCheckO />\r\n          </button>\r\n        );\r\n      else\r\n        return (\r\n          <button\r\n            onClick={() => {\r\n              addPlaylistToLibrary(data, currentUser);\r\n              openBottomMessage(`Playlist ${data.name} was added to library`);\r\n            }}\r\n          >\r\n            <Hint text={\"add playlist\"} direction={\"bottom\"} />\r\n            <FiPlusCircle />\r\n          </button>\r\n        );\r\n    } else {\r\n      if (currentUser.addedAuthors.includes(data.uid))\r\n        return (\r\n          <button onClick={() => deleteAuthorFromLibrary(data, currentUser)}>\r\n            <Hint text={\"delete author from library\"} direction={\"bottom\"} />\r\n            <CgCheckO />\r\n          </button>\r\n        );\r\n      else if (currentUser.uid === data.uid)\r\n        return (\r\n          <Link to={\"/settings\"}>\r\n            <button>\r\n              <Hint text={\"settings\"} direction={\"bottom\"} />\r\n              <FiSettings />\r\n            </button>\r\n          </Link>\r\n        );\r\n      else if (\r\n        !data.isAuthor &&\r\n        currentUser.friends.find(\r\n          (friend) => friend.uid === data.uid && friend.status === \"added\"\r\n        )\r\n      )\r\n        return (\r\n          <button\r\n            onClick={() =>\r\n              openConfirm(\r\n                `Are you sure you want to unfriend ${data.displayName}?`,\r\n                \"Yes, pretty sure\",\r\n                \"No-no-no, go away\",\r\n                () => {\r\n                  deleteFriend(currentUser, data);\r\n                  closeConfirm();\r\n                  openBottomMessage(`${data.displayName} was unfriended`);\r\n                }\r\n              )\r\n            }\r\n          >\r\n            <Hint text={\"remove from friend list\"} direction={\"bottom\"} />\r\n            <FiUserCheck />\r\n          </button>\r\n        );\r\n      else if (\r\n        !data.isAuthor &&\r\n        currentUser.friends.find(\r\n          (friend) => friend.uid === data.uid && friend.status === \"awaiting\"\r\n        )\r\n      )\r\n        //–ó–∞—á–µ–º –∑–¥–µ—Å—å —ç—Ç–æ—Ç onClick?\r\n        return (\r\n          <button onClick={addFriend}>\r\n            <Hint text={\"waiting for response\"} direction={\"bottom\"} />\r\n            <BiLoaderAlt style={{ animation: \"loading 1s infinite linear\" }} />\r\n          </button>\r\n        );\r\n      else if (!data.isAuthor)\r\n        return (\r\n          <button\r\n            onClick={() => {\r\n              addFriend(data, currentUser);\r\n              openBottomMessage(\r\n                `Friend request was sent to ${data.displayName}`\r\n              );\r\n            }}\r\n          >\r\n            <Hint text={\"add friend\"} direction={\"bottom\"} />\r\n            <FiUserPlus />\r\n          </button>\r\n        );\r\n      else\r\n        return (\r\n          <button\r\n            onClick={() => {\r\n              addAuthorToLibrary(data, currentUser);\r\n              openBottomMessage(\r\n                `${data.displayName} was added to your library`\r\n              );\r\n            }}\r\n          >\r\n            <Hint text={\"subscribe\"} direction={\"bottom\"} />\r\n            <FiPlusCircle />\r\n          </button>\r\n        );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"headerBtns\" style={{ background: headerColors[2] }}>\r\n      <GoBackBtn />\r\n      <div style={{ display: \"flex\" }}>\r\n        <div className=\"headerBackBtn\">{whatButtonToRender()}</div>\r\n        <div className=\"headerMoreBtn\" ref={moreWindowRef}>\r\n          <button\r\n            onClick={\r\n              !isMobile\r\n                ? () => setOpenMoreWindow(!openMoreWindow)\r\n                : () => {\r\n                    toggleModal();\r\n                    setContent(<AuthorMoreWindow data={data} />);\r\n                  }\r\n            }\r\n          >\r\n            <Hint text={\"more\"} direction={\"bottom\"} />\r\n            <FiMoreVertical />\r\n          </button>\r\n          {openMoreWindow ? (\r\n            <div\r\n              className=\"songItemMenuWindow\"\r\n              style={{ top: \"110%\", bottom: \"auto\" }}\r\n              onClick={(e) => e.stopPropagation()}\r\n            >\r\n              {(data.authors &&\r\n                data.authors.find(\r\n                  (person) => person.uid === currentUser.uid\r\n                )) ||\r\n              (data.authors && currentUser.isAdmin) ? (\r\n                <div\r\n                  className=\"songItemMenuWindowItem\"\r\n                  onClick={() => {\r\n                    toggleModal();\r\n                    setContent(<CustomizeAlbum playlist={data} />);\r\n                  }}\r\n                >\r\n                  <FiEdit2 />\r\n                  Edit\r\n                </div>\r\n              ) : data.uid === currentUser.uid && !data.isAuthor ? (\r\n                <div\r\n                  className=\"songItemMenuWindowItem\"\r\n                  onClick={() => {\r\n                    toggleModal();\r\n                    setContent(<CustomizeAuthor author={data} />);\r\n                  }}\r\n                >\r\n                  <FiEdit2 />\r\n                  Edit\r\n                </div>\r\n              ) : null}\r\n              <div\r\n                className=\"songItemMenuWindowItem\"\r\n                onClick={() => {\r\n                  toggleModal();\r\n                  setContent(\r\n                    <FriendsToShareWith\r\n                      item={data}\r\n                      whatToShare={\r\n                        data.authors !== undefined ? \"playlist\" : \"author\"\r\n                      }\r\n                    />\r\n                  );\r\n                }}\r\n              >\r\n                <FiShare />\r\n                Share\r\n              </div>\r\n              <div\r\n                className=\"songItemMenuWindowItem\"\r\n                onClick={() => {\r\n                  toggleModal();\r\n                  setContent(\r\n                    data.authors !== undefined ? (\r\n                      <AlbumInfo album={data} />\r\n                    ) : (\r\n                      <AuthorInfo author={data} />\r\n                    )\r\n                  );\r\n                }}\r\n              >\r\n                <FiInfo />\r\n                Info\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      {currentUser.uid === data.uid ? (\r\n        <button\r\n          onClick={() =>\r\n            openConfirm(\r\n              \"Are you sure you want to quit?\",\r\n              \"Yes, pretty sure\",\r\n              \"No, I Don't!\",\r\n              () => {\r\n                logout();\r\n                closeConfirm();\r\n              }\r\n            )\r\n          }\r\n        >\r\n          <Hint text={\"quit\"} direction={\"bottom\"} />\r\n          <IoMdExit />\r\n        </button>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopButtons;\r\n","import { firestore } from \"../../../firebase\"\r\n\r\nexport const deletePlaylist = (playlistId) => {\r\n\tfirestore.collection(\"users\").where(\"addedPlaylists\", \"array-contains\", playlistId).get().then((listOfPeople) => {\r\n\t\tlistOfPeople.docs.forEach(person => {\r\n\t\t\tconst personFilteredPlaylists = person.data().addedPlaylists.filter(pId => pId !== playlistId)\r\n\t\t\tfirestore.collection('users').doc(person.data().uid).update({\r\n\t\t\t\taddedPlaylists: personFilteredPlaylists\r\n\t\t\t})\r\n\t\t})\r\n\t})\r\n\tfirestore.collection(\"users\").where(\"ownPlaylists\", \"array-contains\", playlistId).get().then((listOfPeople) => {\r\n\t\tlistOfPeople.docs.forEach(person => {\r\n\t\t\tconst personFilteredPlaylists = person.data().addedPlaylists.filter(pId => pId !== playlistId)\r\n\t\t\tfirestore.collection('users').doc(person.data().uid).update({\r\n\t\t\t\townPlaylists: personFilteredPlaylists\r\n\t\t\t})\r\n\t\t})\r\n\t})\r\n\tfirestore.collection('search').doc(playlistId).delete().then(() => {\r\n\t\tfirestore.collection('playlists').doc(playlistId).delete()\r\n\t})\r\n}","import { firestore } from \"../../../firebase\"\r\n\r\nexport const quitPlaylist = (playlist, currentUser) => {\r\n\t//logic for quiting playlist where it has more than one participant\r\n\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\townPlaylists: currentUser.ownPlaylists.filter(id => id !== playlist.id)\r\n\t})\r\n\tfirestore.collection('playlists').doc(playlist.id).update({\r\n\t\tauthors: playlist.authors.filter(author => author.uid !== currentUser.uid)\r\n\t})\r\n}","import { firestore } from \"../../../firebase\"\r\n\r\nexport const deleteFriend = (currentUser, data) => {\r\n\tlet filteredUserFriends = currentUser.friends.filter(friend => friend.uid !== data.uid)\r\n\tlet filteredOtherUserFriends = data.friends.filter(friend => friend.uid !== currentUser.uid)\r\n\r\n\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\tfriends: filteredUserFriends\r\n\t})\r\n\r\n\tfirestore.collection('users').doc(data.uid).update({\r\n\t\tfriends: filteredOtherUserFriends\r\n\t})\r\n}","import React from \"react\";\r\nimport { BiAlbum } from \"react-icons/bi\";\r\nimport { CgLock } from \"react-icons/cg\";\r\nimport { FiHeadphones, FiUserPlus } from \"react-icons/fi\";\r\nimport { ImCheckmark } from \"react-icons/im\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\nimport { useSong } from \"../../contexts/song\";\r\nimport { useAlbumAuthors } from \"../../entities/playlist/lib/hooks/use-album-authors\";\r\nimport bigNumberFormat from \"../../shared/lib/big-number-format\";\r\nimport displayDate from \"../../shared/lib/display-date\";\r\nimport { Hint } from \"../../shared/ui/atoms/hint\";\r\nimport { LastSeen } from \"../../shared/ui/atoms/last-seen\";\r\nimport { SmallImages } from \"../album/ui/atoms/small-images\";\r\nimport { ChatWithFriendButton } from \"../author/ui/molecules/chat-with-friend-button\";\r\nimport { LastSongListened } from \"../author/ui/molecules/last-song-listened\";\r\nimport TopButtons from \"./ui/molecules/top-buttons\";\r\n\r\nexport const Header = ({ data, headerColors }) => {\r\n  const { displayAuthors } = useSong();\r\n  const [albumAuthors, authorsImages] = useAlbumAuthors(data);\r\n  const { currentUser } = useAuth();\r\n  const isFriend = currentUser.friends.find(\r\n    (friend) => friend.uid === data.uid && friend.status === \"added\"\r\n  );\r\n\r\n  function displayCreationDateIfExists() {\r\n    return data.creationDate !== undefined ? (\r\n      <div className=\"headerListenersAndSubsItem\">\r\n        <Hint text={\"creation date\"} style={{ fontSize: \"0.8em\" }} />\r\n        <span>{displayDate(data.creationDate)}</span>\r\n      </div>\r\n    ) : null;\r\n  }\r\n\r\n  function isAlbumOrIsAuthor() {\r\n    return data.authors !== undefined ? (\r\n      data.isAlbum ? (\r\n        <h5>Album</h5>\r\n      ) : (\r\n        <h5>Playlist</h5>\r\n      )\r\n    ) : data.isAuthor ? (\r\n      <h5>Author</h5>\r\n    ) : (\r\n      <h5>\r\n        User{\" \"}\r\n        {data.authors === undefined && isFriend ? (\r\n          <LastSeen userUID={data.uid} />\r\n        ) : null}\r\n      </h5>\r\n    );\r\n  }\r\n\r\n  function showCreatorsIfExist() {\r\n    return data.authors !== undefined ? (\r\n      <div className=\"headerAuthorsImagesAndNames\">\r\n        <SmallImages imagesList={authorsImages} borderColor={headerColors[2]} />\r\n        <div className=\"headerAuthors\">\r\n          {displayAuthors(albumAuthors, \", \")}\r\n        </div>\r\n      </div>\r\n    ) : null;\r\n  }\r\n\r\n  function findIfIsVerified() {\r\n    return data.isVerified ? (\r\n      <ImCheckmark style={{ color: headerColors[0] }} />\r\n    ) : null;\r\n  }\r\n\r\n  function findIfIsPrivate() {\r\n    return data.isPrivate ? <CgLock /> : null;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"Header\"\r\n      style={\r\n        headerColors.length\r\n          ? {\r\n              background: `linear-gradient(45deg, ${headerColors[2]}, ${headerColors[0]})`,\r\n            }\r\n          : { background: \"var(--yellowAndPinkGrad)\" }\r\n      }\r\n    >\r\n      <TopButtons data={data} headerColors={headerColors} />\r\n      <div\r\n        className=\"headerAuthorsImage\"\r\n        style={\r\n          data.authors === undefined\r\n            ? {\r\n                animation: \"floatingBorderRadius 10s infinite ease-in-out\",\r\n                backgroundImage: `url(${data.photoURL})`,\r\n                position: \"relative\",\r\n              }\r\n            : {\r\n                backgroundImage: `url(${data.image})`,\r\n                position: \"relative\",\r\n                backgroundColor: \"var(--red)\",\r\n              }\r\n        }\r\n      >\r\n        {data.authors !== undefined && !data.image ? (\r\n          <BiAlbum\r\n            style={{\r\n              position: \"absolute\",\r\n              left: \"50%\",\r\n              top: \"50%\",\r\n              transform: \"translate(-50%, -50%)\",\r\n              width: \"60px\",\r\n              height: \"60px\",\r\n            }}\r\n          />\r\n        ) : null}\r\n      </div>\r\n      <div className=\"headerAuthorInfo\">\r\n        <div className=\"headerAuthorsName\">\r\n          {isAlbumOrIsAuthor()}\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              margin: \"2px 0 10px 0\",\r\n            }}\r\n          >\r\n            <>\r\n              <h1>{data.displayName || data.name}</h1>\r\n            </>\r\n            {findIfIsVerified()}\r\n            {findIfIsPrivate()}\r\n            {!!data.displayName && isFriend && (\r\n              <LastSongListened data={data} loading={false} />\r\n            )}\r\n          </div>\r\n        </div>\r\n        {showCreatorsIfExist()}\r\n\r\n        <div className=\"headerListenersAndSubs\">\r\n          <div className=\"headerListenersAndSubsItem\">\r\n            <Hint\r\n              text={\r\n                (data.listens ?? data.numberOfListenersPerMonth) + \" listens\"\r\n              }\r\n              style={{ fontSize: \"0.8em\" }}\r\n            />\r\n            <span>\r\n              {bigNumberFormat(data.listens ?? data.numberOfListenersPerMonth)}\r\n            </span>\r\n            <FiHeadphones />\r\n          </div>\r\n          <div className=\"headerListenersAndSubsItem\">\r\n            <Hint\r\n              text={data.subscribers + \" subscribers\"}\r\n              style={{ fontSize: \"0.8em\" }}\r\n            />\r\n            <span>{bigNumberFormat(data.subscribers)}</span>\r\n            <FiUserPlus />\r\n          </div>\r\n          {displayCreationDateIfExists()}\r\n        </div>\r\n        {isFriend ? (\r\n          <ChatWithFriendButton data={data} color={headerColors[3]} />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ContentContainer = ({ children, ...props }) => {\r\n  return (\r\n    <div className=\"content-container\" {...props}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useRouteMatch } from \"react-router\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { LoadingCircle } from \"../../features/loading/ui/atoms/loading-circle\";\r\nimport { SongList } from \"../../features/song/ui/templates/song-list\";\r\nimport { Header } from \"../../features/template-header/header\";\r\nimport { firestore } from \"../../firebase\";\r\nimport { fetchItemList } from \"../../shared/lib/fetch-item-list\";\r\nimport { ContentContainer } from \"../../shared/ui/atoms/content-container\";\r\n\r\nconst AlbumPage = () => {\r\n  const match = useRouteMatch(\"/albums/:albumId\");\r\n  const [playlistSongs, setPlaylistSongs] = useState([]);\r\n  const [headerColors, setHeaderColors] = useState([]);\r\n  const { albumId } = match.params;\r\n  const [albumData, setAlbumData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const history = useHistory();\r\n  async function fetchAlbumsData() {\r\n    firestore\r\n      .collection(\"playlists\")\r\n      .doc(albumId)\r\n      .onSnapshot((doc) => {\r\n        if (doc.exists) {\r\n          setAlbumData(doc.data());\r\n          setHeaderColors(doc.data().imageColors);\r\n        } else {\r\n          history.push(\"/not-found\");\r\n        }\r\n      });\r\n  }\r\n\r\n  function fetchSongsInAlbum() {\r\n    if (albumData.songs?.length)\r\n      fetchItemList(\r\n        albumData.songs,\r\n        \"songs\",\r\n        setPlaylistSongs,\r\n        (res) => res,\r\n        () => setLoading(false)\r\n      );\r\n    else setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchAlbumsData();\r\n  }, [albumId, firestore]);\r\n\r\n  useEffect(() => {\r\n    fetchSongsInAlbum();\r\n  }, [albumData]);\r\n\r\n  return (\r\n    <div className=\"AlbumPage\" style={{ animation: \"zoomIn .2s forwards\" }}>\r\n      {loading ? (\r\n        <LoadingCircle top={\"50%\"} />\r\n      ) : (\r\n        <>\r\n          <Header\r\n            data={albumData}\r\n            headerColors={headerColors}\r\n            setHeaderColors={setHeaderColors}\r\n          />\r\n          <ContentContainer\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              minHeight: \"100%\",\r\n              borderRadius: \"25px 25px 0 0\",\r\n              flex: \"1 1 auto\",\r\n              position: \"relative\",\r\n              overflow: \"hidden\",\r\n              boxShadow: \"0px 0px 100px #060606\",\r\n            }}\r\n          >\r\n            <div\r\n              className=\"content-background\"\r\n              style={{\r\n                background: `linear-gradient(360deg, black, ${headerColors[0]})`,\r\n              }}\r\n            ></div>\r\n            <SongList\r\n              listOfSongs={playlistSongs}\r\n              source={{\r\n                source: `/albums/${albumData.id}`,\r\n                name: albumData.name,\r\n                image: albumData.image,\r\n                songsList: playlistSongs,\r\n              }}\r\n              showSearch\r\n              defaultSearchMode={\"songs\"}\r\n            />\r\n          </ContentContainer>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlbumPage;\r\n","import React from 'react'\r\nimport { FiCheck, FiX } from 'react-icons/fi'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const FriendRequestItem = ({person, addFriend, rejectFriend}) => {\r\n\treturn (\r\n\t\t<div className = 'FriendRequestItem'>\r\n\t\t\t<Link to = {`/authors/${person.uid}`}>\r\n\t\t\t\t<div className = \"friendRequestImageAndName\">  \r\n\t\t\t\t\t<div className=\"requestImage\">\r\n\t\t\t\t\t\t<img loading = \"lazy\" src={person.photoURL} alt=\"\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h3>{person.displayName}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t\t<div className=\"requestButtons\">\r\n\t\t\t\t<button style = {{color:'var(--green)'}} onClick = {()=>addFriend(person.uid)}>\r\n\t\t\t\t\t<FiCheck/>\r\n\t\t\t\t\t<span>Add</span> \r\n\t\t\t\t</button>\r\n\t\t\t\t<button style = {{color:'var( --lightRed)'}} onClick = {()=>rejectFriend(person.uid)}>\r\n\t\t\t\t\t<FiX/>\r\n\t\t\t\t\t<span>Reject</span> \r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { firestore } from \"../../../../firebase\";\r\n\r\nconst useFriendRequest = () => {\r\n  const { currentUser } = useAuth();\r\n  const [friendRequests, setFriendRequests] = useState([]);\r\n  function fetchFriendRequests() {\r\n    const tempArray = [];\r\n    currentUser.friends.forEach(async (friendObj, i) => {\r\n      if (friendObj.status === \"requested\") {\r\n        const personData = (\r\n          await firestore.collection(\"users\").doc(friendObj.uid).get()\r\n        ).data();\r\n        tempArray.push(personData);\r\n        if (i === currentUser.friends.length - 1) setFriendRequests(tempArray);\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchFriendRequests();\r\n  }, [JSON.stringify(currentUser.friends)]);\r\n\r\n  function addFriend(uid) {\r\n    const friendsList = currentUser.friends;\r\n    const otherUserFriendList = friendRequests.find(\r\n      (person) => person.uid === uid\r\n    ).friends;\r\n    friendsList.find((obj) => obj.uid === uid).status = \"added\";\r\n    otherUserFriendList.find((obj) => obj.uid === currentUser.uid).status =\r\n      \"added\";\r\n\r\n    firestore.collection(\"users\").doc(currentUser.uid).update({\r\n      friends: friendsList,\r\n    });\r\n    firestore.collection(\"users\").doc(uid).update({\r\n      friends: otherUserFriendList,\r\n    });\r\n\r\n    setFriendRequests((arrOfReqs) => arrOfReqs.filter((el) => el.uid !== uid));\r\n  }\r\n\r\n  function rejectFriend(uid) {\r\n    const friendsList = currentUser.friends.filter((obj) => obj.uid !== uid);\r\n    firestore\r\n      .collection(\"users\")\r\n      .doc(uid)\r\n      .get()\r\n      .then((res) => {\r\n        const otherUserFriendList = res\r\n          .data()\r\n          .friends.filter((obj) => obj.uid !== currentUser.uid);\r\n        firestore.collection(\"users\").doc(currentUser.uid).update({\r\n          friends: friendsList,\r\n        });\r\n        firestore.collection(\"users\").doc(uid).update({\r\n          friends: otherUserFriendList,\r\n        });\r\n        setFriendRequests((arrOfReqs) =>\r\n          arrOfReqs.filter((el) => el.uid !== uid)\r\n        );\r\n      });\r\n  }\r\n\r\n  return [friendRequests, addFriend, rejectFriend];\r\n};\r\n\r\nexport default useFriendRequest;\r\n","import React from \"react\";\r\nimport { FriendRequestItem } from \"../atoms/friend-request-item\";\r\nimport useFriendRequest from \"../../lib/hooks/use-friend-request\";\r\n\r\nexport const FriendRequest = () => {\r\n  const [friendRequests, addFriend, rejectFriend] = useFriendRequest();\r\n\r\n  return (\r\n    <>\r\n      {friendRequests.map((person, index) => {\r\n        return (\r\n          <FriendRequestItem\r\n            person={person}\r\n            key={index}\r\n            addFriend={addFriend}\r\n            rejectFriend={rejectFriend}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n","export default function findIfSongIsNew(song){\r\n\tconst songReleaseDate = new Date(song.releaseDate)\r\n\t//1 814 400 000 - 3 weeks\r\n\tif((new Date().getTime() - songReleaseDate.getTime()) < 1814400000) return true\r\n\r\n\treturn false\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { SongList } from \"../../../../features/song/ui/templates/song-list\";\r\nimport findIfSongIsNew from \"../../../../entities/song/lib/find-if-song-is-new\";\r\n\r\nimport { fetchItemList } from \"../../../../shared/lib/fetch-item-list\";\r\n\r\nexport const TopSongs = ({ authorId, authorsData, headerColors }) => {\r\n  const [popularSongs, setPopularSongs] = useState([]);\r\n  const [newSongs, setNewSongs] = useState([]);\r\n\r\n  async function findAuthorsSongs() {\r\n    if (authorsData.isAuthor) {\r\n      fetchItemList(authorsData.ownSongs, \"songs\", setPopularSongs, (res) => {\r\n        res.forEach((songData) => {\r\n          if (findIfSongIsNew(songData) && !newSongs.includes(songData))\r\n            setNewSongs((prevSongs) => [...prevSongs, songData]);\r\n        });\r\n        return res.sort((a, b) => b.listens - a.listens);\r\n      });\r\n    } else {\r\n      fetchItemList(\r\n        authorsData.addedSongs.slice(0).reverse(),\r\n        \"songs\",\r\n        setPopularSongs\r\n      );\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    findAuthorsSongs();\r\n    setNewSongs([]);\r\n  }, [authorsData.ownSongs]);\r\n\r\n  return authorsData.isAuthor ? (\r\n    <div className=\"TopSongs\">\r\n      <SongList\r\n        listOfSongs={newSongs}\r\n        source={{\r\n          source: `/authors/${authorsData.uid}`,\r\n          name: authorsData.displayName,\r\n          image: authorsData.photoURL,\r\n          songsList: newSongs,\r\n        }}\r\n        isNewSong\r\n      />\r\n      <SongList\r\n        listOfSongs={popularSongs}\r\n        source={{\r\n          source: `/authors/${authorsData.uid}`,\r\n          name: authorsData.displayName,\r\n          image: authorsData.photoURL,\r\n          songsList: popularSongs,\r\n        }}\r\n        title={\"Popular Songs\"}\r\n        showListens\r\n        showCount\r\n        isHorizontal\r\n      />\r\n    </div>\r\n  ) : (\r\n    <SongList\r\n      listOfSongs={popularSongs}\r\n      source={{\r\n        source: `/authors/${authorsData.uid}`,\r\n        name: authorsData.displayName + \"'s Library\",\r\n        image: authorsData.photoURL,\r\n        songsList: popularSongs,\r\n      }}\r\n      title={authorsData.displayName + \"'s Library\"}\r\n      showListens\r\n      showCount\r\n      isHorizontal\r\n    />\r\n  );\r\n};\r\n","import { firestore } from \"../../../firebase\";\r\n\r\nexport const findAuthorsAlbums = async (authorsData, setAuthorsPlaylists, currentUserUID, setLoading) => {\r\n\tsetAuthorsPlaylists([])\r\n\tconst tempArray = []\r\n\tif (authorsData.ownPlaylists !== undefined && authorsData.ownPlaylists.length !== 0) {\r\n\t\tauthorsData.ownPlaylists.forEach(async (playlistId, index) => {\r\n\t\t\tconst playlistData = (await firestore.collection(\"playlists\").doc(playlistId).get()).data()\r\n\t\t\tif (playlistData && (!playlistData.isPrivate || (authorsData.uid === currentUserUID && playlistData.isPrivate))) tempArray.push(playlistData)\r\n\t\t\tif (index === authorsData.ownPlaylists.length - 1) {\r\n\t\t\t\ttempArray.sort((a, b) => new Date(b.creationDate).getTime() - new Date(a.creationDate).getTime())\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t\tsetAuthorsPlaylists(tempArray)\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t}\r\n}","import React from \"react\";\r\nimport Logo from \"../../../../shared/ui/images/Logo3.svg\";\r\nexport const DeletedPlaylist = () => {\r\n  return (\r\n    <div style={{ textDecoration: \"none\" }} className=\"playlistWrapper\">\r\n      <div\r\n        className=\"playlistItem\"\r\n        style={{\r\n          background: `var(--playlistsColor)`,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <img\r\n          loading=\"lazy\"\r\n          src={Logo}\r\n          alt=\"\"\r\n          style={{ width: \"70px\", height: \"70px\", filter: \"grayscale(80%)\" }}\r\n        />\r\n      </div>\r\n      <h4 style={{ display: \"flex\", alignItems: \"center\", margin: \"5px 0\" }}>\r\n        Playlist was deleted\r\n      </h4>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect } from 'react'\r\nimport { useAuth } from '../../../../contexts/auth'\r\nimport { useSong } from '../../../../contexts/song'\r\nimport { firestore } from '../../../../firebase'\r\n\r\nexport const usePlaylistSongs = (playlist, playlistSongs, setPlaylistSongs) => {\r\n\tconst { currentSongPlaylistSource, playSong, setCurrentSongQueue, setCurrentSong, setPlay, songRef, setCurrentSongInQueue, setCurrentSongPlaylistSource } = useSong()\r\n\tconst { currentUser } = useAuth()\r\n\tfunction fetchSongsInAlbum() {\r\n\t\tsetPlaylistSongs([])\r\n\t\tif (playlist.length !== 0) {\r\n\t\t\tplaylist.songs.map(async songId => {\r\n\t\t\t\tlet albumSong = (await firestore.collection('songs').doc(songId).get()).data()\r\n\t\t\t\tsetPlaylistSongs(prev => [...prev, albumSong])\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tfunction playChosenPlaylist(e) {\r\n\t\te.preventDefault()\r\n\t\tif (currentSongPlaylistSource.name === playlist.name) {\r\n\t\t\tplaySong()\r\n\t\t\treturn\r\n\t\t}\r\n\t\tfetchSongsInAlbum()\r\n\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (playlistSongs.length) {\r\n\t\t\tconst source = { source: `/albums/${playlist.id}`, name: playlist.name, image: playlist.image, songsList: playlistSongs }\r\n\t\t\tconst listSongsIds = playlistSongs.map(song => song.id)\r\n\t\t\tsetCurrentSongQueue(playlistSongs)\r\n\t\t\tsetCurrentSongInQueue(0)\r\n\t\t\tsetCurrentSong(playlistSongs[0].id)\r\n\t\t\tsongRef.current.play()\r\n\t\t\tsetPlay(true)\r\n\t\t\tsetCurrentSongPlaylistSource(source)\r\n\t\t\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\t\t\tlastSongPlayed: playlistSongs[0].id,\r\n\t\t\t\tlastQueue: {\r\n\t\t\t\t\timage: source.image,\r\n\t\t\t\t\tname: source.name,\r\n\t\t\t\t\tsongsList: listSongsIds,\r\n\t\t\t\t\tsource: source.source\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}, [playlistSongs.length])\r\n\r\n\treturn playChosenPlaylist\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { BiAlbum } from \"react-icons/bi\";\r\nimport { BsPauseFill, BsPlayFill } from \"react-icons/bs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../contexts/auth\";\r\nimport { useScreen } from \"../../../contexts/screen\";\r\nimport { useSong } from \"../../../contexts/song\";\r\nimport getShortString from \"../../../shared/lib/get-short-string\";\r\nimport { AddToListCircle } from \"../../../shared/ui/molecules/add-to-list-circle\";\r\nimport saveSearchHistory from \"../../../features/search/lib/save-search-history\";\r\nimport { DeletedPlaylist } from \"./molecules/deleted-playlist\";\r\nimport { usePlaylistSongs } from \"../lib/hooks/use-playlist-songs\";\r\nexport const PlaylistItem = ({\r\n  playlist = null,\r\n  listOfChosenAlbums,\r\n  setListOfChosenAlbums,\r\n  shouldSaveSearchHistory,\r\n}) => {\r\n  const playlistDate = new Date(playlist?.creationDate);\r\n  const { isMobile } = useScreen();\r\n  const { currentUser } = useAuth();\r\n  const { currentSongPlaylistSource, play } = useSong();\r\n  const [playlistSongs, setPlaylistSongs] = useState([]);\r\n  const playSongsInPlaylist = usePlaylistSongs(\r\n    playlist,\r\n    playlistSongs,\r\n    setPlaylistSongs\r\n  );\r\n\r\n  const handleSaveSearchHistory = () => {\r\n    if (shouldSaveSearchHistory)\r\n      saveSearchHistory(currentUser.uid, playlist.id, \"playlists\");\r\n  };\r\n\r\n  return playlist !== null ? (\r\n    <Link\r\n      to={`/albums/${playlist.id}`}\r\n      style={{ textDecoration: \"none\" }}\r\n      className=\"playlistWrapper\"\r\n      onClick={handleSaveSearchHistory}\r\n    >\r\n      <AddToListCircle\r\n        listOfChosenItems={listOfChosenAlbums}\r\n        setListOfChosenItems={setListOfChosenAlbums}\r\n        itemId={playlist.id}\r\n      />\r\n      <div\r\n        className=\"playlistItem\"\r\n        style={\r\n          playlist.image\r\n            ? { backgroundImage: `url(${playlist.image})` }\r\n            : { background: \"var(--yellowAndPinkGrad)\" }\r\n        }\r\n      >\r\n        {!playlist.image ? (\r\n          <BiAlbum\r\n            style={{\r\n              position: \"absolute\",\r\n              left: \"50%\",\r\n              top: \"50%\",\r\n              transform: \"translate(-50%, -50%)\",\r\n              width: \"60px\",\r\n              height: \"60px\",\r\n            }}\r\n          />\r\n        ) : null}\r\n        {!isMobile ? (\r\n          <button onClick={playSongsInPlaylist}>\r\n            {currentSongPlaylistSource.name === playlist.name && play ? (\r\n              <BsPauseFill />\r\n            ) : (\r\n              <BsPlayFill />\r\n            )}\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n      <h4 style={{ display: \"flex\", alignItems: \"center\", margin: \"5px 0\" }}>\r\n        {getShortString(playlist.name, isMobile ? 10 : 15)}\r\n        <span\r\n          style={{\r\n            fontSize: \".6em\",\r\n            opacity: 0.6,\r\n            fontWeight: \"500\",\r\n            marginLeft: \"7px\",\r\n          }}\r\n        >\r\n          {playlist.isAlbum\r\n            ? playlist.songs.length === 1\r\n              ? \"single\"\r\n              : \"album\"\r\n            : \"playlist\"}\r\n        </span>\r\n      </h4>\r\n      <h5 style={{ margin: \"5px 0\" }}>{playlistDate.getFullYear()}</h5>\r\n    </Link>\r\n  ) : (\r\n    <DeletedPlaylist />\r\n  );\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { FiChevronLeft, FiChevronRight } from \"react-icons/fi\";\r\nimport { PlaylistItem } from \"../../../../entities/playlist/ui/playlist-item\";\r\nimport { LoadingCircle } from \"../../../loading/ui/atoms/loading-circle\";\r\n\r\nexport const AlbumList = ({\r\n  listOfAlbums,\r\n  title = \"\",\r\n  loading = true,\r\n  listOfChosenAlbums,\r\n  setListOfChosenAlbums,\r\n  saveSearchHistory,\r\n}) => {\r\n  const [scrollLeft, setScrollLeft] = useState(0);\r\n  const wrapperRef = useRef(null);\r\n  const [shouldRenderRightArrow, setShouldRenderRightArrow] = useState(false);\r\n  function scrollToLeft() {\r\n    const prev = wrapperRef.current.scrollLeft;\r\n    wrapperRef.current.scrollLeft = prev - 220;\r\n    setScrollLeft(prev - 220);\r\n  }\r\n  function scrollToRight() {\r\n    const prev = wrapperRef.current.scrollLeft;\r\n    wrapperRef.current.scrollLeft = prev + 220;\r\n    setScrollLeft(prev + 220);\r\n  }\r\n  useEffect(() => {\r\n    if (listOfAlbums.length > 0 && !loading) {\r\n      const scrollBiggerThanScreen =\r\n        wrapperRef.current.scrollWidth > wrapperRef.current.offsetWidth;\r\n      if (scrollBiggerThanScreen) setShouldRenderRightArrow(true);\r\n    }\r\n  }, [listOfAlbums]);\r\n  return listOfAlbums.length > 0 ? (\r\n    loading ? (\r\n      <LoadingCircle />\r\n    ) : (\r\n      <div className=\"AuthorsList\">\r\n        {title.length !== 0 ? <h2>{title}</h2> : null}\r\n        <div\r\n          className=\"authorsWrapper\"\r\n          ref={wrapperRef}\r\n          onScroll={(e) => setScrollLeft(e.target.scrollLeft)}\r\n        >\r\n          {listOfAlbums.map((playlist, index) => {\r\n            return (\r\n              <PlaylistItem\r\n                playlist={playlist}\r\n                key={index}\r\n                listOfChosenAlbums={listOfChosenAlbums}\r\n                setListOfChosenAlbums={setListOfChosenAlbums}\r\n                shouldSaveSearchHistory={saveSearchHistory}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"authorsShiftButtons\">\r\n          <button\r\n            onClick={scrollToLeft}\r\n            style={\r\n              scrollLeft <= 0 ? { visibility: \"hidden\", opacity: \"0\" } : {}\r\n            }\r\n          >\r\n            <FiChevronLeft />\r\n          </button>\r\n          <button\r\n            onClick={scrollToRight}\r\n            style={\r\n              shouldRenderRightArrow &&\r\n              wrapperRef.current &&\r\n              wrapperRef.current.scrollWidth -\r\n                wrapperRef.current.offsetWidth !==\r\n                scrollLeft\r\n                ? {}\r\n                : { visibility: \"hidden\", opacity: \"0\" }\r\n            }\r\n          >\r\n            <FiChevronRight />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  ) : null;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { findAuthorsAlbums } from \"../../lib/find-authors-albums\";\r\nimport { AlbumList } from \"../../../album/ui/template/album-list\";\r\n\r\nexport const Playlists = ({ authorsData }) => {\r\n  const { currentUser } = useAuth();\r\n  const [authorsPlaylists, setAuthorsPlaylists] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    findAuthorsAlbums(\r\n      authorsData,\r\n      setAuthorsPlaylists,\r\n      currentUser.uid,\r\n      setLoading\r\n    );\r\n  }, [authorsData.ownPlaylists]);\r\n\r\n  return (\r\n    <AlbumList\r\n      listOfAlbums={authorsPlaylists}\r\n      title={currentUser.isAuthor ? \"Albums\" : \"Playlists\"}\r\n      loading={loading}\r\n    />\r\n  );\r\n};\r\n","import { firestore } from \"../../firebase\"\r\n\r\nfunction findSimilarArtistsNames(authorsSongsArr, authorsData, setSimilarAuthors) {\r\n\tlet peopleArray = []\r\n\tauthorsSongsArr.forEach((song) => {\r\n\t\tlet newAuthors = song.authors\r\n\t\tif (newAuthors.length !== 0) {\r\n\t\t\tpeopleArray.push(newAuthors)\r\n\t\t}\r\n\t})\r\n\tpeopleArray = peopleArray.flat()\r\n\tconst uniqueAuthorsSet = new Set(peopleArray.map(people=>people.uid).filter(id=>id!==authorsData.uid))\r\n\tconst uniqueAuthorsIdsArray = Array.from(uniqueAuthorsSet)\r\n\tconst uniqueAuthorsDataArray = []\r\n\tfor (let i = 0; i < uniqueAuthorsIdsArray.length; i++) {\r\n\t\tfor (let j = 0; j < peopleArray.length; j++) {\r\n\t\t\tif(uniqueAuthorsIdsArray[i] === peopleArray[j].uid){\r\n\t\t\t\tuniqueAuthorsDataArray.push(peopleArray[j])\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\tsetSimilarAuthors(uniqueAuthorsDataArray)\r\n\treturn uniqueAuthorsDataArray\r\n}\r\n\r\nexport default async function findSimilarArtists(authorsData, setSimilarAuthors) {\r\n\tif (authorsData !== undefined && authorsData.ownSongs !== undefined && authorsData.ownSongs.length !== 0) {\r\n\t\tconst authorsSongsArray = []\r\n\t\tauthorsData.ownSongs.forEach(async (songId, index)=>{\r\n\t\t\tconst songData = (await firestore.collection('songs').doc(songId).get()).data()\r\n\t\t\tauthorsSongsArray.push(songData)\r\n\t\t\tif(index === authorsData.ownSongs.length - 1){\r\n\t\t\t\treturn findSimilarArtistsNames(authorsSongsArray, authorsData, setSimilarAuthors)\r\n\t\t\t}\r\n\t\t})\r\n\r\n\r\n\t}\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\n\r\nimport { AddToListCircle } from \"../../../../shared/ui/molecules/add-to-list-circle\";\r\nimport saveSearchHistory from \"../../../search/lib/save-search-history\";\r\n\r\nexport const AuthorItemBig = ({\r\n  data,\r\n  listOfChosenAuthors,\r\n  setListOfChosenAuthors,\r\n  shouldSaveSearchHistory = false,\r\n}) => {\r\n  const { currentUser } = useAuth();\r\n\r\n  const handleSaveSearchHistory = () => {\r\n    if (shouldSaveSearchHistory)\r\n      saveSearchHistory(currentUser.uid, data.uid, \"users\");\r\n  };\r\n\r\n  return (\r\n    <Link\r\n      to={`/authors/${data.uid}`}\r\n      className=\"AuthorItemBig\"\r\n      onClick={handleSaveSearchHistory}\r\n    >\r\n      <AddToListCircle\r\n        listOfChosenItems={listOfChosenAuthors}\r\n        setListOfChosenItems={setListOfChosenAuthors}\r\n        itemId={data.uid}\r\n      />\r\n      <div>\r\n        <div\r\n          className=\"AuthorItemBigImage\"\r\n          style={{ backgroundImage: `url(${data.photoURL})` }}\r\n        ></div>\r\n        <h3>{data.displayName}</h3>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { FiChevronLeft, FiChevronRight } from \"react-icons/fi\";\r\nimport { AuthorItemBig } from \"../molecules/author-item-big\";\r\n\r\nexport const AuthorsList = ({\r\n  listOfAuthors,\r\n  title = \"\",\r\n  listOfChosenAuthors,\r\n  setListOfChosenAuthors,\r\n  saveSearchHistory,\r\n}) => {\r\n  const [scrollLeft, setScrollLeft] = useState(0);\r\n  const wrapperRef = useRef(null);\r\n  const [shouldRenderRightArrow, setShouldRenderRightArrow] = useState(false);\r\n  function scrollToLeft() {\r\n    const prev = wrapperRef.current.scrollLeft;\r\n    wrapperRef.current.scrollLeft = prev - 200;\r\n    setScrollLeft(prev - 200);\r\n  }\r\n  function scrollToRight() {\r\n    const prev = wrapperRef.current.scrollLeft;\r\n    wrapperRef.current.scrollLeft = prev + 200;\r\n    setScrollLeft(prev + 200);\r\n  }\r\n  useEffect(() => {\r\n    if (listOfAuthors.length > 0) {\r\n      const scrollBiggerThanScreen =\r\n        wrapperRef.current.scrollWidth > wrapperRef.current.offsetWidth;\r\n      if (scrollBiggerThanScreen) setShouldRenderRightArrow(true);\r\n    }\r\n  }, [listOfAuthors]);\r\n  return listOfAuthors.length > 0 ? (\r\n    <div className=\"AuthorsList\">\r\n      {title.length !== 0 ? <h2>{title}</h2> : null}\r\n      <div\r\n        className=\"authorsWrapper\"\r\n        ref={wrapperRef}\r\n        onScroll={(e) => setScrollLeft(e.target.scrollLeft)}\r\n      >\r\n        {listOfAuthors.map((author) => {\r\n          return (\r\n            <AuthorItemBig\r\n              data={author}\r\n              key={author.uid}\r\n              listOfChosenAuthors={listOfChosenAuthors}\r\n              setListOfChosenAuthors={setListOfChosenAuthors}\r\n              shouldSaveSearchHistory={saveSearchHistory}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"authorsShiftButtons\">\r\n        <button\r\n          onClick={scrollToLeft}\r\n          style={scrollLeft <= 0 ? { visibility: \"hidden\", opacity: \"0\" } : {}}\r\n        >\r\n          <FiChevronLeft />\r\n        </button>\r\n        <button\r\n          onClick={scrollToRight}\r\n          style={\r\n            shouldRenderRightArrow &&\r\n            wrapperRef.current !== null &&\r\n            wrapperRef.current.scrollWidth - wrapperRef.current.offsetWidth !==\r\n              scrollLeft\r\n              ? {}\r\n              : { visibility: \"hidden\", opacity: \"0\" }\r\n          }\r\n        >\r\n          <FiChevronRight />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport findSimilarArtists from \"../../../../shared/lib/find-similar-artists\";\r\nimport { AuthorsList } from \"../templates/authors-list\";\r\n\r\nexport const SimilarArtists = ({ data }) => {\r\n  const [similarArtists, setSimilarArtists] = useState([]);\r\n\r\n  useEffect(() => {\r\n    findSimilarArtists(data, setSimilarArtists);\r\n  }, [data]);\r\n  return (\r\n    <AuthorsList listOfAuthors={similarArtists} title={\"Similar Authors\"} />\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nexport const FullScreenLoading = ({loading}) => {\r\n\treturn (\r\n\t\t<div className = \"FullScreenLoading\" style = {loading?{}:{opacity:'0', visibility:'hidden'}}>\r\n\t\t\t<img loading = \"lazy\" src=\"https://icon-library.com/images/spinner-icon-gif/spinner-icon-gif-28.jpg\" alt=\"\"/>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport { findVariationsOfName } from \"../../../../shared/lib/find-variations-of-name\";\r\nimport getUID from \"../../../../shared/lib/get-uid\";\r\n\r\nconst useAddPlaylist = () => {\r\n  const { currentUser } = useAuth();\r\n  const [playlistName, setPlaylistName] = useState(\"\");\r\n  const [playlistCover, setPlaylistCover] = useState(\"\");\r\n  const [authorsInputValue, setAuthorsInputValue] = useState(\"\");\r\n  const [allAuthors, setAllAuthors] = useState([]);\r\n  const [chosenAuthors, setChosenAuthors] = useState(\r\n    !currentUser.isAdmin\r\n      ? [\r\n          {\r\n            uid: currentUser.uid,\r\n            photoURL: currentUser.photoURL,\r\n            displayName: currentUser.displayName,\r\n          },\r\n        ]\r\n      : []\r\n  );\r\n  const [releaseDate, setReleaseDate] = useState(\r\n    currentUser.isAdmin ? \"\" : new Date().toString()\r\n  );\r\n  const [songsSearch, setSongsSearch] = useState(\"\");\r\n  const [allSongs, setAllSongs] = useState([]);\r\n  const [chosenSongs, setChosenSongs] = useState([]);\r\n  const [playlistStatus, setPlaylistStatus] = useState(0);\r\n  const [isPlaylistPrivate, setIsPlaylistPrivate] = useState(0);\r\n  const [imageLocalPath, setImageLocalPath] = useState(\"\");\r\n  const [imageColors, setImageColors] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [loadingPlaylist, setLoadingPlaylist] = useState(false);\r\n  const [completed, setCompleted] = useState(false);\r\n\r\n  function removeAuthorFromList(data) {\r\n    const filtered = chosenAuthors.filter((people) => people.uid !== data.uid);\r\n    return setChosenAuthors(filtered);\r\n  }\r\n\r\n  function removeSongFromList(data) {\r\n    const filtered = chosenSongs.filter((song) => song !== data);\r\n    return setChosenSongs(filtered);\r\n  }\r\n\r\n  function addAuthor(data) {\r\n    if (!chosenAuthors.some((person) => person.uid === data.uid)) {\r\n      return setChosenAuthors((prev) => [\r\n        ...prev,\r\n        {\r\n          uid: data.uid,\r\n          displayName: data.displayName,\r\n          photoURL: data.photoURL,\r\n        },\r\n      ]);\r\n    }\r\n\r\n    removeAuthorFromList(data);\r\n  }\r\n\r\n  async function addPlaylistToFirebase(e) {\r\n    e.preventDefault();\r\n    const uid = getUID();\r\n    if (playlistName.length === 0)\r\n      setErrorMessage(\"Playlist has to have some name\");\r\n    else if (chosenAuthors.length === 0)\r\n      setErrorMessage(\"Playlist has to have at least 1 author\");\r\n    else if (releaseDate.length === 0)\r\n      setErrorMessage(\"You have to set release date for a playlist\");\r\n    else {\r\n      setLoadingPlaylist(true);\r\n      firestore\r\n        .collection(\"playlists\")\r\n        .doc(uid)\r\n        .set({\r\n          id: uid,\r\n          name: playlistName,\r\n          songs: chosenSongs,\r\n          authors: chosenAuthors,\r\n          image: playlistCover,\r\n          listens: 0,\r\n          creationDate: releaseDate,\r\n          subscribers: 0,\r\n          isAlbum: playlistStatus === 1,\r\n          imageColors: imageColors,\r\n          isPrivate: isPlaylistPrivate === true,\r\n        })\r\n        .then(() => {\r\n          setAllAuthors([]);\r\n          setAuthorsInputValue(\"\");\r\n          setChosenAuthors([]);\r\n          setPlaylistCover(\"\");\r\n          setPlaylistName(\"\");\r\n          setReleaseDate(\"\");\r\n          setSongsSearch(\"\");\r\n          setChosenSongs([]);\r\n          setIsPlaylistPrivate(0);\r\n          setLoadingPlaylist(false);\r\n          setCompleted(true);\r\n        })\r\n        .catch((err) => {\r\n          setErrorMessage(err);\r\n          setLoadingPlaylist(false);\r\n        });\r\n\r\n      chosenAuthors.forEach(async (author) => {\r\n        const authorRef = await firestore\r\n          .collection(\"users\")\r\n          .doc(author.uid)\r\n          .get();\r\n        const authorData = authorRef.data();\r\n        const authorPlaylists = authorData.ownPlaylists;\r\n        authorPlaylists.push(uid);\r\n        firestore.collection(\"users\").doc(author.uid).update({\r\n          ownPlaylists: authorPlaylists,\r\n        });\r\n      });\r\n\r\n      firestore\r\n        .collection(\"search\")\r\n        .doc(uid)\r\n        .set({\r\n          place: \"playlists\",\r\n          uid: uid,\r\n          rank: 0,\r\n          variantsOfName: findVariationsOfName(playlistName),\r\n        });\r\n    }\r\n  }\r\n\r\n  return {\r\n    playlistName,\r\n    setPlaylistName,\r\n    imageLocalPath,\r\n    loadingPlaylist,\r\n    setImageColors,\r\n    authorsInputValue,\r\n    setAuthorsInputValue,\r\n    setAllAuthors,\r\n    chosenAuthors,\r\n    removeAuthorFromList,\r\n    allAuthors,\r\n    addAuthor,\r\n    songsSearch,\r\n    setSongsSearch,\r\n    setAllSongs,\r\n    setPlaylistStatus,\r\n    removeSongFromList,\r\n    chosenSongs,\r\n    allSongs,\r\n    setChosenSongs,\r\n    playlistStatus,\r\n    isPlaylistPrivate,\r\n    setIsPlaylistPrivate,\r\n    setPlaylistCover,\r\n    releaseDate,\r\n    setReleaseDate,\r\n    setImageLocalPath,\r\n    completed,\r\n    setCompleted,\r\n    addPlaylistToFirebase,\r\n    setChosenAuthors,\r\n  };\r\n};\r\n\r\nexport default useAddPlaylist;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { FiChevronLeft, FiChevronRight } from \"react-icons/fi\";\r\nimport { PersonTinyVerticalItem } from \"../atoms/person-tiny-vertical-item\";\r\nimport { firestore } from \"../../../../firebase\";\r\n\r\nexport const PersonTinyList = ({ data, title }) => {\r\n  const [listOfPeople, setListOfPeople] = useState([]);\r\n  const [scrollLeft, setScrollLeft] = useState(0);\r\n  const wrapperRef = useRef(null);\r\n  const [shouldRenderRightArrow, setShouldRenderRightArrow] = useState(false);\r\n  function scrollToLeft() {\r\n    const prev = wrapperRef.current.scrollLeft;\r\n    wrapperRef.current.scrollLeft = prev - 200;\r\n    setScrollLeft(prev - 200);\r\n  }\r\n  function scrollToRight() {\r\n    const prev = wrapperRef.current.scrollLeft;\r\n    wrapperRef.current.scrollLeft = prev + 200;\r\n    setScrollLeft(prev + 200);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (listOfPeople.length > 0) {\r\n      const scrollBiggerThanScreen =\r\n        wrapperRef.current.scrollWidth > wrapperRef.current.offsetWidth;\r\n      if (scrollBiggerThanScreen) setShouldRenderRightArrow(true);\r\n    }\r\n  }, [listOfPeople]);\r\n\r\n  function fetchFriends() {\r\n    setListOfPeople([]);\r\n    data.friends.forEach(async (personObj) => {\r\n      if (personObj.status === \"added\") {\r\n        const personData = (\r\n          await firestore.collection(\"users\").doc(personObj.uid).get()\r\n        ).data();\r\n        setListOfPeople((prev) => [...prev, personData]);\r\n      }\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    setListOfPeople([]);\r\n    fetchFriends();\r\n  }, [data.uid]);\r\n  return listOfPeople.length > 0 ? (\r\n    <div className=\"PersonTinyList\">\r\n      {title && <h2>{title}</h2>}\r\n      <div style={{ position: \"relative\" }}>\r\n        <div\r\n          className=\"personTinyListWrapper\"\r\n          ref={wrapperRef}\r\n          onScroll={(e) => setScrollLeft(e.target.scrollLeft)}\r\n        >\r\n          {listOfPeople.map((person, index) => {\r\n            return <PersonTinyVerticalItem person={person} key={person.uid} />;\r\n          })}\r\n        </div>\r\n        <div className=\"authorsShiftButtons\">\r\n          <button\r\n            onClick={scrollToLeft}\r\n            style={\r\n              scrollLeft <= 0 ? { visibility: \"hidden\", opacity: \"0\" } : {}\r\n            }\r\n          >\r\n            <FiChevronLeft />\r\n          </button>\r\n          <button\r\n            onClick={scrollToRight}\r\n            style={\r\n              shouldRenderRightArrow &&\r\n              wrapperRef.current &&\r\n              wrapperRef.current.scrollWidth -\r\n                wrapperRef.current.offsetWidth !==\r\n                scrollLeft\r\n                ? {}\r\n                : { visibility: \"hidden\", opacity: \"0\" }\r\n            }\r\n          >\r\n            <FiChevronRight />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { ColorExtractor } from \"react-color-extractor\";\r\nimport { FiXCircle } from \"react-icons/fi\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { SongItem } from \"../../../../entities/song/ui/song-item\";\r\nimport { PersonTiny } from \"../../../../entities/user/ui/organisms/person-tiny\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport { findVariationsOfName } from \"../../../../shared/lib/find-variations-of-name\";\r\nimport getUID from \"../../../../shared/lib/get-uid\";\r\nimport DownloadButton from \"../../../../shared/ui/atoms/download-button\";\r\nimport Input from \"../../../../shared/ui/atoms/input\";\r\nimport { RadioBtn } from \"../../../../shared/ui/atoms/radio-button\";\r\nimport SubmitButton from \"../../../../shared/ui/atoms/submit-button\";\r\nimport SearchBar from \"../../../../shared/ui/organisms/search-bar\";\r\nimport { FullScreenLoading } from \"../../../loading/ui/atoms/full-screen-loading\";\r\nimport useAddPlaylist from \"../../lib/hooks/use-add-playlist\";\r\nimport { PersonTinyList } from \"../templates/person-tiny-list\";\r\nimport { TinyPersonsList } from \"../templates/tiny-persons-list\";\r\n\r\nexport const AddPlaylist = () => {\r\n  const { currentUser } = useAuth();\r\n  const { yourFriends } = useSong();\r\n\r\n  const {\r\n    playlistName,\r\n    setPlaylistName,\r\n    imageLocalPath,\r\n    loadingPlaylist,\r\n    setImageColors,\r\n    authorsInputValue,\r\n    setAuthorsInputValue,\r\n    setAllAuthors,\r\n    chosenAuthors,\r\n    removeAuthorFromList,\r\n    allAuthors,\r\n    addAuthor,\r\n    songsSearch,\r\n    setSongsSearch,\r\n    setAllSongs,\r\n    setPlaylistStatus,\r\n    removeSongFromList,\r\n    chosenSongs,\r\n    allSongs,\r\n    setChosenSongs,\r\n    playlistStatus,\r\n    isPlaylistPrivate,\r\n    setIsPlaylistPrivate,\r\n    setPlaylistCover,\r\n    releaseDate,\r\n    setReleaseDate,\r\n    setImageLocalPath,\r\n    completed,\r\n    setCompleted,\r\n    addPlaylistToFirebase,\r\n    setChosenAuthors,\r\n  } = useAddPlaylist();\r\n\r\n  return (\r\n    <div className=\"AddSong\">\r\n      <FullScreenLoading loading={loadingPlaylist} />\r\n      <ColorExtractor\r\n        src={imageLocalPath}\r\n        getColors={(colors) => setImageColors(colors)}\r\n      />\r\n      <div>\r\n        <Input\r\n          title={\"Playlist name\"}\r\n          value={playlistName}\r\n          setValue={setPlaylistName}\r\n          placeholder={\"Enter playlist name\"}\r\n        />\r\n        <label>\r\n          <h3>Playlist authors</h3>\r\n          <SearchBar\r\n            value={authorsInputValue}\r\n            setValue={setAuthorsInputValue}\r\n            setResultAuthorList={setAllAuthors}\r\n            defaultSearchMode={\"authors\"}\r\n            defaultAuthorsListValue={yourFriends}\r\n            inputText={\"Search for authors\"}\r\n          />\r\n          <TinyPersonsList\r\n            listOfPeople={allAuthors}\r\n            restriction={3}\r\n            chosenArray={chosenAuthors}\r\n            setChosenArray={setChosenAuthors}\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          <h3>Search for songs</h3>\r\n          <SearchBar\r\n            value={songsSearch}\r\n            setValue={setSongsSearch}\r\n            setAllFoundSongs={setAllSongs}\r\n            defaultSearchMode={\"songs\"}\r\n            inputText={\"Search for songs\"}\r\n          />\r\n          <div className=\"chosenAuthorsList\">\r\n            {chosenSongs.map((songId) => {\r\n              return (\r\n                <div className=\"chosenAuthorItem\">\r\n                  <span>{songId}</span>\r\n                  <FiXCircle onClick={() => removeSongFromList(songId)} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"authorsResult\">\r\n            {allSongs.map((data, index) => {\r\n              return (\r\n                <SongItem\r\n                  song={data}\r\n                  localIndex={index}\r\n                  listOfChosenSongs={chosenSongs}\r\n                  setListOfSongs={setChosenSongs}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </label>\r\n\r\n        {currentUser.isAdmin || currentUser.isAuthor ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-start\",\r\n              margin: \"15px 0\",\r\n            }}\r\n          >\r\n            <RadioBtn\r\n              label=\"Playlist\"\r\n              onClick={() => setPlaylistStatus(0)}\r\n              currentActive={playlistStatus}\r\n              id={0}\r\n            />\r\n            <RadioBtn\r\n              label=\"Album\"\r\n              onClick={() => setPlaylistStatus(1)}\r\n              currentActive={playlistStatus}\r\n              id={1}\r\n            />\r\n          </div>\r\n        ) : null}\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-start\",\r\n            margin: \"15px 0\",\r\n          }}\r\n        >\r\n          <RadioBtn\r\n            label=\"Not Private\"\r\n            onClick={() => setIsPlaylistPrivate(0)}\r\n            currentActive={isPlaylistPrivate}\r\n            id={0}\r\n          />\r\n          <RadioBtn\r\n            label=\"Private\"\r\n            onClick={() => setIsPlaylistPrivate(1)}\r\n            currentActive={isPlaylistPrivate}\r\n            id={1}\r\n          />\r\n        </div>\r\n\r\n        {(currentUser.isAdmin || currentUser.isAuthor) && (\r\n          <Input\r\n            title={\"Release Date\"}\r\n            type={\"date\"}\r\n            value={releaseDate}\r\n            setValue={setReleaseDate}\r\n            placeholder={\"Enter release date\"}\r\n          />\r\n        )}\r\n        <DownloadButton\r\n          text={\"Download playlist cover\"}\r\n          place={\"songsImages/\"}\r\n          setItemSrc={setPlaylistCover}\r\n          setImageLocalPath={setImageLocalPath}\r\n        />\r\n        <SubmitButton\r\n          text={\"Add playlists\"}\r\n          action={addPlaylistToFirebase}\r\n          isLoading={loadingPlaylist}\r\n          completed={completed}\r\n          setCompleted={setCompleted}\r\n          bottomMessage={\"Playlist was uploaded to database\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { ColorExtractor } from \"react-color-extractor\";\r\nimport { FiXCircle } from \"react-icons/fi\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { PersonTiny } from \"../../../../entities/user/ui/organisms/person-tiny\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport { transformLyricsToArrayOfObjects } from \"../../../full-screen-player/lib/transform-lyrics-to-array-of-object\";\r\nimport { findVariationsOfName } from \"../../../../shared/lib/find-variations-of-name\";\r\nimport getUID from \"../../../../shared/lib/get-uid\";\r\nimport DownloadButton from \"../../../../shared/ui/atoms/download-button\";\r\nimport Input from \"../../../../shared/ui/atoms/input\";\r\nimport SubmitButton from \"../../../../shared/ui/atoms/submit-button\";\r\nimport SearchBar from \"../../../../shared/ui/organisms/search-bar\";\r\nimport { FullScreenLoading } from \"../../../loading/ui/atoms/full-screen-loading\";\r\n\r\nexport const AddSong = () => {\r\n  const { currentUser } = useAuth();\r\n  const [songName, setSongName] = useState(\"\");\r\n  const [songCover, setSongCover] = useState(\"\");\r\n  const [songSrc, setSongSrc] = useState(\"\");\r\n  const [authorsInputValue, setAuthorsInputValue] = useState(\"\");\r\n  const [allAuthors, setAllAuthors] = useState([]);\r\n  const [chosenAuthors, setChosenAuthors] = useState(\r\n    !currentUser.isAdmin\r\n      ? [\r\n          {\r\n            uid: currentUser.uid,\r\n            photoURL: currentUser.photoURL,\r\n            displayName: currentUser.displayName,\r\n          },\r\n        ]\r\n      : []\r\n  );\r\n  const [releaseDate, setReleaseDate] = useState(\"\");\r\n  const [lyrics, setLyrics] = useState(\"\");\r\n  const [imageLocalPath, setImageLocalPath] = useState(\"\");\r\n  const [imageColors, setImageColors] = useState([]);\r\n  const [loadingAuthors, setLoadingAuthors] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [completed, setCompleted] = useState(false);\r\n  const [loadingSong, setLoadingSong] = useState(false);\r\n\r\n  function removeAuthorFromList(data) {\r\n    const filtered = chosenAuthors.filter((people) => people.uid !== data.uid);\r\n    return setChosenAuthors(filtered);\r\n  }\r\n\r\n  function addAuthor(data) {\r\n    if (!chosenAuthors.some((person) => person.uid === data.uid)) {\r\n      return setChosenAuthors((prev) => [\r\n        ...prev,\r\n        {\r\n          uid: data.uid,\r\n          displayName: data.displayName,\r\n          photoURL: data.photoURL,\r\n        },\r\n      ]);\r\n    }\r\n\r\n    removeAuthorFromList(data);\r\n  }\r\n\r\n  async function addSongToFirebase(e) {\r\n    e.preventDefault();\r\n\r\n    let uid = getUID();\r\n    setErrorMessage(\"\");\r\n    if (songName.length === 0) setErrorMessage(\"Song has to have some name\");\r\n    else if (chosenAuthors.length === 0)\r\n      setErrorMessage(\"Song has to have at least 1 author\");\r\n    else if (songCover.length === 0)\r\n      setErrorMessage(\"You didn't load song cover\");\r\n    else if (songSrc.length === 0) setErrorMessage(\"You didn't load song file\");\r\n    else if (releaseDate.length === 0)\r\n      setErrorMessage(\"You have to set release date for a song\");\r\n    else {\r\n      setLoadingSong(true);\r\n      firestore\r\n        .collection(\"songs\")\r\n        .doc(uid)\r\n        .set({\r\n          id: uid,\r\n          name: songName,\r\n          songSrc: songSrc,\r\n          authors: chosenAuthors,\r\n          cover: songCover,\r\n          listens: 0,\r\n          releaseDate: releaseDate,\r\n          lyrics: transformLyricsToArrayOfObjects(lyrics),\r\n          imageColors: imageColors,\r\n        })\r\n        .then(() => {\r\n          setAllAuthors([]);\r\n          setAuthorsInputValue(\"\");\r\n          setChosenAuthors([]);\r\n          setLyrics([]);\r\n          setSongCover(\"\");\r\n          setSongName(\"\");\r\n          setSongSrc(\"\");\r\n          setReleaseDate(\"\");\r\n          setLyrics([]);\r\n          setCompleted(true);\r\n          setImageColors([]);\r\n          setLoadingSong(false);\r\n        })\r\n        .catch((err) => {\r\n          setErrorMessage(err);\r\n          setLoadingSong(false);\r\n        });\r\n\r\n      chosenAuthors.forEach(async (author) => {\r\n        const authorRef = await firestore\r\n          .collection(\"users\")\r\n          .doc(author.uid)\r\n          .get();\r\n        const authorData = authorRef.data();\r\n        const authorSongs = authorData.ownSongs;\r\n        authorSongs.push(uid);\r\n        firestore.collection(\"users\").doc(author.uid).update({\r\n          ownSongs: authorSongs,\r\n        });\r\n      });\r\n\r\n      firestore\r\n        .collection(\"search\")\r\n        .doc(uid)\r\n        .set({\r\n          place: \"songs\",\r\n          uid: uid,\r\n          rank: 0,\r\n          variantsOfName: findVariationsOfName(songName),\r\n        });\r\n    }\r\n  }\r\n\r\n  function manuallyChangeColor(e, i) {\r\n    imageColors[i] = e.target.value;\r\n    setImageColors([...imageColors]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"AddSong\">\r\n      <FullScreenLoading loading={loadingSong} />\r\n      <ColorExtractor\r\n        src={imageLocalPath}\r\n        getColors={(colors) => setImageColors(colors)}\r\n      />\r\n      <div>\r\n        <Input\r\n          title={\"Song name\"}\r\n          value={songName}\r\n          setValue={setSongName}\r\n          placeholder={\"Enter song name\"}\r\n        />\r\n        <label>\r\n          <h3>Song authors</h3>\r\n          <SearchBar\r\n            value={authorsInputValue}\r\n            setValue={setAuthorsInputValue}\r\n            setResultAuthorList={setAllAuthors}\r\n            defaultSearchMode={\"authors\"}\r\n            inputText={\"Search for authors\"}\r\n          />\r\n          <div className=\"chosenAuthorsList\">\r\n            {chosenAuthors.map((author) => {\r\n              return (\r\n                <div className=\"chosenAuthorItem\">\r\n                  <span>{author.displayName}</span>\r\n                  <FiXCircle\r\n                    onClick={() => {\r\n                      if (currentUser.isAdmin) removeAuthorFromList(author);\r\n                      else if (author.uid !== currentUser.uid)\r\n                        removeAuthorFromList(author);\r\n                    }}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"authorsResult\">\r\n            {allAuthors.map((data, index) => {\r\n              return (\r\n                <PersonTiny\r\n                  data={data}\r\n                  onClick={() => addAuthor(data)}\r\n                  style={\r\n                    chosenAuthors.includes(data.uid)\r\n                      ? { background: \"var(--green)\" }\r\n                      : {}\r\n                  }\r\n                  key={index}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </label>\r\n\r\n        <Input\r\n          title={\"Release Date\"}\r\n          type={\"date\"}\r\n          value={releaseDate}\r\n          setValue={setReleaseDate}\r\n          placeholder={\"Enter release date\"}\r\n        />\r\n\r\n        <div style={{ width: \"100%\", display: \"flex\" }}>\r\n          {imageColors.map((color, index) => {\r\n            return (\r\n              <input\r\n                type=\"color\"\r\n                value={color}\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"60px\",\r\n                  padding: \"0\",\r\n                  borderRadius: \"0px\",\r\n                }}\r\n                onChange={(e) => {\r\n                  manuallyChangeColor(e, index);\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <DownloadButton\r\n          text={\"Download song cover\"}\r\n          place={\"songsImages/\"}\r\n          setItemSrc={setSongCover}\r\n          setImageLocalPath={setImageLocalPath}\r\n        />\r\n        <DownloadButton\r\n          text={\"Download song file\"}\r\n          place={\"songs/\"}\r\n          setItemSrc={setSongSrc}\r\n        />\r\n        <label>\r\n          <textarea\r\n            name=\"\"\r\n            id=\"\"\r\n            placeholder={\"Add song lyrics\"}\r\n            value={lyrics}\r\n            onChange={(e) => setLyrics(e.target.value)}\r\n          ></textarea>\r\n        </label>\r\n        <SubmitButton\r\n          text={\"Add song\"}\r\n          action={addSongToFirebase}\r\n          isLoading={loadingSong}\r\n          completed={completed}\r\n          setCompleted={setCompleted}\r\n          bottomMessage={\"Song was uploaded to database\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nexport const Slider = ({pages, currentPage, setCurrentPage}) => {\r\n\treturn (\r\n\t\t<div className = \"Slider\">\r\n\t\t\t{pages.map((pageName, index)=>{\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className = {\"sliderItem \" + (index === currentPage?\"current\":\"\")} key = {index} onClick = {()=>setCurrentPage(index)}>\r\n\t\t\t\t\t\t{pageName}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { FiPlus } from \"react-icons/fi\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { AddPlaylist } from \"../organisms/add-playlist\";\r\nimport { AddSong } from \"../organisms/add-song\";\r\nimport { Slider } from \"../../../../shared/ui/molecules/slider\";\r\n\r\nexport const AddWindow = ({ data }) => {\r\n  const { currentUser } = useAuth();\r\n  const [openAddSongWindow, setOpenAddSongWindow] = useState(false);\r\n  const [currentSliderPage, setCurrentSliderPage] = useState(0);\r\n  const sliderPages = [<AddSong />, <AddPlaylist />];\r\n  return (currentUser.isAdmin || data.isAuthor) &&\r\n    data.uid === currentUser.uid ? (\r\n    <div className=\"AddSong\">\r\n      <button\r\n        onClick={() => setOpenAddSongWindow(!openAddSongWindow)}\r\n        style={openAddSongWindow ? { background: \"var(--red)\" } : {}}\r\n        className=\"openAddSongWindowBtn\"\r\n      >\r\n        <FiPlus\r\n          style={openAddSongWindow ? { transform: \"rotate(45deg)\" } : {}}\r\n        />\r\n      </button>\r\n      <div\r\n        className=\"addSongWindow\"\r\n        style={openAddSongWindow ? { display: \"flex\" } : {}}\r\n      >\r\n        <Slider\r\n          pages={[\"Song\", \"Playlist\"]}\r\n          currentPage={currentSliderPage}\r\n          setCurrentPage={setCurrentSliderPage}\r\n        />\r\n        {sliderPages[currentSliderPage]}\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useRouteMatch } from \"react-router\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Header } from \"../../features/template-header/header\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\nimport { useModal } from \"../../contexts/modal\";\r\nimport { FriendRequest } from \"../../features/author/ui/molecules/friend-request\";\r\nimport { TopSongs } from \"../../features/author/ui/molecules/top-songs\";\r\nimport { Playlists } from \"../../features/author/ui/organisms/playlists\";\r\nimport { SimilarArtists } from \"../../features/author/ui/organisms/similar-artists\";\r\nimport { AddWindow } from \"../../features/author/ui/templates/add-window\";\r\nimport { PersonTinyList } from \"../../features/author/ui/templates/person-tiny-list\";\r\nimport { LoadingCircle } from \"../../features/loading/ui/atoms/loading-circle\";\r\nimport { firestore } from \"../../firebase\";\r\nimport { ContentContainer } from \"../../shared/ui/atoms/content-container\";\r\nimport \"./style.css\";\r\n\r\nconst AuthorPage = () => {\r\n  const match = useRouteMatch(\"/authors/:authorId\");\r\n  const { currentUser } = useAuth();\r\n  const [headerColors, setHeaderColors] = useState([]);\r\n  const { authorId } = match.params;\r\n  const [authorsData, setAuthorsData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const history = useHistory();\r\n  const { openBottomMessage } = useModal();\r\n  async function fetchAuthorsData() {\r\n    const response = firestore.collection(\"users\").doc(authorId);\r\n    response\r\n      .get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          setAuthorsData(doc.data());\r\n          setHeaderColors(doc.data().imageColors);\r\n          setLoading(false);\r\n        } else {\r\n          history.push(\"/not-found\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        openBottomMessage(\"Failed to load author's data\", \"failure\");\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchAuthorsData();\r\n  }, [authorId]);\r\n  return (\r\n    <>\r\n      <div className=\"AuthorPage\" style={{ animation: \"zoomIn .2s forwards\" }}>\r\n        {loading ? (\r\n          <LoadingCircle />\r\n        ) : (\r\n          <>\r\n            <Header\r\n              data={authorsData}\r\n              headerColors={headerColors}\r\n              setHeaderColors={setHeaderColors}\r\n            />\r\n            <ContentContainer\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                minHeight: \"100%\",\r\n                borderRadius: \"25px 25px 0 0\",\r\n                flex: \"auto\",\r\n                position: \"relative\",\r\n                overflow: \"hidden\",\r\n                boxShadow: \"0px 0px 100px #060606\",\r\n              }}\r\n            >\r\n              <div\r\n                className=\"content-background\"\r\n                style={{\r\n                  background: `linear-gradient(360deg, black, ${headerColors[0]})`,\r\n                }}\r\n              ></div>\r\n              {currentUser.uid === authorsData.uid ? <FriendRequest /> : null}\r\n              <AddWindow data={authorsData} />\r\n              <TopSongs\r\n                author={authorId}\r\n                authorsData={authorsData}\r\n                headerColors={headerColors}\r\n              />\r\n              {authorsData.friends && !authorsData.isAuthor && (\r\n                <PersonTinyList data={authorsData} title={\"Friends\"} />\r\n              )}\r\n              <Playlists\r\n                authorsData={authorsData}\r\n                headerColors={headerColors}\r\n              />\r\n              {authorsData.isAuthor ? (\r\n                <SimilarArtists data={authorsData} />\r\n              ) : null}\r\n            </ContentContainer>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthorPage;\r\n","import React from \"react\";\r\nexport const AmountOfUnseenMessages = ({ amountOfUnseen }) => {\r\n  return (\r\n    amountOfUnseen !== 0 && (\r\n      <div className=\"AmountOfUnseenMessages\">{amountOfUnseen}</div>\r\n    )\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nexport const SeenByCircle = ({listOfSeen}) => {\r\n\treturn (\r\n\t\t<div className = \"SeenByCircle\" style = {listOfSeen !== undefined? listOfSeen.length <= 1?{opacity:'1', visibility:'visible'}:{}:null}></div>\r\n\t)\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { SmallImages } from \"../../../album/ui/atoms/small-images\";\r\nexport const TypingAnimation = ({ typingPeople }) => {\r\n  const [typingPeopleData, setTypingPeopleData] = useState([]);\r\n  const { currentUser } = useAuth();\r\n  useEffect(() => {\r\n    setTypingPeopleData([]);\r\n    typingPeople.map(async (personId) => {\r\n      const personData = (\r\n        await firestore.collection(\"users\").doc(personId).get()\r\n      ).data();\r\n      if (personData.uid !== currentUser.uid)\r\n        setTypingPeopleData((prev) => [...prev, personData]);\r\n    });\r\n  }, [typingPeople]);\r\n  return typingPeopleData.length > 0 ? (\r\n    <div className=\"typingWrapper\">\r\n      <SmallImages\r\n        imagesList={typingPeopleData.map((person) => person.photoURL)}\r\n        borderColor={\"var(--navItemColor)\"}\r\n      />\r\n      <div className=\"TypingAnimation\">\r\n        <span className=\"typingCircle\"></span>\r\n        <span className=\"typingCircle\"></span>\r\n        <span className=\"typingCircle\"></span>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BiAlbum } from \"react-icons/bi\";\r\nimport { BsDot } from \"react-icons/bs\";\r\nimport { FiMusic, FiUser } from \"react-icons/fi\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { SeenByCircle } from \"../../../dialogue/ui/atoms/seen-by-circle\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport { TypingAnimation } from \"../../../dialogue/ui/atoms/typing-animation\";\r\nimport getShortString from \"../../../../shared/lib/get-short-string\";\r\n\r\nexport const LastSentMessage = ({\r\n  sender,\r\n  isGroup,\r\n  message,\r\n  showUnseenCircle = false,\r\n  messageLen = 30,\r\n  chatId,\r\n  typing = false,\r\n}) => {\r\n  const { currentUser } = useAuth();\r\n  const [lastAttachedItem, setLastAttachedItem] = useState(\"\");\r\n  const [shouldPutDot, setShouldPutDot] = useState(false);\r\n  const [lastMessage, setLastMessage] = useState(\"\");\r\n  const messageIcons = [null, <FiMusic />, <BiAlbum />, <FiUser />];\r\n  const [lastIcon, setLastIcon] = useState(0);\r\n\r\n  async function findWhatToWriteUnderName() {\r\n    setLastMessage(\"\");\r\n    if (message !== undefined) {\r\n      const lastAttachedItem = message;\r\n      setLastMessage((str) => (str += lastAttachedItem.message));\r\n      setShouldPutDot(lastAttachedItem.message.length !== 0);\r\n      if (lastAttachedItem.attachedSongs.length) {\r\n        const songName = (\r\n          await firestore\r\n            .collection(\"songs\")\r\n            .doc(lastAttachedItem.attachedSongs[0])\r\n            .get()\r\n        ).data().name;\r\n        setLastIcon(1);\r\n        setLastAttachedItem((str) => (str += songName));\r\n      }\r\n      if (lastAttachedItem.attachedAlbums.length) {\r\n        const playlistName = await firestore\r\n          .collection(\"playlists\")\r\n          .doc(lastAttachedItem.attachedAlbums[0])\r\n          .get();\r\n        if (playlistName.exists)\r\n          setLastAttachedItem((str) => (str += playlistName.data().name));\r\n        else setLastAttachedItem((str) => (str += \"Deleted Album \"));\r\n        setLastIcon(2);\r\n      }\r\n      if (lastAttachedItem.attachedAuthors.length) {\r\n        const authorName = (\r\n          await firestore\r\n            .collection(\"users\")\r\n            .doc(lastAttachedItem.attachedAuthors[0])\r\n            .get()\r\n        ).data().displayName;\r\n        setLastIcon(3);\r\n        setLastAttachedItem((str) => (str += authorName));\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    findWhatToWriteUnderName();\r\n  }, [message.id]);\r\n  return !typing ? (\r\n    <div className=\"messageShowOutside\">\r\n      <span\r\n        style={\r\n          message.sender === currentUser.uid || (!!sender && isGroup)\r\n            ? { marginRight: \"5px\" }\r\n            : {}\r\n        }\r\n      >\r\n        {\" \"}\r\n        {`${\r\n          message.sender === currentUser.uid\r\n            ? \"You: \"\r\n            : isGroup\r\n            ? sender\r\n              ? sender.displayName + \": \"\r\n              : \"\"\r\n            : \"\"\r\n        }`}\r\n      </span>\r\n      {getShortString(lastMessage, messageLen)}\r\n      {shouldPutDot && lastAttachedItem.length ? <BsDot /> : null}\r\n      {messageIcons[lastIcon]}\r\n      {lastAttachedItem}\r\n      {showUnseenCircle && <SeenByCircle listOfSeen={message.seenBy} />}\r\n    </div>\r\n  ) : (\r\n    <TypingAnimation typingPeople={[sender.uid]} />\r\n  );\r\n};\r\n","export function amountOfUnseenMessages(messages, currentUser) {\r\n\treturn messages.reduce((accum, message) => {\r\n\t\tif (message.sender !== currentUser.uid) {\r\n\t\t\tif (message.seenBy !== undefined) {\r\n\t\t\t\tif (!message.seenBy.includes(currentUser.uid)) {\r\n\t\t\t\t\treturn ++accum\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn accum\r\n\t}, 0)\r\n}","import { useEffect, useState } from 'react'\r\nimport { firestore } from '../../../firebase'\r\n\r\nconst useUserOnline = (userUID) => {\r\n\tconst [isOnline, setIsOnline] = useState(false)\r\n\tuseEffect(() => {\r\n\t\tconst unsubscribe = firestore.collection('users').doc(userUID)\r\n\t\t\t.onSnapshot(doc => {\r\n\t\t\t\tif (userUID !== undefined) {\r\n\t\t\t\t\tconst fiveMinutesAgo = new Date().getTime() - 300000\r\n\t\t\t\t\tconst isOnline = doc.data().online > fiveMinutesAgo\r\n\t\t\t\t\tsetIsOnline(isOnline)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\treturn () => {\r\n\t\t\tunsubscribe()\r\n\t\t}\r\n\t}, [userUID])\r\n\r\n\treturn isOnline\r\n}\r\n\r\nexport default useUserOnline\r\n","import React from \"react\";\r\nimport useUserOnline from \"../../lib/hooks/use-user-online\";\r\n\r\nexport const IsOnlineCircle = ({ userUID }) => {\r\n  const isOnline = useUserOnline(userUID);\r\n\r\n  return isOnline ? <div className=\"onlineCircle\" /> : null;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { AmountOfUnseenMessages } from \"../atoms/amount-of-unseen-messages\";\r\nimport { firestore } from \"../../../../firebase\";\r\n\r\nimport { LastSentMessage } from \"../molecules/last-sent-message\";\r\nimport { amountOfUnseenMessages } from \"../../lib/amount-of-unseen-messages\";\r\nimport { IsOnlineCircle } from \"../../../../shared/ui/atoms/is-online-circle\";\r\nimport displayDate from \"../../../../shared/lib/display-date\";\r\n\r\nexport const ChatItem = ({ chatData }) => {\r\n  const { currentUser } = useAuth();\r\n  const { chatName, chatImage, participants } = chatData;\r\n  const [otherPerson, setOtherPerson] = useState({});\r\n  const [amountOfUnseen, setAmountOfUnseen] = useState(0);\r\n  const [messages, setMessages] = useState(chatData.messages);\r\n  const [typing, setTyping] = useState(false);\r\n\r\n  useEffect(() => {\r\n    firestore\r\n      .collection(\"chats\")\r\n      .doc(chatData.id)\r\n      .onSnapshot((snapshot) => {\r\n        setMessages(snapshot.data().messages);\r\n        setTyping(!!snapshot.data().typing.length);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setAmountOfUnseen(amountOfUnseenMessages(messages, currentUser));\r\n  }, []);\r\n\r\n  async function fetchOtherPerson() {\r\n    if (!chatName) {\r\n      const otherPersonId = participants.find(\r\n        (personId) => personId !== currentUser.uid\r\n      );\r\n      const person = (\r\n        await firestore.collection(\"users\").doc(otherPersonId).get()\r\n      ).data();\r\n      setOtherPerson(person);\r\n    } else {\r\n      const otherPersonId = messages[messages.length - 1]?.sender;\r\n      const person = (\r\n        await firestore.collection(\"users\").doc(otherPersonId).get()\r\n      ).data();\r\n      setOtherPerson(person);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchOtherPerson();\r\n  }, []);\r\n  return chatData ? (\r\n    <Link to={`/chat/${chatData.id}`}>\r\n      <div className={\"ChatItem \" + (amountOfUnseen > 0 ? \"unseen\" : \"\")}>\r\n        <div className=\"chatItemImage\">\r\n          <img loading=\"lazy\" src={chatImage || otherPerson.photoURL} alt=\"\" />\r\n        </div>\r\n        {!chatName && <IsOnlineCircle userUID={otherPerson.uid} />}\r\n        <div style={{ width: \"100%\" }}>\r\n          <h4\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <span>{chatName || otherPerson.displayName}</span>\r\n            <div>\r\n              {messages.length ? (\r\n                <span\r\n                  style={{ opacity: \".6\", fontWeight: \"500\", fontSize: \".8em\" }}\r\n                >\r\n                  {displayDate(\r\n                    messages[messages.length - 1].sentTime,\r\n                    chatData &&\r\n                      Date.now() -\r\n                        new Date(\r\n                          messages[messages.length - 1].sentTime\r\n                        ).getTime() >\r\n                        86000000\r\n                      ? 0\r\n                      : 2\r\n                  )}\r\n                </span>\r\n              ) : null}\r\n              <AmountOfUnseenMessages amountOfUnseen={amountOfUnseen} />\r\n            </div>\r\n          </h4>\r\n          {messages.length ? (\r\n            <p\r\n              style={\r\n                messages[messages.length - 1].sender !== currentUser.uid\r\n                  ? { color: \"#fff\" }\r\n                  : {}\r\n              }\r\n            >\r\n              {\r\n                <LastSentMessage\r\n                  sender={otherPerson}\r\n                  isGroup={chatName.length}\r\n                  message={messages[messages.length - 1]}\r\n                  showUnseenCircle\r\n                  typing={typing}\r\n                />\r\n              }\r\n            </p>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  ) : null;\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { createChat } from \"../../../../shared/lib/create-—Åhat\";\r\nimport { findChatURL } from \"../../../../shared/lib/find-chat-url\";\r\nimport getUID from \"../../../../shared/lib/get-uid\";\r\n\r\nconst useCreateChat = () => {\r\n  const { currentUser } = useAuth();\r\n  const { toggleModal } = useModal();\r\n  const { yourFriends } = useSong();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [foundFriends, setFoundFriends] = useState(yourFriends);\r\n  const [chosenFriends, setChosenFriends] = useState([]);\r\n  const [chatCover, setChatCover] = useState(\"\");\r\n  const [chatName, setChatName] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const chatId = getUID();\r\n  const history = useHistory();\r\n  const [shouldCreate, setShouldCreate] = useState(false);\r\n  const [friendChatId, setFriendChatId] = useState(0);\r\n  const [allowedToCreate, setAllowedToCreate] = useState(false);\r\n  useEffect(() => {\r\n    if (chosenFriends.length >= 1) {\r\n      findChatURL(chosenFriends, currentUser, setShouldCreate, setFriendChatId);\r\n    }\r\n  }, [chosenFriends]);\r\n\r\n  useEffect(() => {\r\n    if (chatName.length === 0 || chosenFriends.length === 0) {\r\n      setAllowedToCreate(false);\r\n    } else setAllowedToCreate(true);\r\n    setErrorMessage(\"\");\r\n  }, [chosenFriends.length, chatName]);\r\n\r\n  const handleCreateChat = () => {\r\n    if (shouldCreate) {\r\n      if (allowedToCreate) {\r\n        createChat(\r\n          [currentUser.uid, ...chosenFriends],\r\n          chatId,\r\n          chatName,\r\n          chatCover,\r\n          [currentUser.uid]\r\n        ).then(() => {\r\n          history.push(`/chat/${chatId}`);\r\n          toggleModal();\r\n        });\r\n      } else setErrorMessage(\"Chat has to have a name\");\r\n    } else {\r\n      history.push(`/chat/${friendChatId}`);\r\n      toggleModal();\r\n    }\r\n  };\r\n\r\n  return {\r\n    searchValue,\r\n    setSearchValue,\r\n    foundFriends,\r\n    setFoundFriends,\r\n    chosenFriends,\r\n    setChosenFriends,\r\n    chatName,\r\n    setChatName,\r\n    setChatCover,\r\n    handleCreateChat,\r\n    shouldCreate,\r\n    allowedToCreate,\r\n  };\r\n};\r\n\r\nexport default useCreateChat;\r\n","import React from \"react\";\r\nimport { TinyPersonsList } from \"../../../author/ui/templates/tiny-persons-list\";\r\nimport DownloadButton from \"../../../../shared/ui/atoms/download-button\";\r\nimport Input from \"../../../../shared/ui/atoms/input\";\r\nimport SubmitButton from \"../../../../shared/ui/atoms/submit-button\";\r\nimport SearchBar from \"../../../../shared/ui/organisms/search-bar\";\r\nimport useCreateChat from \"../../lib/hooks/use-create-chat\";\r\n\r\nexport const CreateChat = () => {\r\n  const {\r\n    searchValue,\r\n    setSearchValue,\r\n    foundFriends,\r\n    setFoundFriends,\r\n    chosenFriends,\r\n    setChosenFriends,\r\n    chatName,\r\n    setChatName,\r\n    setChatCover,\r\n    handleCreateChat,\r\n    shouldCreate,\r\n    allowedToCreate,\r\n  } = useCreateChat();\r\n\r\n  return (\r\n    <div className=\"CreateChat\">\r\n      <SearchBar\r\n        value={searchValue}\r\n        setValue={setSearchValue}\r\n        setResultAuthorList={setFoundFriends}\r\n        focus\r\n        inputText={\"Search for friends\"}\r\n        defaultSearchMode={\"authors\"}\r\n      />\r\n      <TinyPersonsList\r\n        listOfPeople={foundFriends}\r\n        chosenArray={chosenFriends}\r\n        setChosenArray={setChosenFriends}\r\n        lastSeen\r\n      />\r\n      {chosenFriends.length > 1 && shouldCreate && (\r\n        <>\r\n          <Input\r\n            title=\"Chat name\"\r\n            value={chatName}\r\n            setValue={setChatName}\r\n            placeholder=\"Enter chat name\"\r\n          />\r\n          <DownloadButton\r\n            title={\"Chat image\"}\r\n            text={\"Download chat image\"}\r\n            place={\"chatCovers/\"}\r\n            setItemSrc={setChatCover}\r\n            setImageLocalPath={() => null}\r\n          />\r\n        </>\r\n      )}\r\n      <SubmitButton\r\n        text={shouldCreate ? \"Create Chat\" : \"Go to chat\"}\r\n        action={handleCreateChat}\r\n        isActive={\r\n          chosenFriends.length > 0 &&\r\n          ((shouldCreate && allowedToCreate) || !shouldCreate)\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import \"./style.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { FiPlus } from \"react-icons/fi\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\nimport { useModal } from \"../../contexts/modal\";\r\nimport { ChatItem } from \"../../features/chats/ui/organisms/chat-item\";\r\nimport { CreateChat } from \"../../features/chats/ui/organisms/create-chat\";\r\nimport { LoadingCircle } from \"../../features/loading/ui/atoms/loading-circle\";\r\nimport { fetchItemList } from \"../../shared/lib/fetch-item-list\";\r\nimport { ContentContainer } from \"../../shared/ui/atoms/content-container\";\r\n\r\nconst ChatPage = () => {\r\n  const [yourChats, setYourChats] = useState([]);\r\n  const { toggleModal, setContent } = useModal();\r\n  const { currentUser } = useAuth();\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    fetchItemList(\r\n      currentUser.chats,\r\n      \"chats\",\r\n      setYourChats,\r\n      (res) =>\r\n        res.sort((a, b) => {\r\n          if (a.messages.length && b.messages.length) {\r\n            return (\r\n              new Date(b.messages[b.messages.length - 1].sentTime).getTime() -\r\n              new Date(a.messages[a.messages.length - 1].sentTime).getTime()\r\n            );\r\n          }\r\n        }),\r\n      () => setLoading(false)\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ animation: \"zoomIn .2s forwards\", minHeight: \"100%\" }}>\r\n      <ContentContainer>\r\n        <div\r\n          style={{\r\n            marginBottom: \"10px\",\r\n            display: \"flex\",\r\n            alignItems: \"start\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <button\r\n            className=\"standartButton\"\r\n            onClick={() => {\r\n              toggleModal();\r\n              setContent(<CreateChat />);\r\n            }}\r\n          >\r\n            <FiPlus />\r\n            Create chat\r\n          </button>\r\n        </div>\r\n        {loading ? (\r\n          <LoadingCircle />\r\n        ) : (\r\n          <div className=\"chatsWrapper\">\r\n            {yourChats.length ? (\r\n              yourChats.map((chat, index) => {\r\n                return <ChatItem chatData={chat} key={index} />;\r\n              })\r\n            ) : (\r\n              <h3>No chats</h3>\r\n            )}\r\n          </div>\r\n        )}\r\n      </ContentContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n","import React from \"react\";\r\nimport displayDate from \"../../../../shared/lib/display-date\";\r\n\r\nexport const DateOnTop = ({ date }) => {\r\n  return <div className=\"DateOnTop\">{displayDate(date)}</div>;\r\n};\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useAuth } from '../../../../contexts/auth';\r\nimport { useModal } from '../../../../contexts/modal';\r\nimport { firestore } from '../../../../firebase';\r\n\r\nconst useChatHeader = (data) => {\r\n\tconst { currentUser } = useAuth();\r\n\r\n\tconst [otherPerson, setOtherPerson] = useState({});\r\n\tconst [headerColors, setHeaderColors] = useState(\r\n\t\t!!data.chatName ? [] : data.imageColors\r\n\t);\r\n\tasync function fetchOtherPerson() {\r\n\t\tconst otherPersonId = data.participants.find(\r\n\t\t\t(personId) => personId !== currentUser.uid\r\n\t\t);\r\n\t\tconst person = (\r\n\t\t\tawait firestore.collection(\"users\").doc(otherPersonId).get()\r\n\t\t).data();\r\n\t\tsetOtherPerson(person);\r\n\t\tsetHeaderColors(person.imageColors);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!data.chatName.length) {\r\n\t\t\tfetchOtherPerson();\r\n\t\t}\r\n\t}, [data.id]);\r\n\r\n\treturn [otherPerson, headerColors]\r\n}\r\n\r\nexport default useChatHeader\r\n","import { firestore } from \"../../../firebase\"\r\nimport { sendMessage } from \"./send-message\"\r\n\r\n\r\nconst leaveChat = async (chatId, user) => {\r\n\tconst chatData = (await firestore.collection('chats').doc(chatId).get()).data()\r\n\r\n\tconst newParticipants = chatData.participants.filter((participantId) => participantId !== user.uid)\r\n\tsendMessage(chatId, chatData, \"soundbubble\", `${user.displayName} left the chat`)\r\n\tfirestore.collection('chats').doc(chatId).update({\r\n\t\tparticipants: newParticipants\r\n\t})\r\n}\r\n\r\nexport default leaveChat","import React from \"react\";\r\nimport { FiLogOut, FiX } from \"react-icons/fi\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport Button from \"../../../../shared/ui/atoms/button\";\r\nimport { Hint } from \"../../../../shared/ui/atoms/hint\";\r\nimport leaveChat from \"../../lib/leave-chat\";\r\nimport { ChatInfo } from \"../organisms/chat-info\";\r\n\r\nconst LeaveChatButton = ({ chat, user }) => {\r\n  const { currentUser } = useAuth();\r\n  const { openConfirm, closeConfirm, setContent } = useModal();\r\n  const isCurrentUserLeaving = currentUser.uid === user.uid;\r\n  return (\r\n    <>\r\n      <Hint text={isCurrentUserLeaving ? \"quit chat\" : \"kick\"} />\r\n      <Button\r\n        onClick={() =>\r\n          openConfirm(\r\n            `Are you sure you want to ${\r\n              isCurrentUserLeaving ? \"leave\" : `kick ${user.displayName} `\r\n            } from this chat?`,\r\n            \"Yes\",\r\n            \"No\",\r\n            () => {\r\n              leaveChat(chat.id, user);\r\n              closeConfirm();\r\n              setContent(<ChatInfo data={chat} />);\r\n            }\r\n          )\r\n        }\r\n        icon={isCurrentUserLeaving ? <FiLogOut /> : <FiX />}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeaveChatButton;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { AlbumList } from \"../../../album/ui/template/album-list\";\r\nimport { AuthorsList } from \"../../../../features/author/ui/templates/authors-list\";\r\nimport { SongList } from \"../../../../features/song/ui/templates/song-list\";\r\nimport { LoadingCircle } from \"../../../loading/ui/atoms/loading-circle\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport { fetchItemList } from \"../../../../shared/lib/fetch-item-list\";\r\nimport { Slider } from \"../../../../shared/ui/molecules/slider\";\r\nexport const AttachmentList = ({ chatId }) => {\r\n  const [attachmentList, setAttachmentList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [sliderCurrentPage, setSliderCurrentPage] = useState(0);\r\n  const attachmentContent = [\r\n    <SongList\r\n      listOfSongs={attachmentList}\r\n      source={{\r\n        source: `/chat/${chatId}`,\r\n        name: `Chat with ${chatId}`,\r\n        image: \"\",\r\n        songsList: attachmentList,\r\n      }}\r\n    />,\r\n    <AuthorsList listOfAuthors={attachmentList} />,\r\n    <AlbumList listOfAlbums={attachmentList} loading={loading} />,\r\n  ];\r\n  async function fetchAttachedData(attachedType, firebaseCollection) {\r\n    const chatData = await firestore.collection(\"chats\").doc(chatId).get();\r\n    chatData.data().messages.forEach((message) => {\r\n      if (message[attachedType].length > 0) {\r\n        fetchItemList(\r\n          message[attachedType],\r\n          firebaseCollection,\r\n          setAttachmentList,\r\n          (res) => res,\r\n          () => setLoading(false),\r\n          undefined,\r\n          1\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    switch (sliderCurrentPage) {\r\n      case 0:\r\n        fetchAttachedData(\"attachedSongs\", \"songs\").then(() =>\r\n          setLoading(false)\r\n        );\r\n        break;\r\n      case 1:\r\n        fetchAttachedData(\"attachedAuthors\", \"users\").then(() =>\r\n          setLoading(false)\r\n        );\r\n        break;\r\n      case 2:\r\n        fetchAttachedData(\"attachedAlbums\", \"playlists\").then(() =>\r\n          setLoading(false)\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [sliderCurrentPage]);\r\n\r\n  useEffect(() => {\r\n    setAttachmentList([]);\r\n  }, [chatId]);\r\n\r\n  return (\r\n    <div className=\"AttachmentList\">\r\n      <Slider\r\n        pages={[\"Songs\", \"Authors\", \"Playlists\"]}\r\n        currentPage={sliderCurrentPage}\r\n        setCurrentPage={(page) => {\r\n          setSliderCurrentPage(page);\r\n          setLoading(true);\r\n          setAttachmentList([]);\r\n        }}\r\n      />\r\n      {loading ? (\r\n        <LoadingCircle />\r\n      ) : attachmentList.length > 0 ? (\r\n        attachmentContent[sliderCurrentPage]\r\n      ) : (\r\n        <h2>Nothing here</h2>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","const filterArrayOfObjectsWithArray = (whatToFilter, withWhatToFilter, filterParametr = 'uid', isInverted = true) => {\r\n\treturn isInverted ? whatToFilter.filter(\r\n\t\t(item) => !withWhatToFilter.includes(item[filterParametr])\r\n\t) : whatToFilter.filter(\r\n\t\t(item) => withWhatToFilter.includes(item[filterParametr])\r\n\t)\r\n}\r\n\r\nexport default filterArrayOfObjectsWithArray;","import { firestore } from \"../../../firebase\"\r\nimport { sendMessage } from \"./send-message\"\r\n\r\nconst addPeopleToChat = async (chatId, people, setLoading, setCompleted) => {\r\n\tsetLoading(true)\r\n\tsetCompleted(false)\r\n\tconst chatData = (await firestore.collection('chats').doc(chatId).get()).data()\r\n\tconst newParticipants = chatData.participants\r\n\tpeople.forEach(person => newParticipants.push(person.uid));\r\n\r\n\tfirestore.collection('chats').doc(chatId).update({\r\n\t\tparticipants: newParticipants\r\n\t})\r\n\r\n\tpeople.forEach(({ uid, chats }) => {\r\n\t\tfirestore.collection('users').doc(uid).update({\r\n\t\t\tchats: [...chats, chatId]\r\n\t\t})\r\n\t})\r\n\r\n\tsendMessage(chatId, chatData, \"soundbubble\", `${people.map(({ displayName }) => displayName)} entered the chat`)\r\n\tsetLoading(false)\r\n\tsetCompleted(true)\r\n}\r\n\r\nexport default addPeopleToChat","import React, { useState } from \"react\";\r\n\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport filterArrayOfObjectsWithArray from \"../../../../shared/lib/filter-array-of-objects-with-array\";\r\nimport SubmitButton from \"../../../../shared/ui/atoms/submit-button\";\r\nimport SearchBar from \"../../../../shared/ui/organisms/search-bar\";\r\nimport { TinyPersonsList } from \"../../../author/ui/templates/tiny-persons-list\";\r\nimport addPeopleToChat from \"../../lib/add-people-to-chat\";\r\n\r\nconst AddPeopleToChat = ({ chat }) => {\r\n  const { yourFriends } = useSong();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [foundFriends, setFoundFriends] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [completed, setCompleted] = useState(false);\r\n  const filteredFriends = filterArrayOfObjectsWithArray(\r\n    yourFriends,\r\n    chat.participants\r\n  );\r\n  const [chosenFriends, setChosenFriends] = useState([]);\r\n  return (\r\n    <div>\r\n      <SearchBar\r\n        value={searchValue}\r\n        setValue={setSearchValue}\r\n        setResultAuthorList={setFoundFriends}\r\n        defaultSearchMode=\"authors\"\r\n        defaultAuthorsListValue={filteredFriends}\r\n      />\r\n      <TinyPersonsList\r\n        listOfPeople={foundFriends}\r\n        chosenArray={chosenFriends}\r\n        setChosenArray={setChosenFriends}\r\n        lastSeen\r\n      />\r\n      {!!chosenFriends.length && (\r\n        <SubmitButton\r\n          text={`Add ${chosenFriends.length} friends`}\r\n          action={() =>\r\n            addPeopleToChat(\r\n              chat.id,\r\n              filterArrayOfObjectsWithArray(\r\n                yourFriends,\r\n                chosenFriends,\r\n                \"uid\",\r\n                false\r\n              ),\r\n              setLoading,\r\n              setCompleted\r\n            )\r\n          }\r\n          isLoading={loading}\r\n          completed={completed}\r\n          setCompleted={setCompleted}\r\n          bottomMessage={`${chosenFriends.length} friends have been added to ${chat.chatName}`}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPeopleToChat;\r\n","import { useEffect, useState } from \"react\";\r\nimport { ColorExtractor } from \"react-color-extractor\";\r\nimport { FiSettings, FiUserPlus } from \"react-icons/fi\";\r\nimport { ImAttachment } from \"react-icons/im\";\r\nimport { MdModeEdit } from \"react-icons/md\";\r\nimport { RiVolumeUpLine } from \"react-icons/ri\";\r\nimport { PersonTiny } from \"../../../../entities/user/ui/organisms/person-tiny\";\r\nimport { LoadingCircle } from \"../../../loading/ui/atoms/loading-circle\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { firestore, storage } from \"../../../../firebase\";\r\nimport { fetchItemList } from \"../../../../shared/lib/fetch-item-list\";\r\nimport getShortString from \"../../../../shared/lib/get-short-string\";\r\nimport Button from \"../../../../shared/ui/atoms/button\";\r\nimport Input from \"../../../../shared/ui/atoms/input\";\r\nimport { Slider } from \"../../../../shared/ui/molecules/slider\";\r\nimport LeaveChatButton from \"../atoms/leave-chat-button\";\r\nimport { AttachmentList } from \"../molecules/attachment-list\";\r\nimport AddPeopleToChat from \"./add-people-to-chat\";\r\n\r\nexport const ChatInfo = ({ data }) => {\r\n  const { currentUser } = useAuth();\r\n  const [participants, setParticipants] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [chatNameValue, setChatNameValue] = useState(data.chatName);\r\n  const [newChatPhoto, setNewChatPhoto] = useState(data.chatImage);\r\n  const [newImageLocalPath, setNewImageLocalPath] = useState(\"\");\r\n  const [newImageColors, setNewImageColors] = useState(data.imageColors || []);\r\n  const { setContent } = useModal();\r\n  const [participantsPage, setParticipantsPage] = useState(0);\r\n  const [showUpdateBtn, setShowUpdateBtn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchItemList(\r\n      data.participants,\r\n      \"users\",\r\n      setParticipants,\r\n      (res) => res,\r\n      () => setLoading(false)\r\n    );\r\n  }, [data.id]);\r\n  useEffect(() => {\r\n    if (\r\n      chatNameValue.trim() !== data.chatName.trim() ||\r\n      newChatPhoto !== data.chatImage\r\n    ) {\r\n      setShowUpdateBtn(true);\r\n    } else setShowUpdateBtn(false);\r\n  }, [chatNameValue, newChatPhoto]);\r\n\r\n  useEffect(() => {\r\n    setChatNameValue(data.chatName);\r\n  }, [data.id]);\r\n\r\n  useEffect(() => {\r\n    setChatNameValue(data.chatName);\r\n    setNewChatPhoto(data.chatImage);\r\n  }, [data.chatName, data.chatImage]);\r\n\r\n  function updateChatInfo() {\r\n    firestore.collection(\"chats\").doc(data.id).update({\r\n      chatName: chatNameValue,\r\n      chatImage: newChatPhoto,\r\n      imageColors: newImageColors,\r\n    });\r\n  }\r\n\r\n  async function onFileChange(e, place, setFunc) {\r\n    const file = e.target.files[0];\r\n    setNewImageLocalPath(URL.createObjectURL(file));\r\n    const storageRef = storage.ref();\r\n    const fileRef = storageRef.child(place + file.name);\r\n    await fileRef.put(file);\r\n    setFunc(await fileRef.getDownloadURL());\r\n  }\r\n  return (\r\n    <div className=\"ChatInfo\">\r\n      <ColorExtractor\r\n        src={newImageLocalPath}\r\n        getColors={(colors) => setNewImageColors(colors)}\r\n      />\r\n      <div className=\"chatInfoImageAndName\">\r\n        <div className=\"chatInfoImage\">\r\n          <label className=\"changePhoto\">\r\n            <MdModeEdit />\r\n            Change photo\r\n            <input\r\n              type=\"file\"\r\n              style={{ display: \"none\" }}\r\n              onChange={(e) => onFileChange(e, \"chatCovers/\", setNewChatPhoto)}\r\n            />\r\n          </label>\r\n          <img loading=\"lazy\" src={newChatPhoto} alt=\"\" />\r\n        </div>\r\n        <div>\r\n          <Input\r\n            value={chatNameValue}\r\n            setValue={setChatNameValue}\r\n            placeholder={\"Enter chat name\"}\r\n            required\r\n          />\r\n          <div className=\"chatInfoButtons\">\r\n            <button className=\"chatInfoButton\">\r\n              <FiSettings />\r\n              Settings\r\n            </button>\r\n            <button\r\n              className=\"chatInfoButton\"\r\n              onClick={() => setContent(<AttachmentList chatId={data.id} />)}\r\n            >\r\n              <ImAttachment />\r\n              {getShortString(\"Attachments\", 7)}\r\n            </button>\r\n            <button className=\"chatInfoButton\">\r\n              <RiVolumeUpLine />\r\n              Sound\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {showUpdateBtn ? (\r\n          <button className=\"standartButton\" onClick={updateChatInfo}>\r\n            Update Chat\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <h4>Chat participants</h4>\r\n        <Button\r\n          text={\"Add\"}\r\n          icon={<FiUserPlus />}\r\n          onClick={() => setContent(<AddPeopleToChat chat={data} />)}\r\n        />\r\n      </div>\r\n      <Slider\r\n        pages={[\"All participants\", \"Administrators\"]}\r\n        currentPage={participantsPage}\r\n        setCurrentPage={setParticipantsPage}\r\n      />\r\n      {!loading ? (\r\n        participants.map((person) => {\r\n          if (participantsPage === 1) {\r\n            if (data.admins.includes(person.uid))\r\n              return <PersonTiny data={person} key={person.uid} lastSeen />;\r\n          } else\r\n            return (\r\n              <PersonTiny\r\n                data={person}\r\n                key={person.uid}\r\n                lastSeen\r\n                rightButton={\r\n                  person.uid === currentUser.uid ? (\r\n                    <LeaveChatButton chat={data} user={currentUser} />\r\n                  ) : data.admins.includes(currentUser.uid) ? (\r\n                    <LeaveChatButton chat={data} user={person} />\r\n                  ) : null\r\n                }\r\n              />\r\n            );\r\n        })\r\n      ) : (\r\n        <LoadingCircle />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { firestore } from \"../../firebase\"\r\n\r\nconst fetchCollection = async (collection) => {\r\n\tconst docs = (await firestore.collection(collection).get()).docs.map((doc) => doc.data())\r\n\treturn docs\r\n}\r\n\r\nexport default fetchCollection","import React from \"react\";\r\nimport { firestore } from \"../../../../firebase\";\r\n\r\nexport const WallpaperItem = ({ chatId, image, currentWallpaper }) => {\r\n  function changeChatWallpaper() {\r\n    firestore.collection(\"chats\").doc(chatId).update({\r\n      wallpaper: image,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"WallpaperItem \" + (image === currentWallpaper ? \"active\" : \"\")\r\n      }\r\n      onClick={changeChatWallpaper}\r\n      style={\r\n        image === \"undefined\" ? { background: \"var(--playlistsColor)\" } : {}\r\n      }\r\n    >\r\n      {image !== \"undefined\" ? <img loading=\"lazy\" src={image} alt=\"\" /> : null}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { LoadingCircle } from \"../../../loading/ui/atoms/loading-circle\";\r\nimport fetchCollection from \"../../../../shared/lib/fetch-collection\";\r\nimport { WallpaperItem } from \"../atoms/wallpaper-item\";\r\n\r\nexport const Wallpapers = ({ chatId, currentWallpaper }) => {\r\n  const [wallpapers, setwallpapers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchCollection(\"chatWallpapers\").then((res) => setwallpapers(res));\r\n  }, []);\r\n\r\n  return !!wallpapers ? (\r\n    <div className=\"Wallpapers\">\r\n      <h2>Wallpapers</h2>\r\n      <div className=\"wallpapreWrapper\">\r\n        <WallpaperItem chatId={chatId} image={\"undefined\"} />\r\n        {wallpapers.map((wallpaper, index) => {\r\n          return (\r\n            <WallpaperItem\r\n              chatId={chatId}\r\n              image={wallpaper.image}\r\n              key={wallpaper.id}\r\n              currentWallpaper={currentWallpaper}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <LoadingCircle />\r\n  );\r\n};\r\n","import React, { useRef, useState } from \"react\";\r\nimport { FiFolder, FiImage, FiInfo, FiMoreHorizontal } from \"react-icons/fi\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport useOutsideClick from \"../../../../shared/lib/hooks/use-outside-click\";\r\nimport { ChatInfo } from \"../organisms/chat-info\";\r\nimport { AttachmentList } from \"./attachment-list\";\r\nimport { Wallpapers } from \"./wallpapers\";\r\n\r\nexport const ChatMoreBtn = ({ chatId, currentWallpaper, data }) => {\r\n  const [openMoreWindow, setOpenMoreWindow] = useState();\r\n  const { toggleModal, setContent } = useModal();\r\n  const chatMoreBtnRef = useRef(null);\r\n  useOutsideClick(chatMoreBtnRef, setOpenMoreWindow);\r\n  return (\r\n    <div className=\"ChatMoreBtn\" ref={chatMoreBtnRef}>\r\n      <button onClick={() => setOpenMoreWindow(!openMoreWindow)}>\r\n        <FiMoreHorizontal />\r\n      </button>\r\n      <div\r\n        className=\"chatHeaderMenuWindow\"\r\n        style={!openMoreWindow ? { display: \"none\" } : {}}\r\n      >\r\n        {data.participants.length > 2 ? (\r\n          <div\r\n            className=\"chatHeaderMenuWindowItem\"\r\n            onClick={() => {\r\n              toggleModal();\r\n              setContent(<ChatInfo data={data} />);\r\n            }}\r\n          >\r\n            <FiInfo />\r\n            <span>Info</span>\r\n          </div>\r\n        ) : null}\r\n        {/* <div className=\"chatHeaderMenuWindowItem\">\r\n\t\t\t\t\t<FiSearch/>\r\n\t\t\t\t\t<span>Search messages</span>\r\n\t\t\t\t</div> */}\r\n        <div\r\n          className=\"chatHeaderMenuWindowItem\"\r\n          onClick={() => {\r\n            toggleModal();\r\n            setContent(<AttachmentList chatId={chatId} />);\r\n          }}\r\n        >\r\n          <FiFolder />\r\n          <span>Attachments</span>\r\n        </div>\r\n        <div\r\n          className=\"chatHeaderMenuWindowItem\"\r\n          onClick={() => {\r\n            toggleModal();\r\n            setContent(\r\n              <Wallpapers chatId={chatId} currentWallpaper={currentWallpaper} />\r\n            );\r\n          }}\r\n        >\r\n          <FiImage />\r\n          <span>Change wallpaper</span>\r\n        </div>\r\n        {/* <div className=\"chatHeaderMenuWindowItem\">\r\n\t\t\t\t\t<FiTrash/>\r\n\t\t\t\t\t<span>Delete chat</span>\r\n\t\t\t\t</div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { GoBackBtn } from \"../../../../shared/ui/atoms/go-back-button\";\r\nimport { LastSeen } from \"../../../../shared/ui/atoms/last-seen\";\r\nimport useChatHeader from \"../../lib/hooks/use-chat-header\";\r\nimport { ChatMoreBtn } from \"../molecules/chat-more-button\";\r\nimport { ChatInfo } from \"./chat-info\";\r\n\r\nexport const ChatHeader = ({ data }) => {\r\n  const { toggleModal, setContent } = useModal();\r\n  const [otherPerson, headerColors] = useChatHeader(data);\r\n\r\n  return (\r\n    <div\r\n      className=\"ChatHeader\"\r\n      style={\r\n        headerColors?.length\r\n          ? {\r\n              background: `linear-gradient(45deg, ${headerColors[0]}, ${headerColors[1]})`,\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      <GoBackBtn />\r\n      {data.chatName.length === 0 ? (\r\n        <Link\r\n          className=\"chatHeaderImageAndName\"\r\n          to={`/authors/${otherPerson.uid}`}\r\n        >\r\n          <div\r\n            className=\"chatHeaderImage\"\r\n            style={{\r\n              backgroundImage: `url(${otherPerson.photoURL || data.chatImage})`,\r\n            }}\r\n          />\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <h4>{otherPerson.displayName || data.chatName}</h4>\r\n            <LastSeen userUID={otherPerson.uid} />\r\n          </div>\r\n        </Link>\r\n      ) : (\r\n        <div\r\n          className=\"chatHeaderImageAndName\"\r\n          onClick={() => {\r\n            toggleModal();\r\n            setContent(<ChatInfo data={data} />);\r\n          }}\r\n        >\r\n          <div\r\n            className=\"chatHeaderImage\"\r\n            style={{\r\n              backgroundImage: `url(${otherPerson.photoURL || data.chatImage})`,\r\n            }}\r\n          />\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <h4>{otherPerson.displayName || data.chatName}</h4>\r\n            <LastSeen userUID={otherPerson.uid} />\r\n          </div>\r\n        </div>\r\n      )}\r\n      <ChatMoreBtn\r\n        chatId={data.id}\r\n        data={data}\r\n        currentWallpaper={data.wallpaper}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","export function whatToWriteInResponseToItem(referedMessage) {\r\n\treturn referedMessage.attachedSongs.length ? \"Audio\" :\r\n\t\treferedMessage.attachedAlbums.length ? \"Album\" :\r\n\t\t\treferedMessage.attachedAuthors.length ? \"Author\" :\r\n\t\t\t\treferedMessage.inResponseToMessage && referedMessage.inResponseToMessage.length ? \"Forwarded message\" : \"\"\r\n}","import React from \"react\";\r\nimport { FiX } from \"react-icons/fi\";\r\nexport const AttachedItemsInChatInput = ({\r\n  attachedItems,\r\n  setAttachedItems,\r\n  icon,\r\n}) => {\r\n  function removeItemFromAttached(attachedItems, setItems, itemId) {\r\n    setItems(attachedItems.filter((id) => id !== itemId));\r\n  }\r\n  return (\r\n    <div className=\"AttachedItemsInChatInput\">\r\n      {attachedItems.map((itemId, index) => {\r\n        return (\r\n          <div className=\"attachedSongItem\" key={itemId}>\r\n            {icon}\r\n            <span>{itemId}</span>\r\n            <button\r\n              className=\"removeMessageFromResponse\"\r\n              onClick={() =>\r\n                removeItemFromAttached(attachedItems, setAttachedItems, itemId)\r\n              }\r\n            >\r\n              <FiX />\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { BiAlbum } from \"react-icons/bi\";\r\nimport { CgMusicNote } from \"react-icons/cg\";\r\nimport { FiUser, FiX } from \"react-icons/fi\";\r\nimport { ImAttachment } from \"react-icons/im\";\r\nimport { MdSend } from \"react-icons/md\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport { whatToWriteInResponseToItem } from \"../../lib/what-to-write-in-response-item\";\r\n\r\nimport useOutsideClick from \"../../../../shared/lib/hooks/use-outside-click\";\r\nimport SearchBar from \"../../../../shared/ui/organisms/search-bar\";\r\nimport { AlbumList } from \"../../../album/ui/template/album-list\";\r\nimport { AuthorsList } from \"../../../../features/author/ui/templates/authors-list\";\r\nimport { SongList } from \"../../../../features/song/ui/templates/song-list\";\r\nimport { AttachedItemsInChatInput } from \"../molecules/attached-items-in-chat-input\";\r\nimport getShortString from \"../../../../shared/lib/get-short-string\";\r\nimport { sendMessage } from \"../../lib/send-message\";\r\n\r\nexport const ChatInput = ({\r\n  chatId,\r\n  chatData,\r\n  messageText,\r\n  setMessageText,\r\n  inResponseToMessage,\r\n  setInResponseToMessage,\r\n  otherMessages,\r\n}) => {\r\n  const { currentUser } = useAuth();\r\n  const [openAttachWindow, setOpenAttachWindow] = useState(false);\r\n  const { yourSongs, yourAuthors, yourPlaylists } = useSong();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [allFoundSongs, setAllFoundSongs] = useState(yourSongs);\r\n  const [attachedSongs, setAttachedSongs] = useState([]);\r\n  const [attachedAlbums, setAttachedAlbums] = useState([]);\r\n  const [attachedAuthors, setAttachedAuthors] = useState([]);\r\n  const [resultPlaylists, setResultPlaylists] = useState(yourPlaylists);\r\n  const [resultAuthorList, setResultAuthorList] = useState(yourAuthors);\r\n  const [inResponseNames, setInResponseNames] = useState([]);\r\n  const [attachedSongsNames, setAttachedSongsNames] = useState([]);\r\n  const attachWindowRef = useRef(null);\r\n  useOutsideClick(attachWindowRef, setOpenAttachWindow);\r\n\r\n  function sendMessageFull() {\r\n    sendMessage(\r\n      chatId,\r\n      chatData,\r\n      currentUser.uid,\r\n      messageText,\r\n      attachedSongs,\r\n      attachedAlbums,\r\n      attachedAuthors,\r\n      inResponseToMessage\r\n    );\r\n    setMessageText(\"\");\r\n    setAttachedSongs([]);\r\n    setAttachedAuthors([]);\r\n    setAttachedAlbums([]);\r\n    setInResponseToMessage([]);\r\n    setOpenAttachWindow(false);\r\n  }\r\n  useEffect(() => {\r\n    if (searchValue.length === 0) {\r\n      setAllFoundSongs(yourSongs);\r\n    }\r\n  }, [searchValue]);\r\n\r\n  function removeMessageFromResponseList(messageId) {\r\n    setInResponseToMessage(\r\n      inResponseToMessage.filter((id) => id !== messageId)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (messageText.length === 0) {\r\n      firestore\r\n        .collection(\"chats\")\r\n        .doc(chatId)\r\n        .update({\r\n          typing: chatData.typing.filter((id) => id !== currentUser.uid),\r\n        });\r\n    } else {\r\n      if (!chatData.typing.includes(currentUser.uid)) {\r\n        const tempArray = chatData.typing;\r\n        tempArray.push(currentUser.uid);\r\n        firestore.collection(\"chats\").doc(chatId).update({\r\n          typing: tempArray,\r\n        });\r\n      }\r\n    }\r\n  }, [messageText]);\r\n\r\n  useEffect(() => {\r\n    setInResponseNames([]);\r\n    inResponseToMessage.forEach(async (id) => {\r\n      const name = (\r\n        await firestore.collection(\"users\").doc(otherMessages[id].sender).get()\r\n      ).data().displayName;\r\n      setInResponseNames((prev) => [...prev, name]);\r\n    });\r\n  }, [inResponseToMessage.length]);\r\n\r\n  useEffect(() => {\r\n    setAttachedSongsNames([]);\r\n    attachedSongs.forEach(async (id) => {\r\n      const name = (await firestore.collection(\"songs\").doc(id).get()).data()\r\n        .name;\r\n      setAttachedSongsNames((prev) => [...prev, name]);\r\n    });\r\n  }, [attachedSongs.length]);\r\n\r\n  return (\r\n    <div\r\n      className=\"chatInput\"\r\n      style={\r\n        openAttachWindow\r\n          ? {\r\n              borderRadius:\r\n                \"0 0 var(--standartBorderRadius) var(--standartBorderRadius)\",\r\n              transition: \".2s\",\r\n            }\r\n          : {}\r\n      }\r\n      ref={attachWindowRef}\r\n    >\r\n      <div\r\n        className=\"attachWindow\"\r\n        style={openAttachWindow ? { height: \"400px\", opacity: \"1\" } : {}}\r\n      >\r\n        {openAttachWindow ? (\r\n          <div\r\n            style={\r\n              openAttachWindow\r\n                ? {\r\n                    maxHeight: \"100%\",\r\n                    overflow: \"hidden\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                  }\r\n                : { display: \"none\" }\r\n            }\r\n          >\r\n            <SearchBar\r\n              value={searchValue}\r\n              setValue={setSearchValue}\r\n              setAllFoundSongs={setAllFoundSongs}\r\n              setResultPlaylists={setResultPlaylists}\r\n              setResultAuthorList={setResultAuthorList}\r\n            />\r\n            <div style={{ height: \"100%\", overflowY: \"auto\" }}>\r\n              <SongList\r\n                listOfSongs={allFoundSongs}\r\n                source={\"no\"}\r\n                listOfChosenSongs={attachedSongs}\r\n                setListOfSongs={setAttachedSongs}\r\n              />\r\n              <AuthorsList\r\n                listOfAuthors={resultAuthorList}\r\n                listOfChosenAuthors={attachedAuthors}\r\n                setListOfChosenAuthors={setAttachedAuthors}\r\n              />\r\n              <AlbumList\r\n                listOfAlbums={resultPlaylists}\r\n                loading={false}\r\n                listOfChosenAlbums={attachedAlbums}\r\n                setListOfChosenAlbums={setAttachedAlbums}\r\n              />\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n      <div\r\n        className=\"inResponseArea\"\r\n        style={\r\n          inResponseToMessage.length ||\r\n          attachedSongsNames.length ||\r\n          attachedAuthors.length ||\r\n          attachedAlbums.length\r\n            ? {}\r\n            : {\r\n                height: \"0\",\r\n                padding: \"0\",\r\n                opacity: \"0\",\r\n                top: \"0\",\r\n                visibility: \"hidden\",\r\n              }\r\n        }\r\n      >\r\n        <div className=\"responseMessages\">\r\n          {inResponseToMessage.map((id, index) => {\r\n            return (\r\n              <div className=\"responseItem\" key={id}>\r\n                <h5\r\n                  style={\r\n                    otherMessages[id].sender === currentUser.uid\r\n                      ? { color: \"var(--lightPurple)\" }\r\n                      : {}\r\n                  }\r\n                >\r\n                  {inResponseNames[index]}\r\n                </h5>\r\n                <p>\r\n                  {getShortString(otherMessages[id].message, 35)}\r\n                  <span\r\n                    style={{\r\n                      marginLeft: \"5px\",\r\n                      color: \"var(--reallyLightBlue)\",\r\n                    }}\r\n                  >\r\n                    {whatToWriteInResponseToItem(otherMessages[id])}\r\n                  </span>\r\n                </p>\r\n                <button\r\n                  onClick={() => removeMessageFromResponseList(id)}\r\n                  className=\"removeMessageFromResponse\"\r\n                >\r\n                  <FiX />\r\n                </button>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <AttachedItemsInChatInput\r\n          attachedItems={attachedSongs}\r\n          setAttachedItems={setAttachedSongs}\r\n          icon={<CgMusicNote />}\r\n        />\r\n        <AttachedItemsInChatInput\r\n          attachedItems={attachedAuthors}\r\n          setAttachedItems={setAttachedAuthors}\r\n          icon={<FiUser />}\r\n        />\r\n        <AttachedItemsInChatInput\r\n          attachedItems={attachedAlbums}\r\n          setAttachedItems={setAttachedAlbums}\r\n          icon={<BiAlbum />}\r\n        />\r\n      </div>\r\n      <div className=\"attachAndEmojis\">\r\n        <div className=\"attachBtn\">\r\n          <button\r\n            onClick={() => {\r\n              setOpenAttachWindow(!openAttachWindow);\r\n            }}\r\n          >\r\n            <ImAttachment />\r\n          </button>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          style={{\r\n            background: \"var(--lightGrey)\",\r\n            border: \"none\",\r\n            outline: \"none\",\r\n            minHeight: \"100%\",\r\n          }}\r\n          value={messageText}\r\n          onChange={(e) => {\r\n            setMessageText(e.target.value);\r\n          }}\r\n          onKeyDown={(e) => {\r\n            if (e.key === \"Enter\") {\r\n              sendMessageFull();\r\n            }\r\n          }}\r\n        />\r\n        {/* <div className=\"emojis\">\r\n\t\t\t\t\t<div className=\"emojiItem\">\r\n\t\t\t\t\t\t<FcLike />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"emojiItem\" style={{ color: 'var(--red)' }}>\r\n\t\t\t\t\t\t<AiFillFire />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"emojiItem\" style={{ color: 'var(--lightBlue)' }}>\r\n\t\t\t\t\t\t<AiFillLike />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> */}\r\n      </div>\r\n      <button\r\n        className=\"sendBtn\"\r\n        onClick={() => {\r\n          sendMessageFull();\r\n        }}\r\n      >\r\n        <MdSend />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nexport const SongItemLoading = () => {\r\n\treturn (\r\n\t\t<div className = \"SongItem SongItemLoading\">\r\n\t\t\t<div className=\"songItemImageAndName\">\r\n\t\t\t\t<div className=\"songItemImage\"></div>\r\n\t\t\t\t<div className=\"songItemNameAndAuthor\">\r\n\t\t\t\t\t<div className=\"songItemName\"></div>\r\n\t\t\t\t\t<div className=\"songItemAuthor\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import { useEffect, useState } from \"react\"\r\n\r\nexport default function useOnScreen(ref) {\r\n\r\n\tconst [isIntersecting, setIntersecting] = useState(false)\r\n \r\n\tconst observer = new IntersectionObserver(\r\n\t  ([entry]) => setIntersecting(entry.isIntersecting)\r\n\t)\r\n \r\n\tuseEffect(() => {\r\n\t  observer.observe(ref.current)\r\n\t  // Remove the observer as soon as the component is unmounted\r\n\t  return () => { observer.disconnect() }\r\n\t}, [])\r\n \r\n\treturn isIntersecting\r\n }","import { useEffect, useRef } from 'react'\r\nimport { useAuth } from '../../../../contexts/auth'\r\nimport { firestore } from '../../../../firebase'\r\nimport useOnScreen from '../../../../shared/lib/hooks/use-on-screen'\r\n\r\nconst useMarkMessageRead = (chatId, messageData, otherMessages) => {\r\n\tconst messageRef = useRef()\r\n\tconst isVisible = useOnScreen(messageRef)\r\n\tconst { currentUser } = useAuth()\r\n\r\n\tuseEffect(() => {\r\n\t\tif (messageData.seenBy !== undefined) {\r\n\t\t\tif (currentUser.uid !== messageData.sender && isVisible) {\r\n\t\t\t\tif (!messageData.seenBy.includes(currentUser.uid)) {\r\n\t\t\t\t\tconst tempMessages = otherMessages\r\n\t\t\t\t\ttempMessages[messageData.id].seenBy.push(currentUser.uid)\r\n\t\t\t\t\tfirestore.collection('chats').doc(chatId).update({\r\n\t\t\t\t\t\tmessages: tempMessages\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, [isVisible])\r\n\r\n\treturn [messageRef, isVisible]\r\n}\r\n\r\nexport default useMarkMessageRead\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BiShare } from \"react-icons/bi\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport { SongItemLoading } from \"../../../song/ui/atoms/song-loading\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useScreen } from \"../../../../contexts/screen\";\r\nimport { PlaylistItem } from \"../../../../entities/playlist/ui/playlist-item\";\r\nimport { SongItem } from \"../../../../entities/song/ui/song-item\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport displayDate from \"../../../../shared/lib/display-date\";\r\nimport { AuthorItemBig } from \"../../../author/ui/molecules/author-item-big\";\r\nimport useMarkMessageRead from \"../../lib/hooks/use-mark-message-read\";\r\nimport { whatToWriteInResponseToItem } from \"../../lib/what-to-write-in-response-item\";\r\nimport { SeenByCircle } from \"../atoms/seen-by-circle\";\r\n\r\nexport const MessageItem = ({\r\n  messageData,\r\n  chatId,\r\n  scrollToMessageRef,\r\n  setScrollToMessageId,\r\n  scrollToMessageId,\r\n  showPhoto = true,\r\n  otherMessages,\r\n  inResponseToMessageArr,\r\n  setInResponseToMessageArr,\r\n}) => {\r\n  const { currentUser } = useAuth();\r\n  const { isMobile, screenHeight } = useScreen();\r\n  const {\r\n    message,\r\n    attachedAlbums,\r\n    attachedSongs,\r\n    attachedAuthors,\r\n    sender,\r\n    inResponseToMessage,\r\n    id,\r\n    sentTime,\r\n  } = messageData;\r\n  const [userThatSentMessage, setUserThatSentMessage] = useState({});\r\n  const messageSentTime = displayDate(sentTime, 2);\r\n  const [attachedSongsData, setAttachedSongsData] = useState([]);\r\n  const [attachedAuthorsData, setAttachedAuthorsData] = useState([]);\r\n  const [attachedPlaylistsData, setAttachedPlaylistsData] = useState([]);\r\n  const [inResponseToMessagesData, setInResponseToMessagesData] = useState([]);\r\n  const [inResponseNames, setInResponseNames] = useState([]);\r\n  const [messageRef, isVisible] = useMarkMessageRead(\r\n    chatId,\r\n    messageData,\r\n    otherMessages\r\n  );\r\n  const [swipeDeltaX, setSwipeDeltaX] = useState(0);\r\n  const [transformTransition, setTransformTransition] = useState(0);\r\n  const handlers = useSwipeable({\r\n    onSwiping: (event) => {\r\n      if (event.deltaX < 0) setSwipeDeltaX(event.deltaX);\r\n    },\r\n  });\r\n  const refPassthrough = (el) => {\r\n    // call useSwipeable ref prop with el\r\n    handlers.ref(el);\r\n\r\n    // set myRef el so you can access it yourself\r\n    messageRef.current = el;\r\n  };\r\n\r\n  async function fetchSentMessageUser() {\r\n    const user = (\r\n      await firestore.collection(\"users\").doc(messageData.sender).get()\r\n    ).data();\r\n    setUserThatSentMessage(user);\r\n  }\r\n\r\n  function fetchAttachedData(list, place, setFunc) {\r\n    return list.forEach(async (itemId) => {\r\n      let itemData = await firestore.collection(place).doc(itemId).get();\r\n      if (itemData.exists) setFunc((prev) => [...prev, itemData.data()]);\r\n      else setFunc((prev) => [...prev, null]);\r\n    });\r\n  }\r\n\r\n  function inResponseMessagesFetch() {\r\n    if (inResponseToMessage !== null) {\r\n      inResponseToMessage.forEach(async (messageId) => {\r\n        setInResponseToMessagesData((prev) => [\r\n          ...prev,\r\n          otherMessages[messageId],\r\n        ]);\r\n        const name = (\r\n          await firestore\r\n            .collection(\"users\")\r\n            .doc(otherMessages[messageId].sender)\r\n            .get()\r\n        ).data().displayName;\r\n        setInResponseNames((prev) => [name, ...prev]);\r\n      });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchSentMessageUser();\r\n    fetchAttachedData(attachedSongs, \"songs\", setAttachedSongsData);\r\n    fetchAttachedData(attachedAuthors, \"users\", setAttachedAuthorsData);\r\n    fetchAttachedData(attachedAlbums, \"playlists\", setAttachedPlaylistsData);\r\n    inResponseMessagesFetch();\r\n  }, []);\r\n\r\n  function addMessageToResponseList() {\r\n    if (!inResponseToMessageArr.includes(id)) {\r\n      setInResponseToMessageArr((prev) => [...prev, id]);\r\n    }\r\n  }\r\n\r\n  function returnToInitial() {\r\n    let dropDelta;\r\n    clearTimeout(dropDelta);\r\n    setTransformTransition(0.2);\r\n    dropDelta = setTimeout(() => {\r\n      setSwipeDeltaX(0);\r\n      setTransformTransition(0);\r\n    }, 200);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (swipeDeltaX < -160) {\r\n      returnToInitial();\r\n      addMessageToResponseList();\r\n    }\r\n  }, [swipeDeltaX]);\r\n\r\n  return (\r\n    <div\r\n      className={\"MessageItem \" + (sender === currentUser.uid ? \"your\" : \"\")}\r\n      ref={id === scrollToMessageId ? scrollToMessageRef : refPassthrough}\r\n      style={\r\n        showPhoto\r\n          ? {\r\n              paddingBottom: \"15px\",\r\n              transform: `translateX(${swipeDeltaX}px)`,\r\n              transition: transformTransition,\r\n            }\r\n          : {\r\n              transform: `translateX(${swipeDeltaX}px)`,\r\n              transition: transformTransition,\r\n            }\r\n      }\r\n      onTouchEnd={returnToInitial}\r\n    >\r\n      <div className=\"messageItemImage\">\r\n        {showPhoto ? (\r\n          <img loading=\"lazy\" src={userThatSentMessage.photoURL} alt=\"\" />\r\n        ) : null}\r\n      </div>\r\n      <div\r\n        className=\"messageItemBody\"\r\n        style={\r\n          id === scrollToMessageId\r\n            ? { animation: \"showResponseMessage .5s forwards\" }\r\n            : showPhoto\r\n            ? {\r\n                borderRadius:\r\n                  \"var(--standartBorderRadius2) var(--standartBorderRadius) var(--standartBorderRadius) 5px\",\r\n              }\r\n            : {}\r\n        }\r\n      >\r\n        <div\r\n          style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"5px\" }}\r\n        >\r\n          <h5 className=\"messageUserName\">{userThatSentMessage.displayName}</h5>\r\n          <div style={{ fontSize: \".7em\", opacity: \".8\", marginLeft: \"10px\" }}>\r\n            {messageSentTime}\r\n          </div>\r\n        </div>\r\n        {inResponseToMessage !== null\r\n          ? inResponseToMessagesData.map((messageData, index) => {\r\n              return (\r\n                <div\r\n                  className=\"responseItem\"\r\n                  onClick={() => setScrollToMessageId(messageData.id)}\r\n                >\r\n                  <span style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                    <h5\r\n                      style={\r\n                        messageData.sender === currentUser.uid\r\n                          ? { color: \"var(--lightPurple)\" }\r\n                          : {}\r\n                      }\r\n                    >\r\n                      {inResponseNames[index]}\r\n                    </h5>\r\n                    <div\r\n                      style={{\r\n                        fontSize: \".7em\",\r\n                        opacity: \".8\",\r\n                        marginLeft: \"10px\",\r\n                      }}\r\n                    >\r\n                      {displayDate(messageData.sentTime, 2)}\r\n                    </div>\r\n                  </span>\r\n                  <p>\r\n                    {messageData.message}\r\n                    <span\r\n                      style={{\r\n                        marginLeft: \"5px\",\r\n                        color: \"var(--reallyLightBlue)\",\r\n                      }}\r\n                    >\r\n                      {whatToWriteInResponseToItem(messageData)}\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n              );\r\n            })\r\n          : null}\r\n        <div>\r\n          <p>{message}</p>\r\n          {attachedSongsData.map((song, key) => {\r\n            return isVisible ? (\r\n              <SongItem\r\n                song={song}\r\n                localIndex={key}\r\n                key={key}\r\n                position={screenHeight}\r\n              />\r\n            ) : (\r\n              <SongItemLoading />\r\n            );\r\n          })}\r\n          {attachedPlaylistsData.map((album, index) => {\r\n            return <PlaylistItem playlist={album} key={index} />;\r\n          })}\r\n          {attachedAuthorsData.map((author, index) => {\r\n            return <AuthorItemBig data={author} key={index} />;\r\n          })}\r\n        </div>\r\n      </div>\r\n      <SeenByCircle listOfSeen={messageData.seenBy} />\r\n      <button\r\n        className=\"respondToMessageBtn\"\r\n        onClick={addMessageToResponseList}\r\n        style={isMobile ? { opacity: -swipeDeltaX / 80 } : {}}\r\n      >\r\n        <BiShare />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport displayDate from \"../../../../shared/lib/display-date\";\r\nimport { MessageItem } from \"../molecules/message-item\";\r\n\r\nexport const MessageField = ({\r\n  message,\r\n  index,\r\n  messageList,\r\n  chatId,\r\n  inResponseToMessage,\r\n  setInResponseToMessage,\r\n  scrollToMessageRef,\r\n  scrollToMessageId,\r\n  setScrollToMessageId,\r\n  setDateRefsArray,\r\n}) => {\r\n  const [showPhoto, setShowPhoto] = useState(false);\r\n  const [showDate, setShowDate] = useState(false);\r\n  const dateRef = useRef(null);\r\n  useEffect(() => {\r\n    if (index === messageList.length - 1) setShowPhoto(true);\r\n    else if (messageList[index + 1].sender !== messageList[index].sender)\r\n      setShowPhoto(true);\r\n    else if (\r\n      displayDate(messageList[index + 1].sentTime) !==\r\n      displayDate(messageList[index].sentTime)\r\n    )\r\n      setShowPhoto(true);\r\n\r\n    if (index === 0) setShowDate(true);\r\n    else if (\r\n      displayDate(messageList[index].sentTime) !==\r\n      displayDate(messageList[index - 1].sentTime)\r\n    ) {\r\n      setShowDate(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (dateRef.current !== null) {\r\n      setDateRefsArray((prev) => [...prev, dateRef]);\r\n    }\r\n  }, [showDate]);\r\n\r\n  return (\r\n    <>\r\n      {showDate ? (\r\n        <div\r\n          ref={dateRef}\r\n          style={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            padding: \"10px 0\",\r\n          }}\r\n        >\r\n          {displayDate(message.sentTime)}\r\n        </div>\r\n      ) : null}\r\n      <MessageItem\r\n        messageData={message}\r\n        chatId={chatId}\r\n        key={message.id}\r\n        scrollToMessageRef={scrollToMessageRef}\r\n        scrollToMessageId={scrollToMessageId}\r\n        setScrollToMessageId={setScrollToMessageId}\r\n        showPhoto={showPhoto}\r\n        otherMessages={messageList}\r\n        inResponseToMessageArr={inResponseToMessage}\r\n        setInResponseToMessageArr={setInResponseToMessage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport useMarkMessageRead from \"../../lib/hooks/use-mark-message-read\";\r\n\r\nconst SystemMessageWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  opacity: 0.5;\r\n`;\r\n\r\nconst SystemMessage = ({ chatId, message, messageList }) => {\r\n  const [messageRef, isVisible] = useMarkMessageRead(\r\n    chatId,\r\n    message,\r\n    messageList\r\n  );\r\n  return (\r\n    <SystemMessageWrapper ref={messageRef}>\r\n      {message.message}\r\n    </SystemMessageWrapper>\r\n  );\r\n};\r\n\r\nexport default SystemMessage;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { MessageField } from \"../organisms/message-field\";\r\nimport SystemMessage from \"./system-message\";\r\n\r\nexport const DisplayChatMessages = ({\r\n  chatId,\r\n  messageList,\r\n  inResponseToMessage,\r\n  setInResponseToMessage,\r\n  messagesWindowRef,\r\n  setDateRefsArray,\r\n}) => {\r\n  const scrollToMessageRef = useRef(null);\r\n  const [scrollToMessageId, setScrollToMessageId] = useState(-1);\r\n  useEffect(() => {\r\n    if (scrollToMessageId !== -1) {\r\n      messagesWindowRef.current.scrollTo(\r\n        0,\r\n        scrollToMessageRef.current.offsetTop - 65 < 0\r\n          ? 0\r\n          : scrollToMessageRef.current.offsetTop - 65\r\n      );\r\n      setTimeout(() => {\r\n        setScrollToMessageId(-1);\r\n      }, 500);\r\n    }\r\n  }, [scrollToMessageId]);\r\n\r\n  return messageList.length ? (\r\n    <>\r\n      {messageList.map((message, index) => {\r\n        if (message.sender !== \"soundbubble\") {\r\n          return (\r\n            <MessageField\r\n              message={message}\r\n              index={index}\r\n              key={message.id}\r\n              messageList={messageList}\r\n              chatId={chatId}\r\n              inResponseToMessage={inResponseToMessage}\r\n              setInResponseToMessage={setInResponseToMessage}\r\n              scrollToMessageRef={scrollToMessageRef}\r\n              scrollToMessageId={scrollToMessageId}\r\n              setScrollToMessageId={setScrollToMessageId}\r\n              setDateRefsArray={setDateRefsArray}\r\n            />\r\n          );\r\n        } else {\r\n          return (\r\n            <SystemMessage\r\n              chatId={chatId}\r\n              message={message}\r\n              messageList={messageList}\r\n            />\r\n          );\r\n        }\r\n      })}\r\n    </>\r\n  ) : null;\r\n};\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { useScreen } from \"../../../../contexts/screen\";\r\nimport { TypingAnimation } from \"../atoms/typing-animation\";\r\nimport { DisplayChatMessages } from \"../molecules/display-chat-messages\";\r\n\r\nexport const ChatMessagesWindow = ({\r\n  chatId,\r\n  chatData,\r\n  messageList,\r\n  findTopDate,\r\n  inResponseToMessage,\r\n  setInResponseToMessage,\r\n  setDateRefsArray,\r\n}) => {\r\n  const { screenHeight, isMobile } = useScreen();\r\n  const messagesWindowRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    const scroll =\r\n      messagesWindowRef.current?.scrollHeight -\r\n      messagesWindowRef.current?.clientHeight;\r\n    messagesWindowRef.current?.scrollTo(0, scroll);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      scrollToBottom();\r\n    }, 200);\r\n  }, [messageList]);\r\n  return (\r\n    <div\r\n      className=\"chatMessagesWindow\"\r\n      ref={messagesWindowRef}\r\n      onScroll={findTopDate}\r\n      style={{\r\n        height: screenHeight - 105 + \"px\",\r\n      }}\r\n    >\r\n      <DisplayChatMessages\r\n        chatId={chatId}\r\n        messageList={messageList}\r\n        inResponseToMessage={inResponseToMessage}\r\n        setInResponseToMessage={setInResponseToMessage}\r\n        messagesWindowRef={messagesWindowRef}\r\n        setDateRefsArray={setDateRefsArray}\r\n      />\r\n      <TypingAnimation typingPeople={chatData.typing} />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router\";\r\nimport { LoadingCircle } from \"../../features/loading/ui/atoms/loading-circle\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\nimport { useRealTimeMessages } from \"../../features/dialogue/lib/hooks/use-realtime-messages\";\r\nimport { DateOnTop } from \"../../features/dialogue/ui/atoms/date-on-top\";\r\nimport { ChatHeader } from \"../../features/dialogue/ui/organisms/chat-header\";\r\nimport { ChatInput } from \"../../features/dialogue/ui/organisms/chat-input\";\r\nimport { ChatMessagesWindow } from \"../../features/dialogue/ui/organisms/chat-messages-window\";\r\n\r\nconst DialoguePage = () => {\r\n  const match = useRouteMatch(\"/chat/:chatId\");\r\n  const { currentUser } = useAuth();\r\n  const { chatId } = match.params;\r\n  const [messageText, setMessageText] = useState(\"\");\r\n  const [inResponseToMessage, setInResponseToMessage] = useState([]);\r\n  const [dateRefsArray, setDateRefsArray] = useState([]);\r\n  const history = useHistory();\r\n  const [chatData, messageList, loading, currentDateOnTop, findTopDate] =\r\n    useRealTimeMessages(chatId, dateRefsArray);\r\n\r\n  useEffect(() => {\r\n    if (chatData === undefined) {\r\n      history.push(\"/not-found\");\r\n    } else if (chatData?.participants !== undefined) {\r\n      if (!chatData.participants.includes(currentUser.uid))\r\n        history.push(\"/chat\");\r\n    }\r\n  }, [chatData]);\r\n\r\n  return chatData !== null && chatData !== undefined ? (\r\n    <div className=\"DialoguePage\" style={{ height: \"100%\" }}>\r\n      {loading ? (\r\n        <LoadingCircle top={\"50%\"} />\r\n      ) : (\r\n        <>\r\n          <ChatHeader data={chatData} />\r\n          <DateOnTop date={currentDateOnTop} />\r\n          <ChatMessagesWindow\r\n            chatId={chatId}\r\n            chatData={chatData}\r\n            messageList={messageList}\r\n            findTopDate={findTopDate}\r\n            setDateRefsArray={setDateRefsArray}\r\n            inResponseToMessage={inResponseToMessage}\r\n            setInResponseToMessage={setInResponseToMessage}\r\n          />\r\n          <ChatInput\r\n            chatId={chatId}\r\n            chatData={chatData}\r\n            messageText={messageText}\r\n            setMessageText={setMessageText}\r\n            inResponseToMessage={inResponseToMessage}\r\n            setInResponseToMessage={setInResponseToMessage}\r\n            otherMessages={messageList}\r\n          />\r\n        </>\r\n      )}\r\n      {chatData?.wallpaper !== \"undefined\" ? (\r\n        <img\r\n          loading=\"lazy\"\r\n          src={chatData.wallpaper}\r\n          className=\"chatWallpaper\"\r\n          alt=\"\"\r\n        />\r\n      ) : null}\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default DialoguePage;\r\n","import { useEffect, useState } from 'react'\r\nimport { firestore } from '../../../../firebase'\r\n\r\n/**\r\n\t  * Returns [chatData, messageList, loading, currentDateOnTop, findTopDate]\r\n*/\r\nexport const useRealTimeMessages = (chatId, dateRefsArray) => {\r\n\tconst [chatData, setChatData] = useState(null)\r\n\tconst [messageList, setMessageList] = useState([])\r\n\tconst [loading, setLoading] = useState(true)\r\n\tconst [currentDateOnTop, setCurrentDateOnTop] = useState(\"\")\r\n\tfunction findTopDate(e) {\r\n\t\tdateRefsArray.forEach(ref => {\r\n\t\t\tif (ref.current !== null) {\r\n\t\t\t\tif (ref.current.offsetTop - 70 <= e.target.scrollTop) setCurrentDateOnTop(ref.current.innerHTML)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst unsubscribe = firestore.collection('chats').doc(chatId)\r\n\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\tsetChatData(snapshot.data())\r\n\t\t\t\tsetMessageList(snapshot.data()?.messages)\r\n\t\t\t\tsetCurrentDateOnTop(snapshot.data()?.messages.length ? snapshot.data().messages[0].sentTime : new Date().toString())\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t})\r\n\t\treturn () => {\r\n\t\t\tunsubscribe()\r\n\t\t}\r\n\t}, [firestore, chatId])\r\n\r\n\r\n\treturn [chatData, messageList, loading, currentDateOnTop, findTopDate]\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { ContentContainer } from \"../../shared/ui/atoms/content-container\";\r\nimport { SongList } from \"../../features/song/ui/templates/song-list\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\nimport { firestore } from \"../../firebase\";\r\nimport { fetchItemList } from \"../../shared/lib/fetch-item-list\";\r\nimport { GoBackBtn } from \"../../shared/ui/atoms/go-back-button\";\r\n\r\nconst HistoryPage = () => {\r\n  const [historySongsIds, setHistorySongsIds] = useState([]);\r\n  const [historySongs, setHistorySongs] = useState([]);\r\n  const { currentUser } = useAuth();\r\n  useEffect(() => {\r\n    firestore\r\n      .collection(\"history\")\r\n      .doc(currentUser.uid)\r\n      .onSnapshot((res) => {\r\n        setHistorySongsIds(res.data().history);\r\n      });\r\n  }, [firestore]);\r\n\r\n  useEffect(() => {\r\n    fetchItemList(historySongsIds, \"songs\", setHistorySongs);\r\n  }, [historySongsIds]);\r\n  return (\r\n    <div className=\"HistoryPage\" style={{ animation: \"zoomIn .2s forwards\" }}>\r\n      <ContentContainer>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <GoBackBtn />\r\n          <h2 style={{ margin: \"0px\", marginLeft: \"8px\" }}>History</h2>\r\n        </div>\r\n        <SongList\r\n          listOfSongs={historySongs}\r\n          source={{\r\n            source: `/history`,\r\n            name: \"History\",\r\n            image:\r\n              \"https://www.seekpng.com/png/full/781-7815113_history-icon-white-png.png\",\r\n            songsList: historySongs,\r\n          }}\r\n          showCount\r\n          showSearch\r\n          displayIfEmpty={\"Nothing here\"}\r\n        />\r\n      </ContentContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BiChevronLeft, BiChevronRight } from \"react-icons/bi\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport checkNumber from \"../../../../shared/lib/check-number\";\r\nimport { AuthorItemBig } from \"../../../author/ui/molecules/author-item-big\";\r\nimport { LoadingCircle } from \"../../../loading/ui/atoms/loading-circle\";\r\n\r\nimport { PlaylistItem } from \"../../../../entities/playlist/ui/playlist-item\";\r\nimport { SongItem } from \"../../../../entities/song/ui/song-item\";\r\nexport const MainBanner = () => {\r\n  const [bannerColors, setBannerColors] = useState([]);\r\n  const [currentSliderPage, setcurrentSliderPage] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [topAuthor, setTopAuthor] = useState({});\r\n  const [topSong, setTopSong] = useState({});\r\n  const [topAlbum, setTopAlbum] = useState({});\r\n\r\n  async function findTop(setFunc, list, criterion) {\r\n    const response = (\r\n      await firestore.collection(list).orderBy(criterion, \"desc\").limit(1).get()\r\n    ).docs[0].data();\r\n    setFunc(response);\r\n    setBannerColors((prev) => [...prev, response.imageColors[0]]);\r\n    if (list === \"playlists\") setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    findTop(setTopAuthor, \"users\", \"subscribers\");\r\n    findTop(setTopSong, \"songs\", \"listens\");\r\n    findTop(setTopAlbum, \"playlists\", \"listens\");\r\n  }, []);\r\n  return (\r\n    <div\r\n      className=\"MainBanner\"\r\n      style={{ background: bannerColors[currentSliderPage] }}\r\n    >\r\n      {loading ? (\r\n        <LoadingCircle />\r\n      ) : (\r\n        <>\r\n          <div className=\"slider\">\r\n            <div\r\n              className={\r\n                \"sliderItem \" + (currentSliderPage === 0 ? \"current\" : \"\")\r\n              }\r\n              style={{ transform: `translateX(-${currentSliderPage * 100}%)` }}\r\n            >\r\n              <h3>Most popular artist on platform</h3>\r\n              <AuthorItemBig data={topAuthor} />\r\n            </div>\r\n            <div\r\n              className={\r\n                \"sliderItem \" + (currentSliderPage === 1 ? \"current\" : \"\")\r\n              }\r\n              style={{ transform: `translateX(-${currentSliderPage * 100}%)` }}\r\n            >\r\n              <h3>Most popular song on platform</h3>\r\n              <SongItem song={topSong} localIndex={0} showListens />\r\n            </div>\r\n            <div\r\n              className={\r\n                \"sliderItem \" + (currentSliderPage === 2 ? \"current\" : \"\")\r\n              }\r\n              style={{ transform: `translateX(-${currentSliderPage * 100}%)` }}\r\n            >\r\n              <h3>Most popular album on platform</h3>\r\n              <PlaylistItem playlist={topAlbum} />\r\n            </div>\r\n          </div>\r\n          <div className=\"sliderBtns\">\r\n            <button\r\n              onClick={() =>\r\n                setcurrentSliderPage(checkNumber(currentSliderPage - 1, 2, 0))\r\n              }\r\n            >\r\n              <BiChevronLeft />\r\n            </button>\r\n            <button\r\n              onClick={() =>\r\n                setcurrentSliderPage(checkNumber(currentSliderPage + 1, 2, 0))\r\n              }\r\n            >\r\n              <BiChevronRight />\r\n            </button>\r\n          </div>\r\n          {/* <BlurredBg circleColor = \"#fff\"/> */}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { SongList } from \"../../../../features/song/ui/templates/song-list\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport findIfSongIsNew from \"../../../../entities/song/lib/find-if-song-is-new\";\r\nimport { firestore } from \"../../../../firebase\";\r\n\r\nexport const RecentSongs = () => {\r\n  const { yourAuthors } = useSong();\r\n  const [recentSongs, setRecentSongs] = useState([]);\r\n  function findRecentSongs() {\r\n    const tempSongsIds = [];\r\n    yourAuthors.forEach((author, i) => {\r\n      author.ownSongs.forEach(async (songId) => {\r\n        let songData = (\r\n          await firestore.collection(\"songs\").doc(songId).get()\r\n        ).data();\r\n        if (findIfSongIsNew(songData) && !tempSongsIds.includes(songData.id)) {\r\n          setRecentSongs((prev) => [...prev, songData]);\r\n          tempSongsIds.push(songData.id);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      yourAuthors !== undefined &&\r\n      yourAuthors.length !== 0 &&\r\n      recentSongs.length === 0\r\n    )\r\n      findRecentSongs();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <SongList\r\n        listOfSongs={recentSongs}\r\n        source={{\r\n          source: `/home`,\r\n          name: \"New Songs\",\r\n          image: \"\",\r\n          songsList: recentSongs,\r\n        }}\r\n        title={\"New Songs\"}\r\n        isNewSong\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { AuthorsList } from \"../../../../features/author/ui/templates/authors-list\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport findSimilarArtists from \"../../../../shared/lib/find-similar-artists\";\r\n\r\nexport const RecommendedAuthors = () => {\r\n  const { yourAuthors } = useSong();\r\n  const [recommendationAuthors, setRecommendationAuthors] = useState([]);\r\n\r\n  const [uniqueAuthors, setUniqueAuthors] = useState([]);\r\n  const { currentUser } = useAuth();\r\n  useEffect(() => {\r\n    if (yourAuthors !== undefined) {\r\n      yourAuthors.forEach((author) => {\r\n        findSimilarArtists(author, setRecommendationAuthors);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    recommendationAuthors.forEach((author) => {\r\n      const uniqueAuthorsUIDSArray = uniqueAuthors.map((author) => author.uid);\r\n      if (\r\n        !currentUser.addedAuthors.includes(author.uid) &&\r\n        !uniqueAuthorsUIDSArray.includes(author.uid)\r\n      ) {\r\n        setUniqueAuthors((prev) => [...prev, author]);\r\n      }\r\n    });\r\n  }, [recommendationAuthors]);\r\n  return (\r\n    <div className=\"RecommendedAuthors\">\r\n      <AuthorsList\r\n        listOfAuthors={uniqueAuthors}\r\n        title={\"Recommended Authors\"}\r\n      />\r\n      {/* <h2>Recommended Authors</h2>\r\n\t\t\t<div className=\"artistsWrapper\">\r\n\t\t\t\t{uniqueAuthors.map((author, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<AuthorItemBig data={author} key={index} />\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</div> */}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nexport const ImportantMessage = ({message, image, button}) => {\r\n\treturn (\r\n\t\t<div className = \"importantMessage\">\r\n\t\t\t<div>\r\n\t\t\t\t{image?<img loading = \"lazy\" src={image} alt=\"\" />:null}\r\n\t\t\t\t<h3>{message}</h3>\r\n\t\t\t\t{button?button:null}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { SongList } from \"../../../../features/song/ui/templates/song-list\";\r\nimport { ImportantMessage } from \"../../../../shared/ui/atoms/important-message\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { firestore } from \"../../../../firebase\";\r\n\r\nexport const RecommendedSongs = () => {\r\n  const { yourAuthors } = useSong();\r\n  const { currentUser } = useAuth();\r\n  const [recommendedSongs, setRecommendedSongs] = useState([]);\r\n  function fetchRecommendedSongs() {\r\n    const tempSongsIds = [];\r\n    yourAuthors.forEach((author, i) => {\r\n      author.ownSongs.forEach(async (songId, index) => {\r\n        let songData = (\r\n          await firestore.collection(\"songs\").doc(songId).get()\r\n        ).data();\r\n        if (\r\n          !currentUser.addedSongs.includes(songId) &&\r\n          !tempSongsIds.includes(songData.id) &&\r\n          index <= 3\r\n        ) {\r\n          setRecommendedSongs((prev) => [...prev, songData]);\r\n          tempSongsIds.push(songData.id);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchRecommendedSongs();\r\n  }, []);\r\n  return (\r\n    <div className=\"RecommendedSongs\">\r\n      <SongList\r\n        listOfSongs={recommendedSongs}\r\n        source={{\r\n          source: `/home`,\r\n          name: \"Recommended Songs\",\r\n          image: \"\",\r\n          songsList: recommendedSongs,\r\n        }}\r\n        title={\"Recommended Songs\"}\r\n        displayIfEmpty={\r\n          <ImportantMessage\r\n            message={\r\n              \"No songs recommended. Add favorite authors so we could know what to recommend\"\r\n            }\r\n            image={\r\n              \"https://i.pinimg.com/originals/b2/3d/f6/b23df649311586e74a8455c92eb3d76b.png\"\r\n            }\r\n          />\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { SongList } from \"../../../../features/song/ui/templates/song-list\";\r\nimport { LoadingCircle } from \"../../../loading/ui/atoms/loading-circle\";\r\nimport { firestore } from \"../../../../firebase\";\r\n\r\nexport const Top15Songs = () => {\r\n  const [topSongs, setTopSongs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  function fetchTopSongs() {\r\n    firestore\r\n      .collection(\"songs\")\r\n      .orderBy(\"listens\", \"desc\")\r\n      .limit(15)\r\n      .get()\r\n      .then((res) => {\r\n        res.docs.forEach((song) => {\r\n          setTopSongs((prev) => [...prev, song.data()]);\r\n        });\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchTopSongs();\r\n  }, []);\r\n  return !loading ? (\r\n    <SongList\r\n      listOfSongs={topSongs}\r\n      source={{\r\n        source: `/home`,\r\n        name: \"Top 15 Songs\",\r\n        image:\r\n          \"https://media.istockphoto.com/vectors/fire-icon-illustration-for-design-stock-vector-vector-id931601050?k=6&m=931601050&s=170667a&w=0&h=fhRQfwwsW6aXK9OSDM-yj842SFFl2Q9ll6ch-xCK5es=\",\r\n        songsList: topSongs,\r\n      }}\r\n      title={\"Top 15 Songs\"}\r\n      showListens\r\n      showCount\r\n    />\r\n  ) : (\r\n    <LoadingCircle />\r\n  );\r\n};\r\n","import { MainBanner } from \"../../features/home/ui/organisms/main-banner\";\r\nimport { RecentSongs } from \"../../features/home/ui/organisms/recent-songs\";\r\nimport { RecommendedAuthors } from \"../../features/home/ui/organisms/recommended-authors\";\r\nimport { RecommendedSongs } from \"../../features/home/ui/organisms/recommended-songs\";\r\nimport { Top15Songs } from \"../../features/home/ui/organisms/top-15-Songs\";\r\nimport { ContentContainer } from \"../../shared/ui/atoms/content-container\";\r\nimport \"./style.css\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div style={{ animation: \"zoomIn .2s forwards\" }} className=\"HomePage\">\r\n      <MainBanner />\r\n      <ContentContainer>\r\n        <RecentSongs />\r\n        <Top15Songs />\r\n        <RecommendedSongs />\r\n        <RecommendedAuthors />\r\n      </ContentContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useState } from \"react\";\r\nimport { ContentContainer } from \"../../../shared/ui/atoms/content-container\";\r\nimport { useSong } from \"../../../contexts/song\";\r\nimport { AuthorItemBig } from \"../../../features/author/ui/molecules/author-item-big\";\r\nimport SearchBar from \"../../../shared/ui/organisms/search-bar\";\r\n\r\nconst AuthorsPage = () => {\r\n  const { yourAuthors } = useSong();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [displayAuthors, setDisplayAuthors] = useState(yourAuthors);\r\n  return (\r\n    <div className=\"AuthorsPage\">\r\n      <ContentContainer>\r\n        <SearchBar\r\n          value={searchValue}\r\n          setValue={setSearchValue}\r\n          setResultAuthorList={setDisplayAuthors}\r\n          defaultSearchMode={\"authors\"}\r\n          defaultAuthorsListValue={yourAuthors}\r\n          inputText=\"Search for authors\"\r\n        />\r\n        <div className=\"authorsContainer\">\r\n          {displayAuthors.map((authorData) => {\r\n            return <AuthorItemBig data={authorData} key={authorData.uid} />;\r\n          })}\r\n        </div>\r\n      </ContentContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthorsPage;\r\n","import React from \"react\";\r\nimport { FiPlus } from \"react-icons/fi\";\r\nimport styled from \"styled-components\";\r\nimport { AddPlaylist } from \"../../../../features/author/ui/organisms/add-playlist\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\n\r\nconst CreatePlaylistWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: var(--chatsColor);\r\n  border-radius: var(--standartBorderRadius);\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: 0.15s, 0.1s box-shadow;\r\n\r\n  & .text {\r\n    transition: 0.15s;\r\n    height: 25px;\r\n  }\r\n\r\n  &:hover .add-circle {\r\n    transform: scale(1.3);\r\n  }\r\n\r\n  &:hover .text {\r\n    opacity: 0;\r\n    height: 0;\r\n  }\r\n\r\n  &:hover {\r\n    transform: scale(0.93);\r\n  }\r\n\r\n  &:active {\r\n    transform: scale(0.9);\r\n    box-shadow: 0 0 0 7px #ffffff5e;\r\n  }\r\n\r\n  & .add-circle {\r\n    width: 60px;\r\n    height: 60px;\r\n    border-radius: 100%;\r\n    background: var(--playlistsColor);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-bottom: 10px;\r\n    transition: 0.2s;\r\n\r\n    svg {\r\n      width: 30px;\r\n      height: 30px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CreatePlaylist = () => {\r\n  const { toggleModal, setContent } = useModal();\r\n\r\n  return (\r\n    <CreatePlaylistWrapper\r\n      onClick={() => {\r\n        toggleModal();\r\n        setContent(<AddPlaylist />);\r\n      }}\r\n      className=\"playlistItem\"\r\n    >\r\n      <span className=\"add-circle\">\r\n        <FiPlus />\r\n      </span>\r\n      <span className=\"text\">Add playlist</span>\r\n    </CreatePlaylistWrapper>\r\n  );\r\n};\r\n\r\nexport default CreatePlaylist;\r\n","import React, { useState } from \"react\";\r\nimport { ContentContainer } from \"../../../shared/ui/atoms/content-container\";\r\nimport { useSong } from \"../../../contexts/song\";\r\nimport { PlaylistItem } from \"../../../entities/playlist/ui/playlist-item\";\r\nimport SearchBar from \"../../../shared/ui/organisms/search-bar\";\r\nimport CreatePlaylist from \"../ui/atoms/create-playlist\";\r\n\r\nconst PlaylistsPage = () => {\r\n  const { yourPlaylists } = useSong();\r\n  const [playlistsDisplay, setPlaylistsDisplay] = useState(yourPlaylists);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"PlaylistsPage\">\r\n      <ContentContainer>\r\n        <div style={{ display: \"flex\" }} className=\"searchAndCreatePlaylist\">\r\n          <SearchBar\r\n            value={searchValue}\r\n            setValue={setSearchValue}\r\n            setResultPlaylists={setPlaylistsDisplay}\r\n            defaultSearchMode={\"playlists\"}\r\n            defaultPlaylistsListValue={yourPlaylists}\r\n            inputText=\"Search for playlist name\"\r\n          />\r\n        </div>\r\n        <div className=\"playlistsContainer\">\r\n          <CreatePlaylist />\r\n          {playlistsDisplay &&\r\n            playlistsDisplay.map((playlist, index) => {\r\n              return <PlaylistItem playlist={playlist} key={playlist.id} />;\r\n            })}\r\n        </div>\r\n      </ContentContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlaylistsPage;\r\n","export const findVisiblePlaylists = (screenWidth) => {\r\n\tif(screenWidth < 1990 && screenWidth >= 1780) return 7\r\n\telse if(screenWidth < 1780 && screenWidth >= 1570) return 6\r\n\telse if(screenWidth < 1570 && screenWidth >= 1360) return 5\r\n\telse if(screenWidth < 1360 && screenWidth >= 1150) return 4\r\n\telse if(screenWidth < 1150 && screenWidth >= 1000) return 3\r\n\telse if(screenWidth < 1000 && screenWidth >= 892) return 6\r\n\telse if(screenWidth < 892 && screenWidth >= 754) return 5\r\n\telse if(screenWidth < 754 && screenWidth >= 614) return 4\r\n\telse if(screenWidth < 614 && screenWidth >= 464) return 3\r\n\telse return 2\r\n}","export default __webpack_public_path__ + \"static/media/wave2.f62cb572.svg\";","import React, { useState } from \"react\";\r\nimport { BiAlbum } from \"react-icons/bi\";\r\nimport { BsPauseFill, BsPlayFill } from \"react-icons/bs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useScreen } from \"../../../../contexts/screen\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { usePlaylistSongs } from \"../../../../entities/playlist/lib/hooks/use-playlist-songs\";\r\nimport getShortString from \"../../../../shared/lib/get-short-string\";\r\nexport const LibraryPlaylistItem = ({ playlist }) => {\r\n  const { currentSongPlaylistSource, play } = useSong();\r\n  const { isMobile } = useScreen();\r\n  const [playlistSongs, setPlaylistSongs] = useState([]);\r\n  const playSongsInPlaylist = usePlaylistSongs(\r\n    playlist,\r\n    playlistSongs,\r\n    setPlaylistSongs\r\n  );\r\n\r\n  return (\r\n    <Link to={`/albums/${playlist.id}`} className=\"playlistWrapper\">\r\n      <div\r\n        className=\"library playlistItem\"\r\n        style={{ backgroundImage: `url(${playlist.image})` }}\r\n      >\r\n        <h2 style={{ background: playlist.imageColors[2] }}>\r\n          {getShortString(playlist.name, 10)}\r\n        </h2>\r\n        {!playlist.image ? (\r\n          <BiAlbum\r\n            style={{\r\n              position: \"absolute\",\r\n              left: \"50%\",\r\n              top: \"50%\",\r\n              transform: \"translate(-50%, -50%)\",\r\n              width: \"60px\",\r\n              height: \"60px\",\r\n            }}\r\n          />\r\n        ) : null}\r\n        {!isMobile ? (\r\n          <button onClick={playSongsInPlaylist}>\r\n            {currentSongPlaylistSource.name === playlist.name && play ? (\r\n              <BsPauseFill />\r\n            ) : (\r\n              <BsPlayFill />\r\n            )}\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FiPlus } from \"react-icons/fi\";\r\nimport { useAuth } from \"../../../contexts/auth\";\r\nimport { useModal } from \"../../../contexts/modal\";\r\nimport { useScreen } from \"../../../contexts/screen\";\r\nimport { useSong } from \"../../../contexts/song\";\r\nimport { AddPlaylist } from \"../../../features/author/ui/organisms/add-playlist\";\r\nimport { findVisiblePlaylists } from \"../../../features/library/lib/find-visible-playlists\";\r\nimport { SongList } from \"../../../features/song/ui/templates/song-list\";\r\nimport Button from \"../../../shared/ui/atoms/button\";\r\nimport wave from \"../../../shared/ui/images/wave2.svg\";\r\nimport { LibraryPlaylistItem } from \"../ui/molecules/library-playlist-item\";\r\n\r\nconst SongsPage = () => {\r\n  const { yourSongs, yourPlaylists } = useSong();\r\n  const { currentUser } = useAuth();\r\n  const { screenWidth } = useScreen();\r\n  const { toggleModal, setContent } = useModal();\r\n  const [playlistsVisible, setPlaylistsVisible] = useState(\r\n    findVisiblePlaylists(screenWidth)\r\n  );\r\n  useEffect(() => {\r\n    setPlaylistsVisible(findVisiblePlaylists(screenWidth));\r\n  }, [screenWidth]);\r\n  return (\r\n    <div className=\"SongsPage\">\r\n      <div className=\"playLists\">\r\n        <div className=\"playlistContent\">\r\n          {yourPlaylists.length ? (\r\n            yourPlaylists.map((p, index) => {\r\n              if (index < playlistsVisible) {\r\n                return <LibraryPlaylistItem playlist={p} key={index} />;\r\n              }\r\n            })\r\n          ) : (\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"50%\",\r\n                top: \"40%\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                transform: \"translate(-50%, -50%)\",\r\n              }}\r\n            >\r\n              <h3>You don't have playlists</h3>\r\n              <Button\r\n                text=\"Add playlist\"\r\n                icon={<FiPlus />}\r\n                onClick={() => {\r\n                  toggleModal();\r\n                  setContent(<AddPlaylist />);\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"playlistsBackground\">\r\n          <img loading=\"lazy\" src={wave} alt=\"wave\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"yourSongsList\">\r\n        <SongList\r\n          listOfSongs={yourSongs}\r\n          source={{\r\n            source: \"/library\",\r\n            name: \"Your Library\",\r\n            image: currentUser.photoURL,\r\n            songsList: yourSongs,\r\n          }}\r\n          showSearch\r\n          showhistory\r\n          displayIfEmpty={<h3>Your library is empty</h3>}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SongsPage;\r\n","import React, { useState } from \"react\";\r\nimport { Slider } from \"../../shared/ui/molecules/slider\";\r\nimport \"./ui/style.css\";\r\nimport { AuthorsPage, PlaylistsPage, SongsPage } from \"./pages\";\r\n\r\nconst LibraryPage = () => {\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const libraryPages = [<SongsPage />, <PlaylistsPage />, <AuthorsPage />];\r\n  return (\r\n    <div className=\"LibraryPage\" style={{ animation: \"zoomIn .2s forwards\" }}>\r\n      <Slider\r\n        pages={[\"Songs\", \"Playlists\", \"Authors\"]}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n      {libraryPages[currentPage]}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibraryPage;\r\n","import React from \"react\";\r\nimport Logo from \"../../ui/images/Logo3.svg\";\r\nexport const TitleAndLogo = ({ title }) => {\r\n  return (\r\n    <div className=\"titleAndLogo\">\r\n      <div className=\"title\">\r\n        <h1>{title}</h1>\r\n      </div>\r\n      <div className=\"logo\">\r\n        <img loading=\"lazy\" src={Logo} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\n\r\nexport const ErrorPlate = ({ errorMessage }) => {\r\n  const { openBottomMessage } = useModal();\r\n  useEffect(() => {\r\n    if (errorMessage) {\r\n      openBottomMessage(errorMessage, \"failure\");\r\n    }\r\n  }, [errorMessage]);\r\n  return errorMessage && <div className=\"Alert\">{errorMessage}</div>;\r\n};\r\n","import React from 'react'\r\n\r\nexport const BlurredBg = () => {\r\n\treturn (\r\n\t\t<div className = \"BlurredBg\">\r\n\t\t\t<div className=\"circle circle1\"></div>\r\n\t\t\t<div className=\"circle circle2\"></div>\r\n\t\t\t<div className=\"circle circle3\"></div>\r\n\t\t\t<div className=\"circle circle4\"></div>\r\n\t\t\t<div className=\"circle circle5\"></div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TitleAndLogo } from \"../../shared/ui/atoms/title-and-logo\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\nimport { FullScreenLoading } from \"../../features/loading/ui/atoms/full-screen-loading\";\r\nimport { ErrorPlate } from \"../../features/login/ui/atoms/error-plate\";\r\nimport { SIGNUP_ROUTE } from \"../../shared/data/consts\";\r\nimport { BlurredBg } from \"../../shared/ui/atoms/blurred-background\";\r\nimport Input from \"../../shared/ui/atoms/input\";\r\n\r\nconst LogInPage = () => {\r\n  const { login } = useAuth();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const isValid = email.length !== 0 && password.length !== 0;\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!isValid) {\r\n      return setErrorMessage(\"One of your fields is totaly empty\");\r\n    }\r\n    await login(email, password, setErrorMessage, setLoading);\r\n  }\r\n  return (\r\n    <div className=\"In-Up-Container\">\r\n      <div className=\"CentralPlate\">\r\n        <FullScreenLoading loading={loading} />\r\n        <TitleAndLogo title=\"Log In\" />\r\n        <ErrorPlate errorMessage={errorMessage} />\r\n        <div className=\"inner-plate-content\">\r\n          <Input\r\n            type=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            setValue={setEmail}\r\n            margin\r\n          />\r\n          <Input\r\n            type=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={password}\r\n            setValue={setPassword}\r\n            margin\r\n          />\r\n          <div className=\"inAndUpBtns\">\r\n            <button className=\"upBtn\" disabled={loading} onClick={handleSubmit}>\r\n              Log In\r\n            </button>\r\n            <Link to={SIGNUP_ROUTE}>\r\n              <button className=\"inBtn\">Create new account</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <BlurredBg />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogInPage;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LyricsWrapper = styled.div`\r\n  max-height: 500px;\r\n  width: 1000px;\r\n  overflow-y: auto;\r\n\r\n  .lyricsBlock {\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n    font-size: 1.8em;\r\n    font-weight: 700;\r\n    margin: 10px 0;\r\n    user-select: none;\r\n    cursor: pointer;\r\n    border-radius: var(--standartBorderRadius2);\r\n\r\n    &:hover {\r\n      background: #ffffff5c;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Lyrics = ({ song }) => {\r\n  return (\r\n    <LyricsWrapper>\r\n      {song.lyrics.map((lyricItem, i) => {\r\n        return <div className=\"lyricsBlock\">{lyricItem.text}</div>;\r\n      })}\r\n    </LyricsWrapper>\r\n  );\r\n};\r\n\r\nexport default Lyrics;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SongImageAndNameWrapper = styled.div`\r\n  width: 100%;\r\n  max-width: 800px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .song-image {\r\n    width: 300px;\r\n    height: 300px;\r\n    background-size: cover;\r\n    background-position: center center;\r\n    border-radius: var(--standartBorderRadius);\r\n  }\r\n`;\r\n\r\nconst SongImageAndName = ({ song }) => {\r\n  return (\r\n    <SongImageAndNameWrapper>\r\n      <div\r\n        className=\"song-image\"\r\n        style={{ backgroundImage: `url(${song.cover})` }}\r\n      />\r\n      <h3>{song.name}</h3>\r\n    </SongImageAndNameWrapper>\r\n  );\r\n};\r\n\r\nexport default SongImageAndName;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ContentContainer } from \"../../shared/ui/atoms/content-container\";\r\nimport Lyrics from \"../../features/lyrics-editing/ui/molecules/lyrics\";\r\nimport SongImageAndName from \"../../features/lyrics-editing/ui/molecules/song-image-and-name\";\r\nimport { firestore } from \"../../firebase\";\r\n\r\nconst LyricsEditingWrapper = styled(ContentContainer)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  background: ${({ colors }) =>\r\n    `linear-gradient(45deg, ${colors[2]}, ${colors[3]});`};\r\n\r\n  h2 {\r\n    margin: 0;\r\n  }\r\n\r\n  .image-and-lyrics {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst LyricsEditingPage = () => {\r\n  const [songId, setSongId] = useState(\"3e35c47f-2186-4dea-a415-55616c525874\");\r\n  const [songData, setSongData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    firestore\r\n      .collection(\"songs\")\r\n      .doc(songId)\r\n      .get()\r\n      .then((res) => {\r\n        setSongData(res.data());\r\n      });\r\n  }, []);\r\n\r\n  //TODO: Wave visualizer?\r\n  return (\r\n    !!songData && (\r\n      <LyricsEditingWrapper colors={songData.imageColors}>\r\n        <div>\r\n          <div className=\"image-and-lyrics\">\r\n            <SongImageAndName song={songData} />\r\n            <Lyrics song={songData} />\r\n          </div>\r\n          <div></div>\r\n        </div>\r\n      </LyricsEditingWrapper>\r\n    )\r\n  );\r\n};\r\n\r\nexport default LyricsEditingPage;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nconst PageNotFound = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"PageNotFound\">\r\n      <img\r\n        loading=\"lazy\"\r\n        src=\"https://i.pinimg.com/originals/b2/3d/f6/b23df649311586e74a8455c92eb3d76b.png\"\r\n        alt=\"\"\r\n      />\r\n      <h2>Page not found</h2>\r\n      <button\r\n        className=\"standartButton\"\r\n        onClick={() => history.push(\"/library\")}\r\n      >\r\n        Back to library\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { firestore } from \"../../../../firebase\";\r\n\r\nconst useSearchHistory = () => {\r\n  const [historySongs, setHistorySongs] = useState([]);\r\n  const [historyPlaylists, setHistoryPlaylists] = useState([]);\r\n  const [historyAuthors, setHistoryAuthors] = useState([]);\r\n  const { currentUser } = useAuth();\r\n  useEffect(() => {\r\n    firestore\r\n      .collection(\"searchHistory\")\r\n      .doc(currentUser.uid)\r\n      .get()\r\n      .then((res) => {\r\n        if (res.data()?.history) {\r\n          res.data().history.forEach(async ({ id, type }) => {\r\n            const itemData = (\r\n              await firestore.collection(type).doc(id).get()\r\n            ).data();\r\n            switch (type) {\r\n              case \"songs\":\r\n                setHistorySongs((prev) => [...prev, itemData]);\r\n                break;\r\n              case \"playlists\":\r\n                setHistoryPlaylists((prev) => [...prev, itemData]);\r\n                break;\r\n              case \"users\":\r\n                setHistoryAuthors((prev) => [...prev, itemData]);\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n          });\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return [historySongs, historyPlaylists, historyAuthors];\r\n};\r\n\r\nexport default useSearchHistory;\r\n","import React from \"react\";\r\nimport { AlbumList } from \"../../../album/ui/template/album-list\";\r\nimport { AuthorsList } from \"../../../../features/author/ui/templates/authors-list\";\r\nimport { SongList } from \"../../../../features/song/ui/templates/song-list\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport useSearchHistory from \"../../lib/hooks/use-search-history.jsx\";\r\n\r\nconst SearchHistory = () => {\r\n  const { searchValue } = useAuth();\r\n  const [historySongs, historyPlaylists, historyAuthors] = useSearchHistory();\r\n  return !searchValue ? (\r\n    <div\r\n      className=\"search-history\"\r\n      style={{ animation: \"zoomIn .2s forwards\" }}\r\n    >\r\n      <SongList\r\n        listOfSongs={historySongs}\r\n        source={{\r\n          source: \"/search\",\r\n          name: \"Search\",\r\n          image:\r\n            \"https://www.pngkey.com/png/full/87-872187_lupa-search-icon-white-png.png\",\r\n          songsList: historySongs,\r\n        }}\r\n        title={\"Search history\"}\r\n        showListens\r\n        displayIfEmpty={\"\"}\r\n        isHorizontal\r\n      />\r\n      <AuthorsList listOfAuthors={historyAuthors} />\r\n      <AlbumList listOfAlbums={historyPlaylists} loading={false} />\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default SearchHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport SearchBar from \"../../shared/ui/organisms/search-bar\";\r\nimport { ContentContainer } from \"../../shared/ui/atoms/content-container\";\r\nimport { AlbumList } from \"../../features/album/ui/template/album-list\";\r\nimport { AuthorsList } from \"../../features/author/ui/templates/authors-list\";\r\nimport { SongList } from \"../../features/song/ui/templates/song-list\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\nimport SearchHistory from \"../../features/search/ui/organisms/search-history\";\r\nimport \"./style.css\";\r\n\r\nconst SearchPage = () => {\r\n  const { searchValue, setSearchValue } = useAuth();\r\n  const [resultSongList, setResultSongList] = useState([]);\r\n  const [resultAuthorList, setResultAuthorList] = useState([]);\r\n  const [resultAlbumList, setResultAlbumList] = useState([]);\r\n  const [shadowColor, setShadowColor] = useState(\"\");\r\n  useEffect(() => {\r\n    setResultSongList([]);\r\n    setResultAuthorList([]);\r\n    setResultAlbumList([]);\r\n  }, [searchValue]);\r\n\r\n  useEffect(() => {\r\n    if (resultSongList.length !== 0)\r\n      setShadowColor(resultSongList[0].imageColors[0] + \"a6\");\r\n    else if (resultAuthorList.length !== 0)\r\n      setShadowColor(resultAuthorList[0].imageColors[0] + \"a6\");\r\n    else if (resultAlbumList.length !== 0)\r\n      setShadowColor(resultAlbumList[0].imageColors[0] + \"a6\");\r\n    else setShadowColor(\"\");\r\n  }, [resultSongList, resultAuthorList, resultAlbumList]);\r\n\r\n  return (\r\n    <div\r\n      className=\"SearchPage\"\r\n      style={{\r\n        animation: \"zoomIn .2s forwards\",\r\n      }}\r\n    >\r\n      <ContentContainer>\r\n        <SearchBar\r\n          value={searchValue}\r\n          setValue={setSearchValue}\r\n          allFoundSongs={resultSongList}\r\n          setAllFoundSongs={setResultSongList}\r\n          setResultPlaylists={setResultAlbumList}\r\n          setResultAuthorList={setResultAuthorList}\r\n          focus\r\n        />\r\n        <SearchHistory />\r\n        <SongList\r\n          listOfSongs={resultSongList}\r\n          source={{\r\n            source: \"/search\",\r\n            name: \"Search\",\r\n            image:\r\n              \"https://www.pngkey.com/png/full/87-872187_lupa-search-icon-white-png.png\",\r\n            songsList: resultSongList,\r\n          }}\r\n          title={\"Songs\"}\r\n          showListens\r\n          saveSearchHistory\r\n          displayIfEmpty={\"\"}\r\n          isHorizontal\r\n        />\r\n        <AuthorsList\r\n          listOfAuthors={resultAuthorList}\r\n          title={\"Authors\"}\r\n          saveSearchHistory\r\n        />\r\n        <AlbumList\r\n          listOfAlbums={resultAlbumList}\r\n          title={\"Albums and Playlists\"}\r\n          loading={false}\r\n          saveSearchHistory\r\n        />\r\n        <div\r\n          className=\"colorfullShadow\"\r\n          style={{ background: shadowColor }}\r\n        ></div>\r\n      </ContentContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","import React from \"react\";\r\n\r\nconst AccountSettings = () => {\r\n  return <div>Account</div>;\r\n};\r\n\r\nexport default AccountSettings;\r\n","import React from 'react'\r\n\r\nexport const SwitchToggle = ({boolValue, setBoolValue}) => {\r\n\treturn (\r\n\t\t<div className = \"SwitchToggle\" onClick = {()=>setBoolValue(!boolValue)}>\r\n\t\t\t<div className=\"switchInnerCircle\" style = {boolValue?{transform:'translateX(100%)', background:'var(--green)'}:{}}></div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { SwitchToggle } from \"../molecules/switch-toggle\";\r\n\r\nconst SettingsItemWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  transition: 0.2s;\r\n  padding: 20px 50px;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 2px;\r\n    bottom: 0;\r\n    left: 0%;\r\n    /* transform: translateX(-50%); */\r\n    background: #313131;\r\n  }\r\n\r\n  .icon-and-text {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    user-select: none;\r\n\r\n    svg {\r\n      margin-right: 7px;\r\n      width: 20px;\r\n      height: 20px;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    background: var(--leftSideBarColor);\r\n  }\r\n`;\r\n\r\nconst SettingsItem = ({ icon, text, action }) => {\r\n  const [boolValue, setBoolValue] = useState(false);\r\n\r\n  const handleChangeToggle = (val) => {\r\n    setBoolValue(val);\r\n    if (val && !!action) action();\r\n  };\r\n\r\n  return (\r\n    <SettingsItemWrapper onClick={() => handleChangeToggle(!boolValue)}>\r\n      <div className=\"icon-and-text\">\r\n        {icon}\r\n        {text}\r\n      </div>\r\n      <SwitchToggle boolValue={boolValue} setBoolValue={handleChangeToggle} />\r\n    </SettingsItemWrapper>\r\n  );\r\n};\r\n\r\nexport default SettingsItem;\r\n","import React from \"react\";\r\nimport { FiBell } from \"react-icons/fi\";\r\nimport SettingsItem from \"../atoms/settings-item\";\r\n\r\nconst ChatSettings = () => {\r\n  return (\r\n    <>\r\n      <SettingsItem icon={<FiBell />} text={\"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\"} />\r\n      <SettingsItem icon={<FiBell />} text={\"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\"} />\r\n      <SettingsItem icon={<FiBell />} text={\"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\"} />\r\n      <SettingsItem icon={<FiBell />} text={\"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\"} />\r\n      <SettingsItem icon={<FiBell />} text={\"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\"} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatSettings;\r\n","import React from \"react\";\r\n\r\nconst MusicSettings = () => {\r\n  return <div>Music</div>;\r\n};\r\n\r\nexport default MusicSettings;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport AccountSettings from \"../orgamisms/account-settings\";\r\nimport ChatSettings from \"../orgamisms/chat-settings\";\r\nimport MusicSettings from \"../orgamisms/music-settings\";\r\n\r\nconst SettingsListWrapper = styled.div`\r\n  width: 85%;\r\n  height: 100px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst SettingsList = ({ currentPage }) => {\r\n  const settingsPages = [\r\n    <AccountSettings />,\r\n    <MusicSettings />,\r\n    <ChatSettings />,\r\n  ];\r\n  return (\r\n    <SettingsListWrapper>{settingsPages[currentPage]}</SettingsListWrapper>\r\n  );\r\n};\r\n\r\nexport default SettingsList;\r\n","import styled from \"styled-components\";\r\n\r\nconst SettingsSectionItemWrapper = styled.button`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  /* transition: 0.1s; */\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n  background: ${({ isActive }) =>\r\n    isActive ? \"var(--lightBlue)\" : \"transparent\"};\r\n  color: #fff;\r\n  font-weight: 600;\r\n\r\n  svg {\r\n    margin-right: 7px;\r\n    width: 16px;\r\n    height: 16px;\r\n  }\r\n  /* \r\n  &:hover {\r\n    background: var(--leftSideBarColor);\r\n  } */\r\n`;\r\n\r\nconst SettingsSectionItem = ({ icon, text, onClick, isActive }) => {\r\n  return (\r\n    <SettingsSectionItemWrapper onClick={onClick} isActive={isActive}>\r\n      {icon}\r\n      {text}\r\n    </SettingsSectionItemWrapper>\r\n  );\r\n};\r\n\r\nexport default SettingsSectionItem;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SettingsSectionItem from \"../atoms/settings-section-item\";\r\nimport { BiMusic } from \"react-icons/bi\";\r\nimport { FiMessageCircle, FiUser } from \"react-icons/fi\";\r\n\r\nconst SettingsSectionsWrapper = styled.div`\r\n  width: 15%;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  background: var(--leftSideBarColor);\r\n`;\r\n\r\nconst SettingsSections = ({ currentPage, setCurrentPage }) => {\r\n  return (\r\n    <SettingsSectionsWrapper>\r\n      <SettingsSectionItem\r\n        icon={<FiUser />}\r\n        text={\"Account\"}\r\n        onClick={() => setCurrentPage(0)}\r\n        isActive={currentPage === 0}\r\n      />\r\n      <SettingsSectionItem\r\n        icon={<BiMusic />}\r\n        text={\"Music\"}\r\n        onClick={() => setCurrentPage(1)}\r\n        isActive={currentPage === 1}\r\n      />\r\n      <SettingsSectionItem\r\n        icon={<FiMessageCircle />}\r\n        text={\"Chat\"}\r\n        onClick={() => setCurrentPage(2)}\r\n        isActive={currentPage === 2}\r\n      />\r\n      <SettingsSectionItem\r\n        icon={<BiMusic />}\r\n        text={\"Music\"}\r\n        onClick={() => setCurrentPage(3)}\r\n        isActive={currentPage === 3}\r\n      />\r\n    </SettingsSectionsWrapper>\r\n  );\r\n};\r\n\r\nexport default SettingsSections;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ContentContainer } from \"../../shared/ui/atoms/content-container\";\r\nimport SettingsList from \"./ui/molecules/settings-list\";\r\nimport SettingsSections from \"./ui/molecules/settings-sections\";\r\n\r\nconst SettingsPageWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst SettingsPage = () => {\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  return (\r\n    <ContentContainer>\r\n      <h2>Settings</h2>\r\n      <SettingsPageWrapper>\r\n        <SettingsSections\r\n          setCurrentPage={setCurrentPage}\r\n          currentPage={currentPage}\r\n        />\r\n        <SettingsList currentPage={currentPage} />\r\n      </SettingsPageWrapper>\r\n    </ContentContainer>\r\n  );\r\n};\r\n\r\nexport default SettingsPage;\r\n","import { CHAT_ROUTE, HISTORY_ROUTE, HOME_ROUTE, LIBRARY_ROUTE, LOGIN_ROUTE, NOTFOUND_ROUTE, SEARCH_ROUTE, SIGNUP_ROUTE, TEMPLATE_ALBUM, TEMPLATE_AUTHOR, TEMPLATE_CHAT, SETTINGS_ROUTE, LYRICS_EDITING_ROUTE } from \"../shared/data/consts\";\r\nimport { LibraryPage, ChatPage, PageNotFound, AlbumPage, DialoguePage, AuthorPage, LogInPage, HomePage, SearchPage, HistoryPage, SettingsPage, SignUpPage, LyricsEditingPage } from \"../pages\";\r\nexport const publicRoutes = [\r\n\t{\r\n\t\tpath: LOGIN_ROUTE,\r\n\t\tComponent: LogInPage,\r\n\t},\r\n\t{\r\n\t\tpath: SIGNUP_ROUTE,\r\n\t\tComponent: SignUpPage,\r\n\t}\r\n]\r\n\r\nexport const privateRoutes = [\r\n\t{\r\n\t\tpath: HOME_ROUTE,\r\n\t\tComponent: HomePage,\r\n\t},\r\n\t{\r\n\t\tpath: LIBRARY_ROUTE,\r\n\t\tComponent: LibraryPage,\r\n\t},\r\n\t{\r\n\t\tpath: SEARCH_ROUTE,\r\n\t\tComponent: SearchPage,\r\n\t},\r\n\t{\r\n\t\tpath: CHAT_ROUTE,\r\n\t\tComponent: ChatPage,\r\n\t},\r\n\t{\r\n\t\tpath: NOTFOUND_ROUTE,\r\n\t\tComponent: PageNotFound\r\n\t},\r\n\t{\r\n\t\tpath: TEMPLATE_CHAT,\r\n\t\tComponent: DialoguePage\r\n\t},\r\n\t{\r\n\t\tpath: TEMPLATE_ALBUM,\r\n\t\tComponent: AlbumPage\r\n\t},\r\n\t{\r\n\t\tpath: TEMPLATE_AUTHOR,\r\n\t\tComponent: AuthorPage\r\n\t},\r\n\t{\r\n\t\tpath: HISTORY_ROUTE,\r\n\t\tComponent: HistoryPage\r\n\t},\r\n\t{\r\n\t\tpath: SETTINGS_ROUTE,\r\n\t\tComponent: SettingsPage\r\n\t},\r\n\t{\r\n\t\tpath: LYRICS_EDITING_ROUTE,\r\n\t\tComponent: LyricsEditingPage\r\n\t}\r\n]","import React, { useState } from \"react\";\r\nimport { ColorExtractor } from \"react-color-extractor\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FullScreenLoading } from \"../../features/loading/ui/atoms/full-screen-loading\";\r\nimport { TitleAndLogo } from \"../../shared/ui/atoms/title-and-logo\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\nimport { BlurredBg } from \"../../shared/ui/atoms/blurred-background\";\r\nimport DownloadButton from \"../../shared/ui/atoms/download-button\";\r\nimport Input from \"../../shared/ui/atoms/input\";\r\nimport { RadioBtn } from \"../../shared/ui/atoms/radio-button\";\r\nimport \"./style.css\";\r\nimport { LOGIN_ROUTE } from \"../../shared/data/consts\";\r\n\r\nconst SignUpPage = () => {\r\n  const [currentRoleChoice, setCurrentRoleChoice] = useState(1);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const { signup } = useAuth();\r\n  const [photoURL, setPhotoURL] = useState(\"\");\r\n  const isValid =\r\n    email.length !== 0 && password.length !== 0 && name.length !== 0;\r\n  const [imageLocalPath, setImageLocalPath] = useState(\"\");\r\n  const [imageColors, setImageColors] = useState([]);\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!isValid) {\r\n      return setErrorMessage(\"One of your fields is totaly empty\");\r\n    }\r\n\r\n    await signup(\r\n      email,\r\n      name,\r\n      password,\r\n      currentRoleChoice,\r\n      photoURL,\r\n      imageColors,\r\n      setErrorMessage,\r\n      setLoading\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"In-Up-Container\">\r\n      <ColorExtractor\r\n        src={imageLocalPath}\r\n        getColors={(colors) => setImageColors(colors)}\r\n      />\r\n      <div className=\"CentralPlate\">\r\n        <FullScreenLoading loading={loading} />\r\n        <TitleAndLogo title=\"Sign Up\" />\r\n\r\n        {errorMessage && <div className=\"Alert\">{errorMessage}</div>}\r\n\r\n        <div className=\"inner-plate-content\">\r\n          <Input\r\n            type=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            setValue={setEmail}\r\n            margin\r\n          />\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Enter your name\"\r\n            value={name}\r\n            setValue={setName}\r\n            margin\r\n          />\r\n          <Input\r\n            type=\"password\"\r\n            placeholder=\"Create password\"\r\n            value={password}\r\n            setValue={setPassword}\r\n            margin\r\n          />\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              margin: \"5px 0 15px 0\",\r\n            }}\r\n          >\r\n            <RadioBtn\r\n              label=\"User\"\r\n              onClick={() => setCurrentRoleChoice(0)}\r\n              currentActive={currentRoleChoice}\r\n              id={0}\r\n            />\r\n            <RadioBtn\r\n              label=\"Author\"\r\n              onClick={() => setCurrentRoleChoice(1)}\r\n              currentActive={currentRoleChoice}\r\n              id={1}\r\n            />\r\n          </div>\r\n          <DownloadButton\r\n            text=\"Download photo\"\r\n            place={\"usersImages/\"}\r\n            setItemSrc={setPhotoURL}\r\n            setImageLocalPath={setImageLocalPath}\r\n          />\r\n          <div className=\"inAndUpBtns\">\r\n            <button\r\n              className=\"upBtn\"\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              onClick={handleSubmit}\r\n            >\r\n              Sign Up\r\n            </button>\r\n            <Link to={LOGIN_ROUTE}>\r\n              <button className=\"inBtn\">Already registered</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <BlurredBg />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUpPage;\r\n","import React from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport { privateRoutes } from '../routes'\r\nimport { HOME_ROUTE } from '../../shared/data/consts'\r\n\r\nexport const ContentRouter = () => {\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t{privateRoutes.map(({ path, Component }, i) => {\r\n\t\t\t\treturn <Route path={path} component={Component} exact key={path} />\r\n\t\t\t})}\r\n\t\t\t<Redirect to={HOME_ROUTE} />\r\n\t\t</Switch>\r\n\t)\r\n}\r\n","import React from \"react\";\r\nimport { FaRegCheckCircle, FaRegTimesCircle } from \"react-icons/fa\";\r\nimport { useModal } from \"../../../contexts/modal\";\r\n\r\nexport const MessageWindow = () => {\r\n  const { bottomMessage } = useModal();\r\n\r\n  const findIcon = () => {\r\n    switch (bottomMessage.type) {\r\n      case \"success\":\r\n        return <FaRegCheckCircle />;\r\n      case \"failure\":\r\n        return <FaRegTimesCircle />;\r\n      default:\r\n        return <FaRegCheckCircle />;\r\n    }\r\n  };\r\n\r\n  const findColor = () => {\r\n    switch (bottomMessage.type) {\r\n      case \"success\":\r\n        return { light: \"#69e985\", dark: \"#12321ce6\" };\r\n      case \"failure\":\r\n        return { light: \"#f4546a\", dark: \"#581921d8\" };\r\n      default:\r\n        return { light: \"#69e985\", dark: \"#12321ce6\" };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`bottom-message ${bottomMessage.isOpenned ? \"openned\" : \"\"}`}\r\n      style={{ background: findColor().dark, color: findColor().light }}\r\n    >\r\n      {findIcon()}\r\n      <span>{bottomMessage.message}</span>\r\n    </div>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/notification.cdade1f4.mp3\";","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { LastSentMessage } from \"../molecules/last-sent-message\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport notifSound from \"../../../../shared/music/notification.mp3\";\r\n\r\nconst ChatNotificationWindowWrapper = styled.div`\r\n  color: #fff;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  border-radius: var(--standartBorderRadius2);\r\n  background: #000000b9;\r\n  position: absolute;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  transition: 0.2s;\r\n  transform: translateY(\r\n    ${({ show, index }) => (!show ? \"90px\" : `-${index * 90 + index * 10}px`)}\r\n  );\r\n  opacity: ${({ show }) => (show ? \"1\" : \"0\")};\r\n  width: 250px;\r\n  height: 90px;\r\n\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n\r\n  &:hover {\r\n    background: #1f1f1fb3;\r\n  }\r\n\r\n  .image-and-name {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    font-weight: bold;\r\n\r\n    img {\r\n      width: 25px;\r\n      height: 25px;\r\n      border-radius: 100%;\r\n      margin-right: 7px;\r\n    }\r\n  }\r\n\r\n  .message {\r\n    margin-top: 10px;\r\n    display: flex;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nconst ChatNotificationWindow = ({\r\n  chatId,\r\n  chatName,\r\n  chatImage,\r\n  message,\r\n  userId,\r\n  index,\r\n}) => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    firestore\r\n      .collection(\"users\")\r\n      .doc(userId)\r\n      .get()\r\n      .then((res) => {\r\n        setShow(true);\r\n        const notificationSound = new Audio(notifSound);\r\n        notificationSound.play();\r\n        setUserData(res.data());\r\n        setTimeout(() => {\r\n          setShow(false);\r\n        }, 6000);\r\n      });\r\n  }, []);\r\n\r\n  // TODO: –¥–æ–±–∞–≤–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–∫–ª—é—á–∏—Ç—å —Ç—Ä–µ–∫ –ø–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ –≤ –Ω–µ–º –µ—Å—Ç—å —Ç—Ä–µ–∫\r\n\r\n  return (\r\n    <ChatNotificationWindowWrapper show={show} index={index}>\r\n      <Link to={`/chat/${chatId}`}>\r\n        <div className=\"image-and-name\">\r\n          <img\r\n            src={chatImage?.length ? chatImage : userData?.photoURL}\r\n            alt=\"\"\r\n          />\r\n          {chatName.length ? chatName : userData?.displayName}\r\n        </div>\r\n        <div className=\"message\">\r\n          <LastSentMessage\r\n            sender={userData}\r\n            isGroup={chatName.length}\r\n            message={message}\r\n            messageLen={20}\r\n          />\r\n        </div>\r\n      </Link>\r\n    </ChatNotificationWindowWrapper>\r\n  );\r\n};\r\n\r\nexport default ChatNotificationWindow;\r\n","import React, { useRef } from \"react\";\r\nimport { useModal } from \"../../../contexts/modal\";\r\nimport useOutsideClick from \"../../../shared/lib/hooks/use-outside-click\";\r\n\r\nexport const ConfirmWindow = () => {\r\n  const { isOpenConfirm, confirmContent, setIsOpenConfirm } = useModal();\r\n  const confirmRef = useRef(null);\r\n  useOutsideClick(confirmRef, setIsOpenConfirm);\r\n  return (\r\n    <div\r\n      className=\"modal_darkBg confirm\"\r\n      style={!isOpenConfirm ? { opacity: 0, visibility: \"hidden\" } : {}}\r\n    >\r\n      <div\r\n        className=\"ConfirmWindow\"\r\n        ref={confirmRef}\r\n        style={!isOpenConfirm ? { transform: \"translateY(40px)\" } : {}}\r\n      >\r\n        <h3>{confirmContent.question}</h3>\r\n        <div className=\"confirmButtons\">\r\n          <button onClick={confirmContent.onConfirm} className=\"standartButton\">\r\n            {confirmContent.confirmText}\r\n          </button>\r\n          <button onClick={confirmContent.onReject} className=\"standartButton\">\r\n            {confirmContent.rejectText}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","function amountOfZeros(number) {\r\n\treturn number % 10 === number ? \"0\" + number : number\r\n}\r\n\r\nexport default function correctTimeDisplay(seconds) {\r\n\treturn amountOfZeros(Math.floor(seconds / 60)) + \":\" + amountOfZeros(Math.floor(seconds % 60))\r\n}","export function findLenOfAuthors(authors) {\r\n\tlet str = \"\"\r\n\tauthors.forEach(el => {str += el.displayName})\r\n\treturn str.length\r\n}","import React from \"react\";\r\nimport { FaBackward, FaForward, FaPause, FaPlay } from \"react-icons/fa\";\r\nimport { TiArrowRepeat, TiArrowShuffle } from \"react-icons/ti\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\n\r\nimport checkNumber from \"../../../../shared/lib/check-number\";\r\nimport displayTime from \"../../../../shared/lib/display-time\";\r\nimport displayAuthorsStr from \"../../../../shared/lib/display-authors-str\";\r\nimport ColorCircles from \"../atoms/color-circles\";\r\nimport { findLenOfAuthors } from \"../../lib/find-len-of-authors\";\r\nexport const Player = ({ inputRef, textLimit = 18, linkToAuthors = true }) => {\r\n  const {\r\n    currentSongData,\r\n    currentTime,\r\n    changeCurrentTime,\r\n    songDuration,\r\n    setRepeatMode,\r\n    repeatMode,\r\n    play,\r\n    prevSong,\r\n    playSong,\r\n    nextSong,\r\n    setShuffleMode,\r\n    shuffleMode,\r\n    displayAuthors,\r\n    name,\r\n    authors,\r\n    cover,\r\n    inputRange,\r\n  } = useSong();\r\n  return currentSongData.id !== -1 ? (\r\n    <div className=\"player\">\r\n      <div className=\"playerUpperSide\">\r\n        <div className=\"songCover\">\r\n          <img loading=\"lazy\" src={cover} alt=\"\" />\r\n        </div>\r\n        <div className=\"nameAndAuthors\">\r\n          <h2\r\n            title={name.length > textLimit ? name : null}\r\n            style={{ overflow: \"hidden\" }}\r\n          >\r\n            <div\r\n              style={\r\n                name.length > textLimit\r\n                  ? {\r\n                      animation: \"outSideText 17s infinite\",\r\n                      whiteSpace: \"nowrap\",\r\n                    }\r\n                  : {}\r\n              }\r\n            >\r\n              {name}\r\n            </div>\r\n          </h2>\r\n          <h3\r\n            style={{ overflow: \"hidden\" }}\r\n            title={authors.map((el) => \" \" + el.displayName)}\r\n          >\r\n            {linkToAuthors ? (\r\n              <div\r\n                style={\r\n                  findLenOfAuthors(currentSongData.authors) > textLimit\r\n                    ? {\r\n                        animation: \"outSideText 17s infinite\",\r\n                        whiteSpace: \"nowrap\",\r\n                      }\r\n                    : {}\r\n                }\r\n              >\r\n                {displayAuthors()}\r\n              </div>\r\n            ) : (\r\n              <div>{displayAuthorsStr(authors, \" & \", 33)}</div>\r\n            )}\r\n          </h3>\r\n        </div>\r\n      </div>\r\n      <div className=\"controlPanel\">\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          ref={inputRef}\r\n          step=\"1\"\r\n          value={currentTime}\r\n          onChange={(event) => {\r\n            changeCurrentTime(event);\r\n          }}\r\n          style={{\r\n            background: `linear-gradient(to right, var(--themeColor2) ${inputRange}%, #fff ${inputRange}%)`,\r\n          }}\r\n        />\r\n        <div className=\"startAndEndTime\">\r\n          <span>{displayTime(currentTime)}</span>\r\n          <span>{displayTime(songDuration)}</span>\r\n        </div>\r\n        <div className=\"btns\">\r\n          <button\r\n            className=\"shuffleBtn\"\r\n            onClick={() => setShuffleMode(checkNumber(shuffleMode + 1, 1))}\r\n            style={\r\n              shuffleMode ? { background: \"var(--reallyTransparentWhite)\" } : {}\r\n            }\r\n          >\r\n            <TiArrowShuffle\r\n              style={shuffleMode ? { color: \"var(--themeColor)\" } : {}}\r\n            />\r\n          </button>\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              prevSong();\r\n            }}\r\n          >\r\n            <FaBackward />\r\n          </button>\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              playSong();\r\n            }}\r\n          >\r\n            {play ? <FaPause /> : <FaPlay />}\r\n          </button>\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              nextSong();\r\n            }}\r\n          >\r\n            <FaForward />\r\n          </button>\r\n          <button\r\n            className=\"repeatBtn\"\r\n            onClick={() => setRepeatMode(checkNumber(repeatMode + 1, 2))}\r\n            style={\r\n              repeatMode ? { background: \"var(--reallyTransparentWhite)\" } : {}\r\n            }\r\n          >\r\n            <TiArrowRepeat\r\n              style={repeatMode ? { color: \"var(--themeColor)\" } : {}}\r\n            />\r\n            <span style={repeatMode === 2 ? { opacity: 1 } : {}}></span>\r\n          </button>\r\n          <ColorCircles play={play} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n","import React from 'react'\r\n\r\nexport const Loading = ({currentTime, timeSpan, id}) => {\r\n\treturn (\r\n\t\t<div className = \"Loading\" id = {id}>\r\n\t\t\t<div className=\"outer\" style = {{pointerEvents:'none'}}>\r\n\t\t\t\t<div className=\"inner\" style = {currentTime/timeSpan < 1?{width:(currentTime/timeSpan)*100 + \"%\"}:{width:0 + \"%\", opacity:'0'}}></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { Loading } from \"../atoms/loading\";\r\nimport { BiCheckCircle, BiDownArrow, BiUpArrow } from \"react-icons/bi\";\r\nimport { FiXCircle } from \"react-icons/fi\";\r\nimport useOnScreen from \"../../../../shared/lib/hooks/use-on-screen\";\r\n\r\nexport const LyricsParagraph = ({\r\n  el,\r\n  index,\r\n  lyricsModeratorMode,\r\n  karaokeModeratorTimes,\r\n  setKaraokeModeratorTimes,\r\n  setInputKaraokeTime,\r\n  inputKaraokeTime,\r\n}) => {\r\n  const {\r\n    currentSongData,\r\n    currentParagraph,\r\n    displayAuthors,\r\n    changeCurrentTime,\r\n    play,\r\n    currentTime,\r\n    currentParagraphRef,\r\n    lyrics,\r\n  } = useSong();\r\n  const paragraphRef = useRef();\r\n  const isVisible = useOnScreen(\r\n    currentParagraph === index ? currentParagraphRef : paragraphRef\r\n  );\r\n  const paragraphStyle =\r\n    currentParagraph === index\r\n      ? {}\r\n      : window.innerWidth > 1000\r\n      ? Math.abs(currentParagraph - index) < 2\r\n        ? { transform: \"scale(.8) translateX(-58px)\" }\r\n        : { transform: \"scale(.75) translateX(-78px)\" }\r\n      : Math.abs(currentParagraph - index) < 2\r\n      ? { transform: \"scale(.8) translateX(-11.5%)\" }\r\n      : { transform: \"scale(.75) translateX(-15.6%)\" };\r\n\r\n  function addLyricsBlock(indexOfRelativeElement, direction) {\r\n    const tempTimes = karaokeModeratorTimes;\r\n    if (direction === \"down\") {\r\n      tempTimes.splice(indexOfRelativeElement + 1, 0, undefined);\r\n      setKaraokeModeratorTimes(tempTimes);\r\n      return currentSongData.lyrics.splice(indexOfRelativeElement + 1, 0, {\r\n        startTime: \"undefined\",\r\n        text: \"@loading\",\r\n      });\r\n    }\r\n\r\n    tempTimes.splice(indexOfRelativeElement, 0, undefined);\r\n    setKaraokeModeratorTimes(tempTimes);\r\n    currentSongData.lyrics.splice(indexOfRelativeElement, 0, {\r\n      startTime: \"undefined\",\r\n      text: \"@loading\",\r\n    });\r\n  }\r\n\r\n  function inputKaraoke(e, index) {\r\n    let tempArray = karaokeModeratorTimes;\r\n    let convertedToNumber = e.target.value;\r\n    tempArray[index] = convertedToNumber;\r\n    setInputKaraokeTime(e.target.value);\r\n    setKaraokeModeratorTimes(tempArray);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\"lyricsBlock \" + (!isVisible ? \"notVisible\" : \"\")}\r\n      key={index}\r\n      id={index}\r\n      onClick={(e) => changeCurrentTime(e, el.startTime)}\r\n      style={\r\n        play\r\n          ? currentParagraph === index\r\n            ? {}\r\n            : Math.abs(currentParagraph - index) < 2\r\n            ? { opacity: 0.5 }\r\n            : { opacity: 0.1 }\r\n          : {}\r\n      }\r\n      ref={currentParagraph === index ? currentParagraphRef : paragraphRef}\r\n    >\r\n      {lyricsModeratorMode === 1 ? (\r\n        <div className=\"lyricsBlockInput\">\r\n          <span onClick={(e) => e.stopPropagation()}>\r\n            {karaokeModeratorTimes[index] !== undefined &&\r\n            karaokeModeratorTimes[index].length !== 0 ? (\r\n              <BiCheckCircle\r\n                style={{\r\n                  background: \"var(--themeColor3)\",\r\n                  color: \"var(--themeColor)\",\r\n                }}\r\n              />\r\n            ) : (\r\n              <FiXCircle />\r\n            )}{\" \"}\r\n          </span>\r\n          <input\r\n            type=\"number\"\r\n            value={karaokeModeratorTimes[index] || inputKaraokeTime}\r\n            onChange={(e) => inputKaraoke(e, index)}\r\n            onClick={(e) => e.stopPropagation()}\r\n          />\r\n          <div\r\n            className=\"addLyricsElementBtns\"\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            <button\r\n              onClick={() => {\r\n                addLyricsBlock(index, \"up\");\r\n              }}\r\n            >\r\n              <BiUpArrow />\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                addLyricsBlock(index, \"down\");\r\n              }}\r\n            >\r\n              <BiDownArrow />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n      {el.text === \"@loading\" ? (\r\n        <Loading\r\n          currentTime={currentTime - lyrics[index].startTime}\r\n          timeSpan={lyrics[index + 1].startTime - lyrics[index].startTime}\r\n          id={index}\r\n        />\r\n      ) : el.text === \"@end\" ? (\r\n        <></>\r\n      ) : (\r\n        <p key={index} id={index} style={paragraphStyle}>\r\n          {el.text}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { BiDotsVerticalRounded, BiShare } from 'react-icons/bi';\r\nimport { RiPlayListFill } from 'react-icons/ri';\r\nimport { TiDocumentText } from 'react-icons/ti';\r\nimport { SongInfo } from '../../features/song/ui/organisms/song-info';\r\nimport { AuthorsList } from '../../features/author/ui/templates/authors-list';\r\nimport { AddToPlaylists } from '../../features/full-screen-player/ui/molecules/add-to-playlists';\r\nimport { Options } from '../../features/full-screen-player/ui/organisms/options';\r\nimport { Queue } from '../../features/full-screen-player/ui/organisms/queue';\r\nimport { Share } from '../../features/full-screen-player/ui/organisms/share';\r\nimport { Lyrics } from '../../features/full-screen-player/ui/organisms/lyrics';\r\n\r\n\r\nexport const rightSide = [\r\n\t{\r\n\t\tid: 0,\r\n\t\ticon: <BiShare />,\r\n\t\ttitle: 'Share',\r\n\t\tcomponent: Share\r\n\t},\r\n\t{\r\n\t\tid: 1,\r\n\t\ticon: <BiDotsVerticalRounded />,\r\n\t\ttitle: 'More',\r\n\t\tcomponent: Options\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\ticon: <TiDocumentText />,\r\n\t\ttitle: 'Lyrics',\r\n\t\tcomponent: Lyrics\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\ticon: <RiPlayListFill />,\r\n\t\ttitle: 'Queue',\r\n\t\tcomponent: Queue\r\n\t},\r\n\t{\r\n\t\tid: 4,\r\n\t\ticon: null,\r\n\t\ttitle: 'Go To Authors',\r\n\t\tcomponent: AuthorsList\r\n\t},\r\n\t{\r\n\t\tid: 5,\r\n\t\ticon: null,\r\n\t\ttitle: 'Add to playlist',\r\n\t\tcomponent: AddToPlaylists\r\n\t},\r\n\t{\r\n\t\tid: 6,\r\n\t\ticon: null,\r\n\t\ttitle: 'Info',\r\n\t\tcomponent: SongInfo\r\n\t},\r\n]","import React from \"react\";\r\nimport { FaFacebookF, FaTelegramPlane, FaVk } from \"react-icons/fa\";\r\nimport { FiCopy } from \"react-icons/fi\";\r\nimport { AiFillInstagram } from \"react-icons/ai\";\r\nimport { ImWhatsapp } from \"react-icons/im\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { FriendsToShareWith } from \"../../../share/ui/organisms/friends-to-share-with\";\r\nexport const Share = () => {\r\n  const { currentSongData } = useSong();\r\n  const socialMedia = [\r\n    <ImWhatsapp />,\r\n    <FaFacebookF />,\r\n    <FaTelegramPlane />,\r\n    <FaVk />,\r\n    <AiFillInstagram />,\r\n  ];\r\n  return (\r\n    <div className=\"Share\">\r\n      <button className=\"shareCopyLink\">\r\n        <FiCopy />\r\n        Copy link\r\n      </button>\r\n      <div className=\"shareOnSocial\">\r\n        {socialMedia.map((social, index) => {\r\n          return (\r\n            <div className=\"shareSocialIcon\" key={index}>\r\n              {social}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"sharePeopleShort\">\r\n        <FriendsToShareWith item={currentSongData} whatToShare={\"song\"} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { MdPlaylistAdd } from \"react-icons/md\";\r\nimport { BiUserCircle } from \"react-icons/bi\";\r\nimport { FiInfo } from \"react-icons/fi\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport AddOrDeleteButtonFull from \"../molecules/add-or-delete-song-button\";\r\nexport const Options = () => {\r\n  const { currentSongData, setRightSideCurrentPage } = useSong();\r\n  return (\r\n    <div className=\"Options\">\r\n      <div className=\"OptionItem\">\r\n        <AddOrDeleteButtonFull song={currentSongData} />\r\n      </div>\r\n      <div className=\"OptionItem\" onClick={() => setRightSideCurrentPage(4)}>\r\n        <BiUserCircle />\r\n        Go to author\r\n      </div>\r\n      <div className=\"OptionItem\" onClick={() => setRightSideCurrentPage(5)}>\r\n        <MdPlaylistAdd />\r\n        Add to playlist\r\n      </div>\r\n      <div className=\"OptionItem\" onClick={() => setRightSideCurrentPage(6)}>\r\n        <FiInfo />\r\n        Info\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BiCheckCircle, BiDownArrow, BiUpArrow } from \"react-icons/bi\";\r\nimport { FiXCircle } from \"react-icons/fi\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport { Slider } from \"../../../../shared/ui/molecules/slider\";\r\nimport { LyricsParagraph } from \"../molecules/lyrics-paragraph\";\r\n\r\nexport const Lyrics = () => {\r\n  const {\r\n    setIsThereKaraoke,\r\n    currentSongData,\r\n    setCurrentSongData,\r\n    isThereKaraoke,\r\n    currentParagraph,\r\n    displayAuthors,\r\n    currentParagraphRef,\r\n    lyrics,\r\n    rightSideCurrentPage,\r\n    openFullScreenPlayer,\r\n    openMenu,\r\n  } = useSong();\r\n  const { currentUser } = useAuth();\r\n  const [inputKaraokeTime, setInputKaraokeTime] = useState(0);\r\n  const [karaokeModeratorTimes, setKaraokeModeratorTimes] = useState([]);\r\n  const [lyricsModeratorMode, setLyricsModeratorMode] = useState(0);\r\n  const [canUpdateLyrics, setCanUpdateLyrics] = useState(false);\r\n  useEffect(() => {\r\n    if (\r\n      isThereKaraoke &&\r\n      openMenu &&\r\n      rightSideCurrentPage === 2 &&\r\n      openFullScreenPlayer\r\n    )\r\n      currentParagraphRef.current.scrollIntoView();\r\n  }, [currentParagraph]);\r\n  function inputKaraoke(e, index) {\r\n    let tempArray = karaokeModeratorTimes;\r\n    let convertedToNumber = e.target.value;\r\n    tempArray[index] = convertedToNumber;\r\n    setInputKaraokeTime(e.target.value);\r\n    setKaraokeModeratorTimes(tempArray);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (lyrics && lyrics[0].startTime !== \"undefined\") {\r\n      lyrics.forEach((paragraph) => {\r\n        karaokeModeratorTimes.push(paragraph.startTime);\r\n      });\r\n      setCanUpdateLyrics(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let tempSongData = currentSongData;\r\n    if (tempSongData !== undefined && inputKaraokeTime !== 0) {\r\n      tempSongData.lyrics.forEach((paragraph, index) => {\r\n        paragraph.startTime = karaokeModeratorTimes[index] || \"undefined\";\r\n      });\r\n      setCurrentSongData(tempSongData);\r\n      setIsThereKaraoke(true);\r\n    }\r\n\r\n    if (\r\n      !currentSongData.lyrics?.some(\r\n        (paragraph) => paragraph.startTime === \"undefined\"\r\n      )\r\n    )\r\n      setCanUpdateLyrics(true);\r\n    else setCanUpdateLyrics(false);\r\n  }, [inputKaraokeTime]);\r\n  function updateLyrics() {\r\n    //TODO: add if statement to prevent adding lyrics time spans to not everysingle paragraph block\r\n    firestore.collection(\"songs\").doc(currentSongData.id).update({\r\n      lyrics: currentSongData.lyrics,\r\n    });\r\n  }\r\n\r\n  function addLyricsBlock(indexOfRelativeElement, direction) {\r\n    const tempTimes = karaokeModeratorTimes;\r\n    if (direction === \"down\") {\r\n      tempTimes.splice(indexOfRelativeElement + 1, 0, undefined);\r\n      setKaraokeModeratorTimes(tempTimes);\r\n      return currentSongData.lyrics.splice(indexOfRelativeElement + 1, 0, {\r\n        startTime: \"undefined\",\r\n        text: \"@loading\",\r\n      });\r\n    }\r\n\r\n    tempTimes.splice(indexOfRelativeElement, 0, undefined);\r\n    setKaraokeModeratorTimes(tempTimes);\r\n    currentSongData.lyrics.splice(indexOfRelativeElement, 0, {\r\n      startTime: \"undefined\",\r\n      text: \"@loading\",\r\n    });\r\n  }\r\n\r\n  return lyrics ? (\r\n    <div className=\"Lyrics\">\r\n      {currentUser.isAdmin ? (\r\n        <Slider\r\n          pages={[\"Listen mode\", \"Edit Mode\"]}\r\n          currentPage={lyricsModeratorMode}\r\n          setCurrentPage={setLyricsModeratorMode}\r\n        />\r\n      ) : null}\r\n      {isThereKaraoke\r\n        ? lyrics.map((el, i) => {\r\n            return (\r\n              <LyricsParagraph\r\n                el={el}\r\n                index={i}\r\n                lyricsModeratorMode={lyricsModeratorMode}\r\n                karaokeModeratorTimes={karaokeModeratorTimes}\r\n                setKaraokeModeratorTimes={setKaraokeModeratorTimes}\r\n                setInputKaraokeTime={setInputKaraokeTime}\r\n                inputKaraokeTime={inputKaraoke}\r\n              />\r\n            );\r\n          })\r\n        : lyrics.map((el, i) => {\r\n            return (\r\n              <div className=\"lyricsBlock\" key={i}>\r\n                {lyricsModeratorMode === 1 ? (\r\n                  <div className=\"lyricsBlockInput\">\r\n                    {karaokeModeratorTimes[i] !== undefined &&\r\n                    karaokeModeratorTimes[i].length !== 0 ? (\r\n                      <BiCheckCircle\r\n                        style={{\r\n                          background: \"var(--themeColor3)\",\r\n                          color: \"var(--themeColor)\",\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <FiXCircle />\r\n                    )}\r\n                    <input\r\n                      type=\"number\"\r\n                      value={karaokeModeratorTimes[i] || inputKaraokeTime}\r\n                      onChange={(e) => inputKaraoke(e, i)}\r\n                      onClick={(e) => e.stopPropagation()}\r\n                    />\r\n                    <div className=\"addLyricsElementBtns\">\r\n                      <button onClick={() => addLyricsBlock(i, \"up\")}>\r\n                        <BiUpArrow />\r\n                      </button>\r\n                      <button onClick={() => addLyricsBlock(i, \"down\")}>\r\n                        <BiDownArrow />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ) : null}\r\n                <p>{el.text}</p>\r\n              </div>\r\n            );\r\n          })}\r\n      <h6\r\n        className={\r\n          \"lyricsAuthors \" +\r\n          (currentParagraph === lyrics.length - 1 ? \"active\" : \"\")\r\n        }\r\n      >\r\n        Authors: {displayAuthors()}\r\n      </h6>\r\n      {lyricsModeratorMode === 1 ? (\r\n        <button\r\n          onClick={canUpdateLyrics ? updateLyrics : null}\r\n          className=\"updateLyricsBtn\"\r\n          style={!canUpdateLyrics ? { opacity: 0.3 } : {}}\r\n        >\r\n          Update Lyrics\r\n        </button>\r\n      ) : null}\r\n    </div>\r\n  ) : (\r\n    <h3>No lyrics</h3>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { SongItem } from \"../../../../entities/song/ui/song-item\";\r\nimport getShortString from \"../../../../shared/lib/get-short-string\";\r\n\r\nexport const Queue = () => {\r\n  const {\r\n    currentSongQueue,\r\n    currentSongPlaylistSource,\r\n    setOpenFullScreenPlayer,\r\n  } = useSong();\r\n  return (\r\n    <div className=\"Queue\">\r\n      <div className=\"queueNowIsPlaying\">\r\n        <h5 style={{ marginTop: 2 }}>\r\n          Now is playing:\r\n          <Link\r\n            onClick={() => setOpenFullScreenPlayer(false)}\r\n            to={currentSongPlaylistSource.source}\r\n            className=\"queueAlbumName\"\r\n          >\r\n            <div\r\n              className=\"queueImage\"\r\n              style={currentSongPlaylistSource.image ? {} : { display: \"none\" }}\r\n            >\r\n              <img\r\n                loading=\"lazy\"\r\n                src={currentSongPlaylistSource.image}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <span>{getShortString(currentSongPlaylistSource.name, 25)}</span>\r\n          </Link>\r\n        </h5>\r\n      </div>\r\n      {currentSongQueue.map((song, index) => {\r\n        return <SongItem song={song} localIndex={index} key={index} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import \"../../../app/index.css\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport { BiChevronLeft } from \"react-icons/bi\";\r\nimport { HiChevronDown } from \"react-icons/hi\";\r\nimport { useSong } from \"../../../contexts/song\";\r\nimport { FiMinus } from \"react-icons/fi\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport checkNumber from \"../../../shared/lib/check-number\";\r\nimport { useScreen } from \"../../../contexts/screen\";\r\nimport useOutsideClick from \"../../../shared/lib/hooks/use-outside-click\";\r\nimport { Player } from \"./organisms/player\";\r\nimport { rightSide } from \"../../../shared/data/player-right-side\";\r\n\r\nexport default function FullScreenPlayer() {\r\n  const {\r\n    imgColors,\r\n    inputRef,\r\n    rightSideCurrentPage,\r\n    setRightSideCurrentPage,\r\n    openFullScreenPlayer,\r\n    setOpenFullScreenPlayer,\r\n    lyrics,\r\n    openMenu,\r\n    setOpenMenu,\r\n  } = useSong();\r\n  const { isMobile, screenHeight, screenWidth } = useScreen();\r\n  const lyricsRef = useRef(null);\r\n  const [transformTransition, setTransformTransition] = useState(0.05);\r\n  const [mobileMenuTransition, setMobileMenuTransition] = useState(0);\r\n  // const [swipeDown, setSwipeDown] = useState(false)\r\n  const [deltaY, setDeltaY] = useState(0);\r\n  const [deltaYMobileMenu, setDeltaYMobileMenu] = useState(0);\r\n  const mobileContentScroll = useRef();\r\n  // setup ref for your usage\r\n  const mobileMenuRef = React.useRef();\r\n  useOutsideClick(mobileMenuRef, setOpenMenu);\r\n  const handlers = useSwipeable({\r\n    // onSwiped: (eventData) => {setSwipeDown(eventData.dir === 'Down')},\r\n    onSwiping: (event) => {\r\n      if (event.deltaY > 0) setDeltaY(event.deltaY);\r\n    },\r\n  });\r\n\r\n  // setup ref for your usage\r\n  const bgRef = React.useRef();\r\n\r\n  const handlersForMobileMenu = useSwipeable({\r\n    onSwiping: (event) => {\r\n      event.event.stopPropagation();\r\n      if (\r\n        openMenu &&\r\n        mobileContentScroll.current.scrollTop === 0 &&\r\n        event.deltaY > 0\r\n      )\r\n        setDeltaYMobileMenu(event.deltaY);\r\n      else if (!openMenu && event.deltaY < 0) setDeltaYMobileMenu(event.deltaY);\r\n    },\r\n    onSwipedLeft: () => {\r\n      setRightSideCurrentPage(checkNumber(rightSideCurrentPage + 1, 3));\r\n    },\r\n    onSwipedRight: () => {\r\n      setRightSideCurrentPage(checkNumber(rightSideCurrentPage - 1, 3));\r\n    },\r\n  });\r\n\r\n  function returnToInitialMobileMenu() {\r\n    let dropDelta;\r\n    clearTimeout(dropDelta);\r\n    setMobileMenuTransition(0);\r\n    dropDelta = setTimeout(() => {\r\n      setMobileMenuTransition(0.2);\r\n      setDeltaYMobileMenu(0);\r\n    }, 300);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (deltaY > 150) {\r\n      setOpenFullScreenPlayer(false);\r\n    }\r\n  }, [deltaY]);\r\n\r\n  useEffect(() => {\r\n    if (!openMenu && deltaYMobileMenu < -100) {\r\n      setOpenMenu(true);\r\n      setDeltaYMobileMenu(0);\r\n      setMobileMenuTransition(0.2);\r\n    } else if (openMenu && deltaYMobileMenu > 150) {\r\n      setOpenMenu(false);\r\n      setDeltaYMobileMenu(0);\r\n      setMobileMenuTransition(0.2);\r\n    } else {\r\n      returnToInitialMobileMenu();\r\n    }\r\n  }, [deltaYMobileMenu]);\r\n\r\n  function returnToInitial() {\r\n    let dropDelta;\r\n    clearTimeout(dropDelta);\r\n    setTransformTransition(0.2);\r\n    dropDelta = setTimeout(() => {\r\n      setDeltaY(0);\r\n      setTransformTransition(0);\r\n    }, 100);\r\n  }\r\n\r\n  const refPassthroughBg = (el) => {\r\n    handlers.ref(el);\r\n    bgRef.current = el;\r\n  };\r\n\r\n  const refPassthroughMobileMenu = (el) => {\r\n    handlersForMobileMenu.ref(el);\r\n    mobileMenuRef.current = el;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (imgColors.length !== 0) {\r\n      document.documentElement.style.setProperty(\"--themeColor\", imgColors[1]);\r\n      document.documentElement.style.setProperty(\"--themeColor2\", imgColors[0]);\r\n      document.documentElement.style.setProperty(\"--themeColor3\", imgColors[2]);\r\n      document.documentElement.style.setProperty(\"--themeColor4\", imgColors[5]);\r\n      document.documentElement.style.setProperty(\r\n        \"--themeColorTransparent\",\r\n        imgColors[0] + \"6e\"\r\n      );\r\n    }\r\n  }, [imgColors]);\r\n\r\n  function rightSideContent(currentPage) {\r\n    let RightSidePage = rightSide[currentPage].component;\r\n    return <RightSidePage />;\r\n  }\r\n\r\n  function noLyrics() {\r\n    return lyrics && lyrics.length === 0;\r\n  }\r\n\r\n  function changeRightSidePage(el) {\r\n    if (el.id === 2 && noLyrics()) return null;\r\n    setMobileMenuTransition(0.2);\r\n    setRightSideCurrentPage(el.id);\r\n    setOpenMenu(true);\r\n  }\r\n  return (\r\n    <div\r\n      className=\"bg\"\r\n      style={\r\n        openFullScreenPlayer\r\n          ? {\r\n              top: 0,\r\n              opacity: 1,\r\n              visibility: \"visible\",\r\n              zIndex: 10,\r\n              transform: `translateY(${deltaY}px)`,\r\n              borderRadius: `${deltaY < 20 ? deltaY : 20}px ${\r\n                deltaY < 20 ? deltaY : 20\r\n              }px 0 0`,\r\n              transition: `.4s opacity, ${transformTransition}s transform, .4s top, .4s visibility`,\r\n            }\r\n          : {\r\n              transform: `translateY(${deltaY}px)`,\r\n              transition: `.4s opacity, ${transformTransition}s transform, .4s top, .4s visibility`,\r\n            }\r\n      }\r\n      ref={refPassthroughBg}\r\n      {...handlers}\r\n      onTouchEnd={returnToInitial}\r\n    >\r\n      {/* <div className=\"auroraWrapper\">\r\n        <svg height={screenHeight} width={screenWidth}>\r\n          <defs>\r\n            <filter id=\"f1\" x=\"0\" y=\"0\">\r\n              <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"215\" />\r\n            </filter>\r\n          </defs>\r\n          <circle cx={screenWidth/2} cy=\"0\" r={screenHeight}\r\n            fill={imgColors[0]} filter=\"url(#f1)\" />\r\n        </svg>\r\n      </div> */}\r\n\r\n      <div\r\n        className=\"closeFullScreen\"\r\n        onClick={() => {\r\n          setOpenFullScreenPlayer(false);\r\n        }}\r\n      >\r\n        {window.innerWidth > 1000 ? (\r\n          <HiChevronDown />\r\n        ) : (\r\n          <FiMinus style={{ opacity: 0.6 }} />\r\n        )}\r\n      </div>\r\n      <div className=\"FullScreenPlayer\">\r\n        <div\r\n          className=\"leftSide\"\r\n          style={\r\n            !openMenu\r\n              ? { width: \"100%\" }\r\n              : isMobile\r\n              ? {\r\n                  opacity: 0.6,\r\n                  visibility: \"visible\",\r\n                  transform: `translateY(20px)`,\r\n                  borderRadius: `10px`,\r\n                  transition: `.4s`,\r\n                }\r\n              : null\r\n          }\r\n        >\r\n          <Player inputRef={inputRef} />\r\n        </div>\r\n        {window.innerWidth > 1000 ? (\r\n          <div\r\n            className=\"rightSideWrapper\"\r\n            style={\r\n              !openMenu\r\n                ? { transform: \"translateX(calc(100% - 90px))\", width: 0 }\r\n                : {}\r\n            }\r\n          >\r\n            <button\r\n              className=\"menuBtn\"\r\n              style={\r\n                openMenu\r\n                  ? { transform: \"rotate(180deg)\" }\r\n                  : { opacity: 0, visibility: \"hidden\" }\r\n              }\r\n              onClick={() => setOpenMenu(!openMenu)}\r\n            >\r\n              <BiChevronLeft />\r\n            </button>\r\n            <div className=\"rightSideControl\">\r\n              {rightSide.map((el, i) => {\r\n                return (\r\n                  <div\r\n                    className=\"controlIcon\"\r\n                    key={el.id}\r\n                    style={\r\n                      el.id === rightSideCurrentPage && openMenu\r\n                        ? { background: \"var(--themeColor)\" }\r\n                        : el.id === 2 && noLyrics()\r\n                        ? { opacity: 0.4 }\r\n                        : {}\r\n                    }\r\n                    onClick={() => changeRightSidePage(el)}\r\n                  >\r\n                    {el.icon}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div\r\n              className=\"rightSide\"\r\n              ref={lyricsRef}\r\n              style={!openMenu ? { display: \"none\" } : {}}\r\n            >\r\n              {rightSideContent(rightSideCurrentPage)}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div\r\n            className=\"mobilePlayerMenu\"\r\n            {...handlersForMobileMenu}\r\n            ref={refPassthroughMobileMenu}\r\n            style={\r\n              openMenu\r\n                ? {\r\n                    top: `calc(100% - calc(70vh + 55px) + ${deltaYMobileMenu}px)`,\r\n                    transition: `${mobileMenuTransition}s`,\r\n                  }\r\n                : {\r\n                    top: `calc(100% - 55px + ${deltaYMobileMenu}px)`,\r\n                    transition: `${mobileMenuTransition}s`,\r\n                  }\r\n            }\r\n            // onTouchStart = {returnToInitialMobileMenu}\r\n          >\r\n            <div className=\"mobilePlayerMenuClose\">\r\n              <FiMinus\r\n                style={{ opacity: 0.6, width: \"50px\" }}\r\n                onClick={() => setOpenMenu(!openMenu)}\r\n              />\r\n            </div>\r\n            <div className=\"controlIconsWrapper\">\r\n              {rightSide.map((el, i) => {\r\n                if (i <= 3) {\r\n                  return (\r\n                    <div\r\n                      className=\"controlIcon\"\r\n                      key={el.id}\r\n                      style={\r\n                        el.id === rightSideCurrentPage && openMenu\r\n                          ? { background: \"var(--transparentWhite)\" }\r\n                          : el.id === 2 && noLyrics()\r\n                          ? { opacity: 0.4 }\r\n                          : {}\r\n                      }\r\n                      onClick={(e) => changeRightSidePage(el)}\r\n                    >\r\n                      {el.title}\r\n                    </div>\r\n                  );\r\n                }\r\n              })}\r\n            </div>\r\n            <div\r\n              className=\"mobilePlayerMenuContent\"\r\n              ref={mobileContentScroll}\r\n              style={!openMenu ? { opacity: 0 } : {}}\r\n            >\r\n              {rightSideContent(rightSideCurrentPage)}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { BiMusic, BiSearch } from \"react-icons/bi\";\r\nimport { FiHome, FiMessageCircle } from \"react-icons/fi\";\r\nimport { CHAT_ROUTE, HOME_ROUTE, LIBRARY_ROUTE, SEARCH_ROUTE } from \"./consts\";\r\n\r\nexport const leftSideBar = [\r\n\t{\r\n\t\tid: 0,\r\n\t\ticon: <FiHome />,\r\n\t\ttitle: 'Home',\r\n\t\tlink: HOME_ROUTE\r\n\t},\r\n\t{\r\n\t\tid: 1,\r\n\t\ticon: <BiMusic />,\r\n\t\ttitle: 'Library',\r\n\t\tlink: LIBRARY_ROUTE\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\ticon: <BiSearch />,\r\n\t\ttitle: 'Search',\r\n\t\tlink: SEARCH_ROUTE\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\ticon: <FiMessageCircle />,\r\n\t\ttitle: 'Chat',\r\n\t\tlink: CHAT_ROUTE\r\n\t},\r\n\r\n]","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NotificationCircleWrapper = styled.div`\r\n  border-radius: 100%;\r\n  width: 20px;\r\n  height: 20px;\r\n  font-size: 0.7em;\r\n  background: var(--red);\r\n  color: #fff;\r\n  font-weight: bold;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 10px;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nexport const NotificationCircle = ({ value }) => {\r\n  return (\r\n    !!value && (\r\n      <NotificationCircleWrapper className=\"notification-circle\">\r\n        {value}\r\n      </NotificationCircleWrapper>\r\n    )\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst LeftsideBarContainer = styled.div`\r\n  width: 100%;\r\n  border-radius: var(--standartBorderRadius);\r\n  background: var(--navItemColor);\r\n  color: #fff;\r\n  font-weight: bold;\r\n  min-height: 40px;\r\n  padding: 0.4px 5px;\r\n  box-sizing: border-box;\r\n  scroll-snap-type: y mandatory;\r\n  transition: 0.2s height;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    a {\r\n      text-decoration: none;\r\n    }\r\n  }\r\n\r\n  .personName {\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n  }\r\n`;\r\n\r\nexport default LeftsideBarContainer;\r\n","import { useEffect, useState } from 'react';\r\nimport { useAuth } from '../../../contexts/auth';\r\nimport { firestore } from '../../../firebase';\r\nimport { amountOfUnseenMessages } from '../../chats/lib/amount-of-unseen-messages';\r\n\r\nconst useAmountOfUnseenMessages = () => {\r\n\tconst { currentUser } = useAuth()\r\n\tconst [amount, setAmount] = useState(0)\r\n\r\n\tuseEffect(() => {\r\n\t\tconst unsubscribe = firestore\r\n\t\t\t.collection(\"chats\")\r\n\t\t\t.where(\"participants\", \"array-contains\", currentUser.uid)\r\n\t\t\t.onSnapshot((snapshot) => {\r\n\t\t\t\tsetAmount(0)\r\n\t\t\t\tsnapshot.docs.map((chat) => {\r\n\t\t\t\t\tconst chatData = chat.data()\r\n\t\t\t\t\tsetAmount(prev => prev + amountOfUnseenMessages(chatData.messages, currentUser))\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\treturn () => {\r\n\t\t\tunsubscribe();\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn amount\r\n}\r\n\r\nexport default useAmountOfUnseenMessages\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { NotificationCircle } from \"../../../../shared/ui/atoms/notification-circle\";\r\n\r\nexport default function NavigationItem({\r\n  id,\r\n  title,\r\n  icon,\r\n  link,\r\n  currentPage,\r\n  setCurrentPage,\r\n  notificationValue,\r\n}) {\r\n  return (\r\n    <Link to={link}>\r\n      <div\r\n        className={\"NavigationItem \" + (id === currentPage ? \"active\" : \"\")}\r\n        onClick={() => setCurrentPage(id)}\r\n      >\r\n        <div className=\"icon\">{icon}</div>\r\n        <b>{title}</b>\r\n        <NotificationCircle value={notificationValue} />\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { leftSideBar } from \"../../../../shared/data/left-side-bar\";\r\nimport useAmountOfUnseenMessages from \"../../lib/use-amount-of-unseen-messages\";\r\nimport NavigationItem from \"../atoms/navigation-item\";\r\n\r\nconst NavigationPanel = ({ currentPage, setCurrentPage }) => {\r\n  const [home, library, search, chat] = leftSideBar;\r\n  const amountOfUnseenMessages = useAmountOfUnseenMessages();\r\n  return (\r\n    <div className=\"NavigationPanel\">\r\n      <NavigationItem\r\n        key={0}\r\n        id={home.id}\r\n        title={home.title}\r\n        icon={home.icon}\r\n        link={home.link}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n      <NavigationItem\r\n        key={1}\r\n        id={library.id}\r\n        title={library.title}\r\n        icon={library.icon}\r\n        link={library.link}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n      <NavigationItem\r\n        key={2}\r\n        id={search.id}\r\n        title={search.title}\r\n        icon={search.icon}\r\n        link={search.link}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n      <NavigationItem\r\n        key={3}\r\n        id={chat.id}\r\n        title={chat.title}\r\n        icon={chat.icon}\r\n        link={chat.link}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n        notificationValue={amountOfUnseenMessages}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavigationPanel;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst OnlineCircleAnimationWrapper = styled.div`\r\n  width: 10px;\r\n  height: 10px;\r\n  background: var(--red);\r\n  box-shadow: 0 0 10px var(--red);\r\n  border-radius: 100%;\r\n  position: relative;\r\n\r\n  @keyframes waveAnimation {\r\n    0% {\r\n      opacity: 0;\r\n      transform: scale(0.95);\r\n    }\r\n    60% {\r\n      opacity: 0.5;\r\n      transform: scale(2);\r\n    }\r\n    100% {\r\n      opacity: 0;\r\n      transform: scale(0.95);\r\n    }\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    width: 10px;\r\n    height: 10px;\r\n    background: var(--red);\r\n    filter: brightness(0.3);\r\n    border-radius: 100%;\r\n    animation: waveAnimation 1.5s infinite;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\nconst OnlineCircleAnimation = () => {\r\n  return <OnlineCircleAnimationWrapper></OnlineCircleAnimationWrapper>;\r\n};\r\n\r\nexport default OnlineCircleAnimation;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BiShare } from \"react-icons/bi\";\r\nimport { FiMessageCircle, FiMusic } from \"react-icons/fi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\n\r\nimport { createChat } from \"../../../../shared/lib/create-—Åhat\";\r\nimport { findChatURL } from \"../../../../shared/lib/find-chat-url\";\r\nimport getShortString from \"../../../../shared/lib/get-short-string\";\r\nimport useUserOnline from \"../../../../shared/lib/hooks/use-user-online\";\r\nimport { Hint } from \"../../../../shared/ui/atoms/hint\";\r\nimport { IsOnlineCircle } from \"../../../../shared/ui/atoms/is-online-circle\";\r\nimport OnlineCircleAnimation from \"../../../../shared/ui/atoms/online-circle-animation\";\r\nimport useLastSongListened from \"../../../author/lib/hooks/use-last-song-listened\";\r\nimport shareWithFriends from \"../../../share/lib/share-with-friends\";\r\n\r\nexport const Person = ({ index, friend }) => {\r\n  const { currentUser } = useAuth();\r\n  const { openBottomMessage } = useModal();\r\n  const [friendChatId, setFriendChatId] = useState(0);\r\n  const [shouldCreate, setShouldCreate] = useState(false);\r\n  const [sendAnimation, setSendAnimation] = useState(\"\");\r\n  const { currentSong, currentSongData } = useSong();\r\n  const [loadingSendSong, setLoadingSendSong] = useState(false);\r\n  const isOnline = useUserOnline(friend.uid);\r\n  const [song, chooseSongItem] = useLastSongListened(friend);\r\n\r\n  useEffect(() => {\r\n    findChatURL([friend.uid], currentUser, setShouldCreate, setFriendChatId);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (sendAnimation?.length > 0) {\r\n      setLoadingSendSong(true);\r\n      setTimeout(() => {\r\n        setSendAnimation(\"\");\r\n        setLoadingSendSong(false);\r\n      }, 600);\r\n    }\r\n  }, [sendAnimation]);\r\n  return (\r\n    <div className=\"person\" key={index} id={friend.uid}>\r\n      <img\r\n        loading=\"lazy\"\r\n        src={currentSongData.cover}\r\n        alt=\"\"\r\n        className={\"sendSongImage \" + sendAnimation}\r\n      />\r\n\r\n      <div className=\"personBtns\">\r\n        <Link to={`/chat/${friendChatId}`}>\r\n          <button\r\n            onClick={() => {\r\n              if (shouldCreate)\r\n                createChat([currentUser.uid, friend.uid], friendChatId);\r\n            }}\r\n          >\r\n            <Hint text={\"chat\"} />\r\n            <FiMessageCircle />\r\n          </button>\r\n        </Link>\r\n\r\n        <button onClick={chooseSongItem}>\r\n          <Hint\r\n            text={\r\n              isOnline\r\n                ? getShortString(\r\n                    `${song?.name} | ${song?.authors[0].displayName}` ||\r\n                      \"No song data\",\r\n                    20\r\n                  )\r\n                : \"last listened song\"\r\n            }\r\n          />\r\n          {isOnline ? <OnlineCircleAnimation /> : <FiMusic />}\r\n        </button>\r\n\r\n        <button\r\n          onClick={() => {\r\n            if (!loadingSendSong) {\r\n              shareWithFriends({\r\n                shareList: [friend.uid],\r\n                currentUser,\r\n                itemId: currentSong,\r\n                whatToShare: \"song\",\r\n                setShouldCreate,\r\n                setFriendChatId,\r\n              });\r\n              setSendAnimation(\"sendAnimation\");\r\n              openBottomMessage(\r\n                `${currentSongData.name} was sent to ${friend.displayName}`\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          <Hint text={\"share\"} />\r\n          <BiShare />\r\n        </button>\r\n      </div>\r\n      <Link className=\"personImg\" to={`/authors/${friend.uid}`}>\r\n        <img loading=\"lazy\" src={friend.photoURL} alt=\"\" />\r\n      </Link>\r\n      <IsOnlineCircle userUID={friend.uid} />\r\n      <div className=\"personName\" style={{ pointerEvents: \"none\" }}>\r\n        {getShortString(friend.displayName, 12)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { BiAlbum } from \"react-icons/bi\";\r\nimport { FiCheck, FiPlayCircle, FiPlusCircle, FiShare } from \"react-icons/fi\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { FriendsToShareWith } from \"../../../share/ui/organisms/friends-to-share-with\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { useAddOrDeleteSong } from \"../../../../entities/playlist/lib/hooks/use-add-or-delete-song\";\r\nimport { usePlaylistSongs } from \"../../../../entities/playlist/lib/hooks/use-playlist-songs\";\r\nimport getShortString from \"../../../../shared/lib/get-short-string\";\r\nimport { Hint } from \"../../../../shared/ui/atoms/hint\";\r\n\r\nexport const TinyPlaylist = ({ playlist }) => {\r\n  const { toggleModal, setContent } = useModal();\r\n  const [playlistSongs, setPlaylistSongs] = useState([]);\r\n  const playSongsInPlaylist = usePlaylistSongs(\r\n    playlist,\r\n    playlistSongs,\r\n    setPlaylistSongs\r\n  );\r\n  const [addFunc, isAdded] = useAddOrDeleteSong(playlist.id);\r\n  const { currentUser } = useAuth();\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"TinyPlaylist\">\r\n      <div className=\"TinyPlaylistBtns\">\r\n        {playlist.authors.find((author) => author.uid === currentUser.uid) ? (\r\n          <button onClick={addFunc}>\r\n            {isAdded ? (\r\n              <>\r\n                <Hint text={`remove song`} />\r\n                <FiCheck />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Hint text={\"add song\"} />\r\n                <FiPlusCircle />\r\n              </>\r\n            )}\r\n          </button>\r\n        ) : (\r\n          <button\r\n            onClick={() => {\r\n              toggleModal();\r\n              setContent(\r\n                <FriendsToShareWith item={playlist} whatToShare={\"playlist\"} />\r\n              );\r\n            }}\r\n          >\r\n            <Hint text={\"share\"} />\r\n            <FiShare />\r\n          </button>\r\n        )}\r\n        <Link to={`/albums/${playlist.id}`}>\r\n          <button>\r\n            <Hint text={\"album\"} />\r\n            <BiAlbum />\r\n          </button>\r\n        </Link>\r\n        <button onClick={playSongsInPlaylist}>\r\n          <Hint text={\"play\"} />\r\n          <FiPlayCircle />\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"TinyPlaylistImg\"\r\n        style={{\r\n          backgroundImage: `url(${playlist.image})`,\r\n          display: \"inline-block\",\r\n          backgroundPosition: \"center center\",\r\n          backgroundSize: \"cover\",\r\n          position: \"relative\",\r\n        }}\r\n        onClick={() => history.push(`/albums/${playlist.id}`)}\r\n      >\r\n        {!playlist.image ? (\r\n          <BiAlbum\r\n            style={{\r\n              position: \"absolute\",\r\n              left: \"50%\",\r\n              top: \"50%\",\r\n              transform: \"translate(-50%, -50%)\",\r\n              width: \"20px\",\r\n              height: \"20px\",\r\n            }}\r\n          />\r\n        ) : null}\r\n      </div>\r\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n        <span>{getShortString(playlist.name, 13)}</span>\r\n        <span style={{ fontSize: \"0.8em\", color: \"grey\", fontWeight: \"500\" }}>\r\n          {playlist.isAlbum ? \"album\" : \"playlist\"}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BiFolderPlus, BiFullscreen } from \"react-icons/bi\";\r\nimport { FiChevronDown, FiChevronUp } from \"react-icons/fi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AddPlaylist } from \"../../../../features/author/ui/organisms/add-playlist\";\r\nimport { FriendsToShareWith } from \"../../../share/ui/organisms/friends-to-share-with\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport Logo from \"../../../../shared/ui/images/Logo3.svg\";\r\nimport { leftSideBar } from \"../../../../shared/data/left-side-bar\";\r\nimport getShortString from \"../../../../shared/lib/get-short-string\";\r\nimport normalizeString from \"../../../../shared/lib/normalize-string\";\r\nimport { NotificationCircle } from \"../../../../shared/ui/atoms/notification-circle\";\r\nimport \"../style.css\";\r\nimport { Player } from \"../../../full-screen-player/ui/organisms/player\";\r\nimport LeftsideBarContainer from \"../atoms/container\";\r\nimport NavigationPanel from \"../molecules/navigation-panel\";\r\nimport { Person } from \"../molecules/person\";\r\nimport { TinyPlaylist } from \"../molecules/tiny-playlist\";\r\n\r\nexport const LeftsideBar = () => {\r\n  const { currentUser } = useAuth();\r\n  const [userNotifications, setUserNotifications] = useState(0);\r\n  const {\r\n    leftSideBarInputRef,\r\n    setOpenFullScreenPlayer,\r\n    currentSongData,\r\n    yourFriends,\r\n    yourPlaylists,\r\n  } = useSong();\r\n  const { toggleModal, setContent } = useModal();\r\n  const [currentFriendToPlaylistPage, setCurrentFriendToPlaylistPage] =\r\n    useState(0);\r\n  const [currentPage, setCurrentPage] = useState(() => {\r\n    let page = leftSideBar.find((el, i) => {\r\n      if (window.location.hash.includes(normalizeString(el.title))) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    });\r\n    return page === undefined ? -1 : page.id;\r\n  });\r\n\r\n  useEffect(() => {\r\n    setUserNotifications(\r\n      currentUser.friends.reduce((acc, friend) => {\r\n        if (friend.status === \"requested\") return acc + 1;\r\n        else return acc;\r\n      }, 0)\r\n    );\r\n  }, [JSON.stringify(currentUser.friends)]);\r\n\r\n  return (\r\n    <div className=\"LeftsideBar\">\r\n      <div className=\"logo\">\r\n        <img loading=\"lazy\" src={Logo} alt=\"\" />\r\n        <h3>Soundbubble</h3>\r\n      </div>\r\n      <LeftsideBarContainer onClick={() => setCurrentPage(-1)}>\r\n        <Link to={`/authors/${currentUser.uid}`}>\r\n          <div\r\n            className=\"person\"\r\n            style={currentPage === -1 ? { background: \"var(--blue)\" } : {}}\r\n          >\r\n            <NotificationCircle value={userNotifications} />\r\n            <div\r\n              className=\"personImg\"\r\n              style={{ backgroundImage: `url(${currentUser.photoURL})` }}\r\n            ></div>\r\n            <div className=\"personName\">\r\n              {getShortString(currentUser.displayName, 11)}\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      </LeftsideBarContainer>\r\n      <NavigationPanel\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n      <LeftsideBarContainer className=\"leftSideBarContainer friendsAndPlaylists\">\r\n        <span\r\n          style={{\r\n            display: !currentFriendToPlaylistPage ? \"block\" : \"none\",\r\n            animation: \"scrollFromBottom .2s forwards\",\r\n          }}\r\n        >\r\n          {yourFriends.length > 0 ? (\r\n            <>\r\n              {yourFriends.map((friend, index) => {\r\n                if (index <= 2) {\r\n                  return <Person index={friend.uid} friend={friend} />;\r\n                }\r\n                return null;\r\n              })}\r\n              <h4\r\n                className=\"seeMoreBtn\"\r\n                onClick={() => {\r\n                  toggleModal();\r\n                  setContent(\r\n                    <FriendsToShareWith\r\n                      item={currentSongData}\r\n                      whatToShare={\"song\"}\r\n                    />\r\n                  );\r\n                }}\r\n              >\r\n                See more\r\n              </h4>\r\n            </>\r\n          ) : (\r\n            <h4\r\n              style={{\r\n                alignSelf: \"center\",\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              No friends added\r\n            </h4>\r\n          )}\r\n        </span>\r\n        <span\r\n          style={{\r\n            display: currentFriendToPlaylistPage ? \"block\" : \"none\",\r\n            animation: \"scrollFromTop .2s forwards\",\r\n          }}\r\n        >\r\n          {yourPlaylists.map((playlist, index) => {\r\n            if (index <= 2) {\r\n              return <TinyPlaylist playlist={playlist} key={playlist.id} />;\r\n            }\r\n          })}\r\n          <button\r\n            className=\"createPlaylistBtn\"\r\n            onClick={() => {\r\n              toggleModal();\r\n              setContent(<AddPlaylist />);\r\n            }}\r\n            style={{ margin: \"5px 0\" }}\r\n          >\r\n            <BiFolderPlus />\r\n            Create Playlist\r\n          </button>\r\n        </span>\r\n        <div className=\"upAndDownBtns\">\r\n          <button\r\n            onClick={() => setCurrentFriendToPlaylistPage(0)}\r\n            style={!currentFriendToPlaylistPage ? { opacity: \"0.3\" } : {}}\r\n          >\r\n            <FiChevronUp />\r\n          </button>\r\n          <button\r\n            onClick={() => setCurrentFriendToPlaylistPage(1)}\r\n            style={currentFriendToPlaylistPage ? { opacity: \"0.3\" } : {}}\r\n          >\r\n            <FiChevronDown />\r\n          </button>\r\n        </div>\r\n      </LeftsideBarContainer>\r\n      <div className=\"leftSideBarContainer\">\r\n        {currentSongData.id === -1 ? null : (\r\n          <div className=\"littlePlayer\">\r\n            <Player textLimit={15} inputRef={leftSideBarInputRef} />\r\n            <div\r\n              className=\"fullScreenBtn\"\r\n              onClick={() => setOpenFullScreenPlayer(true)}\r\n            >\r\n              {/* <Hint text = {\"open full screen\"} style = {{fontSize:'0.8em'}}/> */}\r\n              <BiFullscreen />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const MobileControlBarItem = ({\r\n  element,\r\n  currentPage,\r\n  setCurrentPage,\r\n}) => {\r\n  return (\r\n    <Link\r\n      to={element.link}\r\n      className=\"MobileControlBarItem\"\r\n      onClick={() => setCurrentPage(element.id)}\r\n      style={element.id === currentPage ? {} : { opacity: 0.4 }}\r\n    >\r\n      {element.icon}\r\n    </Link>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { BiUserCircle } from \"react-icons/bi\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { leftSideBar } from \"../../../../shared/data/left-side-bar\";\r\nimport normalizeString from \"../../../../shared/lib/normalize-string\";\r\nimport \"../style.css\";\r\nimport { MobileControlBarItem } from \"../atoms/mobile-controlbar-item\";\r\n\r\nexport const BottomControlBar = () => {\r\n  const { currentUser } = useAuth();\r\n  const userElement = {\r\n    icon: <BiUserCircle />,\r\n    link: `/authors/${currentUser.uid}`,\r\n  };\r\n  const [currentPage, setCurrentPage] = useState(() => {\r\n    let page = leftSideBar.find((el, i) => {\r\n      if (window.location.hash.includes(normalizeString(el.title))) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    });\r\n    return page === undefined ? 0 : page.id;\r\n  });\r\n\r\n  return (\r\n    <div className=\"BottomControlBar\">\r\n      {leftSideBar.map((el, i) => {\r\n        return (\r\n          <MobileControlBarItem\r\n            element={el}\r\n            key={i}\r\n            currentPage={currentPage}\r\n            setCurrentPage={setCurrentPage}\r\n          />\r\n        );\r\n      })}\r\n      <MobileControlBarItem\r\n        element={userElement}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { Player } from \"../../../full-screen-player/ui/organisms/player\";\r\nimport { BottomControlBar } from \"../molecules/bottom-control-bar\";\r\n\r\nexport const FullBottomSide = () => {\r\n  const { setOpenFullScreenPlayer, inputRange } = useSong();\r\n  return (\r\n    <div className=\"FullBottomSide\">\r\n      <span\r\n        onClick={() => setOpenFullScreenPlayer(true)}\r\n        style={{\r\n          display: \"block\",\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        <Player textLimit={25} linkToAuthors={false} />\r\n        <span\r\n          className=\"mobileSongRange\"\r\n          style={{ width: inputRange + \"%\" }}\r\n        ></span>\r\n      </span>\r\n      <BottomControlBar />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useModal } from \"../../../contexts/modal\";\r\nimport useOutsideClick from \"../../../shared/lib/hooks/use-outside-click\";\r\nimport { useScreen } from \"../../../contexts/screen\";\r\nexport const ModalWindow = ({ ...restProps }) => {\r\n  const { openModal, setOpenModal, content } = useModal();\r\n  const modalRef = useRef(null);\r\n  const { screenHeight } = useScreen();\r\n  useOutsideClick(modalRef, setOpenModal);\r\n  return (\r\n    <div\r\n      className=\"modal_darkBg\"\r\n      style={\r\n        !openModal\r\n          ? { opacity: 0, visibility: \"hidden\" }\r\n          : { height: screenHeight }\r\n      }\r\n    >\r\n      <div\r\n        className=\"ModalWindow\"\r\n        {...restProps}\r\n        ref={modalRef}\r\n        style={\r\n          !openModal\r\n            ? {\r\n                opacity: 0,\r\n                visibility: \"hidden\",\r\n                transform: \"translateY(40px)\",\r\n              }\r\n            : {}\r\n        }\r\n      >\r\n        {content}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { useRouteMatch } from 'react-router';\r\nimport { useAuth } from '../../../contexts/auth';\r\nimport { firestore } from '../../../firebase';\r\n\r\nconst useChatNotifications = () => {\r\n\tconst [notifications, setNotifications] = useState([]);\r\n\tconst { currentUser } = useAuth()\r\n\tconst match = useRouteMatch(\"/chat/:chatId\");\r\n\tconst chatId = match?.params?.chatId\r\n\r\n\tuseEffect(() => {\r\n\t\tconst tempObj = {}\r\n\t\tconst unsubscribe = firestore\r\n\t\t\t.collection(\"chats\")\r\n\t\t\t.where(\"participants\", \"array-contains\", currentUser.uid)\r\n\t\t\t.onSnapshot((snapshot) => {\r\n\t\t\t\tsetNotifications((prev) => {\r\n\t\t\t\t\tconst temp = [...prev];\r\n\t\t\t\t\tsnapshot.docChanges().map(async (doc) => {\r\n\t\t\t\t\t\tconst chatData = doc.doc.data()\r\n\t\t\t\t\t\tif (chatId !== chatData.id) {\r\n\t\t\t\t\t\t\tif (doc.type === 'added') tempObj[chatData.id] = chatData.messages.length\r\n\t\t\t\t\t\t\telse if (doc.type === \"modified\" && chatData.messages.length && !!tempObj[chatData.id] && chatData.messages.length !== tempObj[chatData.id]) {\r\n\t\t\t\t\t\t\t\tconst { id, chatName, chatImage, messages } = chatData;\r\n\t\t\t\t\t\t\t\tconst lastMessage = messages[messages.length - 1];\r\n\t\t\t\t\t\t\t\tconst shouldPushNotif =\r\n\t\t\t\t\t\t\t\t\tlastMessage.sender !== currentUser.uid &&\r\n\t\t\t\t\t\t\t\t\t!lastMessage.seenBy.includes(currentUser.uid)\r\n\r\n\t\t\t\t\t\t\t\tif (shouldPushNotif) {\r\n\t\t\t\t\t\t\t\t\ttemp.push({\r\n\t\t\t\t\t\t\t\t\t\tchatId: id,\r\n\t\t\t\t\t\t\t\t\t\tchatName,\r\n\t\t\t\t\t\t\t\t\t\tchatImage,\r\n\t\t\t\t\t\t\t\t\t\tmessage: messages[messages.length - 1],\r\n\t\t\t\t\t\t\t\t\t\tuserId: messages[messages.length - 1].sender,\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\ttempObj[id] += 1\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn temp;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\treturn () => {\r\n\t\t\tunsubscribe();\r\n\t\t};\r\n\t}, [chatId]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (notifications.length) {\r\n\t\t\tlet timeout;\r\n\t\t\ttimeout = setTimeout(() => {\r\n\t\t\t\tsetNotifications((prev) => prev.slice(1, prev.length));\r\n\t\t\t}, 6200);\r\n\r\n\t\t\treturn () => clearTimeout(timeout)\r\n\t\t}\r\n\t}, [notifications.length]);\r\n\r\n\treturn [notifications, setNotifications]\r\n}\r\n\r\nexport default useChatNotifications\r\n","import { useEffect } from 'react';\r\nimport { useSong } from '../../../contexts/song';\r\n\r\nimport displayAuthorsStr from '../display-authors-str';\r\n\r\n\r\n\r\nexport const useMediaMetadata = () => {\r\n\tconst { currentSongData, currentSongPlaylistSource, nextSong, prevSong, songRef, setPlay } = useSong()\r\n\r\n\tconst updatePositionState = () => {\r\n\t\tnavigator.mediaSession.setPositionState({\r\n\t\t\tduration: songRef.current.duration,\r\n\t\t\tplaybackRate: songRef.current.playbackRate,\r\n\t\t\tposition: songRef.current.currentTime\r\n\t\t});\r\n\t}\r\n\r\n\tfunction playSong() {\r\n\t\tsongRef.current.play()\r\n\t\tsetPlay(true)\r\n\t}\r\n\r\n\tfunction pauseSong() {\r\n\t\tsongRef.current.pause()\r\n\t\tsetPlay(false)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif ('mediaSession' in navigator && currentSongData.id !== -1) {\r\n\t\t\tnavigator.mediaSession.metadata = new window.MediaMetadata({\r\n\t\t\t\ttitle: currentSongData.name,\r\n\t\t\t\tartist: displayAuthorsStr(currentSongData.authors),\r\n\t\t\t\talbum: currentSongPlaylistSource.name,\r\n\t\t\t\tartwork: [\r\n\t\t\t\t\t{ src: currentSongData.cover, sizes: '512x512', type: 'image/png' },\r\n\t\t\t\t]\r\n\t\t\t});\r\n\r\n\t\t\tnavigator.mediaSession.setActionHandler('play', () => { playSong(); });\r\n\t\t\tnavigator.mediaSession.setActionHandler('pause', pauseSong);\r\n\t\t\tnavigator.mediaSession.setActionHandler('stop', pauseSong);\r\n\t\t\tnavigator.mediaSession.setActionHandler('nexttrack', () => { nextSong(); updatePositionState() });\r\n\t\t\tnavigator.mediaSession.setActionHandler('previoustrack', () => { prevSong(); updatePositionState() })\r\n\t\t}\r\n\t}, [currentSongData.id])\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { ContentRouter } from \"../../app/routers/content-router\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\nimport { useScreen } from \"../../contexts/screen\";\r\nimport { useSong } from \"../../contexts/song\";\r\nimport { useUpdateListenCount } from \"../../entities/song/lib/hooks/use-update-listen-count\";\r\nimport { MessageWindow } from \"../../features/bottom-message/ui/message-window\";\r\nimport ChatNotificationWindow from \"../../features/chats/ui/organisms/chat-notification-window\";\r\nimport { ConfirmWindow } from \"../../features/confirm/ui/confirm-window\";\r\nimport FullScreenPlayer from \"../../features/full-screen-player/ui/full-screen-player\";\r\nimport \"../../features/full-screen-player/ui/style.css\";\r\nimport { LeftsideBar } from \"../../features/leftside-bar/ui/organisms/leftside-bar\";\r\nimport { FullBottomSide } from \"../../features/mobile/ui/organisms/full-bottom-side\";\r\nimport { ModalWindow } from \"../../features/modal/ui/modal-window\";\r\nimport { firestore } from \"../../firebase\";\r\nimport useChatNotifications from \"../lib/hooks/use-chat-notifications\";\r\nimport { useMediaMetadata } from \"../lib/hooks/use-media-metadata\";\r\n\r\nexport const ContentWrapper = () => {\r\n  const {\r\n    songRef,\r\n    loadSongData,\r\n    playing,\r\n    songSrc,\r\n    openFullScreenPlayer,\r\n    repeatMode,\r\n    setPlay,\r\n    prevSong,\r\n    currentSongQueue,\r\n    nextSong,\r\n  } = useSong();\r\n  const { isMobile, screenHeight } = useScreen();\r\n  const { currentUser } = useAuth();\r\n  const fiveMinutes = 300000; // 10min\r\n  const [notifications, setNotifications] = useChatNotifications();\r\n\r\n  useMediaMetadata();\r\n  const updateListenCount = useUpdateListenCount();\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      firestore\r\n        .collection(\"users\")\r\n        .doc(currentUser.uid)\r\n        .update({ online: new Date().getTime() });\r\n    }, fiveMinutes);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    firestore\r\n      .collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .update({ online: new Date().getTime() });\r\n  }, []);\r\n\r\n  function audioEnded() {\r\n    if (repeatMode === 0) {\r\n      songRef.current.pause();\r\n      setPlay(false);\r\n      return prevSong();\r\n    } else if (repeatMode === 1) {\r\n      if (currentSongQueue.length === 1) {\r\n        prevSong();\r\n        updateListenCount();\r\n        return songRef.current.play();\r\n      }\r\n      return nextSong();\r\n    }\r\n    prevSong();\r\n    updateListenCount();\r\n    songRef.current.play();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <audio\r\n        src={songSrc}\r\n        ref={songRef}\r\n        onLoadedData={loadSongData}\r\n        onTimeUpdate={playing}\r\n        onEnded={audioEnded}\r\n      ></audio>\r\n      <div\r\n        className={\"Wrapper \" + (openFullScreenPlayer ? \"turnedOff\" : \"\")}\r\n        style={isMobile ? { height: screenHeight } : { height: \"100vh\" }}\r\n      >\r\n        {!isMobile ? (\r\n          <LeftsideBar />\r\n        ) : window.location.hash.substr(2, 4) === \"chat\" &&\r\n          window.location.hash.length > 6 ? null : (\r\n          <FullBottomSide />\r\n        )}\r\n        <div className=\"Content\">\r\n          <ContentRouter />\r\n        </div>\r\n        <MessageWindow />\r\n        <ModalWindow />\r\n        <ConfirmWindow />\r\n        {notifications.map((notif, index) => {\r\n          return (\r\n            <ChatNotificationWindow\r\n              {...notif}\r\n              index={index}\r\n              notifsLen={notifications.length}\r\n              setNotifications={setNotifications}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <FullScreenPlayer />\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useSong } from '../../../../contexts/song'\r\nimport { firestore } from '../../../../firebase'\r\n\r\nexport const useUpdateListenCount = () => {\r\n\tlet listenCountTimeOut = useRef()\r\n\tconst { currentSongData, currentSongPlaylistSource, songDuration, play } = useSong()\r\n\tfunction updateListenCount() {\r\n\t\tif (currentSongData.id !== -1) {\r\n\t\t\tlistenCountTimeOut.current = setTimeout(async () => {\r\n\t\t\t\tlet listens = (await firestore.collection('songs').doc(currentSongData.id).get()).data().listens\r\n\t\t\t\t++listens\r\n\t\t\t\tfirestore.collection('songs').doc(currentSongData.id).update({\r\n\t\t\t\t\tlistens: listens\r\n\t\t\t\t})\r\n\r\n\t\t\t\t//update playlist listens\r\n\t\t\t\tif (currentSongPlaylistSource.source.substr(1, 6) === 'albums') {\r\n\t\t\t\t\tconst sourceId = currentSongPlaylistSource.source.substr(8, currentSongPlaylistSource.source.length - 8)\r\n\t\t\t\t\tfirestore.collection('playlists').doc(sourceId).get().then((res) => {\r\n\t\t\t\t\t\tlet listedData = res.data().listens\r\n\t\t\t\t\t\tlistedData++\r\n\t\t\t\t\t\tfirestore.collection('playlists').doc(sourceId).update({\r\n\t\t\t\t\t\t\tlistens: listedData\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//update authors' listens\r\n\t\t\t\tcurrentSongData.authors.forEach(async author => {\r\n\t\t\t\t\tlet authorNumberOfListenersPerMonth = (await firestore.collection('users').doc(author.uid).get()).data().numberOfListenersPerMonth\r\n\t\t\t\t\t++authorNumberOfListenersPerMonth\r\n\t\t\t\t\tfirestore.collection('users').doc(author.uid).update({\r\n\t\t\t\t\t\tnumberOfListenersPerMonth: authorNumberOfListenersPerMonth\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t}, songDuration * 1000 * 0.5)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tclearTimeout(listenCountTimeOut.current)\r\n\t\tif (play) {\r\n\t\t\tupdateListenCount()\r\n\t\t}\r\n\t}, [play, currentSongData.id])\r\n\r\n\treturn updateListenCount\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { useAuth } from '../../contexts/auth'\r\nimport { publicRoutes } from '../routes'\r\nimport { LOGIN_ROUTE } from '../../shared/data/consts'\r\nimport { ContentWrapper } from '../../shared/ui/content-wrapper'\r\n\r\nexport const AppRouter = () => {\r\n\tconst { currentUser } = useAuth()\r\n\treturn currentUser.uid ?\r\n\t\t(\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path='/' component={ContentWrapper} />\r\n\t\t\t</Switch>\r\n\t\t) :\r\n\t\t(\r\n\t\t\t<Switch>\r\n\t\t\t\t{publicRoutes.map(({ path, Component }, i) => {\r\n\t\t\t\t\treturn <Route path={path} component={Component} exact={true} key={i} />\r\n\t\t\t\t})}\r\n\t\t\t\t<Redirect to={LOGIN_ROUTE} />\r\n\t\t\t</Switch>\r\n\t\t)\r\n}\r\n","import './index.css';\r\nimport React from 'react'\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { AppRouter } from './routers/app-router';\r\n\r\nexport default function App() {\r\n  return (\r\n    <HashRouter basename=\"/\">\r\n      <AppRouter />\r\n    </HashRouter>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app';\r\nimport { AuthProvider } from './contexts/auth';\r\nimport { ModalClassProvider } from './contexts/modal';\r\nimport { ScreenProvider } from './contexts/screen';\r\nimport { SongProvider } from './contexts/song';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ScreenProvider>\r\n      <AuthProvider>\r\n        <ModalClassProvider>\r\n          <SongProvider>\r\n            <App />\r\n          </SongProvider>\r\n        </ModalClassProvider>\r\n      </AuthProvider>\r\n    </ScreenProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}
{"version":3,"sources":["firebase.js","shared/lib/normalize-string.js","shared/lib/find-variations-of-name.js","contexts/auth.jsx","shared/data/consts.js","features/loading/ui/atoms/loading-circle.jsx","shared/ui/images/Logo3.svg","features/loading/ui/atoms/loading-vital-data.jsx","entities/song/lib/add-song-to-history.js","shared/ui/molecules/add-to-list-circle.jsx","shared/lib/display-date.js","shared/ui/atoms/last-seen.jsx","entities/user/ui/organisms/person-tiny.jsx","entities/song/lib/shuffle-songs.js","shared/lib/check-number.js","shared/lib/fetch-item-list.js","shared/lib/hooks/use-condition-func.js","contexts/modal.jsx","contexts/song.jsx","features/full-screen-player/lib/check-karaoke.js","shared/ui/atoms/button.jsx","shared/ui/atoms/input.jsx","shared/ui/atoms/submit-button.jsx","features/search/lib/hooks/use-search.jsx","features/search/lib/rank-current-hint.js","features/search/ui/molecules/search-bar-buttons.jsx","features/search/ui/atoms/search-filter-item.jsx","features/search/ui/molecules/search-filters.jsx","features/search/lib/find-search-hints.js","features/search/lib/find-top-searches.js","features/search/lib/translite-word.js","features/search/lib/hooks/use-load-hints.jsx","shared/lib/find-right-icon.js","features/search/ui/atoms/search-hint-item.jsx","features/search/ui/organisms/search-hints.jsx","shared/lib/hooks/use-outside-click.js","shared/ui/organisms/search-bar.jsx","features/full-screen-player/lib/transform-lyrics-to-array-of-object.js","features/admin/lib/hooks/use-edit-song.js","features/admin/ui/organisms/edit-song.jsx","entities/song/lib/add-song-to-library.js","shared/lib/filter-array-with-array.js","entities/song/lib/delete-song-from-library.js","features/full-screen-player/ui/molecules/add-or-delete-song-button.jsx","features/author/lib/sort-user-playlists.js","entities/playlist/lib/hooks/use-add-or-delete-song.js","contexts/screen.jsx","shared/ui/atoms/hint.jsx","features/full-screen-player/ui/atoms/add-to-playlist-item.jsx","features/full-screen-player/ui/molecules/add-to-playlists.jsx","features/author/ui/atoms/person-tiny-vertical-item.jsx","shared/ui/atoms/see-more-round-button.jsx","features/author/ui/templates/tiny-persons-list.jsx","shared/lib/get-uid.js","shared/lib/create-—Åhat.js","shared/lib/find-chat-url.js","features/dialogue/lib/send-message.js","features/share/lib/share-with-friends.js","features/share/ui/organisms/friends-to-share-with.jsx","features/song/ui/organisms/song-info.jsx","features/song/ui/molecules/song-more-window.jsx","features/search/lib/save-search-history.js","entities/song/lib/hooks/use-song-logic.js","features/full-screen-player/ui/atoms/color-circles.jsx","shared/lib/get-short-string.js","shared/lib/display-authors-str.js","shared/lib/big-number-format.js","entities/song/ui/molecules/show-additional-info.jsx","entities/song/ui/organisms/image-and-name.jsx","features/full-screen-player/ui/atoms/authors-list.jsx","features/mobile/ui/organisms/song-item-mobile-more-window.jsx","entities/song/lib/hooks/use-add-or-delete-song.js","entities/song/ui/molecules/add-or-delete-button.jsx","entities/song/ui/organisms/more-button.jsx","entities/song/ui/song-item.jsx","shared/ui/atoms/more-button.jsx","pages/settings/ui/molecules/title-with-more-btn.jsx","features/song/ui/templates/song-list.jsx","entities/playlist/lib/hooks/use-album-authors.js","features/album/ui/atoms/small-images.jsx","features/author/ui/molecules/chat-with-friend-button.jsx","shared/api/song-api.js","features/author/lib/hooks/use-last-song-listened.jsx","features/author/ui/molecules/last-song-listened.jsx","entities/playlist/lib/add-playlist-to-library.js","entities/playlist/lib/remove-playlist-from-library.js","shared/ui/atoms/go-back-button.jsx","features/album/ui/organisms/album-info.jsx","shared/ui/atoms/download-button.jsx","shared/ui/atoms/radio-button.jsx","features/album/lib/hooks/use-customize-album.js","features/album/ui/organisms/customize-album.jsx","features/author/lib/add-author-to-library.js","features/author/lib/add-friend.js","features/author/lib/delete-author-from-library.js","features/author/ui/organisms/author-info.jsx","features/author/ui/molecules/author-more-window.jsx","features/author/ui/organisms/customize-author.jsx","features/template-header/ui/molecules/top-buttons.jsx","entities/playlist/lib/delete-playlist.js","entities/playlist/lib/quit-playlist.js","features/author/lib/delete-friend.js","features/template-header/header.jsx","shared/ui/atoms/content-container.jsx","pages/album/index.jsx","features/author/ui/atoms/friend-request-item.jsx","features/author/lib/hooks/use-friend-request.jsx","features/author/ui/molecules/friend-request.jsx","entities/song/lib/find-if-song-is-new.js","features/author/ui/molecules/top-songs.jsx","features/author/lib/find-authors-albums.js","entities/playlist/ui/molecules/deleted-playlist.jsx","entities/playlist/lib/hooks/use-playlist-songs.js","entities/playlist/ui/playlist-item.jsx","features/album/ui/template/album-list.jsx","features/author/ui/organisms/playlists.jsx","shared/lib/find-similar-artists.js","features/author/ui/molecules/author-item-big.jsx","features/author/ui/templates/authors-list.jsx","features/author/ui/organisms/similar-artists.jsx","features/loading/ui/atoms/full-screen-loading.jsx","features/author/lib/hooks/use-add-playlist.jsx","features/author/ui/templates/person-tiny-list.jsx","features/author/ui/organisms/add-playlist.jsx","features/author/ui/organisms/add-song.jsx","shared/ui/molecules/slider.jsx","features/author/ui/templates/add-window.jsx","pages/author/index.jsx","features/chats/ui/atoms/amount-of-unseen-messages.jsx","features/dialogue/ui/atoms/seen-by-circle.jsx","features/dialogue/ui/atoms/typing-animation.jsx","features/chats/ui/molecules/last-sent-message.jsx","features/chats/lib/amount-of-unseen-messages.js","shared/lib/hooks/use-user-online.js","shared/ui/atoms/is-online-circle.jsx","features/chats/ui/organisms/chat-item.jsx","features/chats/lib/hooks/use-create-chat.jsx","features/chats/ui/organisms/create-chat.jsx","pages/chats/index.jsx","features/dialogue/ui/atoms/date-on-top.jsx","features/dialogue/lib/hooks/use-chat-header.js","features/dialogue/lib/leave-chat.js","features/dialogue/ui/atoms/leave-chat-button.jsx","features/dialogue/ui/molecules/attachment-list.jsx","shared/lib/filter-array-of-objects-with-array.js","features/dialogue/lib/add-people-to-chat.js","features/dialogue/ui/organisms/add-people-to-chat.jsx","features/dialogue/ui/organisms/chat-info.jsx","shared/lib/fetch-collection.js","features/dialogue/ui/atoms/wallpaper-item.jsx","features/dialogue/ui/molecules/wallpapers.jsx","features/dialogue/ui/molecules/chat-more-button.jsx","features/dialogue/ui/organisms/chat-header.jsx","features/dialogue/lib/what-to-write-in-response-item.js","features/dialogue/ui/molecules/attached-items-in-chat-input.jsx","features/dialogue/ui/molecules/not-allowed-to-send-messages.jsx","features/dialogue/lib/hooks/use-chat-input.js","features/dialogue/ui/organisms/chat-input.jsx","features/dialogue/lib/hooks/use-chat.js","shared/lib/hooks/use-on-screen.js","features/dialogue/lib/hooks/use-mark-message-read.js","features/dialogue/ui/molecules/system-message.jsx","features/dialogue/ui/atoms/response-item.jsx","features/dialogue/ui/atoms/message-item.body.jsx","features/dialogue/ui/molecules/message-item.jsx","features/dialogue/ui/atoms/new-messages-plate.jsx","features/dialogue/ui/organisms/message-field.jsx","features/dialogue/ui/organisms/chat-messages-window.jsx","pages/dialogue/index.jsx","features/dialogue/lib/hooks/use-realtime-messages.js","pages/history/index.jsx","features/home/ui/organisms/main-banner.jsx","features/home/ui/organisms/recent-songs.jsx","features/home/ui/organisms/recommended-authors.jsx","shared/ui/atoms/important-message.jsx","features/home/ui/organisms/recommended-songs.jsx","features/home/ui/organisms/top-15-Songs.jsx","pages/home/index.jsx","pages/library/pages/authors.jsx","pages/library/ui/atoms/create-playlist.jsx","pages/library/pages/playlists.jsx","pages/library/ui/molecules/library-playlist-item.jsx","shared/ui/images/wave2.svg","features/library/ui/organisms/playlists.jsx","features/library/lib/find-visible-playlists.js","pages/library/pages/songs.jsx","pages/library/index.jsx","shared/ui/atoms/title-and-logo.jsx","features/login/ui/atoms/error-plate.jsx","shared/ui/atoms/blurred-background.jsx","pages/login/index.jsx","features/full-screen-player/ui/atoms/loading.jsx","features/lyrics-editing/ui/molecules/lyrics.jsx","features/lyrics-editing/ui/molecules/song-image-and-name.jsx","features/lyrics-editing/ui/molecules/timeline.jsx","pages/lyrics-editing/index.jsx","pages/page-not-found/index.jsx","features/search/lib/hooks/use-search-history.jsx","features/search/ui/organisms/search-history.jsx","pages/search/index.jsx","pages/settings/ui/orgamisms/account-settings.jsx","pages/settings/ui/molecules/switch-toggle.jsx","pages/settings/ui/atoms/settings-item.jsx","pages/settings/ui/orgamisms/chat-settings.jsx","pages/settings/ui/orgamisms/music-settings.jsx","pages/settings/ui/molecules/settings-list.jsx","pages/settings/ui/atoms/settings-section-item.jsx","pages/settings/ui/molecules/settings-sections.jsx","pages/settings/index.jsx","app/routes.js","pages/signup/index.jsx","app/routers/content-router.js","features/bottom-message/ui/message-window.jsx","shared/music/notification.mp3","features/chats/ui/organisms/chat-notification-window.jsx","features/confirm/ui/confirm-window.jsx","features/full-screen-player/ui/molecules/lyrics-paragraph.jsx","shared/data/player-right-side.js","features/full-screen-player/ui/organisms/share.jsx","features/full-screen-player/ui/organisms/options.jsx","features/full-screen-player/ui/organisms/lyrics.jsx","features/full-screen-player/ui/organisms/queue.jsx","features/full-screen-player/lib/hooks/use-full-screen-player.js","shared/lib/display-time.js","features/full-screen-player/lib/find-len-of-authors.js","features/full-screen-player/ui/organisms/player.jsx","features/full-screen-player/ui/full-screen-player.jsx","shared/data/left-side-bar.js","shared/ui/atoms/notification-circle.jsx","features/leftside-bar/ui/atoms/container.jsx","features/leftside-bar/lib/use-amount-of-unseen-messages.js","features/leftside-bar/ui/atoms/navigation-item.jsx","features/leftside-bar/ui/molecules/navigation-panel.jsx","shared/ui/atoms/online-circle-animation.jsx","features/leftside-bar/ui/molecules/person.jsx","features/leftside-bar/ui/molecules/tiny-playlist.jsx","features/leftside-bar/ui/organisms/leftside-bar.jsx","features/mobile/ui/atoms/mobile-controlbar-item.jsx","features/mobile/ui/molecules/bottom-control-bar.jsx","features/mobile/ui/organisms/full-bottom-side.jsx","features/modal/ui/modal-window.jsx","shared/lib/hooks/use-chat-notifications.js","shared/lib/hooks/use-media-metadata.js","shared/lib/hooks/use-update-online-status.js","shared/ui/content-wrapper.jsx","entities/song/lib/hooks/use-update-listen-count.js","app/routers/app-router.js","app/index.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","storage","firestore","normalizeString","str","replace","toLowerCase","findVariationsOfName","name","variantsOfName","personName","i","length","push","substr","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","userId","setUserId","loading","setLoading","searchValue","setSearchValue","useEffect","collection","doc","onSnapshot","user","data","undefined","uid","onAuthStateChanged","a","value","login","email","password","setError","signInWithEmailAndPassword","then","catch","err","message","signup","role","photoURL","imageColors","createUserWithEmailAndPassword","result","set","displayName","isAuthor","parseInt","isVerified","numberOfListenersPerMonth","ownSongs","ownPlaylists","addedSongs","addedPlaylists","addedAuthors","lastSongPlayed","chats","friends","subscribers","regDate","FieldValue","serverTimestamp","place","rank","history","logout","signOut","Provider","LOGIN_ROUTE","SIGNUP_ROUTE","HOME_ROUTE","LIBRARY_ROUTE","SEARCH_ROUTE","CHAT_ROUTE","HISTORY_ROUTE","LoadingCircle","top","className","style","src","alt","LoadingData","Logo","addSongToHistory","songId","get","res","songsList","unshift","update","AddToListCircle","listOfChosenItems","setListOfChosenItems","itemId","onClick","e","preventDefault","width","includes","type","filteredList","filter","el","color","prev","amountOfZeros","number","toDateTime","secs","t","Date","setSeconds","displayDate","stringDate","displayMode","Months","newDate","isNaN","seconds","getMonth","getDate","getFullYear","getHours","getMinutes","LastSeen","userUID","lastSeen","setLastSeen","isOnline","setIsOnline","unsubscribe","fiveMinutesAgo","getTime","online","RightIconWrapper","styled","div","PersonTiny","chosenArray","setChosenArray","rightButton","restProps","shuffleSongs","songsArray","randomIndexesArray","newSongsNumbersArray","Array","counter","randNum","Math","floor","random","checkNumber","max","min","fetchItemList","list","setList","resManipulation","lastFunc","lengthRestrict","assignMode","tempArray","map","Promise","all","finalResult","temp","forEach","item","find","useConditionFunc","fetchFunc","changeCondition","dep","JSON","stringify","ModalContext","useModal","ModalClassProvider","openModal","setOpenModal","content","setContent","isOpenned","bottomMessage","setBottomMessage","isOpenConfirm","setIsOpenConfirm","confirmText","rejectText","onConfirmL","onReject","confirmContent","setConfirmContent","closeConfirm","toggleModal","openConfirm","question","onConfirm","openBottomMessage","time","setTimeout","SongContext","useSong","SongProvider","yourSongs","setYourSongs","yourPlaylists","setYourPlaylists","yourAuthors","setYourAuthors","yourFriends","setYourFriends","currentSongQueue","setCurrentSongQueue","currentSong","setCurrentSong","currentSongInQueue","setCurrentSongInQueue","currentSongPlaylistSource","setCurrentSongPlaylistSource","inputRange","setInputRange","id","currentSongData","setCurrentSongData","imgColors","setImgColors","play","setPlay","currentTime","setCurrentTime","songDuration","setSongDuration","repeatMode","setRepeatMode","shuffleMode","setShuffleMode","currentParagraph","setCurrentParagraph","isThereKaraoke","setIsThereKaraoke","openFullScreenPlayer","setOpenFullScreenPlayer","songRef","useRef","currentParagraphRef","inputRef","leftSideBarInputRef","rightSideCurrentPage","setRightSideCurrentPage","openMenu","setOpenMenu","fetchQueue","lastQueue","findIndex","fetchYourSongs","slice","reverse","fetchCurrentSongInitial","tempSongObject","songSrc","authors","cover","listens","releaseDate","lyrics","curSong","curQueue","source","image","docRef","exists","songData","error","console","log","defineCurrentParagraph","first","last","roundedTime","parseFloat","current","toFixed","midPoint","blockStartTime","startTime","nextBlockStartTime","correctSongNumber","currentSongId","playlistId","String","concat","friend","status","obj","shuffledSongsArray","song","document","title","nextSong","prevSong","playSong","pause","playing","event","target","defineCurrentParagraphLight","changeCurrentTime","localName","displayAuthors","authorsList","separatingSign","to","stopPropagation","displayAuthorsFull","loadSongData","duration","window","innerWidth","ButtonWrapper","button","textLen","Button","text","icon","visible","Wrapper","margin","InputWrapper","input","Input","setValue","placeholder","required","onChange","SubmitButtonWrapper","props","isLoading","isActive","completed","SubmitButton","action","setCompleted","errorMessage","setErrorMessage","useSearch","setAllFoundSongs","setResultAuthorList","setResultPlaylists","defaultSearchMode","searchMode","defaultSongsListValue","defaultAuthorsListValue","defaultPlaylistsListValue","setMessage","foundAnything","setFoundAnything","inputValue","setInputValue","findItem","defaultList","foundItemTempArray","normalizedSearch","where","docs","itemData","realData","isPrivate","authorsIdsArray","author","sort","b","songsIdsArray","albumsIdsArray","findSomething","searchText","rankCurrentHint","hintName","hintUid","SearchBarButtons","opacity","visibility","cursor","SearchFilterItem","setSearchMode","index","background","SearchFilters","searchHintsLen","display","parseHints","hint","findSearchHints","hints","findTopSearches","orderBy","limit","topSearches","search","transliteWord","word","dictionaryRuToEn","dictionaryEnToRu","'","split","reduce","acc","letter","useLoadHints","setCurrentHint","inputFocused","setSearchHints","resolve","sortedHints","findRightIcon","SearcHintItem","currentHint","setInputFocused","height","marginLeft","SearchHints","searchHints","transform","key","useOutsideClick","ref","setFunc","handleClickOutside","contains","addEventListener","removeEventListener","SearchBar","focus","inputText","marginTop","onFocus","borderRadius","onKeyDown","handleCurrentHint","position","transformLyricsToArrayOfObjects","arrayOfParagraphs","startSubstr","fixedLyrics","useEditSong","songName","setSongName","songAuthors","setSongAuthors","songCover","setSongCover","setImageColors","join","setLyrics","foundAuthors","setFoundAuthors","removeAuthorFromList","filtered","people","manuallyChangeColor","addAuthor","some","person","updateSong","authorRef","authorData","authorSongs","filteredSongs","EditSong","flexDirection","marginBottom","justifyContent","alignItems","padding","isAdmin","fontWeight","addSongToLibrary","songAuthorsUIDS","finalAuthorsUIDS","authorId","newList","filterArrayWithArray","whatToFilter","withWhatToFilter","this","indexOf","deleteSongFromLibrary","songNum","songObj","finalFilteredAuthors","AddOrDeleteButtonFull","sortUserPlaylists","playlist","sortedPlaylists","isAlbum","useAddOrDeleteSong","playlistSongs","setPlaylistSongs","isAdded","setIsAdded","response","songs","newSongsList","ScreenContext","useScreen","ScreenProvider","screenWidth","setScreenWidth","innerHeight","screenHeight","setScreenHeight","isMobile","setIsMobile","handleResize","Hint","direction","AddToPlaylistItem","addFunc","AddToPlaylists","setSongData","PersonTinyVerticalItem","SeeMoreRoundButton","TinyPersonsList","listOfPeople","restriction","getUID","c","piece","toString","createChat","participants","chatUID","chatName","chatImage","admins","messages","wallpaper","typing","personId","chatInfo","findChatURL","allParticipants","setShouldCreate","setFriendChatId","foundChat","chatId","chat","count","every","sendMessage","chatData","sender","messageText","attachedSongs","attachedAlbums","attachedAuthors","inResponseToMessage","trim","tempMessages","sentTime","seenBy","shareWithFriends","shareList","whatToShare","sortedFriends","FriendsToShareWith","chosenFriends","setChosenFriends","setMessageText","foundPeople","setFoundPeople","maxHeight","overflowY","SongInfo","friendsThatHaveThisSong","setFriendsThatHaveThisSong","findFriendsThatHaveThisSong","backgroundImage","fontSize","marginRight","minHeight","SongItemMoreWindow","openMoreWindow","moreWindowPosRelativeToViewport","bottom","saveSearchHistory","itemType","newItemSaved","useSongLogic","localIndex","shouldSaveSearchHistory","setOpenMoreWindow","setMoreWindowPosRelativeToViewport","currentItemRef","openSongItemMoreWindow","getBoundingClientRect","chooseSongItem","ColorCircles","getShortString","len","displayAuthorsStr","authorslist","separator","lenLimit","authorsString","bigNumberFormat","ShowAdditionInfo","showListens","isNewSong","ImageAndName","memo","maxWidth","AuthorsList","listOfAuthors","SongItemMobileMoreWindow","AddOrDeleteButton","addSong","removeSong","MoreButton","SongItem","listOfChosenSongs","setListOfSongs","MoreBtn","func","lenOfList","maxLen","boolVal","TitleWithMoreBtn","SongList","listOfSongs","showCount","showSearch","displayIfEmpty","showhistory","isHorizontal","showMoreSongs","setShowMoreSongs","localSearchValue","setLocalSearchValue","displaySongs","setDisplaySongs","listSongsIds","allFoundSongs","useAlbumAuthors","albumAuthors","setAlbumAuthors","authorsImages","setAuthorsImages","ids","authrorsData","tempArrayAuthors","tempArrayImages","fetchAuthorsData","SmallImages","imagesList","borderColor","border","ChatWithFriendButton","shouldCreate","friendChatId","textDecoration","getSongById","useLastSongListened","LastSongListened","addPlaylistToLibrary","playlistData","removePlaylistFromLibrary","filteredPlaylists","GoBackBtn","useHistory","goBack","AlbumInfo","album","friendsThatHaveThisAlbum","setFriendsThatHaveThisAlbum","findFriendsThatHaveThisAlbum","creationDate","DownloadButtonWrapper","DownloadButton","setItemSrc","setImageLocalPath","isImage","file","files","isValid","validExtensions","ext","ex","URL","createObjectURL","storageRef","fileRef","child","put","getDownloadURL","onFileChange","RadioBtn","currentActive","label","useCustomizeAlbum","playlistName","setPlaylistName","playlistCover","setPlaylistCover","authorsInputValue","setAuthorsInputValue","allAuthors","setAllAuthors","chosenAuthors","setChosenAuthors","setReleaseDate","songsSearch","setSongsSearch","allSongs","setAllSongs","chosenSongs","setChosenSongs","playlistStatus","setPlaylistStatus","isPlaylistPrivate","setIsPlaylistPrivate","loadingAuthors","loadingSongs","setLoadingSongs","imageLocalPath","authorPlaylists","addPlaylistToFirebase","CustomizeAlbum","getColors","colors","addAuthorToLibrary","addFriend","friendData","updatedDataForFriend","updatedDataForCurrentUser","deleteAuthorFromLibrary","songsNotToDelete","filteredAuthors","subscribersCount","AuthorInfo","setFriendsThatHaveThisAuthor","findFriendsThatHaveThisAuthor","AuthorMoreWindow","CustomizeAuthor","authorName","authorCover","setAuthorCover","onSubmit","TopButtons","headerColors","moreWindowRef","personFilteredPlaylists","pId","delete","quitPlaylist","filteredUserFriends","filteredOtherUserFriends","deleteFriend","animation","Header","isFriend","backgroundColor","left","ContentContainer","AlbumPage","match","useRouteMatch","setHeaderColors","albumId","params","albumData","setAlbumData","fetchAlbumsData","fetchSongsInAlbum","flex","overflow","boxShadow","FriendRequestItem","rejectFriend","useFriendRequest","friendRequests","setFriendRequests","friendObj","personData","fetchFriendRequests","friendsList","otherUserFriendList","arrOfReqs","FriendRequest","findIfSongIsNew","songReleaseDate","TopSongs","authorsData","popularSongs","setPopularSongs","newSongs","setNewSongs","prevSongs","findAuthorsSongs","findAuthorsAlbums","setAuthorsPlaylists","currentUserUID","DeletedPlaylist","usePlaylistSongs","albumSong","PlaylistItem","listOfChosenAlbums","setListOfChosenAlbums","playlistDate","playSongsInPlaylist","AlbumList","listOfAlbums","scrollLeft","setScrollLeft","wrapperRef","shouldRenderRightArrow","setShouldRenderRightArrow","scrollWidth","offsetWidth","onScroll","Playlists","authorsPlaylists","findSimilarArtistsNames","authorsSongsArr","setSimilarAuthors","peopleArray","newAuthors","flat","uniqueAuthorsSet","Set","uniqueAuthorsIdsArray","from","uniqueAuthorsDataArray","j","findSimilarArtists","authorsSongsArray","AuthorItemBig","listOfChosenAuthors","setListOfChosenAuthors","SimilarArtists","similarArtists","setSimilarArtists","FullScreenLoading","useAddPlaylist","loadingPlaylist","setLoadingPlaylist","removeSongFromList","PersonTinyList","setListOfPeople","personObj","AddPlaylist","AddSong","setSongSrc","loadingSong","setLoadingSong","Slider","pages","currentPage","setCurrentPage","pageName","AddWindow","openAddSongWindow","setOpenAddSongWindow","currentSliderPage","setCurrentSliderPage","sliderPages","AuthorPage","setAuthorsData","AmountOfUnseenMessages","amountOfUnseen","SeenByCircle","listOfSeen","TypingAnimation","typingPeople","typingPeopleData","setTypingPeopleData","LastSentMessage","isGroup","showUnseenCircle","messageLen","lastAttachedItem","setLastAttachedItem","shouldPutDot","setShouldPutDot","lastMessage","setLastMessage","messageIcons","lastIcon","setLastIcon","findWhatToWriteUnderName","amountOfUnseenMessages","accum","useUserOnline","IsOnlineCircle","ChatItem","otherPerson","setOtherPerson","setAmountOfUnseen","setMessages","setTyping","otherPersonId","snapshot","fetchOtherPerson","now","useCreateChat","foundFriends","setFoundFriends","chatCover","setChatCover","setChatName","allowedToCreate","setAllowedToCreate","handleCreateChat","CreateChat","ChatPage","yourChats","setYourChats","DateOnTop","date","useChatHeader","leaveChat","newParticipants","participantId","LeaveChatButton","isCurrentUserLeaving","AttachmentList","attachmentList","setAttachmentList","sliderCurrentPage","setSliderCurrentPage","attachmentContent","fetchAttachedData","attachedType","firebaseCollection","page","filterArrayOfObjectsWithArray","filterParametr","isInverted","addPeopleToChat","AddPeopleToChat","filteredFriends","ChatInfo","setParticipants","chatNameValue","setChatNameValue","newChatPhoto","setNewChatPhoto","newImageLocalPath","setNewImageLocalPath","newImageColors","setNewImageColors","participantsPage","setParticipantsPage","showUpdateBtn","setShowUpdateBtn","fetchCollection","WallpaperItem","currentWallpaper","Wallpapers","wallpapers","setwallpapers","ChatMoreBtn","chatMoreBtnRef","ChatHeader","whatToWriteInResponseToItem","referedMessage","AttachedItemsInChatInput","attachedItems","setAttachedItems","findName","setItems","removeItemFromAttached","NotAllowedToSendMessagesWrapper","NotAllowedToSendMessages","useChatInput","setInResponseToMessage","otherMessages","openAttachWindow","setOpenAttachWindow","setAttachedSongs","setAttachedAlbums","setAttachedAuthors","resultPlaylists","resultAuthorList","inResponseNames","setInResponseNames","attachedSongsNames","setAttachedSongsNames","attachWindowRef","removeMessageFromResponseList","messageId","sendMessageFull","ChatInput","transition","outline","useChat","participantsData","setParticipantsData","attachedData","setAttachedData","fetchAttachedItems","tempObj","fetchParticipants","useOnScreen","isIntersecting","setIntersecting","observer","IntersectionObserver","entry","observe","disconnect","useMarkMessageRead","messageData","messageRef","isVisible","SystemMessageWrapper","SystemMessage","messageList","ResponseItemWrapper","areYouSender","ResponseItem","allMessages","useMemo","MessageItemBody","showPhoto","senderData","messageSentTime","playlists","users","MessageItem","inResponseToMessageArr","setInResponseToMessageArr","swipeDeltaX","setSwipeDeltaX","transformTransition","setTransformTransition","useSwipeable","onSwiping","deltaX","addMessageToResponseList","returnToInitial","dropDelta","clearTimeout","paddingBottom","onTouchEnd","NewMessagesPlateWrapper","NewMessagesPlate","isNotSeen","MessageField","scrollToMessageRef","scrollToMessageId","setScrollToMessageId","setDateRefsArray","setShowPhoto","showDate","setShowDate","dateRef","ChatMessagesWindow","findTopDate","messagesWindowRef","isNotSeenIndex","increaseViewportBy","scrollBehavior","overflowX","totalCount","initialTopMostItemIndex","components","Footer","followOutput","itemContent","DialoguePage","dateRefsArray","setChatData","setMessageList","currentDateOnTop","setCurrentDateOnTop","offsetTop","scrollTop","innerHTML","useRealTimeMessages","HistoryPage","historySongsIds","setHistorySongsIds","historySongs","setHistorySongs","MainBanner","bannerColors","setBannerColors","setcurrentSliderPage","topAuthor","setTopAuthor","topSong","setTopSong","topAlbum","setTopAlbum","findTop","criterion","RecentSongs","recentSongs","setRecentSongs","tempSongsIds","findRecentSongs","RecommendedAuthors","recommendationAuthors","setRecommendationAuthors","uniqueAuthors","setUniqueAuthors","uniqueAuthorsUIDSArray","ImportantMessage","RecommendedSongs","recommendedSongs","setRecommendedSongs","fetchRecommendedSongs","Top15Songs","topSongs","setTopSongs","HomePage","AuthorsPage","setDisplayAuthors","CreatePlaylistWrapper","CreatePlaylist","PlaylistsPage","playlistsDisplay","setPlaylistsDisplay","LibraryPlaylistItem","playlistsVisible","findVisiblePlaylists","p","wave","SongsPage","LibraryPage","libraryPages","TitleAndLogo","ErrorPlate","BlurredBg","LogInPage","setEmail","setPassword","disabled","Loading","timeSpan","pointerEvents","LyricsWrapper","Lyrics","loadingButtons","setLoadingButtons","insertBlock","insertData","splice","lyricItem","SongImageAndNameWrapper","SongImageAndName","TimelineWrapper","Timeline","LyricsEditingWrapper","LyricsEditingPage","handleKeyDown","code","PageNotFound","useSearchHistory","historyPlaylists","setHistoryPlaylists","historyAuthors","setHistoryAuthors","SearchHistory","SearchPage","resultSongList","setResultSongList","resultAlbumList","setResultAlbumList","shadowColor","setShadowColor","AccountSettings","SwitchToggle","boolValue","setBoolValue","SettingsItemWrapper","SettingsItem","handleChangeToggle","val","ChatSettings","MusicSettings","SettingsListWrapper","SettingsList","settingsPages","SettingsSectionItemWrapper","SettingsSectionItem","SettingsSectionsWrapper","SettingsSections","SettingsPageWrapper","SettingsPage","publicRoutes","path","Component","currentRoleChoice","setCurrentRoleChoice","setName","setPhotoURL","privateRoutes","ContentRouter","component","exact","MessageWindow","findColor","light","dark","findIcon","ChatNotificationWindowWrapper","show","ChatNotificationWindow","userData","setUserData","setShow","Audio","notifSound","ConfirmWindow","confirmRef","LyricsParagraph","lyricsModeratorMode","karaokeModeratorTimes","setKaraokeModeratorTimes","setInputKaraokeTime","inputKaraokeTime","paragraphRef","paragraphStyle","abs","addLyricsBlock","indexOfRelativeElement","tempTimes","convertedToNumber","inputKaraoke","rightSide","socialMedia","social","setLyricsModeratorMode","canUpdateLyrics","setCanUpdateLyrics","scrollIntoView","paragraph","tempSongData","useFullScreenPlayer","lyricsRef","mobileMenuTransition","setMobileMenuTransition","deltaY","setDeltaY","deltaYMobileMenu","setDeltaYMobileMenu","mobileContentScroll","mobileMenuRef","handlers","bgRef","handlersForMobileMenu","onSwipedLeft","onSwipedRight","returnToInitialMobileMenu","noLyrics","documentElement","setProperty","refPassthroughBg","changeRightSidePage","rightSideContent","RightSidePage","refPassthroughMobileMenu","correctTimeDisplay","findLenOfAuthors","Player","textLimit","linkToAuthors","whiteSpace","step","displayTime","FullScreenPlayer","zIndex","leftSideBar","link","NotificationCircleWrapper","NotificationCircle","LeftsideBarContainer","useAmountOfUnseenMessages","amount","setAmount","NavigationItem","notificationValue","NavigationPanel","home","library","OnlineCircleAnimationWrapper","OnlineCircleAnimation","Person","sendAnimation","setSendAnimation","loadingSendSong","setLoadingSendSong","TinyPlaylist","backgroundPosition","backgroundSize","LeftsideBar","userNotifications","setUserNotifications","currentFriendToPlaylistPage","setCurrentFriendToPlaylistPage","location","hash","alignSelf","MobileControlBarItem","element","BottomControlBar","userElement","FullBottomSide","ModalWindow","modalRef","useChatNotifications","notifications","setNotifications","docChanges","timeout","useMediaMetadata","updatePositionState","navigator","mediaSession","setPositionState","playbackRate","pauseSong","metadata","MediaMetadata","artist","artwork","sizes","setActionHandler","useUpdateOnlineStatus","fiveMinutes","updateOnlineStatus","interval","setInterval","clearInterval","ContentWrapper","updateListenCount","listenCountTimeOut","sourceId","listedData","authorNumberOfListenersPerMonth","useUpdateListenCount","onLoadedData","onTimeUpdate","onEnded","notif","notifsLen","AppRouter","App","basename","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6b940d70.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/storage'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\nimport 'firebase/analytics'\r\nimport seedDatabase from './seedDatabase';\r\n\r\nconst app = firebase.initializeApp({\r\n\tapiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n\tauthDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n\tprojectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n\tstorageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n\tmessagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n\tappId:process.env.REACT_APP_FIREBASE_APP_ID,\r\n\tmeasurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n});\r\nfirebase.analytics();\r\nexport const auth = app.auth()\r\nexport const storage = app.storage()\r\nexport const firestore = app.firestore()\r\n// seedDatabase(firestore)\r\nexport default app","export default function normalizeString(str) {\r\n\treturn str.replace(/\\s/g, '').replace(/\\$/g, \"s\").replace(/[,'._/]/g, '').replace(/-/g, '').toLowerCase()\r\n}","import normalizeString from \"./normalize-string\"\r\n\r\nexport const findVariationsOfName = (name) => {\r\n\tlet variantsOfName = []\r\n\tlet personName = normalizeString(name)\r\n\tfor (let i = 1; i < personName.length + 1; i++) {\r\n\t\tvariantsOfName.push(personName.substr(0, i))\r\n\t}\r\n\treturn variantsOfName\r\n}","import firebase from \"firebase\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { auth, firestore } from \"../firebase\";\r\nimport { findVariationsOfName } from \"../shared/lib/find-variations-of-name\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [userId, setUserId] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  function login(email, password, setError, setLoading) {\r\n    setLoading(true);\r\n    return auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then()\r\n      .catch((err) => {\r\n        setError(err.message);\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut();\r\n  }\r\n\r\n  function signup(\r\n    email,\r\n    name,\r\n    password,\r\n    role,\r\n    photoURL,\r\n    imageColors,\r\n    setError,\r\n    setLoading\r\n  ) {\r\n    setLoading(true);\r\n    return auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((result) => {\r\n        firestore\r\n          .collection(\"users\")\r\n          .doc(result.user.uid)\r\n          .set({\r\n            uid: result.user.uid,\r\n            displayName: name,\r\n            photoURL:\r\n              photoURL ||\r\n              \"https://images.fineartamerica.com/images/artworkimages/mediumlarge/1/music-icon-mohammed-jabir-ap.jpg\",\r\n            isAuthor: parseInt(role) === 1,\r\n            isVerified: parseInt(role) === 1,\r\n            numberOfListenersPerMonth: 0,\r\n            ownSongs: [],\r\n            ownPlaylists: [],\r\n            addedSongs: [],\r\n            addedPlaylists: [],\r\n            addedAuthors: [],\r\n            lastSongPlayed: \"\",\r\n            chats: [],\r\n            friends: [],\r\n            subscribers: 0,\r\n            regDate: firebase.firestore.FieldValue.serverTimestamp(),\r\n            imageColors: imageColors,\r\n          });\r\n        firestore\r\n          .collection(\"search\")\r\n          .doc(result.user.uid)\r\n          .set({\r\n            place: \"users\",\r\n            uid: result.user.uid,\r\n            rank: 0,\r\n            variantsOfName: findVariationsOfName(name),\r\n          });\r\n\r\n        firestore.collection(\"searchHistory\").doc(result.user.uid).set({\r\n          history: [],\r\n        });\r\n\r\n        firestore.collection(\"history\").doc(result.user.uid).set({\r\n          history: [],\r\n        });\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setError(err.message);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (userId !== null) {\r\n      const unsubscribe = firestore\r\n        .collection(\"users\")\r\n        .doc(userId)\r\n        .onSnapshot((user) => {\r\n          if (user.data()) {\r\n            if (currentUser.uid === undefined) {\r\n              setCurrentUser(user.data());\r\n            }\r\n          }\r\n        });\r\n      return unsubscribe;\r\n    }\r\n  }, [firestore, userId]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        setUserId(user.uid);\r\n      } else {\r\n        setUserId(null);\r\n        setCurrentUser({});\r\n        setLoading(false);\r\n      }\r\n    });\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    setCurrentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    loading,\r\n    setLoading,\r\n    searchValue,\r\n    setSearchValue,\r\n  };\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n","export const LOGIN_ROUTE = '/login'\r\nexport const SIGNUP_ROUTE = '/signup'\r\nexport const HOME_ROUTE = '/home'\r\nexport const LIBRARY_ROUTE = '/library'\r\nexport const SEARCH_ROUTE = '/search'\r\nexport const CHAT_ROUTE = '/chat'\r\nexport const NOTFOUND_ROUTE = '/not-found'\r\nexport const HISTORY_ROUTE = '/history'\r\nexport const SETTINGS_ROUTE = '/settings'\r\nexport const LYRICS_EDITING_ROUTE = '/lyrics-editing'\r\n\r\nexport const TEMPLATE_CHAT = '/chat/:chatId'\r\nexport const TEMPLATE_ALBUM = '/albums/:albumId'\r\nexport const TEMPLATE_AUTHOR = '/authors/:authorId'","import React from 'react'\r\n\r\nexport const LoadingCircle = ({top = '20%'}) => {\r\n\treturn (\r\n\t\t<div className = \"LoadingCircle\" style = {{top:top}}>\r\n\t\t\t<img loading = \"lazy\" src=\"https://icon-library.com/images/spinner-icon-gif/spinner-icon-gif-28.jpg\" alt=\"\"/>\r\n\t\t</div>\r\n\t)\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Logo3.fc53f4ac.svg\";","import React from \"react\";\r\nimport Logo from \"../../../../shared/ui/images/Logo3.svg\";\r\nexport const LoadingData = () => {\r\n  return (\r\n    <div className=\"LoadingData\">\r\n      <img loading=\"lazy\" src={Logo} alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n","import { firestore } from \"../../../firebase\"\r\n\r\nexport const addSongToHistory = (songId, currentUser) => {\r\n\tfirestore.collection('history').doc(currentUser.uid).get().then(res => {\r\n\t\tconst songsList = res.data().history\r\n\t\tif (songsList[0] !== songId) songsList.unshift(songId)\r\n\t\tif (songsList.length > 30) songsList.length = 30\r\n\r\n\t\tfirestore.collection('history').doc(currentUser.uid).update({\r\n\t\t\thistory: songsList\r\n\t\t})\r\n\t})\r\n}","import React from \"react\";\r\nimport { IoIosCheckmarkCircle, IoIosRadioButtonOff } from \"react-icons/io\";\r\n\r\nexport const AddToListCircle = ({\r\n  listOfChosenItems,\r\n  setListOfChosenItems,\r\n  itemId,\r\n}) => {\r\n  return listOfChosenItems !== undefined ? (\r\n    <div onClick={(e) => e.preventDefault()} style={{ width: \"35px\" }}>\r\n      {listOfChosenItems.includes(itemId) ? (\r\n        <button\r\n          type=\"button\"\r\n          onClick={(e) => {\r\n            let filteredList = listOfChosenItems.filter((el) => el !== itemId);\r\n            setListOfChosenItems(filteredList);\r\n          }}\r\n          className=\"addToListBtn\"\r\n        >\r\n          <IoIosCheckmarkCircle style={{ color: \"var(--lightBlue)\" }} />\r\n        </button>\r\n      ) : (\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setListOfChosenItems((prev) => [...prev, itemId])}\r\n          className=\"addToListBtn\"\r\n        >\r\n          <IoIosRadioButtonOff />\r\n        </button>\r\n      )}\r\n    </div>\r\n  ) : null;\r\n};\r\n","\r\nfunction amountOfZeros(number) {\r\n\treturn number % 10 === number ? \"0\" + number : number\r\n}\r\n\r\nfunction toDateTime(secs) {\r\n\tvar t = new Date(1970, 0, 1); // Epoch\r\n\tt.setSeconds(secs);\r\n\treturn t;\r\n}\r\n\r\nexport default function displayDate(stringDate, displayMode = 0){\r\n\tconst Months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n\tlet newDate = !isNaN(stringDate)?stringDate.seconds?toDateTime(stringDate.seconds + 10800):toDateTime((stringDate/1000) + 10800):new Date(stringDate)\r\n\tif(displayMode === 0){\r\n\t\treturn Months[newDate.getMonth()] + \" \" + newDate.getDate() + \", \" + newDate.getFullYear() \r\n\t}\r\n\r\n\tif(displayMode === 1){\r\n\t\treturn Months[newDate.getMonth()] + \" \" + newDate.getDate()\r\n\t}\r\n\r\n\tif(displayMode === 2){\r\n\t\treturn amountOfZeros(newDate.getHours()) + \":\" + amountOfZeros(newDate.getMinutes())\r\n\t}\r\n\r\n\tif(displayMode === 3){\r\n\t\treturn Months[newDate.getMonth()] + \" \" + newDate.getDate() + \", \" + newDate.getFullYear() + \" at \" + amountOfZeros(newDate.getHours()) + \":\" + amountOfZeros(newDate.getMinutes())\r\n\t}\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { firestore } from \"../../../firebase\";\r\nimport displayDate from \"../../lib/display-date\";\r\n\r\nexport const LastSeen = ({ userUID, ...restProps }) => {\r\n  const [lastSeen, setLastSeen] = useState(\"\");\r\n  const [isOnline, setIsOnline] = useState(false);\r\n  useEffect(() => {\r\n    const unsubscribe = firestore\r\n      .collection(\"users\")\r\n      .doc(userUID)\r\n      .onSnapshot((doc) => {\r\n        if (userUID !== undefined) {\r\n          const fiveMinutesAgo = new Date().getTime() - 300000;\r\n          const isOnline = doc.data().online > fiveMinutesAgo;\r\n          setIsOnline(isOnline);\r\n          if (doc.data().online === undefined) setLastSeen(\"offline\");\r\n          else if (!isOnline)\r\n            setLastSeen(\"last seen \" + displayDate(doc.data().online, 3));\r\n        }\r\n      });\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [firestore, userUID]);\r\n  return isOnline ? (\r\n    <span className=\"is-online\">Online</span>\r\n  ) : (\r\n    <span className=\"is-not-online\">{lastSeen}</span>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { AddToListCircle } from \"../../../../shared/ui/molecules/add-to-list-circle\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { LastSeen } from \"../../../../shared/ui/atoms/last-seen\";\r\n\r\nconst RightIconWrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 8px;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nexport const PersonTiny = ({\r\n  data,\r\n  chosenArray,\r\n  setChosenArray,\r\n  lastSeen = false,\r\n  rightButton,\r\n  ...restProps\r\n}) => {\r\n  return (\r\n    <div className=\"person\" {...restProps}>\r\n      <AddToListCircle\r\n        listOfChosenItems={chosenArray}\r\n        setListOfChosenItems={setChosenArray}\r\n        itemId={data.uid}\r\n      />\r\n      <div className=\"personImg\">\r\n        <img loading=\"lazy\" src={data.photoURL} alt=\"\" />\r\n      </div>\r\n      <div className=\"personName\">{data.displayName}</div>\r\n      {lastSeen && <LastSeen userUID={data.uid} className=\"is-online\" />}\r\n      <RightIconWrapper>{rightButton}</RightIconWrapper>\r\n    </div>\r\n  );\r\n};\r\n","export default function shuffleSongs(songsArray){\r\n\tconst randomIndexesArray = []\r\n\tconst newSongsNumbersArray = new Array(songsArray.length)\r\n\tlet counter = 0\r\n\twhile(counter < songsArray.length){\r\n\t\tconst randNum = Math.floor(Math.random()*(songsArray.length))\r\n\t\tif(!randomIndexesArray.includes(randNum)){\r\n\t\t\trandomIndexesArray.push(randNum)\r\n\t\t\tnewSongsNumbersArray[randNum] = songsArray[counter]\r\n\t\t\tcounter++\r\n\t\t}\r\n\t}\r\n\treturn newSongsNumbersArray\r\n}","export default function checkNumber(number, max, min = 0){\r\n\tif(number > max) return min\r\n\tif(number < min) return max\r\n\r\n\treturn number\r\n}","import { firestore } from \"../../firebase\"\r\n\r\nexport const fetchItemList = (list, collection, setList, resManipulation = (res) => res, lastFunc = () => null, lengthRestrict, assignMode = 0) => {\r\n\tif (list?.length) {\r\n\t\tconst tempArray = list.map(async (itemId, i) => {\r\n\t\t\treturn (await firestore.collection(collection).doc(itemId).get()).data()\r\n\t\t})\r\n\t\tPromise.all(tempArray).then(res => {\r\n\t\t\tlet finalResult = resManipulation(res)\r\n\t\t\tif (finalResult?.length > lengthRestrict) finalResult.length = lengthRestrict\r\n\t\t\tif (assignMode === 0) setList(finalResult)\r\n\t\t\telse setList(prev => {\r\n\t\t\t\tlet temp = []\r\n\t\t\t\tfinalResult.forEach(item => {\r\n\t\t\t\t\tif (item) {\r\n\t\t\t\t\t\tif (!prev.find(el => el['id'] === item['id'])) {\r\n\t\t\t\t\t\t\ttemp.push(item)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn [...prev, ...temp]\r\n\t\t\t})\r\n\t\t\tlastFunc()\r\n\t\t})\r\n\t}\r\n}","import { useEffect } from 'react'\r\n\r\nexport const useConditionFunc = (currentUser, fetchFunc, changeCondition, dep) => {\r\n\tuseEffect(() => {\r\n\t\tif (currentUser.uid) {\r\n\t\t\tif (changeCondition) {\r\n\t\t\t\tfetchFunc()\r\n\t\t\t}\r\n\t\t}\r\n\t}, [JSON.stringify(dep)])\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\n\r\nconst ModalContext = React.createContext();\r\n\r\nexport const useModal = () => {\r\n  return useContext(ModalContext);\r\n};\r\n\r\nexport const ModalClassProvider = ({ children }) => {\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [content, setContent] = useState(<h1>Test</h1>);\r\n  const [bottomMessage, setBottomMessage] = useState({\r\n    isOpenned: false,\r\n    type: \"success\",\r\n    message: \"Action is successfully done!\",\r\n  });\r\n  const [isOpenConfirm, setIsOpenConfirm] = useState(false);\r\n  const [confirmContent, setConfirmContent] = useState({\r\n    confirmText: \"Confirm Action\",\r\n    rejectText: \"Cancel\",\r\n    onConfirmL: () => {\r\n      return null;\r\n    },\r\n    onReject: () => {\r\n      return null;\r\n    },\r\n  });\r\n  function toggleModal() {\r\n    setOpenModal(!openModal);\r\n  }\r\n\r\n  //{question:question, confirmText:..., rejectText:..., onConfirm..., onReject:...}\r\n  function openConfirm(\r\n    question,\r\n    confirmText,\r\n    rejectText = \"Cancel\",\r\n    onConfirm,\r\n    onReject = closeConfirm\r\n  ) {\r\n    setIsOpenConfirm(true);\r\n    setConfirmContent({\r\n      question: question,\r\n      confirmText: confirmText,\r\n      rejectText: rejectText,\r\n      onConfirm: onConfirm,\r\n      onReject: onReject,\r\n    });\r\n  }\r\n\r\n  function closeConfirm() {\r\n    setIsOpenConfirm(false);\r\n  }\r\n\r\n  const openBottomMessage = (\r\n    message = \"Success\",\r\n    type = \"success\",\r\n    time = 3000\r\n  ) => {\r\n    setBottomMessage({\r\n      isOpenned: true,\r\n      type: type,\r\n      message: message,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      setBottomMessage({\r\n        isOpenned: false,\r\n        type: type,\r\n        message: message,\r\n      });\r\n    }, time);\r\n  };\r\n\r\n  const value = {\r\n    openModal,\r\n    setOpenModal,\r\n    toggleModal,\r\n    setContent,\r\n    content,\r\n    isOpenConfirm,\r\n    setIsOpenConfirm,\r\n    openConfirm,\r\n    closeConfirm,\r\n    confirmContent,\r\n    bottomMessage,\r\n    openBottomMessage,\r\n  };\r\n  return (\r\n    <ModalContext.Provider value={value}>{children}</ModalContext.Provider>\r\n  );\r\n};\r\n","import React, {\r\n  createContext,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LoadingData } from \"../features/loading/ui/atoms/loading-vital-data\";\r\nimport { addSongToHistory } from \"../entities/song/lib/add-song-to-history\";\r\nimport { PersonTiny } from \"../entities/user/ui/organisms/person-tiny\";\r\nimport { firestore } from \"../firebase\";\r\nimport { checkKaraoke } from \"../features/full-screen-player/lib/check-karaoke\";\r\nimport shuffleSongs from \"../entities/song/lib/shuffle-songs\";\r\nimport checkNumber from \"../shared/lib/check-number\";\r\nimport { fetchItemList } from \"../shared/lib/fetch-item-list\";\r\nimport { useConditionFunc } from \"../shared/lib/hooks/use-condition-func\";\r\nimport { useAuth } from \"./auth\";\r\nimport { useModal } from \"./modal\";\r\n\r\nconst SongContext = createContext(null);\r\n\r\nexport const useSong = () => {\r\n  return useContext(SongContext);\r\n};\r\n\r\nexport const SongProvider = ({ children }) => {\r\n  const { currentUser, loading, setLoading } = useAuth();\r\n  const { setOpenModal } = useModal();\r\n  const [yourSongs, setYourSongs] = useState([]);\r\n  const [yourPlaylists, setYourPlaylists] = useState([]);\r\n  const [yourAuthors, setYourAuthors] = useState([]);\r\n  const [yourFriends, setYourFriends] = useState([]);\r\n  const [currentSongQueue, setCurrentSongQueue] = useState([]);\r\n  const [currentSong, setCurrentSong] = useState(-1);\r\n  const [currentSongInQueue, setCurrentSongInQueue] = useState(0);\r\n  const [currentSongPlaylistSource, setCurrentSongPlaylistSource] = useState(\r\n    {}\r\n  );\r\n  const [inputRange, setInputRange] = useState(0);\r\n  const [currentSongData, setCurrentSongData] = useState({ id: -1 });\r\n\r\n  const [imgColors, setImgColors] = useState([]);\r\n  const [play, setPlay] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [songDuration, setSongDuration] = useState(0);\r\n  const [repeatMode, setRepeatMode] = useState(1);\r\n  const [shuffleMode, setShuffleMode] = useState(0);\r\n  const [currentParagraph, setCurrentParagraph] = useState(0);\r\n  const [isThereKaraoke, setIsThereKaraoke] = useState(false);\r\n  const [openFullScreenPlayer, setOpenFullScreenPlayer] = useState(false);\r\n  const songRef = useRef(null);\r\n  const currentParagraphRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n  const leftSideBarInputRef = useRef(null);\r\n  const [rightSideCurrentPage, setRightSideCurrentPage] = useState(0);\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n\r\n  function fetchYourFriends() {\r\n    fetchItemList(\r\n      currentUser.friends\r\n        .filter((friend) => friend.status === \"added\")\r\n        .map((obj) => obj.uid),\r\n      \"users\",\r\n      setYourFriends\r\n    );\r\n  }\r\n\r\n  function fetchQueue() {\r\n    fetchItemList(\r\n      currentUser?.lastQueue?.songsList,\r\n      \"songs\",\r\n      setCurrentSongQueue,\r\n      (res) => res,\r\n      () =>\r\n        setCurrentSongInQueue(\r\n          currentUser.lastQueue.songsList.findIndex(\r\n            (songId) => songId === currentUser.lastSongPlayed\r\n          )\r\n        )\r\n    );\r\n  }\r\n\r\n  function fetchYourSongs() {\r\n    fetchItemList(\r\n      currentUser.addedSongs.slice(0).reverse(),\r\n      \"songs\",\r\n      setYourSongs,\r\n      (res) => res,\r\n      fetchQueue\r\n    );\r\n  }\r\n\r\n  function fetchYourAuthors() {\r\n    fetchItemList(currentUser.addedAuthors, \"users\", setYourAuthors);\r\n  }\r\n\r\n  async function fetchCurrentSongInitial() {\r\n    if (currentUser.uid !== undefined) {\r\n      const tempSongObject = {\r\n        id: -1,\r\n        name: \"\",\r\n        songSrc: \"\",\r\n        authors: [],\r\n        cover: \"\",\r\n        listens: 0,\r\n        releaseDate: \"\",\r\n        lyrics: [],\r\n        imageColors: [],\r\n      };\r\n      const curSong =\r\n        currentUser.lastSongPlayed ||\r\n        currentUser.addedSongs[0] ||\r\n        tempSongObject.id;\r\n      const curQueue =\r\n        currentUser.lastQueue || {\r\n          source: \"/library\",\r\n          name: \"Your Library\",\r\n          image: currentUser.photoURL,\r\n          songsList: yourSongs,\r\n        } ||\r\n        [];\r\n      setCurrentSong(curSong);\r\n      setCurrentSongPlaylistSource(curQueue);\r\n\r\n      if (curSong !== -1) {\r\n        const docRef = firestore.collection(\"songs\").doc(curSong);\r\n        const docData = docRef\r\n          .get()\r\n          .then((doc) => {\r\n            if (doc.exists) {\r\n              const songData = doc.data();\r\n              setCurrentSongData(songData);\r\n              setImgColors(songData.imageColors || []);\r\n              setLoading(false);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Error getting document:\", error);\r\n            setLoading(false);\r\n          });\r\n      } else {\r\n        setCurrentSongData(tempSongObject);\r\n        setImgColors([]);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  async function fetchCurrentSong() {\r\n    if (currentSong !== -1) {\r\n      firestore\r\n        .collection(\"songs\")\r\n        .doc(currentSong)\r\n        .get()\r\n        .then((doc) => {\r\n          if (doc.exists) {\r\n            const songData = doc.data();\r\n            setImgColors(songData.imageColors || []);\r\n            setCurrentSongData(songData);\r\n          }\r\n        });\r\n    } else fetchCurrentSongInitial();\r\n  }\r\n\r\n  function fetchYourPlaylists() {\r\n    const tempArray = [];\r\n    if (currentUser.ownPlaylists) {\r\n      currentUser.ownPlaylists.map((playlistId, i) => {\r\n        const response = firestore.collection(\"playlists\").doc(playlistId);\r\n        response\r\n          .get()\r\n          .then((doc) => {\r\n            if (doc.exists) {\r\n              tempArray.push(doc.data());\r\n              if (i === currentUser.ownPlaylists.length - 1)\r\n                setYourPlaylists(tempArray);\r\n            } else {\r\n              console.log(\"No such document!\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Error getting document:\", error);\r\n          });\r\n      });\r\n    }\r\n\r\n    if (currentUser.addedPlaylists) {\r\n      currentUser.addedPlaylists.map((playlistId, i) => {\r\n        const response = firestore.collection(\"playlists\").doc(playlistId);\r\n        response\r\n          .get()\r\n          .then((doc) => {\r\n            if (doc.exists) {\r\n              tempArray.push(doc.data());\r\n              if (i === currentUser.addedPlaylists.length - 1)\r\n                setYourPlaylists(tempArray);\r\n            } else {\r\n              console.log(\"No such document!\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Error getting document:\", error);\r\n          });\r\n      });\r\n    }\r\n  }\r\n\r\n  useConditionFunc(\r\n    currentUser,\r\n    fetchYourSongs,\r\n    currentUser.addedSongs &&\r\n      currentUser.addedSongs.length !== yourSongs.length,\r\n    [currentUser.addedSongs]\r\n  );\r\n  useConditionFunc(\r\n    currentUser,\r\n    fetchYourPlaylists,\r\n    currentUser.ownPlaylists &&\r\n      String(currentUser.ownPlaylists.concat(currentUser.addedPlaylists)) !==\r\n        String(yourPlaylists),\r\n    [currentUser.ownPlaylists]\r\n  );\r\n  useConditionFunc(\r\n    currentUser,\r\n    fetchYourFriends,\r\n    currentUser.friends &&\r\n      String(currentUser.friends.filter((obj) => obj.status === \"added\")) !==\r\n        String(yourFriends),\r\n    [currentUser.friends]\r\n  );\r\n  useConditionFunc(\r\n    currentUser,\r\n    fetchYourAuthors,\r\n    currentUser.addedAuthors &&\r\n      currentUser.addedAuthors.length !== yourAuthors.length,\r\n    [currentUser.addedAuthors]\r\n  );\r\n  useConditionFunc(\r\n    currentUser,\r\n    fetchCurrentSong,\r\n    currentUser &&\r\n      (currentSongData.id === -1 || currentSong || currentUser.lastSongPlayed),\r\n    [currentSong, currentUser.lastSongPlayed]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (currentUser.uid === undefined) {\r\n      setCurrentSongData({ id: -1 });\r\n      setCurrentSong(-1);\r\n      setCurrentSongQueue([]);\r\n      setYourAuthors([]);\r\n      setYourSongs([]);\r\n      setYourFriends([]);\r\n      setYourPlaylists([]);\r\n    }\r\n  }, [currentUser.uid]);\r\n\r\n  useEffect(() => {\r\n    setIsThereKaraoke(checkKaraoke(currentSongData.lyrics));\r\n  }, [currentSongData.lyrics]);\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      if (shuffleMode) {\r\n        let shuffledSongsArray = shuffleSongs(currentSongQueue);\r\n        setCurrentSongQueue(shuffledSongsArray);\r\n        setCurrentSongInQueue(\r\n          shuffledSongsArray.findIndex((song) => song.id === currentSong)\r\n        );\r\n      } else {\r\n        setCurrentSongQueue(currentSongPlaylistSource.songsList);\r\n        setCurrentSongInQueue(\r\n          currentSongPlaylistSource.songsList.findIndex(\r\n            (song) => song.id === currentSong\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }, [shuffleMode]);\r\n\r\n  function playSong() {\r\n    if (play) {\r\n      songRef.current.pause();\r\n    } else {\r\n      songRef.current.play();\r\n    }\r\n\r\n    setPlay(!play);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setCurrentParagraph(0);\r\n  }, [currentSongData.id]);\r\n\r\n  function loadSongData(e) {\r\n    setCurrentTime(e.target.currentTime);\r\n    setSongDuration(e.target.duration);\r\n    inputRef.current.max = e.target.duration;\r\n    if (window.innerWidth > 1000)\r\n      leftSideBarInputRef.current.max = e.target.duration;\r\n    setInputRange(0);\r\n    if (play) {\r\n      e.target.play();\r\n    } else e.target.pause();\r\n  }\r\n\r\n  function defineCurrentParagraph() {\r\n    //Binary Search\r\n    let first = 0,\r\n      last = currentSongData.lyrics.length - 1;\r\n    let roundedTime = parseFloat(\r\n      parseFloat(songRef.current.currentTime).toFixed(1)\r\n    );\r\n    while (first <= last) {\r\n      let midPoint = Math.floor((first + last) / 2);\r\n      let blockStartTime = parseFloat(\r\n        parseFloat(currentSongData.lyrics[midPoint].startTime).toFixed(1)\r\n      );\r\n      let nextBlockStartTime =\r\n        midPoint !== currentSongData.lyrics.length - 1\r\n          ? parseFloat(\r\n              parseFloat(\r\n                currentSongData.lyrics[midPoint + 1].startTime\r\n              ).toFixed(1)\r\n            )\r\n          : last;\r\n      if (currentSongData.lyrics[midPoint].startTime !== \"undefined\") {\r\n        if (\r\n          roundedTime >= blockStartTime &&\r\n          roundedTime <= nextBlockStartTime\r\n        ) {\r\n          setCurrentParagraph(midPoint);\r\n          break;\r\n        } else if (blockStartTime < roundedTime) first = midPoint + 1;\r\n        else last = midPoint - 1;\r\n      } else return;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (rightSideCurrentPage === 2) defineCurrentParagraph();\r\n  }, [rightSideCurrentPage]);\r\n\r\n  function defineCurrentParagraphLight() {\r\n    if (\r\n      currentParagraph !== currentSongData.lyrics.length - 1 &&\r\n      parseFloat(currentSongData.lyrics[currentParagraph + 1].startTime) <=\r\n        songRef.current.currentTime\r\n    ) {\r\n      return setCurrentParagraph(currentParagraph + 1);\r\n    }\r\n  }\r\n  function playing(event) {\r\n    setCurrentTime(event.target.currentTime);\r\n    if (\r\n      isThereKaraoke &&\r\n      rightSideCurrentPage === 2 &&\r\n      openFullScreenPlayer &&\r\n      openMenu\r\n    ) {\r\n      defineCurrentParagraphLight();\r\n    }\r\n\r\n    setInputRange((event.target.currentTime / songDuration) * 100);\r\n  }\r\n\r\n  async function nextSong() {\r\n    let correctSongNumber = checkNumber(\r\n      currentSongInQueue + 1,\r\n      currentSongQueue.length - 1\r\n    );\r\n    let currentSongId = await (\r\n      await firestore\r\n        .collection(\"songs\")\r\n        .doc(currentSongQueue[correctSongNumber].id)\r\n        .get()\r\n    ).data().id;\r\n    addSongToHistory(currentSongId, currentUser);\r\n    setCurrentParagraph(0);\r\n    setCurrentSong(currentSongId);\r\n    setCurrentSongInQueue(\r\n      checkNumber(correctSongNumber, currentSongQueue.length - 1)\r\n    );\r\n    firestore.collection(\"users\").doc(currentUser.uid).update({\r\n      lastSongPlayed: currentSongId,\r\n    });\r\n  }\r\n\r\n  async function prevSong() {\r\n    if (currentTime > 5) {\r\n      songRef.current.currentTime = 0;\r\n      setCurrentTime(0);\r\n      setCurrentParagraph(0);\r\n      return;\r\n    }\r\n    let correctSongNumber = checkNumber(\r\n      currentSongInQueue - 1,\r\n      currentSongQueue.length - 1\r\n    );\r\n    let currentSongId = await (\r\n      await firestore\r\n        .collection(\"songs\")\r\n        .doc(currentSongQueue[correctSongNumber].id)\r\n        .get()\r\n    ).data().id;\r\n    addSongToHistory(currentSongId, currentUser);\r\n    setCurrentParagraph(0);\r\n    setCurrentSong(currentSongId);\r\n    setCurrentSongInQueue(\r\n      checkNumber(correctSongNumber, currentSongQueue.length - 1)\r\n    );\r\n    firestore.collection(\"users\").doc(currentUser.uid).update({\r\n      lastSongPlayed: currentSongId,\r\n    });\r\n  }\r\n\r\n  function changeCurrentTime(event, startTime = 0) {\r\n    if (event.target.localName === \"div\" || event.target.localName === \"p\") {\r\n      if (startTime !== undefined) {\r\n        setCurrentTime(startTime);\r\n        songRef.current.currentTime = startTime;\r\n        setInputRange((startTime / songDuration) * 100);\r\n        if (\r\n          isThereKaraoke &&\r\n          rightSideCurrentPage === 2 &&\r\n          openFullScreenPlayer\r\n        )\r\n          setCurrentParagraph(parseInt(event.target.id));\r\n        songRef.current.play();\r\n        setPlay(true);\r\n        return;\r\n      }\r\n    } else {\r\n      setCurrentTime(event.target.value);\r\n      songRef.current.currentTime = event.target.value;\r\n      setInputRange((event.target.value / songDuration) * 100);\r\n      if (isThereKaraoke && rightSideCurrentPage === 2 && openFullScreenPlayer)\r\n        defineCurrentParagraph();\r\n    }\r\n  }\r\n\r\n  function displayAuthors(\r\n    authorsList = currentSongData.authors,\r\n    separatingSign = \" & \"\r\n  ) {\r\n    return authorsList.map((el, i) => {\r\n      return (\r\n        <>\r\n          <Link\r\n            to={`/authors/${el.uid}`}\r\n            key={el.uid}\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              setOpenFullScreenPlayer(false);\r\n            }}\r\n          >\r\n            {el.displayName}\r\n          </Link>\r\n          {i === authorsList.length - 1 ? \"\" : separatingSign}\r\n        </>\r\n      );\r\n    });\r\n  }\r\n\r\n  function displayAuthorsFull(\r\n    authorsList = currentSongData.authors,\r\n    separatingSign = \" & \"\r\n  ) {\r\n    return authorsList.map((el, i) => {\r\n      return (\r\n        <>\r\n          <Link\r\n            to={`/authors/${el.uid}`}\r\n            key={el.uid}\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              setOpenFullScreenPlayer(false);\r\n              setOpenModal(false);\r\n            }}\r\n          >\r\n            <PersonTiny data={el} />\r\n          </Link>\r\n        </>\r\n      );\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = `${currentSongData.name} - Soundbubble` || \"Soundbubble\";\r\n  }, [currentSongData.name]);\r\n  return (\r\n    <SongContext.Provider\r\n      value={{\r\n        yourSongs,\r\n        setYourSongs,\r\n        yourPlaylists,\r\n        yourFriends,\r\n        currentSongQueue,\r\n        currentSongPlaylistSource,\r\n        setCurrentSongPlaylistSource,\r\n        setCurrentSongQueue,\r\n        setCurrentSongInQueue,\r\n        play,\r\n        setPlay,\r\n        songSrc: currentSongData.songSrc,\r\n        currentTime,\r\n        setCurrentTime,\r\n        songDuration,\r\n        songRef,\r\n        name: currentSongData.name,\r\n        authors: currentSongData.authors,\r\n        lyrics: currentSongData.lyrics,\r\n        cover: currentSongData.cover,\r\n        imgColors,\r\n        setImgColors,\r\n        currentSong,\r\n        setCurrentSong,\r\n        repeatMode,\r\n        setRepeatMode,\r\n        shuffleMode,\r\n        setShuffleMode,\r\n        inputRef,\r\n        leftSideBarInputRef,\r\n        isThereKaraoke,\r\n        rightSideCurrentPage,\r\n        currentParagraph,\r\n        currentParagraphRef,\r\n        nextSong,\r\n        prevSong,\r\n        playSong,\r\n        playing,\r\n        defineCurrentParagraph,\r\n        setRightSideCurrentPage,\r\n        changeCurrentTime,\r\n        displayAuthors,\r\n        displayAuthorsFull,\r\n        openFullScreenPlayer,\r\n        setOpenFullScreenPlayer,\r\n        loadSongData,\r\n        fetchYourSongs,\r\n        setOpenMenu,\r\n        openMenu,\r\n        currentSongData,\r\n        setCurrentSongData,\r\n        setIsThereKaraoke,\r\n        setYourPlaylists,\r\n        yourAuthors,\r\n        setYourAuthors,\r\n        inputRange,\r\n      }}\r\n    >\r\n      {!loading ? children : <LoadingData />}\r\n    </SongContext.Provider>\r\n  );\r\n};\r\n","export function checkKaraoke(lyrics) {\r\n\tif (lyrics !== undefined && lyrics.length === 0) return false\r\n\r\n\tif (lyrics !== undefined) {\r\n\t\tif (lyrics[0].startTime === 'undefined') return false\r\n\t}\r\n\r\n\treturn true\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ButtonWrapper = styled.button`\r\n  border: none;\r\n  color: var(--lightBlue);\r\n  background: var(--lightGrey);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 5px 10px;\r\n  border-radius: var(--standartBorderRadius3);\r\n  font-weight: 600;\r\n\r\n  svg {\r\n    margin-right: ${({ textLen }) => (textLen === 0 ? \"0\" : \"5px\")};\r\n    width: 16px;\r\n    height: 16px;\r\n  }\r\n`;\r\n\r\nconst Button = ({ text = \"\", icon, onClick, visible = true }) => {\r\n  return (\r\n    visible && (\r\n      <ButtonWrapper onClick={onClick} textLen={text.length}>\r\n        {icon}\r\n        <span>{text}</span>\r\n      </ButtonWrapper>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { FiXCircle } from \"react-icons/fi\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"./button\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n  margin: ${({ margin }) => (margin ? \"0 0 10px 0\" : 0)};\r\n\r\n  button {\r\n    position: absolute;\r\n    right: 8px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n`;\r\n\r\nconst InputWrapper = styled.input`\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  padding: 12px;\r\n  border-radius: var(--standartBorderRadius);\r\n  border: none;\r\n  background: var(--leftSideBarColor);\r\n  outline: none;\r\n  color: #fff;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Input = ({\r\n  title,\r\n  type = \"text\",\r\n  value,\r\n  setValue,\r\n  placeholder = \"\",\r\n  required = false,\r\n  margin = false,\r\n}) => {\r\n  return (\r\n    <>\r\n      {!!title && <h3>{title}</h3>}\r\n      <Wrapper margin>\r\n        <InputWrapper\r\n          value={value}\r\n          onChange={(e) => setValue(e.target.value)}\r\n          placeholder={placeholder}\r\n          type={type}\r\n          required={required}\r\n        />\r\n        <Button\r\n          icon={<FiXCircle />}\r\n          onClick={() => setValue(\"\")}\r\n          visible={!!value.length}\r\n        />\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { useEffect } from \"react\";\r\nimport { ImCheckmark } from \"react-icons/im\";\r\nimport styled from \"styled-components\";\r\nimport { LoadingCircle } from \"../../../features/loading/ui/atoms/loading-circle\";\r\nimport { useModal } from \"../../../contexts/modal\";\r\n\r\nconst SubmitButtonWrapper = styled.button`\r\n  width: 100%;\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n  opacity: ${(props) => (props.isLoading || !props.isActive ? 0.5 : 1)};\r\n  background: var(--purpleAndBlueGrad);\r\n  color: #fff;\r\n  font-weight: bold;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 40px;\r\n  border-radius: var(--standartBorderRadius3);\r\n  position: relative;\r\n  overflow: hidden;\r\n\r\n  @keyframes button-animation-in {\r\n    0% {\r\n      opacity: 0;\r\n      transform: scale(0.95);\r\n    }\r\n    50% {\r\n      opacity: 1;\r\n      transform: scale(1);\r\n    }\r\n    100% {\r\n      opacity: 0;\r\n      transform: scale(0.95);\r\n    }\r\n  }\r\n\r\n  @keyframes button-animation-out {\r\n    0% {\r\n      opacity: 0;\r\n      transform: scale(0.95);\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n      transform: scale(1);\r\n    }\r\n  }\r\n\r\n  .inner-button {\r\n    z-index: 1;\r\n\r\n    .inner-button-success {\r\n      animation: button-animation-in 2s forwards;\r\n    }\r\n\r\n    .inner-button-text {\r\n      animation: button-animation-out 0.5s forwards;\r\n    }\r\n  }\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    display: block;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background: var(--green);\r\n    width: ${(props) => (props.completed ? \"2000px\" : \"0\")};\r\n    height: ${(props) => (props.completed ? \"2000px\" : \"0\")};\r\n    border-radius: 100%;\r\n    transition: 0.6s;\r\n    z-index: 0;\r\n  }\r\n\r\n  .LoadingCircle {\r\n    position: relative;\r\n    transform: none;\r\n    left: auto;\r\n    top: auto;\r\n    width: 30px;\r\n    height: 30px;\r\n\r\n    img {\r\n      width: 30px;\r\n      height: 30px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SubmitButton = ({\r\n  text,\r\n  action,\r\n  isLoading,\r\n  completed = false,\r\n  setCompleted,\r\n  bottomMessage,\r\n  isActive = true,\r\n  errorMessage,\r\n  setErrorMessage,\r\n}) => {\r\n  const { openBottomMessage } = useModal();\r\n\r\n  useEffect(() => {\r\n    if (completed) {\r\n      openBottomMessage(bottomMessage ?? undefined);\r\n      setTimeout(() => {\r\n        setCompleted(false);\r\n      }, 2000);\r\n    }\r\n  }, [bottomMessage, completed, openBottomMessage, setCompleted]);\r\n\r\n  useEffect(() => {\r\n    if (errorMessage) {\r\n      openBottomMessage(errorMessage, \"failure\");\r\n      setTimeout(() => {\r\n        setErrorMessage(\"\");\r\n      }, 1000);\r\n    }\r\n  }, [errorMessage, setErrorMessage, openBottomMessage]);\r\n\r\n  return (\r\n    <SubmitButtonWrapper\r\n      isLoading={isLoading}\r\n      className=\"submit-button\"\r\n      completed={completed}\r\n      isActive={isActive}\r\n      onClick={\r\n        isActive\r\n          ? action\r\n          : () => !!errorMessage && openBottomMessage(\"Nope\", \"failure\")\r\n      }\r\n    >\r\n      <div className=\"inner-button\">\r\n        {completed ? (\r\n          <div className=\"inner-button-success\">\r\n            <ImCheckmark /> Done\r\n          </div>\r\n        ) : !isLoading ? (\r\n          <div className=\"inner-button-text\">{text}</div>\r\n        ) : (\r\n          <LoadingCircle top={0} />\r\n        )}\r\n      </div>\r\n    </SubmitButtonWrapper>\r\n  );\r\n};\r\n\r\nexport default SubmitButton;\r\n","import { useEffect, useState } from \"react\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport normalizeString from \"../../../../shared/lib/normalize-string\";\r\nimport { fetchItemList } from \"../../../../shared/lib/fetch-item-list\";\r\n\r\nconst useSearch = (\r\n  value,\r\n  setAllFoundSongs,\r\n  setResultAuthorList,\r\n  setResultPlaylists,\r\n  defaultSearchMode,\r\n  searchMode,\r\n  defaultSongsListValue,\r\n  defaultAuthorsListValue,\r\n  defaultPlaylistsListValue\r\n) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [foundAnything, setFoundAnything] = useState(false);\r\n\r\n  const [inputValue, setInputValue] = useState(value);\r\n\r\n  async function findItem(value, place, defaultList = [], setList) {\r\n    const foundItemTempArray = [];\r\n    let normalizedSearch = normalizeString(value);\r\n    const itemsList = await firestore\r\n      .collection(\"search\")\r\n      .where(\"variantsOfName\", \"array-contains\", normalizedSearch)\r\n      .get();\r\n    itemsList.docs.forEach(async (item) => {\r\n      const itemData = item.data();\r\n      if (itemData.place === place) {\r\n        const realData = (\r\n          await firestore.collection(itemData.place).doc(itemData.uid).get()\r\n        ).data();\r\n        if (!!defaultList && !!defaultList.length) {\r\n          if (\r\n            defaultList\r\n              .map((song) => song.id || song.uid)\r\n              .includes(itemData.uid)\r\n          )\r\n            foundItemTempArray.push(realData);\r\n        } else if (!realData.isPrivate) foundItemTempArray.push(realData);\r\n        if (\r\n          defaultSearchMode === undefined &&\r\n          searchMode === \"All\" &&\r\n          foundItemTempArray.length !== 0\r\n        ) {\r\n          setList(foundItemTempArray);\r\n          switch (itemData.place) {\r\n            case \"songs\":\r\n              for (let i = 0; i < foundItemTempArray.length; i++) {\r\n                const authorsIdsArray = realData.authors;\r\n                fetchItemList(\r\n                  authorsIdsArray.map((author) => author.uid),\r\n                  \"users\",\r\n                  setResultAuthorList,\r\n                  (res) => res.sort((a, b) => b.subscribers - a.subscribers),\r\n                  undefined,\r\n                  undefined,\r\n                  1\r\n                );\r\n              }\r\n              break;\r\n            case \"users\":\r\n              for (let i = 0; i < foundItemTempArray.length; i++) {\r\n                const songsIdsArray = realData.ownSongs;\r\n                const albumsIdsArray = realData.ownPlaylists;\r\n                fetchItemList(\r\n                  songsIdsArray,\r\n                  \"songs\",\r\n                  setAllFoundSongs,\r\n                  (res) => res.sort((a, b) => b.listens - a.listens),\r\n                  () => null,\r\n                  3,\r\n                  1\r\n                );\r\n                fetchItemList(\r\n                  albumsIdsArray,\r\n                  \"playlists\",\r\n                  setResultPlaylists,\r\n                  (res) => res.sort((a, b) => b.listens - a.listens),\r\n                  () => null,\r\n                  3,\r\n                  1\r\n                );\r\n              }\r\n              break;\r\n            case \"playlists\":\r\n              for (let i = 0; i < foundItemTempArray.length; i++) {\r\n                const authorsIdsArray = realData.authors;\r\n                fetchItemList(\r\n                  authorsIdsArray.map((author) => author.uid),\r\n                  \"users\",\r\n                  setResultAuthorList,\r\n                  (res) => res.sort((a, b) => b.subscribers - a.subscribers),\r\n                  undefined,\r\n                  undefined,\r\n                  1\r\n                );\r\n              }\r\n              break;\r\n            default:\r\n              setMessage(\"Wrong search mode\");\r\n              break;\r\n          }\r\n        }\r\n\r\n        if (foundItemTempArray.length !== 0) {\r\n          setLoading(false);\r\n          setFoundAnything(true);\r\n          setList(foundItemTempArray);\r\n        }\r\n      }\r\n    });\r\n    setLoading(false);\r\n    if (foundItemTempArray.length === 0) {\r\n      setList([]);\r\n      setFoundAnything(false);\r\n    }\r\n  }\r\n  function findSomething(str) {\r\n    if (value.length !== 0) {\r\n      const searchText = str ?? value;\r\n      setInputValue(searchText);\r\n      setLoading(true);\r\n      setFoundAnything(false);\r\n      if (defaultSearchMode === undefined) {\r\n        if (searchMode === \"All\" || searchMode === \"Songs\") {\r\n          findItem(\r\n            searchText,\r\n            \"songs\",\r\n            defaultSongsListValue,\r\n            setAllFoundSongs\r\n          );\r\n          setResultAuthorList([]);\r\n          setResultPlaylists([]);\r\n        }\r\n        if (searchMode === \"All\" || searchMode === \"Users\") {\r\n          findItem(\r\n            searchText,\r\n            \"users\",\r\n            defaultAuthorsListValue,\r\n            setResultAuthorList\r\n          );\r\n          setAllFoundSongs([]);\r\n          setResultPlaylists([]);\r\n        }\r\n        if (searchMode === \"All\" || searchMode === \"Playlists\") {\r\n          findItem(\r\n            searchText,\r\n            \"playlists\",\r\n            defaultPlaylistsListValue,\r\n            setResultPlaylists\r\n          );\r\n          setResultAuthorList([]);\r\n          setAllFoundSongs([]);\r\n        }\r\n      } else {\r\n        switch (defaultSearchMode) {\r\n          case \"songs\":\r\n            findItem(\r\n              searchText,\r\n              \"songs\",\r\n              defaultSongsListValue,\r\n              setAllFoundSongs\r\n            );\r\n            break;\r\n          case \"playlists\":\r\n            findItem(\r\n              searchText,\r\n              \"playlists\",\r\n              defaultPlaylistsListValue,\r\n              setResultPlaylists\r\n            );\r\n            break;\r\n          case \"users\":\r\n            findItem(\r\n              searchText,\r\n              \"users\",\r\n              defaultAuthorsListValue,\r\n              setResultAuthorList\r\n            );\r\n            break;\r\n          default:\r\n            findItem(\r\n              searchText,\r\n              \"songs\",\r\n              defaultSongsListValue,\r\n              setAllFoundSongs\r\n            );\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (value.length === 0) {\r\n      if (defaultSongsListValue !== undefined)\r\n        setAllFoundSongs(defaultSongsListValue);\r\n      if (defaultAuthorsListValue !== undefined)\r\n        setResultAuthorList(defaultAuthorsListValue);\r\n      if (defaultPlaylistsListValue !== undefined)\r\n        setResultPlaylists(defaultPlaylistsListValue);\r\n      setLoading(false);\r\n    }\r\n  }, [value]);\r\n\r\n  useEffect(() => {\r\n    findSomething();\r\n  }, [searchMode]);\r\n\r\n  return {\r\n    findSomething,\r\n    message,\r\n    loading,\r\n    foundAnything,\r\n    inputValue,\r\n    setInputValue,\r\n  };\r\n};\r\n\r\nexport default useSearch;\r\n","import { firestore } from \"../../../firebase\";\r\n\r\nconst rankCurrentHint = (hintName, hintUid) => {\r\n\tif (hintName) {\r\n\t\tfirestore\r\n\t\t\t.collection(\"search\")\r\n\t\t\t.doc(hintUid)\r\n\t\t\t.get()\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconst rank = res.data().rank ? res.data().rank + 1 : 1;\r\n\t\t\t\tfirestore\r\n\t\t\t\t\t.collection(\"search\")\r\n\t\t\t\t\t.doc(hintUid)\r\n\t\t\t\t\t.update({\r\n\t\t\t\t\t\trank: rank,\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n};\r\n\r\nexport default rankCurrentHint","import React from \"react\";\r\nimport { FiSearch, FiXCircle } from \"react-icons/fi\";\r\n\r\nconst SearchBarButtons = (props) => {\r\n  const { length, setInputValue, setValue } = props;\r\n  return (\r\n    <div className=\"searchBarElement\">\r\n      <FiSearch />\r\n      <span\r\n        onClick={() => {\r\n          setValue(\"\");\r\n          setInputValue(\"\");\r\n        }}\r\n        style={\r\n          !length\r\n            ? {\r\n                opacity: 0,\r\n                visibility: \"hidden\",\r\n                cursor: \"default\",\r\n              }\r\n            : {}\r\n        }\r\n      >\r\n        <FiXCircle />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBarButtons;\r\n","import React from \"react\";\r\n\r\nconst SearchFilterItem = ({ text, searchMode, setSearchMode, index }) => {\r\n  return (\r\n    <button\r\n      onClick={() => setSearchMode(text)}\r\n      style={\r\n        searchMode === text\r\n          ? {\r\n              background: \"var(--lightBlue)\",\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SearchFilterItem;\r\n","import React from \"react\";\r\nimport SearchFilterItem from \"../atoms/search-filter-item\";\r\n\r\nconst SearchFilters = ({\r\n  defaultSearchMode,\r\n  searchMode,\r\n  setSearchMode,\r\n  searchHintsLen,\r\n}) => {\r\n  const filters = [\"All\", \"Songs\", \"Users\", \"Playlists\"];\r\n  return (\r\n    <div\r\n      className=\"searchFilters\"\r\n      style={\r\n        !!defaultSearchMode\r\n          ? {\r\n              display: \"none\",\r\n            }\r\n          : searchHintsLen\r\n          ? { background: \"var(--leftSideBarColor)\" }\r\n          : {}\r\n      }\r\n    >\r\n      {filters.map((filter, index) => {\r\n        return (\r\n          <SearchFilterItem\r\n            text={filter}\r\n            searchMode={searchMode}\r\n            setSearchMode={setSearchMode}\r\n            index={index}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchFilters;\r\n","import { firestore } from \"../../../firebase\"\r\n\r\nconst parseHints = async (hint) => {\r\n\tconst { place, uid, rank } = hint.data()\r\n\tconst { name, authors, displayName, isVerified } = (await firestore.collection(place).doc(uid).get()).data() ?? {}\r\n\treturn {\r\n\t\ttype: place,\r\n\t\tname: name ? name : displayName,\r\n\t\tauthor: authors ? authors[0].displayName : null,\r\n\t\tuid: uid,\r\n\t\trank: rank || 0,\r\n\t\tisVerified: isVerified ?? false\r\n\t}\r\n}\r\n\r\nconst findSearchHints = async (searchValue, defaultSearchMode) => {\r\n\tif (searchValue.length > 0) {\r\n\t\tlet hints;\r\n\r\n\t\tif (defaultSearchMode) {\r\n\t\t\thints = (await firestore.collection('search')\r\n\t\t\t\t.where('variantsOfName', 'array-contains', searchValue).where('place', '==', defaultSearchMode).get())\r\n\t\t\t\t.docs.map(async (hint) => {\r\n\t\t\t\t\treturn parseHints(hint)\r\n\t\t\t\t})\r\n\t\t}\r\n\t\telse {\r\n\t\t\thints = (await firestore.collection('search')\r\n\t\t\t\t.where('variantsOfName', 'array-contains', searchValue).get())\r\n\t\t\t\t.docs.map(async (hint) => {\r\n\t\t\t\t\treturn parseHints(hint)\r\n\t\t\t\t})\r\n\t\t}\r\n\t\treturn hints\r\n\t}\r\n\telse return []\r\n}\r\n\r\nexport default findSearchHints","import { firestore } from \"../../../firebase\"\r\n\r\nconst findTopSearches = async () => {\r\n\tconst topSearches = (await firestore.collection('search')\r\n\t\t.orderBy(\"rank\", \"desc\")\r\n\t\t.limit(10).get())\r\n\t\t.docs.map(async (search) => {\r\n\t\t\tconst { place, uid, rank } = search.data()\r\n\t\t\tconst { name, authors, displayName, isVerified } = (await firestore.collection(place).doc(uid).get()).data()\r\n\t\t\treturn {\r\n\t\t\t\ttype: place,\r\n\t\t\t\tname: name ? name : displayName,\r\n\t\t\t\tauthor: authors ? authors[0].displayName : null,\r\n\t\t\t\tuid: uid,\r\n\t\t\t\trank: rank || 0,\r\n\t\t\t\tisVerified: isVerified ?? false\r\n\t\t\t}\r\n\t\t})\r\n\treturn topSearches\r\n}\r\n\r\nexport default findTopSearches","const transliteWord = (word) => {\r\n\tconst dictionaryRuToEn = {\r\n\t\t'–∞': 'f', '–±': ',', '–≤': 'd', '–≥': 'u', '–¥': 'l', '–µ': 't', '—ë': '`', '–∂': ';',\r\n\r\n\t\t'–∑': 'p', '–∏': 'b', '–π': 'q', '–∫': 'r', '–ª': 'k', '–º': 'v', '–Ω': 'y',\r\n\r\n\t\t'–æ': 'j', '–ø': 'g', '—Ä': 'h', '—Å': 'c', '—Ç': 'n', '—É': 'e', '—Ñ': 'a', '—Ö': '[',\r\n\r\n\t\t'—Ü': 'w', '—á': 'x', '—à': 'i', '—â': 'o', '—ä': ']', '—ã': 's', '—å': 'm', '—ç': '\\'', '—é': '.', '—è': 'z'\r\n\t}\r\n\r\n\tconst dictionaryEnToRu = {\r\n\t\t'f': '–∞', ',': '–±', 'd': '–≤', 'u': '–≥', 'l': '–¥', 't': '–µ', '`': '—ë', ';': '–∂',\r\n\r\n\t\t'p': '–∑', 'b': '–∏', 'q': '–π', 'r': '–∫', 'k': '–ª', 'v': '–º', 'y': '–Ω',\r\n\r\n\t\t'j': '–æ', 'g': '–ø', 'h': '—Ä', 'c': '—Å', 'n': '—Ç', 'e': '—É', 'a': '—Ñ', '[': '—Ö',\r\n\r\n\t\t'w': '—Ü', 'x': '—á', 'i': '—à', 'o': '—â', ']': '—ä', 's': '—ã', 'm': '—å', '\\'': '—ç', '.': '—é', 'z': '—è'\r\n\t}\r\n\r\n\tif (dictionaryRuToEn[word[0]])\r\n\t\treturn word.split('').reduce((acc, letter) => acc + dictionaryRuToEn[letter], '')\r\n\telse return word.split('').reduce((acc, letter) => acc + dictionaryEnToRu[letter], '')\r\n\r\n}\r\n\r\nexport default transliteWord","import { useEffect } from \"react\";\r\nimport normalizeString from \"../../../../shared/lib/normalize-string\";\r\nimport findSearchHints from \"../find-search-hints\";\r\nimport findTopSearches from \"../find-top-searches\";\r\nimport transliteWord from \"../translite-word\";\r\n\r\nconst useLoadHints = ({\r\n  setCurrentHint,\r\n  searchValue,\r\n  inputFocused,\r\n  setSearchHints,\r\n  defaultSearchMode,\r\n}) => {\r\n  useEffect(() => {\r\n    setCurrentHint(-1);\r\n    const searchMode =\r\n      defaultSearchMode === \"All\" ? undefined : defaultSearchMode.toLowerCase();\r\n    if (searchValue.length === 0 && inputFocused && searchMode === undefined) {\r\n      Promise.resolve(findTopSearches()).then((res) => {\r\n        Promise.all(res).then((hint) => {\r\n          setSearchHints(hint);\r\n        });\r\n      });\r\n    } else if (searchValue.length !== 0 && inputFocused) {\r\n      Promise.resolve(\r\n        findSearchHints(normalizeString(searchValue), searchMode)\r\n      ).then((res) => {\r\n        Promise.all(res).then((hint) => {\r\n          // console.log(hint);\r\n          const sortedHints = hint.sort((a, b) => b.rank - a.rank);\r\n\r\n          if (sortedHints.length) setSearchHints(sortedHints.slice(0, 10));\r\n          else {\r\n            Promise.resolve(\r\n              findSearchHints(\r\n                transliteWord(normalizeString(searchValue)),\r\n                searchMode\r\n              )\r\n            ).then((res) => {\r\n              Promise.all(res).then((hint) => {\r\n                const sortedHints = hint.sort((a, b) => b.rank - a.rank);\r\n                setSearchHints(sortedHints.slice(0, 10));\r\n              });\r\n            });\r\n          }\r\n        });\r\n      });\r\n    } else setSearchHints([]);\r\n  }, [searchValue, inputFocused, defaultSearchMode]);\r\n};\r\n\r\nexport default useLoadHints;\r\n","import { BiAlbum } from \"react-icons/bi\";\r\nimport { FiMusic, FiSearch, FiUser } from \"react-icons/fi\";\r\n\r\nconst findRightIcon = (type) => {\r\n\tswitch (type) {\r\n\t\tcase \"songs\":\r\n\t\t\treturn <FiMusic style={{ color: 'var(--reallyLightBlue)' }} />;\r\n\t\tcase \"playlists\":\r\n\t\t\treturn <BiAlbum style={{ color: 'var(--lightPurple)' }} />;\r\n\t\tcase \"users\":\r\n\t\t\treturn <FiUser style={{ color: 'var(--pink)' }} />;\r\n\t\tcase \"search\":\r\n\t\t\treturn <FiSearch />;\r\n\t\tdefault:\r\n\t\t\treturn <FiMusic />;\r\n\t}\r\n};\r\n\r\nexport default findRightIcon\r\n","import React from \"react\";\r\nimport { ImCheckmark } from \"react-icons/im\";\r\nimport findRightIcon from \"../../../../shared/lib/find-right-icon\";\r\n\r\nconst SearcHintItem = (props) => {\r\n  const {\r\n    name,\r\n    author,\r\n    isVerified,\r\n    type,\r\n    index,\r\n    currentHint,\r\n    setCurrentHint,\r\n    findSomething,\r\n    setInputFocused,\r\n  } = props;\r\n  return (\r\n    <div\r\n      className={\"search-hint-item\" + (currentHint === index ? \" current\" : \"\")}\r\n      onClick={() => {\r\n        setCurrentHint(index);\r\n        setInputFocused(false);\r\n        findSomething(name);\r\n      }}\r\n    >\r\n      {findRightIcon(type)}\r\n      <span>{name}</span>\r\n      {author && <span className=\"search-hint-item-author\">{author}</span>}\r\n      {isVerified ? (\r\n        <ImCheckmark\r\n          style={{\r\n            width: \"12px\",\r\n            height: \"12px\",\r\n            opacity: 0.5,\r\n            marginLeft: \"10px\",\r\n          }}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearcHintItem;\r\n","import React from \"react\";\r\nimport useLoadHints from \"../../lib/hooks/use-load-hints\";\r\nimport SearcHintItem from \"../atoms/search-hint-item\";\r\n\r\nexport const SearchHints = ({\r\n  searchValue,\r\n  searchHints,\r\n  setSearchHints,\r\n  currentHint,\r\n  setCurrentHint,\r\n  inputFocused,\r\n  defaultSearchMode,\r\n  findSomething,\r\n  setInputFocused,\r\n}) => {\r\n  useLoadHints({\r\n    setCurrentHint,\r\n    searchValue,\r\n    inputFocused,\r\n    setSearchHints,\r\n    defaultSearchMode,\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className=\"search-hints\"\r\n      style={\r\n        !searchHints.length\r\n          ? { display: \"none\" }\r\n          : defaultSearchMode\r\n          ? { transform: \"translateY(0px)\" }\r\n          : { transform: \"translateY(-35px)\" }\r\n      }\r\n    >\r\n      {!searchValue &&\r\n      (defaultSearchMode === \"All\" || defaultSearchMode === undefined) ? (\r\n        <h4>Trending searches</h4>\r\n      ) : (\r\n        <SearcHintItem\r\n          name={searchValue}\r\n          type={\"search\"}\r\n          index={-1}\r\n          key={-1}\r\n          currentHint={currentHint}\r\n          setCurrentHint={setCurrentHint}\r\n          findSomething={findSomething}\r\n          setInputFocused={setInputFocused}\r\n        />\r\n      )}\r\n      {searchHints.map((hint, index) => {\r\n        return (\r\n          <SearcHintItem\r\n            {...hint}\r\n            currentHint={currentHint}\r\n            setCurrentHint={setCurrentHint}\r\n            index={index}\r\n            key={hint.uid}\r\n            findSomething={findSomething}\r\n            setInputFocused={setInputFocused}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect } from 'react';\r\n\r\nconst useOutsideClick = (ref, setFunc) => {\r\n\tuseEffect(() => {\r\n\t\tfunction handleClickOutside(event) {\r\n\t\t\tif (ref.current && !ref.current.contains(event.target)) {\r\n\t\t\t\tsetFunc(false)\r\n\t\t\t}\r\n\t\t}\r\n\t\tdocument.addEventListener(\"mousedown\", handleClickOutside);\r\n\t\treturn () => {\r\n\t\t\tdocument.removeEventListener(\"mousedown\", handleClickOutside);\r\n\t\t};\r\n\t}, [ref]);\r\n}\r\n\r\nexport default useOutsideClick\r\n","import React, { useRef, useState } from \"react\";\r\nimport { LoadingCircle } from \"../../../features/loading/ui/atoms/loading-circle\";\r\nimport useSearch from \"../../../features/search/lib/hooks/use-search\";\r\nimport rankCurrentHint from \"../../../features/search/lib/rank-current-hint\";\r\nimport SearchBarButtons from \"../../../features/search/ui/molecules/search-bar-buttons\";\r\nimport SearchFilters from \"../../../features/search/ui/molecules/search-filters\";\r\nimport { SearchHints } from \"../../../features/search/ui/organisms/search-hints\";\r\nimport checkNumber from \"../../lib/check-number\";\r\nimport useOutsideClick from \"../../lib/hooks/use-outside-click\";\r\n\r\nconst SearchBar = ({\r\n  value,\r\n  setValue,\r\n  setAllFoundSongs,\r\n  setResultPlaylists,\r\n  setResultAuthorList,\r\n  focus = false,\r\n  defaultSearchMode = undefined,\r\n  inputText = \"Search for songs or for people\",\r\n  defaultSongsListValue,\r\n  defaultAuthorsListValue,\r\n  defaultPlaylistsListValue,\r\n  background,\r\n}) => {\r\n  const [searchMode, setSearchMode] = useState(\"All\");\r\n  const [currentHint, setCurrentHint] = useState(-1);\r\n  const [searchHints, setSearchHints] = useState([]);\r\n  const [inputFocused, setInputFocused] = useState(false);\r\n  const inputRef = useRef(null);\r\n\r\n  const { findSomething, loading, foundAnything, inputValue, setInputValue } =\r\n    useSearch(\r\n      searchHints[currentHint]?.name ?? value,\r\n      setAllFoundSongs,\r\n      setResultAuthorList,\r\n      setResultPlaylists,\r\n      defaultSearchMode,\r\n      searchMode,\r\n      defaultSongsListValue,\r\n      defaultAuthorsListValue,\r\n      defaultPlaylistsListValue\r\n    );\r\n\r\n  // useEffect(() => {\r\n  //   if (focus) inputRef.current.focus();\r\n  // }, []);\r\n\r\n  const handleCurrentHint = (e) => {\r\n    if (inputFocused) {\r\n      switch (e.key) {\r\n        case \"ArrowDown\":\r\n          setCurrentHint(\r\n            checkNumber(currentHint + 1, searchHints.length - 1, -1)\r\n          );\r\n          setInputValue(\r\n            searchHints[\r\n              checkNumber(currentHint + 1, searchHints.length - 1, -1)\r\n            ]?.name ?? value\r\n          );\r\n          break;\r\n        case \"ArrowUp\":\r\n          setCurrentHint(\r\n            checkNumber(currentHint - 1, searchHints.length - 1, -1)\r\n          );\r\n          setInputValue(\r\n            searchHints[\r\n              checkNumber(currentHint - 1, searchHints.length - 1, -1)\r\n            ]?.name ?? value\r\n          );\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  useOutsideClick(inputRef, setInputFocused);\r\n\r\n  return (\r\n    <div\r\n      style={{ marginTop: \"10px\", width: \"100%\" }}\r\n      className=\"searchBarWrapper\"\r\n    >\r\n      <div className=\"searchBar\" ref={inputRef}>\r\n        <SearchBarButtons\r\n          setInputValue={setInputValue}\r\n          length={value.length}\r\n          setValue={setValue}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          onFocus={() => setInputFocused(true)}\r\n          style={\r\n            searchHints.length\r\n              ? {\r\n                  borderRadius:\r\n                    \"var(--standartBorderRadius) var(--standartBorderRadius) 0 0\",\r\n                  background: !!background && background,\r\n                }\r\n              : { background: !!background && background }\r\n          }\r\n          placeholder={inputText}\r\n          value={inputValue}\r\n          onChange={(e) => {\r\n            setInputValue(e.target.value);\r\n            setValue(e.target.value);\r\n          }}\r\n          onKeyDown={(e) => {\r\n            handleCurrentHint(e);\r\n            if (e.key === \"Enter\") {\r\n              findSomething();\r\n              // setValue(inputValue);\r\n              rankCurrentHint(\r\n                searchHints[currentHint]?.name,\r\n                searchHints[currentHint]?.uid\r\n              );\r\n              setSearchHints([]);\r\n            }\r\n          }}\r\n        />\r\n        <SearchFilters\r\n          defaultSearchMode={defaultSearchMode}\r\n          searchMode={searchMode}\r\n          setSearchMode={setSearchMode}\r\n          searchHintsLen={searchHints.length}\r\n        />\r\n        <SearchHints\r\n          searchValue={value}\r\n          currentHint={currentHint}\r\n          searchHints={searchHints}\r\n          setSearchHints={setSearchHints}\r\n          setCurrentHint={setCurrentHint}\r\n          inputFocused={inputFocused}\r\n          defaultSearchMode={defaultSearchMode || searchMode}\r\n          findSomething={findSomething}\r\n          setInputFocused={setInputFocused}\r\n        />\r\n      </div>\r\n      <div className=\"authorsResult\">\r\n        {loading ? (\r\n          <div\r\n            style={{\r\n              position: \"relative\",\r\n              width: \"100%\",\r\n              height: \"50px\",\r\n              marginTop: \"40px\",\r\n            }}\r\n          >\r\n            <LoadingCircle />\r\n          </div>\r\n        ) : !foundAnything && value.length !== 0 ? (\r\n          <h2>Not found</h2>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","export function transformLyricsToArrayOfObjects(lyrics) {\r\n\tconst arrayOfParagraphs = []\r\n\tlet startSubstr = 0\r\n\tconst fixedLyrics = lyrics + ' '\r\n\tfor (let i = 0; i < fixedLyrics.length; i++) {\r\n\t\tif (fixedLyrics[i] === '\\n' || fixedLyrics[i + 1] === undefined) {\r\n\t\t\tarrayOfParagraphs.push({\r\n\t\t\t\tstartTime: 'undefined',\r\n\t\t\t\ttext: fixedLyrics.substr(startSubstr, i - startSubstr)\r\n\t\t\t})\r\n\t\t\tstartSubstr = i + 1\r\n\t\t}\r\n\t}\r\n\treturn arrayOfParagraphs\r\n}","import { useEffect, useState } from 'react';\r\nimport { useModal } from '../../../../contexts/modal';\r\nimport { firestore } from '../../../../firebase';\r\nimport { transformLyricsToArrayOfObjects } from '../../../full-screen-player/lib/transform-lyrics-to-array-of-object';\r\n\r\nconst useEditSong = (song) => {\r\n\r\n\tconst { toggleModal, openBottomMessage } = useModal();\r\n\tconst [songName, setSongName] = useState(song.name);\r\n\tconst [songAuthors, setSongAuthors] = useState(song.authors);\r\n\tconst [songCover, setSongCover] = useState(song.cover);\r\n\tconst [imageColors, setImageColors] = useState(song.imageColors);\r\n\tconst [lyrics, setLyrics] = useState(\r\n\t\tsong.lyrics.map((obj) => obj.text).join(\"\\n\")\r\n\t);\r\n\tconst [foundAuthors, setFoundAuthors] = useState([]);\r\n\tconst [searchValue, setSearchValue] = useState(\"\");\r\n\tconst [errorMessage, setErrorMessage] = useState(\"\");\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [completed, setCompleted] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSongName(song.name);\r\n\t\tsetSongAuthors(song.authors);\r\n\t\tsetSongCover(song.cover);\r\n\t\tsetImageColors(song.imageColors);\r\n\t\tsetLyrics(song.lyrics.map((obj) => obj.text).join(\"\\n\"));\r\n\t}, [song.id]);\r\n\r\n\tfunction manuallyChangeColor(e, i) {\r\n\t\timageColors[i] = e.target.value;\r\n\t\tsetImageColors([...imageColors]);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (errorMessage) openBottomMessage(errorMessage, 'failure')\r\n\t}, [errorMessage])\r\n\r\n\tfunction updateSong() {\r\n\t\tif (songName.length === 0) {\r\n\t\t\tsetErrorMessage(\"Name shouldn't be empty\");\r\n\t\t} else if (songAuthors.length === 0) {\r\n\t\t\tsetErrorMessage(\"Song has to have at least 1 author\");\r\n\t\t} else if (songCover.length === 0) {\r\n\t\t\tsetErrorMessage(\"Song has to have cover\");\r\n\t\t} else {\r\n\t\t\tsetLoading(true);\r\n\t\t\tif (songAuthors.length > song.authors.length) {\r\n\t\t\t\tconst newAuthors = songAuthors.filter((author) => {\r\n\t\t\t\t\treturn !song.authors.find((a) => a.uid === author.uid);\r\n\t\t\t\t});\r\n\t\t\t\tnewAuthors.forEach(async (author) => {\r\n\t\t\t\t\tconst authorRef = await firestore\r\n\t\t\t\t\t\t.collection(\"users\")\r\n\t\t\t\t\t\t.doc(author.uid)\r\n\t\t\t\t\t\t.get();\r\n\t\t\t\t\tconst authorData = authorRef.data();\r\n\t\t\t\t\tconst authorSongs = authorData.ownSongs;\r\n\t\t\t\t\tauthorSongs.push(song.id);\r\n\t\t\t\t\tfirestore.collection(\"users\").doc(author.uid).update({\r\n\t\t\t\t\t\townSongs: authorSongs,\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else if (songAuthors.length < song.authors.length) {\r\n\t\t\t\tconst newAuthors = song.authors.filter((author) => {\r\n\t\t\t\t\treturn !songAuthors.find((a) => a.uid === author.uid);\r\n\t\t\t\t});\r\n\t\t\t\tnewAuthors.forEach(async (author) => {\r\n\t\t\t\t\tconst authorRef = await firestore\r\n\t\t\t\t\t\t.collection(\"users\")\r\n\t\t\t\t\t\t.doc(author.uid)\r\n\t\t\t\t\t\t.get();\r\n\t\t\t\t\tconst authorData = authorRef.data();\r\n\t\t\t\t\tconst authorSongs = authorData.ownSongs;\r\n\t\t\t\t\tconst filteredSongs = authorSongs.filter(\r\n\t\t\t\t\t\t(songId) => songId !== song.id\r\n\t\t\t\t\t);\r\n\t\t\t\t\tfirestore.collection(\"users\").doc(author.uid).update({\r\n\t\t\t\t\t\townSongs: filteredSongs,\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tfirestore\r\n\t\t\t\t.collection(\"songs\")\r\n\t\t\t\t.doc(song.id)\r\n\t\t\t\t.update({\r\n\t\t\t\t\tname: songName,\r\n\t\t\t\t\tauthors: songAuthors,\r\n\t\t\t\t\timage: songCover,\r\n\t\t\t\t\timageColors: imageColors,\r\n\t\t\t\t\tlyrics: transformLyricsToArrayOfObjects(lyrics),\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\tsetCompleted(true);\r\n\t\t\t\t\ttoggleModal();\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction removeAuthorFromList(data) {\r\n\t\tconst filtered = songAuthors.filter((people) => people.uid !== data.uid);\r\n\t\treturn setSongAuthors(filtered);\r\n\t}\r\n\tfunction addAuthor(data) {\r\n\t\tif (!songAuthors.some((person) => person.uid === data.uid)) {\r\n\t\t\treturn setSongAuthors((prev) => [\r\n\t\t\t\t...prev,\r\n\t\t\t\t{\r\n\t\t\t\t\tuid: data.uid,\r\n\t\t\t\t\tdisplayName: data.displayName,\r\n\t\t\t\t\tphotoURL: data.photoURL,\r\n\t\t\t\t},\r\n\t\t\t]);\r\n\t\t}\r\n\r\n\t\tremoveAuthorFromList(data);\r\n\t}\r\n\r\n\treturn {\r\n\t\tsongCover,\r\n\t\tsongName,\r\n\t\tsetSongName,\r\n\t\timageColors,\r\n\t\tmanuallyChangeColor,\r\n\t\tsearchValue,\r\n\t\tsetSearchValue,\r\n\t\tfoundAuthors,\r\n\t\tsetFoundAuthors,\r\n\t\tsongAuthors,\r\n\t\tremoveAuthorFromList,\r\n\t\taddAuthor,\r\n\t\tlyrics,\r\n\t\tsetLyrics,\r\n\t\tupdateSong,\r\n\t\tloading,\r\n\t\tcompleted,\r\n\t\tsetCompleted\r\n\t}\r\n}\r\n\r\nexport default useEditSong\r\n","import React from \"react\";\r\nimport { FiXCircle } from \"react-icons/fi\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { PersonTiny } from \"../../../../entities/user/ui/organisms/person-tiny\";\r\nimport Input from \"../../../../shared/ui/atoms/input\";\r\nimport SubmitButton from \"../../../../shared/ui/atoms/submit-button\";\r\nimport SearchBar from \"../../../../shared/ui/organisms/search-bar\";\r\nimport useEditSong from \"../../lib/hooks/use-edit-song\";\r\nexport const EditSong = ({ song }) => {\r\n  const { currentUser } = useAuth();\r\n  const {\r\n    songCover,\r\n    songName,\r\n    setSongName,\r\n    imageColors,\r\n    manuallyChangeColor,\r\n    searchValue,\r\n    setSearchValue,\r\n    foundAuthors,\r\n    setFoundAuthors,\r\n    songAuthors,\r\n    removeAuthorFromList,\r\n    addAuthor,\r\n    lyrics,\r\n    setLyrics,\r\n    updateSong,\r\n    loading,\r\n    completed,\r\n    setCompleted,\r\n  } = useEditSong(song);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"SongInfo\"\r\n        style={{ flexDirection: \"column\", marginBottom: \"10px\" }}\r\n      >\r\n        <h3>Song cover</h3>\r\n        <div style={{ display: \"flex\" }}>\r\n          <div>\r\n            <img loading=\"lazy\" src={songCover} alt=\"\" className=\"songImage\" />\r\n          </div>\r\n          <div\r\n            style={{\r\n              background: `linear-gradient(-135deg, ${imageColors[0]}, ${imageColors[5]}`,\r\n              width: \"100%\",\r\n              height: \"200px\",\r\n              borderRadius: \"var(--standartBorderRadius2)\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <h4 style={{ color: imageColors[1] }}>{songName}</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={{ width: \"100%\", display: \"flex\" }}>\r\n        {imageColors.map((color, index) => {\r\n          return (\r\n            <input\r\n              type=\"color\"\r\n              value={color}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"60px\",\r\n                padding: \"0\",\r\n                borderRadius: \"0px\",\r\n              }}\r\n              onChange={(e) => {\r\n                manuallyChangeColor(e, index);\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <Input\r\n        title=\"Song name\"\r\n        value={songName}\r\n        setValue={setSongName}\r\n        placeholder=\"Enter song name\"\r\n        required\r\n      />\r\n      <div>\r\n        <h3>Authors</h3>\r\n        <SearchBar\r\n          value={searchValue}\r\n          setValue={setSearchValue}\r\n          setResultAuthorList={setFoundAuthors}\r\n          defaultSearchMode={\"users\"}\r\n        />\r\n        <div className=\"songAuthorsList\">\r\n          {songAuthors.map((author) => {\r\n            return (\r\n              <div className=\"chosenAuthorItem\">\r\n                <span>{author.displayName}</span>\r\n                <FiXCircle\r\n                  onClick={() => {\r\n                    if (currentUser.isAdmin) removeAuthorFromList(author);\r\n                    else if (author.uid !== currentUser.uid)\r\n                      removeAuthorFromList(author);\r\n                  }}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"authorsResult\">\r\n          {foundAuthors.map((data, index) => {\r\n            return (\r\n              <PersonTiny\r\n                data={data}\r\n                onClick={() => addAuthor(data)}\r\n                style={\r\n                  songAuthors.includes(data.uid)\r\n                    ? { background: \"var(--green)\" }\r\n                    : {}\r\n                }\r\n                key={index}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <h3>Lyrics</h3>\r\n        <textarea\r\n          type=\"text\"\r\n          className=\"standartInput\"\r\n          style={{ height: \"200px\", fontWeight: \"500\" }}\r\n          value={lyrics}\r\n          onChange={(e) => setLyrics(e.target.value)}\r\n        />\r\n      </div>\r\n      <SubmitButton\r\n        text={\"Update song\"}\r\n        action={updateSong}\r\n        isLoading={loading}\r\n        completed={completed}\r\n        setCompleted={setCompleted}\r\n        bottomMessage={\"Song was updated\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { firestore } from \"../../../firebase\"\r\n\r\nexport const addSongToLibrary = (e, song, currentUser, setCurrentUser) => {\r\n\te.stopPropagation()\r\n\tconst songAuthorsUIDS = song.authors.map(author => author.uid)\r\n\tconst finalAuthorsUIDS = []\r\n\tsongAuthorsUIDS.forEach(authorId => {\r\n\t\tif (!currentUser.addedAuthors.includes(authorId)) {\r\n\t\t\tfinalAuthorsUIDS.push(authorId)\r\n\t\t}\r\n\t})\r\n\tlet newList = currentUser.addedSongs\r\n\tnewList.push(song.id)\r\n\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\taddedSongs: newList,\r\n\t\taddedAuthors: [...finalAuthorsUIDS, ...currentUser.addedAuthors]\r\n\t})\r\n\r\n\tfinalAuthorsUIDS.forEach(async authorId => {\r\n\t\tlet subscribers = (await firestore.collection('users').doc(authorId).get()).data().subscribers\r\n\t\tsubscribers++\r\n\t\tfirestore.collection('users').doc(authorId).update({\r\n\t\t\tsubscribers: subscribers\r\n\t\t})\r\n\t})\r\n}","export default function filterArrayWithArray(whatToFilter, withWhatToFilter){\r\n\treturn whatToFilter.filter(\r\n\t\tfunction (e) {\r\n\t\t\treturn this.indexOf(e) < 0;\r\n\t\t},\r\n\t\twithWhatToFilter\r\n\t);\r\n}","import { firestore } from \"../../../firebase\"\r\nimport filterArrayWithArray from \"../../../shared/lib/filter-array-with-array\"\r\n\r\n/* –†–∞–±–æ—Ç–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º\r\n\r\n1. –ù–∞—Ö–æ–¥–∏–º uid'—à–Ω–∏–∫–∏ –∞–≤—Ç–æ—Ä–æ–≤ –ø–µ—Å–Ω–∏\r\n2. –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –∞–≤—Ç–æ—Ä–æ–≤, –ø–µ—Å–Ω–∏ –∫–æ—Ç–æ—Ä—ã—Ö –µ—â–µ –æ—Å—Ç–∞–ª–∏—Å—å –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–µ—Å–Ω–∏ (–ø—É—Å—Ç–æ–π –ø–æ–∫–∞)\r\n3. –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–µ—Ç —É–¥–∞–ª—è–µ–º–æ–≥–æ —Ç—Ä–µ–∫–∞\r\n4. –ü—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –º–∞—Å—Å–∏–≤—É –∞–π–¥–∏—à–Ω–∏–∫–æ–≤ –∞–≤—Ç–æ—Ä–æ–≤\r\n\t4.1 –ü—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –º–∞—Å—Å–∏–≤—É —Å–ø–∏—Å–∫–∞ –ø–µ—Å–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤ –∫–æ—Ç–æ—Ä–æ–º —ç—Ç–æ—Ç —Ç—Ä–µ–∫ –µ—â–µ –Ω–µ —É–¥–∞–ª–µ–Ω\r\n\t\t4.1.1 –ï—Å–ª–∏ –ù–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è —Ç—Ä–µ–∫ –∏–∑ —Å—Ç–∞—Ä–æ–≥–æ –ò —É –ø–µ—Å–Ω–∏ –∏–∑ —Å—Ç–∞—Ä–æ–≥–æ —Å–ø–∏—Å–∫–∞ –µ—Å—Ç—å –∞–≤—Ç–æ—Ä—ã...–ü–æ–∫–∞ –Ω–µ –ø–æ–Ω–∏–º–∞—é —Å–∞–º)), \r\n\t\t—Ç–æ –º—ã –¥–æ–±–∞–≤–ª—è–µ–º –∞–≤—Ç–æ—Ä–∞ –≤ —Å–ø–∏—Å–æ–∫ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–µ—Å–Ω–∏ \r\n\r\n*/\r\n\r\nexport const deleteSongFromLibrary = (e, song, currentUser, yourSongs) => {\r\n\te.stopPropagation()\r\n\tconst songAuthorsUIDS = song.authors.map(author => author.uid)\r\n\tconst finalAuthorsUIDS = [] // –º–∞—Å—Å–∏–≤ –∞–≤—Ç–æ—Ä–æ–≤, –ø–µ—Å–Ω–∏ –∫–æ—Ç–æ—Ä—ã—Ö –µ—â–µ –æ—Å—Ç–∞–ª–∏—Å—å –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–µ—Å–Ω–∏\r\n\tlet newList = currentUser.addedSongs.filter(songNum => songNum !== song.id)\r\n\tsongAuthorsUIDS.forEach(authorId => {\r\n\t\tyourSongs.forEach(songObj => {\r\n\t\t\tif (newList.includes(songObj.id) && songObj.authors.find(a => a.uid === authorId)) {\r\n\t\t\t\tfinalAuthorsUIDS.push(authorId)\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\tconst filtered = filterArrayWithArray(songAuthorsUIDS, finalAuthorsUIDS) // –º–∞—Å—Å–∏–≤ –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã—Ö –Ω—É–∂–Ω–æ —É–±—Ä–∞—Ç—å –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏\r\n\tconst finalFilteredAuthors = filterArrayWithArray(currentUser.addedAuthors, filtered) // –º–∞—Å—Å–∏–≤ –ª—é–¥–µ–π, –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ\r\n\r\n\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\taddedSongs: newList,\r\n\t\taddedAuthors: finalFilteredAuthors\r\n\t})\r\n\r\n\tfiltered.forEach(async authorId => {\r\n\t\tlet subscribers = (await firestore.collection('users').doc(authorId).get()).data().subscribers\r\n\t\tsubscribers--\r\n\t\tfirestore.collection('users').doc(authorId).update({\r\n\t\t\tsubscribers: subscribers\r\n\t\t})\r\n\t})\r\n\r\n}","import { useAuth } from \"../../../../contexts/auth\";\r\nimport { addSongToLibrary } from \"../../../../entities/song/lib/add-song-to-library\";\r\nimport { deleteSongFromLibrary } from \"../../../../entities/song/lib/delete-song-from-library\";\r\nimport { FiPlusCircle, FiX } from \"react-icons/fi\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nexport default function AddOrDeleteButtonFull({ song }) {\r\n  const { currentUser } = useAuth();\r\n  const { yourSongs } = useSong();\r\n  const { openConfirm, setOpenModal } = useModal();\r\n  if (!currentUser.addedSongs.includes(song.id)) {\r\n    return (\r\n      <span onClick={(e) => addSongToLibrary(e, song, currentUser)}>\r\n        <FiPlusCircle />\r\n        Add\r\n      </span>\r\n    );\r\n  } else {\r\n    return (\r\n      <span\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          setOpenModal(false);\r\n          openConfirm(\r\n            \"You sure you want to delete this song from library?\",\r\n            \"Yes, delete it\",\r\n            \"No, just kidding\",\r\n            (e) => deleteSongFromLibrary(e, song, currentUser, yourSongs)\r\n          );\r\n        }}\r\n      >\r\n        <FiX />\r\n        Delete\r\n      </span>\r\n    );\r\n  }\r\n}\r\n","import { firestore } from \"../../../firebase\"\r\n\r\nconst sortUserPlaylists = (playlist, currentUser) => {\r\n\tconst sortedPlaylists = [playlist.id, ...currentUser.ownPlaylists.filter(id => id !== playlist.id)]\r\n\tif (playlist.isAlbum) {\r\n\t\tif (currentUser.addedPlaylists.includes(playlist.id)) {\r\n\t\t\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\t\t\taddedPlaylists: sortedPlaylists\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\tif (currentUser.ownPlaylists.includes(playlist.id)) {\r\n\t\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\t\townPlaylists: sortedPlaylists\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport default sortUserPlaylists\r\n","import { useEffect, useState } from 'react'\r\nimport { useAuth } from '../../../../contexts/auth'\r\nimport { useSong } from '../../../../contexts/song'\r\nimport sortUserPlaylists from '../../../../features/author/lib/sort-user-playlists'\r\nimport { firestore } from '../../../../firebase'\r\n\r\nexport const useAddOrDeleteSong = (playlist, songId) => {\r\n\tconst [playlistSongs, setPlaylistSongs] = useState([])\r\n\tconst [isAdded, setIsAdded] = useState(false)\r\n\tconst { currentUser } = useAuth()\r\n\tconst { currentSong } = useSong()\r\n\tconst songData = songId || currentSong\r\n\tuseEffect(() => {\r\n\t\tconst response = firestore.collection('playlists').doc(playlist.id).onSnapshot(res => {\r\n\t\t\tif (res.exists) setPlaylistSongs(res.data().songs)\r\n\t\t})\r\n\t\treturn () => response()\r\n\t}, [firestore])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetIsAdded(playlistSongs.includes(songData))\r\n\t}, [playlistSongs, songData])\r\n\r\n\tfunction addOrDelete() {\r\n\t\tif (playlistSongs.length > 0 && playlist.id !== undefined) {\r\n\t\t\tif (playlistSongs.includes(songData)) {\r\n\t\t\t\tconst newSongsList = playlistSongs.filter(songNum => songNum !== songData)\r\n\t\t\t\tfirestore.collection('playlists').doc(playlist.id).update({\r\n\t\t\t\t\tsongs: newSongsList\r\n\t\t\t\t})\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tconst newSongsList = playlistSongs\r\n\t\t\tnewSongsList.unshift(songData)\r\n\t\t\tfirestore.collection('playlists').doc(playlist.id).update({\r\n\t\t\t\tsongs: newSongsList\r\n\t\t\t})\r\n\r\n\t\t\tsortUserPlaylists(playlist, currentUser)\r\n\t\t}\r\n\t}\r\n\r\n\treturn [addOrDelete, isAdded]\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nconst ScreenContext = React.createContext();\r\n\r\nexport const useScreen = () => {\r\n  return useContext(ScreenContext);\r\n};\r\n\r\nexport const ScreenProvider = ({ children }) => {\r\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n  const [screenHeight, setScreenHeight] = useState(window.innerHeight);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 1000);\r\n  function handleResize() {\r\n    setScreenWidth(window.innerWidth);\r\n    setScreenHeight(window.innerHeight);\r\n    setIsMobile(window.innerWidth < 1000);\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  const value = {\r\n    screenWidth,\r\n    screenHeight,\r\n    isMobile,\r\n  };\r\n  return (\r\n    <ScreenContext.Provider value={value}>{children}</ScreenContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useScreen } from \"../../../contexts/screen\";\r\n\r\nexport const Hint = ({ text, direction = \"top\", ...restProps }) => {\r\n  const { isMobile } = useScreen();\r\n  return !isMobile ? (\r\n    <div className={\"Hint \" + direction} {...restProps}>\r\n      <h5>{text}</h5>\r\n    </div>\r\n  ) : null;\r\n};\r\n","import React from \"react\";\r\nimport { FiCheck, FiPlusCircle } from \"react-icons/fi\";\r\nimport { useAddOrDeleteSong } from \"../../../../entities/playlist/lib/hooks/use-add-or-delete-song\";\r\nimport { Hint } from \"../../../../shared/ui/atoms/hint\";\r\n\r\nexport const AddToPlaylistItem = ({ playlist, song }) => {\r\n  const [addFunc, isAdded] = useAddOrDeleteSong(playlist.id, song.id);\r\n  return (\r\n    <div className=\"songItemMenuWindowItem\" onClick={addFunc}>\r\n      {!isAdded ? (\r\n        <>\r\n          <Hint text={`Add \"${song.name}\" to playlist`} />\r\n          <FiPlusCircle />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Hint text={`Remove ${song.name} from playlist`} />\r\n          <FiCheck />\r\n        </>\r\n      )}\r\n      {playlist.name}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { AddToPlaylistItem } from \"../atoms/add-to-playlist-item\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nexport const AddToPlaylists = ({ song }) => {\r\n  const { yourPlaylists, currentSongData } = useSong();\r\n  const { currentUser } = useAuth();\r\n\r\n  const [songData, setSongData] = useState(song || currentSongData);\r\n  useEffect(() => {\r\n    if (song?.id) {\r\n      setSongData(song);\r\n    }\r\n  }, [song?.id]);\r\n  return (\r\n    <div className=\"AddToPlaylists\">\r\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n        {yourPlaylists.length ? (\r\n          yourPlaylists.map((playlist, key) => {\r\n            if (currentUser.ownPlaylists.includes(playlist.id)) {\r\n              return <AddToPlaylistItem playlist={playlist} song={songData} />;\r\n            }\r\n          })\r\n        ) : (\r\n          <div className=\"songItemMenuWindowItem\">No playlists created</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\n\r\nexport const PersonTinyVerticalItem = ({ person }) => {\r\n  const { setOpenModal } = useModal();\r\n  return (\r\n    <Link to={`/authors/${person.uid}`}>\r\n      <div\r\n        className=\"PersonTinyVerticalItem\"\r\n        onClick={() => setOpenModal(false)}\r\n      >\r\n        <div className=\"personTinyImage\">\r\n          <img loading=\"lazy\" src={person.photoURL} alt=\"\" />\r\n        </div>\r\n        <div className=\"personTinyName\">{person.displayName}</div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { FiArrowRight } from 'react-icons/fi'\r\n\r\nexport const SeeMoreRoundButton = ({text = \"See more\", ...restProps}) => {\r\n\treturn (\r\n\t\t<div className = \"SeeMoreRoundButton\" {...restProps}>\r\n\t\t\t<button>\r\n\t\t\t\t<FiArrowRight/>\r\n\t\t\t</button>\r\n\t\t\t<span>{text}</span>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from \"react\";\r\nimport { PersonTiny } from \"../../../../entities/user/ui/organisms/person-tiny\";\r\n\r\nexport const TinyPersonsList = ({\r\n  listOfPeople,\r\n  restriction = null,\r\n  title,\r\n  chosenArray,\r\n  setChosenArray = () => null,\r\n  lastSeen = false,\r\n}) => {\r\n  return (\r\n    <div>\r\n      {title ? (\r\n        <h2 style={{ marginTop: \"0\", marginBottom: \"7px\" }}>{title}</h2>\r\n      ) : null}\r\n      {!restriction\r\n        ? listOfPeople.map((person) => {\r\n            return (\r\n              <PersonTiny\r\n                data={person}\r\n                chosenArray={chosenArray}\r\n                setChosenArray={setChosenArray}\r\n                lastSeen={lastSeen}\r\n              />\r\n            );\r\n          })\r\n        : listOfPeople.slice(0, restriction).map((person) => {\r\n            return (\r\n              <PersonTiny\r\n                data={person}\r\n                chosenArray={chosenArray}\r\n                setChosenArray={setChosenArray}\r\n                lastSeen={lastSeen}\r\n              />\r\n            );\r\n          })}\r\n    </div>\r\n  );\r\n};\r\n","export default function getUID() {\r\n\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n\t\tconst piece = (Math.random() * 16) | 0;\r\n\t\tconst elem = c === 'x' ? piece : (piece & 0x3) | 0x8;\r\n\t\treturn elem.toString(16);\r\n\t});\r\n}\r\n","\r\nimport { firestore } from \"../../firebase\"\r\nimport getUID from \"./get-uid\"\r\n\r\nexport const createChat = async (participants, chatUID = getUID(), chatName = \"\", chatImage = \"\", admins = [], imageColors = []) => {\r\n\tfirestore.collection('chats').doc(chatUID).set({\r\n\t\tchatImage: chatImage,\r\n\t\tchatName: chatName,\r\n\t\tid: chatUID,\r\n\t\tmessages: [],\r\n\t\tparticipants: participants,\r\n\t\twallpaper: 'undefined',\r\n\t\tadmins: participants.length > 2 ? admins : [],\r\n\t\ttyping: [],\r\n\t\timageColors: imageColors\r\n\t})\r\n\r\n\tparticipants.map(async personId => {\r\n\t\tlet chatInfo = (await firestore.collection('users').doc(personId).get()).data().chats\r\n\t\tchatInfo.push(chatUID)\r\n\t\tfirestore.collection('users').doc(personId).update({\r\n\t\t\tchats: chatInfo\r\n\t\t})\r\n\t})\r\n}","import { firestore } from \"../../firebase\"\r\nimport getUID from \"./get-uid\"\r\n\r\n\r\nexport const findChatURL = async (allParticipants, currentUser, setShouldCreate, setFriendChatId) => {\r\n\tlet foundChat = false\r\n\tlet chatId = 0\r\n\tif (currentUser.chats) {\r\n\t\t// –ü—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã —Ç–∞–∫–æ–≤: –æ–Ω –∏—â–µ—Ç –≤—Å–µ —á–∞—Ç—ã, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å —é–∑–µ—Ä. –ó–∞—Ç–µ–º –æ–Ω –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ –Ω–∏–º. –ó–∞—Ç–µ–º –æ–Ω –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –¥—Ä—É–∑—å—è–º\r\n\t\t// –ï—Å–ª–∏ –æ–Ω –Ω–∞—Ö–æ–¥–∏—Ç, —á—Ç–æ –¥—Ä—É–≥ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞, –¥–æ–±–∞–≤–ª—è–µ—Ç –∫ count 1, –µ—Å–ª–∏ –Ω–µ—Ç, —Å—Ä–∞–∑—É –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ —Ü–∏–∫–ª–∞ —É—á–∞—Ç—Å–Ω–∏–∫–æ–≤\r\n\t\t// –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ü–∏–∫–ª–∞ –æ–Ω –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π + 1 (–ø–æ—Ç–æ–º—É —á—Ç–æ –≤ –º–∞—Å—Å–∏–≤ –¥—Ä—É–∑–µ–π –Ω–µ –≤—Ö–æ–¥–∏—Ç —Å–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å) —Ä–∞–≤–Ω–æ\r\n\t\t// –¥–ª–∏–Ω–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–∞—Ç–∞ –∏ –µ—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π —Ä–∞–≤–Ω–æ –¥–ª–∏–Ω–µ –ø–æ—Å—Ç—É–ø–∏–≤—à–µ–≥–æ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –º–∞—Å—Å–∏–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, —Ç–æ–≥–¥–∞ –Ω—É–∂–Ω—ã–π —á–∞—Ç –Ω–∞–π–¥–µ–Ω\r\n\t\tconst chatsWhereUserIn = await firestore.collection('chats').where('participants', 'array-contains', currentUser.uid).get()\r\n\t\tchatsWhereUserIn.docs.forEach(chat => {\r\n\t\t\tlet count = 0\r\n\t\t\tallParticipants.every(personId => {\r\n\t\t\t\tif (chat.data().participants.includes(personId)) {\r\n\t\t\t\t\tcount++\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t\telse return false\r\n\t\t\t})\r\n\t\t\tif (count + 1 === chat.data().participants.length && count === allParticipants.length) {\r\n\t\t\t\tfoundChat = true\r\n\t\t\t\tsetShouldCreate(false)\r\n\t\t\t\tsetFriendChatId(chat.data().id)\r\n\t\t\t\tchatId = chat.data().id\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\telse return true\r\n\t\t})\r\n\r\n\t\tif (!foundChat) {\r\n\t\t\tconst random = getUID()\r\n\t\t\tfoundChat = true\r\n\t\t\tsetShouldCreate(true)\r\n\t\t\tsetFriendChatId(random)\r\n\t\t\tchatId = random\r\n\t\t}\r\n\t\treturn chatId\r\n\t}\r\n}","import { firestore } from \"../../../firebase\"\r\n\r\nexport const sendMessage = (chatId, chatData, sender, messageText, attachedSongs = [], attachedAlbums = [], attachedAuthors = [], inResponseToMessage) => {\r\n\tif (messageText.trim().length !== 0 || attachedSongs.length !== 0 || attachedAlbums.length !== 0 || attachedAuthors.length !== 0) {\r\n\t\tconst tempMessages = chatData?.messages || []\r\n\r\n\t\ttempMessages.push({\r\n\t\t\tid: tempMessages.length,\r\n\t\t\tsender: sender,\r\n\t\t\tmessage: messageText,\r\n\t\t\tsentTime: new Date().toString(),\r\n\t\t\tinResponseToMessage: inResponseToMessage || null,\r\n\t\t\tattachedSongs: attachedSongs,\r\n\t\t\tattachedAlbums: attachedAlbums,\r\n\t\t\tattachedAuthors: attachedAuthors,\r\n\t\t\tseenBy: [sender]\r\n\t\t})\r\n\r\n\t\tfirestore.collection('chats').doc(chatId).update({\r\n\t\t\tmessages: tempMessages\r\n\t\t})\r\n\t}\r\n}","import { firestore } from \"../../../firebase\";\r\nimport { createChat } from \"../../../shared/lib/create-—Åhat\";\r\nimport { findChatURL } from \"../../../shared/lib/find-chat-url\";\r\nimport { sendMessage } from \"../../dialogue/lib/send-message\";\r\n\r\nexport default function shareWithFriends({ shareList, currentUser, itemId, whatToShare, messageText = \"\", setShouldCreate = () => null, setFriendChatId = () => null, setLoading = () => null, setCompleted = () => null }) {\r\n\tsetLoading(true)\r\n\tsetCompleted(false)\r\n\t//–°–¥–µ–ª–∞—Ç—å —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é sendMessage\r\n\tshareList.map(async userId => {\r\n\t\t//–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—é\r\n\t\tconst sortedFriends = [{ uid: userId, status: 'added' }, ...currentUser.friends.filter(obj => obj.uid !== userId)]\r\n\t\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\t\tfriends: sortedFriends\r\n\t\t})\r\n\t\tPromise.resolve(findChatURL([userId], currentUser, () => null, setFriendChatId)).then(async chatId => {\r\n\t\t\tlet chatData = (await firestore.collection('chats').doc(chatId).get()).data()\r\n\t\t\tif (chatData !== undefined) {\r\n\t\t\t\tswitch (whatToShare) {\r\n\t\t\t\t\tcase \"song\":\r\n\t\t\t\t\t\tsendMessage(chatId, chatData, currentUser.uid, messageText, [itemId])\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"playlist\":\r\n\t\t\t\t\t\tsendMessage(chatId, chatData, currentUser.uid, messageText, [], [itemId])\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"author\":\r\n\t\t\t\t\t\tsendMessage(chatId, chatData, currentUser.uid, messageText, [], [], [itemId])\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tsendMessage(chatId, chatData, currentUser.uid, messageText, [itemId])\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcreateChat([currentUser.uid, userId], chatId).then(async () => {\r\n\t\t\t\t\tchatData = (await firestore.collection('chats').doc(chatId).get()).data()\r\n\t\t\t\t\tsetShouldCreate(false)\r\n\t\t\t\t\tswitch (whatToShare) {\r\n\t\t\t\t\t\tcase \"song\":\r\n\t\t\t\t\t\t\tsendMessage(chatId, chatData, currentUser.uid, messageText, [itemId])\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"playlist\":\r\n\t\t\t\t\t\t\tsendMessage(chatId, chatData, currentUser.uid, messageText, [], [itemId])\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"author\":\r\n\t\t\t\t\t\t\tsendMessage(chatId, chatData, currentUser.uid, messageText, [], [], [itemId])\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tsendMessage(chatId, chatData, currentUser.uid, messageText, [itemId])\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}).then(() => {\r\n\t\t\tsetLoading(false)\r\n\t\t\tsetCompleted(true)\r\n\t\t})\r\n\t})\r\n\r\n\r\n}","import React, { useState } from \"react\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport shareWithFriends from \"../../lib/share-with-friends\";\r\nimport Input from \"../../../../shared/ui/atoms/input\";\r\nimport SubmitButton from \"../../../../shared/ui/atoms/submit-button\";\r\nimport SearchBar from \"../../../../shared/ui/organisms/search-bar\";\r\nimport { TinyPersonsList } from \"../../../author/ui/templates/tiny-persons-list\";\r\n\r\nexport const FriendsToShareWith = ({ item, whatToShare = \"song\" }) => {\r\n  const { yourFriends } = useSong();\r\n  const [chosenFriends, setChosenFriends] = useState([]);\r\n  const { currentUser } = useAuth();\r\n  const [messageText, setMessageText] = useState(\"\");\r\n  const [completed, setCompleted] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const { toggleModal } = useModal();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [foundPeople, setFoundPeople] = useState([]);\r\n\r\n  return yourFriends.length ? (\r\n    <div className=\"FriendsToShareWith\">\r\n      <div\r\n        style={{\r\n          maxHeight: \"300px\",\r\n          overflowY: \"hidden\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <SearchBar\r\n          value={searchValue}\r\n          setValue={setSearchValue}\r\n          setResultAuthorList={setFoundPeople}\r\n          defaultAuthorsListValue={yourFriends}\r\n          defaultSearchMode={\"users\"}\r\n          inputText={\"Search for friends\"}\r\n        />\r\n        <div style={{ overflowY: \"auto\", maxHeight: \"100%\" }}>\r\n          <TinyPersonsList\r\n            listOfPeople={foundPeople}\r\n            chosenArray={chosenFriends}\r\n            setChosenArray={setChosenFriends}\r\n          />\r\n        </div>\r\n      </div>\r\n      <>\r\n        <Input\r\n          value={messageText}\r\n          setValue={setMessageText}\r\n          placeholder=\"Your message\"\r\n        />\r\n        <SubmitButton\r\n          text={`Share with ${chosenFriends.length} ${\r\n            chosenFriends.length > 1 || chosenFriends.length === 0\r\n              ? \"friends\"\r\n              : \"friend\"\r\n          }`}\r\n          action={() => {\r\n            shareWithFriends({\r\n              shareList: chosenFriends,\r\n              currentUser,\r\n              itemId: whatToShare === \"author\" ? item.uid : item.id,\r\n              whatToShare,\r\n              messageText,\r\n              setLoading,\r\n              setCompleted,\r\n            });\r\n            toggleModal();\r\n          }}\r\n          isLoading={loading}\r\n          completed={completed}\r\n          setCompleted={setCompleted}\r\n          bottomMessage={\"Message was sent\"}\r\n          isActive={!!chosenFriends.length}\r\n        />\r\n      </>\r\n    </div>\r\n  ) : (\r\n    <h3 style={{ margin: 0 }}>No friends added</h3>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { CgMusicNote } from \"react-icons/cg\";\r\nimport { PersonTinyVerticalItem } from \"../../../author/ui/atoms/person-tiny-vertical-item\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport displayDate from \"../../../../shared/lib/display-date\";\r\nimport { SeeMoreRoundButton } from \"../../../../shared/ui/atoms/see-more-round-button\";\r\nimport { TinyPersonsList } from \"../../../author/ui/templates/tiny-persons-list\";\r\nimport { LoadingCircle } from \"../../../loading/ui/atoms/loading-circle\";\r\nimport { FriendsToShareWith } from \"../../../share/ui/organisms/friends-to-share-with\";\r\n\r\nexport const SongInfo = ({ song }) => {\r\n  const { currentSongData } = useSong();\r\n  const { setContent } = useModal();\r\n  const [songData, setSongData] = useState(song || currentSongData);\r\n  const { displayAuthors, yourFriends } = useSong();\r\n  const [friendsThatHaveThisSong, setFriendsThatHaveThisSong] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  async function findFriendsThatHaveThisSong() {\r\n    setLoading(true);\r\n    setFriendsThatHaveThisSong([]);\r\n    yourFriends.forEach((friend) => {\r\n      if (friend.addedSongs.includes(songData.id))\r\n        setFriendsThatHaveThisSong((prev) => [...prev, friend]);\r\n    });\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (song !== undefined) setSongData(song);\r\n  }, [song && song.id]);\r\n\r\n  useEffect(() => {\r\n    findFriendsThatHaveThisSong();\r\n  }, [songData.id]);\r\n\r\n  return (\r\n    <div className=\"SongInfo\">\r\n      <div\r\n        className=\"songImage\"\r\n        style={{ backgroundImage: `url(${songData.cover})` }}\r\n      ></div>\r\n      <div className=\"songInfoContent\">\r\n        <h3 style={{ color: songData?.imageColors[0] }}>{songData?.name}</h3>\r\n        <span>{displayAuthors(songData.authors, \", \")}</span>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            opacity: \"0.6\",\r\n            fontSize: \".9em\",\r\n            position: \"relative\",\r\n            marginTop: \"5px\",\r\n          }}\r\n          className=\"listensAndDate\"\r\n        >\r\n          <p\r\n            className=\"infoListens\"\r\n            style={{\r\n              marginRight: \"15px\",\r\n              marginBottom: \"0\",\r\n              position: \"relative\",\r\n            }}\r\n          >\r\n            {songData.listens} <CgMusicNote />\r\n          </p>\r\n          <span>{displayDate(songData.releaseDate)}</span>\r\n        </div>\r\n        <h4 style={{ margin: \"10px 0\" }}>\r\n          {friendsThatHaveThisSong.length > 0\r\n            ? \"Friends that listen that song\"\r\n            : \"None of your friends listens this\"}\r\n        </h4>\r\n        {!loading ? (\r\n          <div style={{ display: \"flex\" }}>\r\n            {friendsThatHaveThisSong.length > 0 ? (\r\n              friendsThatHaveThisSong.map((person, index) => {\r\n                if (index < 2)\r\n                  return (\r\n                    <PersonTinyVerticalItem person={person} key={person.uid} />\r\n                  );\r\n              })\r\n            ) : (\r\n              <button\r\n                className=\"shareBtn\"\r\n                style={{\r\n                  minHeight: \"35px\",\r\n                  background: songData.imageColors[0],\r\n                }}\r\n                onClick={() => {\r\n                  setContent(\r\n                    <FriendsToShareWith item={songData} whatToShare={\"song\"} />\r\n                  );\r\n                }}\r\n              >\r\n                Share\r\n              </button>\r\n            )}\r\n            {friendsThatHaveThisSong.length > 2 ? (\r\n              <SeeMoreRoundButton\r\n                onClick={() =>\r\n                  setContent(\r\n                    <TinyPersonsList\r\n                      listOfPeople={friendsThatHaveThisSong}\r\n                      title={`Friends listen ${song.name}`}\r\n                    />\r\n                  )\r\n                }\r\n              />\r\n            ) : null}\r\n          </div>\r\n        ) : (\r\n          <div style={{ position: \"relative\", height: \"50px\" }}>\r\n            <LoadingCircle top={\"50%\"} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { BiEditAlt, BiListPlus } from \"react-icons/bi\";\r\nimport { FiInfo, FiShare } from \"react-icons/fi\";\r\nimport { MdKeyboardArrowRight, MdPlaylistAdd } from \"react-icons/md\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { EditSong } from \"../../../admin/ui/organisms/edit-song\";\r\nimport AddOrDeleteButtonFull from \"../../../full-screen-player/ui/molecules/add-or-delete-song-button\";\r\nimport { AddToPlaylists } from \"../../../full-screen-player/ui/molecules/add-to-playlists\";\r\nimport { SongInfo } from \"../organisms/song-info\";\r\nimport { FriendsToShareWith } from \"../../../share/ui/organisms/friends-to-share-with\";\r\n\r\nconst SongItemMoreWindow = ({\r\n  openMoreWindow,\r\n  song,\r\n  moreWindowPosRelativeToViewport,\r\n}) => {\r\n  const { toggleModal, setContent, openBottomMessage } = useModal();\r\n  const { currentUser } = useAuth();\r\n  const { setCurrentSongQueue } = useSong();\r\n\r\n  const addToQueue = () => {\r\n    setCurrentSongQueue((prev) => [...prev, song]);\r\n    openBottomMessage(\"Song was added to queue\");\r\n  };\r\n\r\n  return openMoreWindow ? (\r\n    <div\r\n      className=\"songItemMenuWindow\"\r\n      style={\r\n        moreWindowPosRelativeToViewport > window.innerHeight / 2 + 100\r\n          ? { top: \"auto\", bottom: \"110%\" }\r\n          : { top: \"110%\", bottom: \"auto\" }\r\n      }\r\n      onClick={(e) => e.stopPropagation()}\r\n    >\r\n      {currentUser.isAdmin ||\r\n      song.authors.find((el) => el.uid === currentUser.uid) ? (\r\n        <div\r\n          className=\"songItemMenuWindowItem\"\r\n          onClick={() => {\r\n            toggleModal();\r\n            setContent(<EditSong song={song} />);\r\n          }}\r\n        >\r\n          <BiEditAlt />\r\n          Edit\r\n        </div>\r\n      ) : null}\r\n      <div className=\"songItemMenuWindowItem\">\r\n        <AddOrDeleteButtonFull song={song} />\r\n      </div>\r\n      <div className=\"songItemMenuWindowItem\">\r\n        <div className=\"songItemMenuWindow inner\">\r\n          <AddToPlaylists song={song} />\r\n        </div>\r\n        <MdPlaylistAdd />\r\n        Add to playlist <MdKeyboardArrowRight />\r\n      </div>\r\n      <div\r\n        className=\"songItemMenuWindowItem\"\r\n        onClick={() => {\r\n          toggleModal();\r\n          setContent(<FriendsToShareWith item={song} whatToShare={\"song\"} />);\r\n        }}\r\n      >\r\n        <FiShare />\r\n        Share\r\n      </div>\r\n      <div\r\n        className=\"songItemMenuWindowItem\"\r\n        onClick={() => {\r\n          toggleModal();\r\n          setContent(<SongInfo song={song} />);\r\n        }}\r\n      >\r\n        <FiInfo />\r\n        Info\r\n      </div>\r\n      <div className=\"songItemMenuWindowItem\" onClick={addToQueue}>\r\n        <BiListPlus />\r\n        Add to queue\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default SongItemMoreWindow;\r\n","import { firestore } from \"../../../firebase\";\r\n\r\nconst saveSearchHistory = (uid, itemId, itemType) => {\r\n\tconst newItemSaved = {\r\n\t\tid: itemId,\r\n\t\ttype: itemType\r\n\t}\r\n\r\n\tfirestore\r\n\t\t.collection(\"searchHistory\")\r\n\t\t.doc(uid)\r\n\t\t.get()\r\n\t\t.then((res) => {\r\n\t\t\tif (res.data()?.history) {\r\n\t\t\t\tif (!res.data().history.find(({ id }) => id === itemId)) {\r\n\t\t\t\t\tfirestore\r\n\t\t\t\t\t\t.collection(\"searchHistory\")\r\n\t\t\t\t\t\t.doc(uid)\r\n\t\t\t\t\t\t.update({\r\n\t\t\t\t\t\t\thistory: [newItemSaved, ...res.data().history.slice(0, 15)],\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfirestore\r\n\t\t\t\t\t.collection(\"searchHistory\")\r\n\t\t\t\t\t.doc(uid)\r\n\t\t\t\t\t.set({\r\n\t\t\t\t\t\thistory: [newItemSaved],\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n};\r\n\r\nexport default saveSearchHistory","import { useRef, useState } from 'react';\r\nimport { useAuth } from '../../../../contexts/auth';\r\nimport { useSong } from '../../../../contexts/song';\r\nimport saveSearchHistory from '../../../../features/search/lib/save-search-history';\r\nimport { firestore } from '../../../../firebase';\r\n\r\nimport useOutsideClick from '../../../../shared/lib/hooks/use-outside-click';\r\nimport { addSongToHistory } from '../add-song-to-history';\r\n\r\nconst useSongLogic = ({ song, position, localIndex, shouldSaveSearchHistory }) => {\r\n\tconst {\r\n\t\tsetCurrentSong,\r\n\t\tcurrentSong,\r\n\t\tplay,\r\n\t\tsongRef,\r\n\t\tsetPlay,\r\n\t\tsetCurrentSongInQueue,\r\n\t} = useSong();\r\n\r\n\tconst [openMoreWindow, setOpenMoreWindow] = useState(false);\r\n\tconst [\r\n\t\tmoreWindowPosRelativeToViewport,\r\n\t\tsetMoreWindowPosRelativeToViewport,\r\n\t] = useState(0);\r\n\tconst currentItemRef = useRef(null);\r\n\tconst { currentUser } = useAuth();\r\n\r\n\tuseOutsideClick(currentItemRef, setOpenMoreWindow);\r\n\r\n\tfunction chooseSongItem() {\r\n\t\tsetCurrentSong(song.id);\r\n\t\tfirestore.collection(\"users\").doc(currentUser.uid).update({\r\n\t\t\tlastSongPlayed: song.id,\r\n\t\t});\r\n\r\n\t\tsetCurrentSongInQueue(localIndex);\r\n\t\tif (song.id === currentSong && play) {\r\n\t\t\tsongRef.current.pause();\r\n\t\t\tsetPlay(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsongRef.current.play();\r\n\t\tsetPlay(true);\r\n\r\n\t\tif (shouldSaveSearchHistory)\r\n\t\t\tsaveSearchHistory(currentUser.uid, song.id, \"songs\");\r\n\t\taddSongToHistory(song.id, currentUser);\r\n\t}\r\n\r\n\tfunction openSongItemMoreWindow(e) {\r\n\t\te.stopPropagation();\r\n\t\tsetOpenMoreWindow(!openMoreWindow);\r\n\t\tsetMoreWindowPosRelativeToViewport(\r\n\t\t\tposition || e.target.getBoundingClientRect().top\r\n\t\t);\r\n\t}\r\n\r\n\treturn { openSongItemMoreWindow, chooseSongItem, moreWindowPosRelativeToViewport, openMoreWindow, currentItemRef }\r\n}\r\n\r\nexport default useSongLogic\r\n","import React from \"react\";\r\n\r\nconst ColorCircles = ({ play }) => {\r\n  return (\r\n    <div\r\n      className=\"ColorCircles\"\r\n      style={!play ? { opacity: 0, transform: \"scale(.95)\" } : {}}\r\n    >\r\n      <span className=\"colorCircle\"></span>\r\n      <span className=\"colorCircle\"></span>\r\n      <span className=\"colorCircle\"></span>\r\n      <span className=\"colorCircle\"></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorCircles;\r\n","export default function getShortString(word, len = 50) {\r\n\treturn word.substr(0, len) + (word.length > len ? \"...\" : \"\")\r\n}","import getShortString from \"./get-short-string\"\r\n\r\n\r\nconst displayAuthorsStr = (authorslist, separator = ' & ', lenLimit = 100) => {\r\n\tconst authorsString = authorslist?.map(author => author.displayName).join(separator)\r\n\treturn authorsString ? getShortString(authorsString, lenLimit) : \"\"\r\n}\r\n\r\nexport default displayAuthorsStr","export default function bigNumberFormat(number) {\r\n\tif (number < 1000) return number\r\n\r\n\tif (number < 1000000) return parseFloat(number / 1000).toFixed(1) + 'K'\r\n\r\n\tif (number < 1000000000) return parseFloat(number / 1000000).toFixed(1) + 'M'\r\n}","import React from \"react\";\r\nimport { CgMusicNote } from \"react-icons/cg\";\r\nimport bigNumberFormat from \"../../../../shared/lib/big-number-format\";\r\n\r\nconst ShowAdditionInfo = ({ showListens, isNewSong, song }) => {\r\n  return showListens ? (\r\n    <span\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        opacity: 0.7,\r\n        fontSize: \".8em\",\r\n      }}\r\n      className={isNewSong ? \"newSongMarker\" : \"\"}\r\n    >\r\n      {bigNumberFormat(song.listens)} <CgMusicNote />\r\n    </span>\r\n  ) : isNewSong ? (\r\n    <span\r\n      style={{ display: \"flex\", alignItems: \"center\", fontSize: \".7em\" }}\r\n      className={\"newSongMarker\"}\r\n    >\r\n      New\r\n    </span>\r\n  ) : null;\r\n};\r\n\r\nexport default ShowAdditionInfo;\r\n","import React, { memo } from \"react\";\r\nimport { HiPause, HiPlay } from \"react-icons/hi\";\r\nimport { useScreen } from \"../../../../contexts/screen\";\r\nimport ColorCircles from \"../../../../features/full-screen-player/ui/atoms/color-circles\";\r\nimport displayAuthorsStr from \"../../../../shared/lib/display-authors-str\";\r\n\r\nimport getShortString from \"../../../../shared/lib/get-short-string\";\r\nimport ShowAdditionInfo from \"../molecules/show-additional-info\";\r\n\r\nconst ImageAndName = memo(\r\n  ({\r\n    song,\r\n    currentSong,\r\n    play,\r\n    isMobile,\r\n    showListens,\r\n    displayAuthors,\r\n    isNewSong,\r\n  }) => {\r\n    const { screenWidth } = useScreen();\r\n\r\n    return (\r\n      <div className=\"songItemImageAndName\">\r\n        <div className=\"songItemImage\">\r\n          <div className=\"songItemPlayOrPause\">\r\n            {song.id === currentSong && play ? null : <HiPlay />}\r\n          </div>\r\n          <div\r\n            className=\"playingAnimation\"\r\n            style={\r\n              song.id === currentSong && play\r\n                ? { opacity: 1, visibility: \"visible\" }\r\n                : {}\r\n            }\r\n          >\r\n            <HiPause />\r\n            <ColorCircles play={play} />\r\n          </div>\r\n          <img src={song.cover} alt=\"\" loading=\"lazy\" />\r\n        </div>\r\n        <div className=\"songItemNameAndAuthor\">\r\n          <div\r\n            className=\"songItemName\"\r\n            style={{ display: \"flex\", alignItems: \"center\" }}\r\n          >\r\n            {getShortString(song.name, !isMobile ? 30 : 17)}\r\n            <span style={{ marginLeft: \"10px\", fontWeight: \"500\" }}>\r\n              <ShowAdditionInfo\r\n                showListens={showListens}\r\n                isNewSong={isNewSong}\r\n                song={song}\r\n              />\r\n            </span>\r\n          </div>\r\n          {!isMobile ? (\r\n            <div className=\"songItemAuthor\">{displayAuthors(song.authors)}</div>\r\n          ) : (\r\n            <div\r\n              className=\"songItemAuthor\"\r\n              style={{ maxWidth: screenWidth - 180 }}\r\n            >\r\n              {displayAuthorsStr(song.authors, \" & \", 130)}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ImageAndName;\r\n","import React from \"react\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\n\r\nexport const AuthorsList = ({ listOfAuthors }) => {\r\n  const { displayAuthorsFull } = useSong();\r\n  return (\r\n    <div className=\"rightSideAuthorsList\">\r\n      <div className=\"rightSideAuthorsListCentralBlock\">\r\n        {displayAuthorsFull(listOfAuthors)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { BiEditAlt } from \"react-icons/bi\";\r\nimport { FiInfo, FiShare, FiUsers } from \"react-icons/fi\";\r\nimport { MdPlaylistAdd } from \"react-icons/md\";\r\nimport { SongInfo } from \"../../../song/ui/organisms/song-info\";\r\nimport { FriendsToShareWith } from \"../../../share/ui/organisms/friends-to-share-with\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { EditSong } from \"../../../admin/ui/organisms/edit-song\";\r\nimport { AuthorsList } from \"../../../full-screen-player/ui/atoms/authors-list\";\r\nimport AddOrDeleteButtonFull from \"../../../full-screen-player/ui/molecules/add-or-delete-song-button\";\r\nimport { AddToPlaylists } from \"../../../full-screen-player/ui/molecules/add-to-playlists\";\r\n\r\nexport const SongItemMobileMoreWindow = ({ song }) => {\r\n  const { setContent } = useModal();\r\n  const { currentUser } = useAuth();\r\n  return (\r\n    <div className=\"SongItemMobileMoreWindow\">\r\n      <div\r\n        className=\"simpleSongElement\"\r\n        style={{ background: song.imageColors[0] }}\r\n      >\r\n        <div className=\"simpleSongElementImage\">\r\n          <img loading=\"lazy\" src={song.cover} alt=\"\" />\r\n        </div>\r\n        <span>{song.name}</span>\r\n      </div>\r\n      {currentUser.isAdmin ? (\r\n        <div\r\n          className=\"songItemMenuWindowItem\"\r\n          onClick={() => {\r\n            setContent(<EditSong song={song} />);\r\n          }}\r\n        >\r\n          <BiEditAlt />\r\n          Edit\r\n        </div>\r\n      ) : null}\r\n      <div className=\"songItemMenuWindowItem\">\r\n        <AddOrDeleteButtonFull song={song} />\r\n      </div>\r\n      <div\r\n        className=\"songItemMenuWindowItem\"\r\n        onClick={() => setContent(<AddToPlaylists song={song} />)}\r\n      >\r\n        <MdPlaylistAdd />\r\n        Add to playlist\r\n      </div>\r\n      <div\r\n        className=\"songItemMenuWindowItem\"\r\n        onClick={() => {\r\n          setContent(<FriendsToShareWith item={song} whatToShare={\"song\"} />);\r\n        }}\r\n      >\r\n        <FiShare />\r\n        Share\r\n      </div>\r\n      <div\r\n        className=\"songItemMenuWindowItem\"\r\n        onClick={() => {\r\n          setContent(<SongInfo song={song} />);\r\n        }}\r\n      >\r\n        <FiInfo />\r\n        Info\r\n      </div>\r\n      <div\r\n        className=\"songItemMenuWindowItem\"\r\n        onClick={() => {\r\n          setContent(\r\n            <AuthorsList listOfAuthors={song.authors} title={\"Authors\"} />\r\n          );\r\n        }}\r\n      >\r\n        <FiUsers />\r\n        Authors\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useAuth } from \"../../../../contexts/auth\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport getShortString from \"../../../../shared/lib/get-short-string\";\r\nimport { addSongToLibrary } from \"../add-song-to-library\";\r\nimport { deleteSongFromLibrary } from \"../delete-song-from-library\";\r\n\r\nconst useAddOrDeleteSong = (song) => {\r\n\tconst { currentUser, setCurrentUser } = useAuth();\r\n\tconst { yourSongs } = useSong();\r\n\tconst { openBottomMessage, openConfirm, closeConfirm } = useModal();\r\n\r\n\tconst addSong = (e) => {\r\n\t\taddSongToLibrary(e, song, currentUser, setCurrentUser);\r\n\t\topenBottomMessage(\r\n\t\t\t`${getShortString(song.name, 15)} added to your library`\r\n\t\t);\r\n\t}\r\n\r\n\tconst removeSong = (e) => {\r\n\t\te.stopPropagation();\r\n\t\topenConfirm(\r\n\t\t\t`You sure you want to delete \"${song.name}\" from library?`,\r\n\t\t\t\"Yes, delete it\",\r\n\t\t\t\"No, just kidding\",\r\n\t\t\t(e) => {\r\n\t\t\t\tdeleteSongFromLibrary(e, song, currentUser, yourSongs);\r\n\t\t\t\tcloseConfirm();\r\n\t\t\t\topenBottomMessage(\r\n\t\t\t\t\t`${getShortString(song.name, 15)} removed from your library`,\r\n\t\t\t\t\t\"failure\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\treturn [addSong, removeSong]\r\n}\r\n\r\nexport default useAddOrDeleteSong\r\n","import React from \"react\";\r\nimport { FiPlusCircle, FiX } from \"react-icons/fi\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { Hint } from \"../../../../shared/ui/atoms/hint\";\r\nimport useAddOrDeleteSong from \"../../lib/hooks/use-add-or-delete-song\";\r\n\r\nconst AddOrDeleteButton = ({ song }) => {\r\n  const { currentUser } = useAuth();\r\n  const [addSong, removeSong] = useAddOrDeleteSong(song);\r\n\r\n  if (!currentUser.addedSongs.includes(song.id)) {\r\n    return (\r\n      <button onClick={addSong} style={{ position: \"relative\" }}>\r\n        <Hint text={\"add song\"} />\r\n        <FiPlusCircle />\r\n      </button>\r\n    );\r\n  } else {\r\n    return (\r\n      <button onClick={removeSong} style={{ position: \"relative\" }}>\r\n        <Hint text={\"delete song\"} />\r\n        <FiX />\r\n      </button>\r\n    );\r\n  }\r\n};\r\n\r\nexport default AddOrDeleteButton;\r\n","import React from \"react\";\r\nimport { FiMoreVertical } from \"react-icons/fi\";\r\nimport { SongItemMobileMoreWindow } from \"../../../../features/mobile/ui/organisms/song-item-mobile-more-window\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { Hint } from \"../../../../shared/ui/atoms/hint\";\r\nimport AddOrDeleteButton from \"../molecules/add-or-delete-button\";\r\n\r\nconst MoreButton = ({ song, isMobile, openSongItemMoreWindow }) => {\r\n  const { toggleModal, setContent } = useModal();\r\n\r\n  return (\r\n    <div className=\"songItemMoreBtn\">\r\n      <AddOrDeleteButton song={song} />\r\n      <button\r\n        onClick={\r\n          isMobile\r\n            ? (e) => {\r\n                e.stopPropagation();\r\n                toggleModal();\r\n                setContent(<SongItemMobileMoreWindow song={song} />);\r\n              }\r\n            : openSongItemMoreWindow\r\n        }\r\n      >\r\n        <Hint text={\"more\"} />\r\n        <FiMoreVertical />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoreButton;\r\n","import { memo } from \"react\";\r\nimport SongItemMoreWindow from \"../../../features/song/ui/molecules/song-more-window\";\r\nimport { useScreen } from \"../../../contexts/screen\";\r\nimport { useSong } from \"../../../contexts/song\";\r\nimport { AddToListCircle } from \"../../../shared/ui/molecules/add-to-list-circle\";\r\nimport useSongLogic from \"../lib/hooks/use-song-logic\";\r\nimport ImageAndName from \"./organisms/image-and-name\";\r\nimport MoreButton from \"./organisms/more-button\";\r\n\r\nexport const SongItem = memo(\r\n  ({\r\n    song,\r\n    localIndex,\r\n    showListens = false,\r\n    isNewSong = false,\r\n    listOfChosenSongs,\r\n    setListOfSongs,\r\n    position,\r\n    shouldSaveSearchHistory = false,\r\n  }) => {\r\n    const { isMobile } = useScreen();\r\n    const { currentSong, displayAuthors, play } = useSong();\r\n    const {\r\n      openSongItemMoreWindow,\r\n      chooseSongItem,\r\n      moreWindowPosRelativeToViewport,\r\n      openMoreWindow,\r\n      currentItemRef,\r\n    } = useSongLogic({ song, position, localIndex, shouldSaveSearchHistory });\r\n\r\n    return (\r\n      <div style={{ display: \"flex\", alignItems: \"center\", width: \"100%\" }}>\r\n        <AddToListCircle\r\n          listOfChosenItems={listOfChosenSongs}\r\n          setListOfChosenItems={setListOfSongs}\r\n          itemId={song.id}\r\n        />\r\n        <div\r\n          className={\r\n            \"SongItem \" + (song.id === currentSong && play ? \"playingNow\" : \"\")\r\n          }\r\n          onClick={chooseSongItem}\r\n          ref={openMoreWindow ? currentItemRef : null}\r\n          style={openMoreWindow ? { background: \"var(--playlistsColor)\" } : {}}\r\n        >\r\n          <ImageAndName\r\n            song={song}\r\n            currentSong={currentSong}\r\n            play={play}\r\n            isMobile={isMobile}\r\n            showListens={showListens}\r\n            displayAuthors={displayAuthors}\r\n            isNewSong={isNewSong}\r\n          />\r\n          <MoreButton\r\n            song={song}\r\n            isMobile={isMobile}\r\n            openSongItemMoreWindow={openSongItemMoreWindow}\r\n          />\r\n          <SongItemMoreWindow\r\n            openMoreWindow={openMoreWindow}\r\n            song={song}\r\n            moreWindowPosRelativeToViewport={moreWindowPosRelativeToViewport}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React from 'react'\r\n\r\nexport const MoreBtn = ({func, lenOfList, maxLen = 5, boolVal}) => {\r\n\treturn (\r\n\t\t<div onClick = {lenOfList > maxLen?func:null} className = \"MoreBtn\" style = {lenOfList <= maxLen?{display:'none'}:{}}>\r\n\t\t\t<button style = {boolVal?{background:'var(--pink)', color:'#ff8db2'}:{}}>\r\n\t\t\t\t{boolVal?\"Close\":\"More\"}\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from \"react\";\r\nimport { MoreBtn } from \"../../../../shared/ui/atoms/more-button\";\r\n\r\nexport const TitleWithMoreBtn = ({\r\n  title,\r\n  func,\r\n  boolVal,\r\n  lenOfList,\r\n  maxLen = 5,\r\n  marginBottom = 0,\r\n}) => {\r\n  return lenOfList !== 0 ? (\r\n    <div className=\"topTitle\" style={{ margin: \"10px 0\" }}>\r\n      <h2 style={{ margin: marginBottom }}>{title}</h2>\r\n      <MoreBtn\r\n        func={func}\r\n        boolVal={boolVal}\r\n        lenOfList={lenOfList}\r\n        maxLen={maxLen}\r\n      />\r\n    </div>\r\n  ) : null;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FaHistory } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { SongItem } from \"../../../../entities/song/ui/song-item\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport shuffleSongs from \"../../../../entities/song/lib/shuffle-songs\";\r\nimport { HISTORY_ROUTE } from \"../../../../shared/data/consts\";\r\nimport SearchBar from \"../../../../shared/ui/organisms/search-bar\";\r\nimport { TitleWithMoreBtn } from \"../../../../pages/settings/ui/molecules/title-with-more-btn\";\r\n\r\nexport const SongList = ({\r\n  listOfSongs,\r\n  source,\r\n  title = \"\",\r\n  showListens = false,\r\n  isNewSong = false,\r\n  showCount = false,\r\n  listOfChosenSongs,\r\n  setListOfSongs,\r\n  showSearch = false,\r\n  displayIfEmpty,\r\n  showhistory = false,\r\n  saveSearchHistory = false,\r\n  isHorizontal = false,\r\n}) => {\r\n  const {\r\n    setCurrentSongQueue,\r\n    setCurrentSongPlaylistSource,\r\n    playSong,\r\n    setCurrentSong,\r\n  } = useSong();\r\n  const { currentUser } = useAuth();\r\n  const [showMoreSongs, setShowMoreSongs] = useState(false);\r\n  const [localSearchValue, setLocalSearchValue] = useState(\"\");\r\n  const [displaySongs, setDisplaySongs] = useState(listOfSongs);\r\n\r\n  useEffect(() => {\r\n    setDisplaySongs(listOfSongs);\r\n  }, [listOfSongs]);\r\n\r\n  function setQueueInSongList() {\r\n    if (source !== \"no\" && listOfSongs.length !== 0) {\r\n      setCurrentSongQueue(listOfSongs);\r\n      setCurrentSongPlaylistSource(source);\r\n      const listSongsIds = listOfSongs.map((song) => song.id);\r\n      firestore\r\n        .collection(\"users\")\r\n        .doc(currentUser.uid)\r\n        .update({\r\n          lastQueue: {\r\n            image: source.image,\r\n            name: source.name,\r\n            songsList: listSongsIds,\r\n            source: source.source,\r\n          },\r\n        });\r\n    }\r\n  }\r\n\r\n  function playShuffledList(e) {\r\n    e.stopPropagation();\r\n    let newList = shuffleSongs(listOfSongs);\r\n    setCurrentSongQueue(newList);\r\n    setCurrentSongPlaylistSource(source);\r\n    const listSongsIds = newList.map((song) => song.id);\r\n    firestore\r\n      .collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .update({\r\n        lastQueue: {\r\n          image: source.image,\r\n          name: source.name,\r\n          songsList: listSongsIds,\r\n          source: source.source,\r\n        },\r\n      });\r\n    setCurrentSong(newList[0].id);\r\n    playSong();\r\n  }\r\n\r\n  return (\r\n    <div className=\"SongList\" onClick={setQueueInSongList}>\r\n      {title.length !== 0 ? (\r\n        <TitleWithMoreBtn\r\n          title={title}\r\n          func={() => setShowMoreSongs(!showMoreSongs)}\r\n          boolVal={showMoreSongs}\r\n          lenOfList={listOfSongs.length}\r\n        />\r\n      ) : null}\r\n      {showSearch ? (\r\n        <div style={{ display: \"flex\", alignItems: \"flex-start\" }}>\r\n          <SearchBar\r\n            value={localSearchValue}\r\n            setValue={setLocalSearchValue}\r\n            allFoundSongs={displaySongs}\r\n            setAllFoundSongs={setDisplaySongs}\r\n            defaultSearchMode={\"songs\"}\r\n            defaultSongsListValue={listOfSongs}\r\n            inputText={\"Search for songs\"}\r\n            background={\"#00000061\"}\r\n          />\r\n          {showhistory ? (\r\n            <Link to={HISTORY_ROUTE}>\r\n              <button\r\n                className=\"standartButton\"\r\n                style={{\r\n                  marginTop: \"10px\",\r\n                  marginBottom: \"0\",\r\n                  height: \"44px\",\r\n                  width: \"44px\",\r\n                  padding: \"0\",\r\n                  marginLeft: \"6px\",\r\n                  background: \"var(--playlistsColor)\",\r\n                }}\r\n              >\r\n                <FaHistory style={{ marginRight: \"0\" }} />\r\n              </button>\r\n            </Link>\r\n          ) : null}\r\n        </div>\r\n      ) : null}\r\n\r\n      <div className={\"list-of-songs\" + (isHorizontal ? \" horizontal\" : \"\")}>\r\n        {displaySongs.map((song, index) => {\r\n          if (title.length !== 0) {\r\n            if (showMoreSongs) {\r\n              return (\r\n                <span className=\"topSongItem\">\r\n                  {showCount ? (\r\n                    <h3 style={{ opacity: \"0.7\" }}>{index + 1}</h3>\r\n                  ) : null}\r\n                  <SongItem\r\n                    song={song}\r\n                    key={song.id}\r\n                    localIndex={index}\r\n                    showListens={showListens}\r\n                    isNewSong={isNewSong}\r\n                    listOfChosenSongs={listOfChosenSongs}\r\n                    setListOfSongs={setListOfSongs}\r\n                    shouldSaveSearchHistory={saveSearchHistory}\r\n                  />\r\n                </span>\r\n              );\r\n            } else {\r\n              if (index < 5) {\r\n                return (\r\n                  <span className=\"topSongItem\">\r\n                    {showCount ? (\r\n                      <h3 style={{ opacity: \"0.7\" }}>{index + 1}</h3>\r\n                    ) : null}\r\n                    <SongItem\r\n                      song={song}\r\n                      key={song.id}\r\n                      localIndex={index}\r\n                      showListens={showListens}\r\n                      isNewSong={isNewSong}\r\n                      listOfChosenSongs={listOfChosenSongs}\r\n                      setListOfSongs={setListOfSongs}\r\n                      shouldSaveSearchHistory={saveSearchHistory}\r\n                    />\r\n                  </span>\r\n                );\r\n              }\r\n            }\r\n          } else {\r\n            return (\r\n              <span className=\"topSongItem\">\r\n                {showCount ? (\r\n                  <h3 style={{ opacity: \"0.7\" }}>{index + 1}</h3>\r\n                ) : null}\r\n                <SongItem\r\n                  song={song}\r\n                  key={song.id}\r\n                  localIndex={index}\r\n                  showListens={showListens}\r\n                  isNewSong={isNewSong}\r\n                  listOfChosenSongs={listOfChosenSongs}\r\n                  setListOfSongs={setListOfSongs}\r\n                  shouldSaveSearchHistory={saveSearchHistory}\r\n                />\r\n              </span>\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n      {listOfSongs.length === 0 && !!displayIfEmpty && (\r\n        <h4 style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          {displayIfEmpty}\r\n        </h4>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react'\r\nimport { firestore } from '../../../../firebase'\r\n\r\nexport const useAlbumAuthors = (data) => {\r\n\tconst [albumAuthors, setAlbumAuthors] = useState([])\r\n\tconst [authorsImages, setAuthorsImages] = useState([])\r\n\tasync function fetchAuthorsData() {\r\n\t\tif (data?.authors !== undefined) {\r\n\t\t\tconst ids = data.authors.map(author => author.uid)\r\n\t\t\tconst authrorsData = await firestore.collection(\"users\").where(\"uid\", \"in\", ids).get()\r\n\t\t\tconst tempArrayAuthors = []\r\n\t\t\tconst tempArrayImages = []\r\n\t\t\tauthrorsData.docs.forEach((a) => {\r\n\t\t\t\ttempArrayAuthors.push(a.data())\r\n\t\t\t\ttempArrayImages.push(a.data().photoURL)\r\n\t\t\t})\r\n\t\t\tsetAlbumAuthors(tempArrayAuthors)\r\n\t\t\tsetAuthorsImages(tempArrayImages)\r\n\t\t}\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tfetchAuthorsData()\r\n\t}, [data?.id])\r\n\r\n\treturn [albumAuthors, authorsImages]\r\n}\r\n","import React, { useEffect } from \"react\";\r\n\r\nexport const SmallImages = ({ imagesList, borderColor = \"#fff\" }) => {\r\n  return (\r\n    <div\r\n      className=\"SmallImages\"\r\n      style={{ marginRight: -7 * (imagesList.length - 1) }}\r\n    >\r\n      {imagesList.map((image, index) => {\r\n        if (!!image) {\r\n          return (\r\n            <div\r\n              className=\"smallImgContainer\"\r\n              style={{\r\n                border: `3px solid ${borderColor}`,\r\n                transform: `translateX(${-15 * index}px)`,\r\n              }}\r\n              key={index}\r\n            >\r\n              <img loading=\"lazy\" src={image} alt=\"\" />\r\n            </div>\r\n          );\r\n        }\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FiMessageCircle } from \"react-icons/fi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { createChat } from \"../../../../shared/lib/create-—Åhat\";\r\nimport { findChatURL } from \"../../../../shared/lib/find-chat-url\";\r\n\r\nexport const ChatWithFriendButton = ({ data, color }) => {\r\n  const { currentUser } = useAuth();\r\n  const [shouldCreate, setShouldCreate] = useState(false);\r\n  const [friendChatId, setFriendChatId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    findChatURL([data.uid], currentUser, setShouldCreate, setFriendChatId);\r\n  }, [data.uid]);\r\n\r\n  return (\r\n    <Link\r\n      to={`/chat/${friendChatId}`}\r\n      style={{ display: \"block\", width: \"fit-content\", textDecoration: \"none\" }}\r\n    >\r\n      <button\r\n        onClick={() => {\r\n          if (shouldCreate)\r\n            createChat([currentUser.uid, data.uid], friendChatId);\r\n        }}\r\n        style={{ background: color }}\r\n        className=\"ChatWithFriendButton\"\r\n      >\r\n        <FiMessageCircle /> Messages\r\n      </button>\r\n    </Link>\r\n  );\r\n};\r\n","import { firestore } from \"../../firebase\"\r\n\r\nexport const getSongById = async (songId) => {\r\n\tconst data = (await firestore.collection('songs').doc(songId).get()).data()\r\n\treturn data\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport { getSongById } from \"../../../../shared/api/song-api\";\r\n\r\nconst useLastSongListened = (data) => {\r\n  const [songData, setSongData] = useState();\r\n  const {\r\n    setCurrentSong,\r\n    currentSong,\r\n    play,\r\n    songRef,\r\n    setPlay,\r\n    setCurrentSongInQueue,\r\n  } = useSong();\r\n  const { currentUser } = useAuth();\r\n\r\n  function fetchLastSong() {\r\n    getSongById(data.lastSongPlayed).then((song) => setSongData(song));\r\n  }\r\n\r\n  function chooseSongItem() {\r\n    setCurrentSong(songData.id);\r\n    firestore.collection(\"users\").doc(currentUser.uid).update({\r\n      lastSongPlayed: songData.id,\r\n    });\r\n    setCurrentSongInQueue(0);\r\n    if (songData.id === currentSong && play) {\r\n      songRef.current.pause();\r\n      setPlay(false);\r\n      return;\r\n    }\r\n    songRef.current.play();\r\n    setPlay(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (data?.lastSongPlayed) fetchLastSong();\r\n  }, [data.lastSongPlayed]);\r\n\r\n  return [songData, chooseSongItem];\r\n};\r\n\r\nexport default useLastSongListened;\r\n","import React from \"react\";\r\nimport { IoPlayCircleOutline } from \"react-icons/io5\";\r\nimport useLastSongListened from \"../../lib/hooks/use-last-song-listened\";\r\nexport const LastSongListened = ({ data, loading }) => {\r\n  const [songData, chooseSongItem] = useLastSongListened(data, loading);\r\n  return songData !== undefined ? (\r\n    <div className=\"LastSongListened\" onClick={chooseSongItem}>\r\n      <IoPlayCircleOutline />\r\n      <span>{songData.name}</span>\r\n    </div>\r\n  ) : null;\r\n};\r\n","import { firestore } from \"../../../firebase\"\r\n\r\nexport const addPlaylistToLibrary = async (playlistData, currentUser) => {\r\n\tconst addedPlaylists = (await firestore.collection('users').doc(currentUser.uid).get()).data().addedPlaylists\r\n\taddedPlaylists.push(playlistData.id)\r\n\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\taddedPlaylists: addedPlaylists\r\n\t})\r\n\r\n\tfirestore.collection('playlists').doc(playlistData.id).update({\r\n\t\tsubscribers: ++playlistData.subscribers\r\n\t})\r\n}","import { firestore } from \"../../../firebase\"\r\n\r\nexport const removePlaylistFromLibrary = async (playlistData, currentUser) => {\r\n\tconst filteredPlaylists = currentUser.addedPlaylists.filter(id => id !== playlistData.id)\r\n\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\taddedPlaylists: filteredPlaylists\r\n\t})\r\n\tfirestore.collection('playlists').doc(playlistData.id).update({\r\n\t\tsubscribers: --playlistData.subscribers\r\n\t})\r\n}","import React from \"react\";\r\nimport { FiArrowLeft } from \"react-icons/fi\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Hint } from \"./hint\";\r\n\r\nexport const GoBackBtn = ({ color = \"\" }) => {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"GoBackBtn\">\r\n      <button\r\n        onClick={() => history.goBack()}\r\n        style={color.length ? { color: color } : {}}\r\n      >\r\n        <Hint text={\"go back\"} direction={\"bottom\"} />\r\n        <FiArrowLeft />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FiHeadphones, FiUserPlus } from \"react-icons/fi\";\r\nimport { PersonTinyVerticalItem } from \"../../../author/ui/atoms/person-tiny-vertical-item\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport displayDate from \"../../../../shared/lib/display-date\";\r\nimport { SeeMoreRoundButton } from \"../../../../shared/ui/atoms/see-more-round-button\";\r\nimport { TinyPersonsList } from \"../../../author/ui/templates/tiny-persons-list\";\r\nimport { LoadingCircle } from \"../../../loading/ui/atoms/loading-circle\";\r\nimport { FriendsToShareWith } from \"../../../share/ui/organisms/friends-to-share-with\";\r\n\r\nexport const AlbumInfo = ({ album }) => {\r\n  const { setContent } = useModal();\r\n  const { yourFriends } = useSong();\r\n  const [friendsThatHaveThisAlbum, setFriendsThatHaveThisAlbum] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  async function findFriendsThatHaveThisAlbum() {\r\n    setLoading(true);\r\n    setFriendsThatHaveThisAlbum([]);\r\n    yourFriends.forEach((friend) => {\r\n      if (friend.addedPlaylists.includes(album.id))\r\n        setFriendsThatHaveThisAlbum((prev) => [...prev, friend]);\r\n    });\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    findFriendsThatHaveThisAlbum();\r\n  }, [album.uid]);\r\n\r\n  return (\r\n    <div className=\"SongInfo\">\r\n      <div\r\n        className=\"songImage\"\r\n        style={{ backgroundImage: `url(${album.image})` }}\r\n      ></div>\r\n      <div className=\"songInfoContent\">\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <span style={{ opacity: \".5\", fontWeight: 500, fontSize: \".7em\" }}>\r\n            {album.isAlbum ? \"Album\" : \"Playlist\"}\r\n          </span>\r\n          <h3 style={{ color: album.imageColors[1] }}>{album.name}</h3>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            opacity: \"0.6\",\r\n            fontSize: \".9em\",\r\n            position: \"relative\",\r\n          }}\r\n          className=\"listensAndDate\"\r\n        >\r\n          <p\r\n            className=\"infoListens\"\r\n            style={{ marginRight: \"20px\", position: \"relative\" }}\r\n          >\r\n            {album.listens}\r\n            <FiHeadphones />\r\n          </p>\r\n          <p\r\n            className=\"infoListens\"\r\n            style={{ marginRight: \"20px\", position: \"relative\" }}\r\n          >\r\n            {album.subscribers} <FiUserPlus />\r\n          </p>\r\n          <span>{displayDate(album.creationDate)}</span>\r\n        </div>\r\n        <h4 style={{ margin: \"10px 0\" }}>\r\n          {friendsThatHaveThisAlbum.length > 0\r\n            ? \"Friends subscribed\"\r\n            : \"None of your friends subscribed\"}\r\n        </h4>\r\n        {!loading ? (\r\n          <div style={{ display: \"flex\" }}>\r\n            {friendsThatHaveThisAlbum.length > 0 ? (\r\n              <>\r\n                {friendsThatHaveThisAlbum.map((person, index) => {\r\n                  if (index < 2)\r\n                    return (\r\n                      <PersonTinyVerticalItem\r\n                        person={person}\r\n                        key={person.uid}\r\n                      />\r\n                    );\r\n                })}\r\n                {friendsThatHaveThisAlbum.length > 2 ? (\r\n                  <SeeMoreRoundButton\r\n                    onClick={() =>\r\n                      setContent(\r\n                        <TinyPersonsList\r\n                          listOfPeople={friendsThatHaveThisAlbum}\r\n                          title={`Friends subscribed to ${album.name}`}\r\n                        />\r\n                      )\r\n                    }\r\n                  />\r\n                ) : null}\r\n              </>\r\n            ) : (\r\n              <button\r\n                className=\"shareBtn\"\r\n                style={{ minHeight: \"35px\", background: album.imageColors[0] }}\r\n                onClick={() => {\r\n                  setContent(\r\n                    <FriendsToShareWith item={album} whatToShare={\"playlist\"} />\r\n                  );\r\n                }}\r\n              >\r\n                Share\r\n              </button>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div style={{ position: \"relative\", height: \"50px\" }}>\r\n            <LoadingCircle top={\"50%\"} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { AiOutlineCloudDownload } from \"react-icons/ai\";\r\nimport { ImCheckmark } from \"react-icons/im\";\r\nimport styled from \"styled-components\";\r\nimport { LoadingCircle } from \"../../../features/loading/ui/atoms/loading-circle\";\r\nimport { useModal } from \"../../../contexts/modal\";\r\nimport { storage } from \"../../../firebase\";\r\n\r\nconst DownloadButtonWrapper = styled.button`\r\n  width: 100%;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  background: linear-gradient(45deg, #852de5, #5c38c1);\r\n  color: #fff;\r\n  font-weight: bold;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 40px;\r\n  border-radius: var(--standartBorderRadius3);\r\n  position: relative;\r\n  overflow: hidden;\r\n  z-index: 2;\r\n  margin: 8px 0;\r\n\r\n  @keyframes button-animation-out {\r\n    0% {\r\n      opacity: 0;\r\n      transform: scale(0.9);\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n      transform: scale(1);\r\n    }\r\n  }\r\n\r\n  .inner-button {\r\n    z-index: 1;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    .inner-button-content {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n\r\n    .inner-button-success {\r\n      animation: button-animation-out 2s forwards;\r\n    }\r\n\r\n    .inner-button-text {\r\n      cursor: pointer;\r\n      width: 100%;\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n\r\n      svg {\r\n        margin-right: 7px;\r\n        width: 20px;\r\n        height: 20px;\r\n      }\r\n    }\r\n\r\n    .inner-button-download {\r\n      width: 100%;\r\n      background: red;\r\n\r\n      input[type=\"file\"] {\r\n        /* display: none; */\r\n        width: 100%;\r\n        height: 100%;\r\n        position: absolute;\r\n        left: 50%;\r\n        top: 50%;\r\n        transform: translate(-50%, -50%);\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    display: block;\r\n    top: 50%;\r\n    left: 0%;\r\n    transform: translateY(-50%);\r\n    background: var(--green);\r\n    width: ${(props) => (props.completed ? \"100%\" : \"0\")};\r\n    height: 100%;\r\n    transition: 0.6s;\r\n    z-index: 0;\r\n  }\r\n\r\n  .LoadingCircle {\r\n    position: relative;\r\n    transform: none;\r\n    left: auto;\r\n    top: auto;\r\n    width: 30px;\r\n    height: 30px;\r\n\r\n    img {\r\n      width: 30px;\r\n      height: 30px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DownloadButton = ({\r\n  title = \"\",\r\n  text,\r\n  place,\r\n  setItemSrc,\r\n  setImageLocalPath,\r\n}) => {\r\n  const { openBottomMessage } = useModal();\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [completed, setCompleted] = useState(false);\r\n\r\n  async function onFileChange(e, place, setFunc) {\r\n    e.preventDefault();\r\n    setErrorMessage(\"\");\r\n    setLoading(true);\r\n    setCompleted(false);\r\n    const isImage =\r\n      place === \"songsImages/\" ||\r\n      place === \"usersImages/\" ||\r\n      place === \"chatCovers/\";\r\n    const file = e.target.files[0];\r\n    let isValid = false;\r\n    if (isImage) {\r\n      const validExtensions = [\".jpg\", \".png\", \".jpeg\"];\r\n      if (\r\n        validExtensions.find(\r\n          (ext) =>\r\n            file.name.substr(file.name.length - ext.length, ext.length) === ext\r\n        )\r\n      )\r\n        isValid = true;\r\n      else {\r\n        setErrorMessage(\r\n          `Format of your file is not valid. Download file with one of these: ${validExtensions.map(\r\n            (ex) => \" \" + ex\r\n          )}`\r\n        );\r\n        setLoading(false);\r\n      }\r\n    } else if (place === \"songs/\") {\r\n      const validExtensions = [\".mp3\", \".mp4a\", \".flac\", \".wav\", \".wma\"];\r\n      if (\r\n        validExtensions.find(\r\n          (ext) =>\r\n            file.name.substr(file.name.length - ext.length, ext.length) === ext\r\n        )\r\n      )\r\n        isValid = true;\r\n      else {\r\n        setErrorMessage(\r\n          `Format of your file is not valid. Download file with one of these: ${validExtensions.map(\r\n            (ex) => ex\r\n          )}`\r\n        );\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    if (isValid) {\r\n      if (isImage) setImageLocalPath(URL.createObjectURL(file));\r\n      const storageRef = storage.ref();\r\n      const fileRef = storageRef.child(place + file.name);\r\n      await fileRef.put(file);\r\n      setCompleted(true);\r\n      setLoading(false);\r\n      setFunc(await fileRef.getDownloadURL());\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (errorMessage.length) openBottomMessage(errorMessage, \"failure\");\r\n  }, [errorMessage]);\r\n\r\n  return (\r\n    <>\r\n      {!!title && <h3>{title}</h3>}\r\n      <DownloadButtonWrapper completed={completed}>\r\n        <div className=\"inner-button\">\r\n          {completed ? (\r\n            <div className=\"inner-button-success\">\r\n              <ImCheckmark /> Done\r\n            </div>\r\n          ) : !loading ? (\r\n            <div className=\"inner-button-content\">\r\n              <label className=\"inner-button-download\">\r\n                <div className=\"inner-button-text\">\r\n                  <AiOutlineCloudDownload />\r\n                  {text}\r\n                </div>\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"\"\r\n                  id=\"\"\r\n                  onChange={(e) => onFileChange(e, place, setItemSrc)}\r\n                />\r\n              </label>\r\n            </div>\r\n          ) : (\r\n            <LoadingCircle top={0} />\r\n          )}\r\n        </div>\r\n      </DownloadButtonWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DownloadButton;\r\n","import React from 'react'\r\n\r\nexport const RadioBtn = ({currentActive, id, label, onClick}) => {\r\n\treturn (\r\n\t\t<div className = \"RadioBtn\" id = {id} onClick = {onClick}>\r\n\t\t\t<span className = \"radioLabel\" style = {currentActive === id?{color:'var(--blue)', opacity:1, fontWeight:'bold'}:{}}>\r\n\t\t\t\t{label}\r\n\t\t\t</span>\r\n\t\t\t<span className = \"radioCircle\" style = {currentActive === id?{background:'var(--blue)'}:{}}></span>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { firestore } from '../../../../firebase';\r\n\r\nconst useCustomizeAlbum = (playlist) => {\r\n\tconst [playlistName, setPlaylistName] = useState(playlist.name);\r\n\tconst [error, setError] = useState(\"\")\r\n\tconst [playlistCover, setPlaylistCover] = useState(playlist.image);\r\n\tconst [authorsInputValue, setAuthorsInputValue] = useState(\"\");\r\n\tconst [allAuthors, setAllAuthors] = useState([]);\r\n\tconst [chosenAuthors, setChosenAuthors] = useState(playlist.authors);\r\n\tconst [releaseDate, setReleaseDate] = useState(playlist.creationDate);\r\n\tconst [songsSearch, setSongsSearch] = useState(\"\");\r\n\tconst [allSongs, setAllSongs] = useState([]);\r\n\tconst [chosenSongs, setChosenSongs] = useState(playlist.songs);\r\n\tconst [playlistStatus, setPlaylistStatus] = useState(\r\n\t\tplaylist.isAlbum ? 1 : 0\r\n\t);\r\n\tconst [isPlaylistPrivate, setIsPlaylistPrivate] = useState(\r\n\t\tplaylist.isPrivate ? 1 : 0\r\n\t);\r\n\tconst [loadingAuthors, setLoadingAuthors] = useState(false);\r\n\tconst [loadingSongs, setLoadingSongs] = useState(false);\r\n\tconst [imageLocalPath, setImageLocalPath] = useState(\"\");\r\n\tconst [imageColors, setImageColors] = useState(playlist.imageColors);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [completed, setCompleted] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetPlaylistName(playlist.name);\r\n\t\tsetPlaylistCover(playlist.image);\r\n\t\tsetChosenAuthors(playlist.authors);\r\n\t}, [playlist.id]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (songsSearch.length === 0) {\r\n\t\t\tplaylist.songs.map(async (songId) => {\r\n\t\t\t\tconst songData = (\r\n\t\t\t\t\tawait firestore.collection(\"songs\").doc(songId).get()\r\n\t\t\t\t).data();\r\n\t\t\t\tsetLoadingSongs(false);\r\n\t\t\t\tsetAllSongs((prev) => [...prev, songData]);\r\n\t\t\t});\r\n\t\t}\r\n\t}, [songsSearch]);\r\n\r\n\tfunction removeAuthorFromList(data) {\r\n\t\tconst filtered = chosenAuthors.filter((people) => people.uid !== data.uid);\r\n\t\treturn setChosenAuthors(filtered);\r\n\t}\r\n\r\n\tfunction addAuthor(data) {\r\n\t\tif (!chosenAuthors.some((person) => person.uid === data.uid)) {\r\n\t\t\treturn setChosenAuthors((prev) => [\r\n\t\t\t\t...prev,\r\n\t\t\t\t{\r\n\t\t\t\t\tuid: data.uid,\r\n\t\t\t\t\tdisplayName: data.displayName,\r\n\t\t\t\t\tphotoURL: data.photoURL,\r\n\t\t\t\t},\r\n\t\t\t]);\r\n\t\t}\r\n\r\n\t\tremoveAuthorFromList(data);\r\n\t}\r\n\r\n\tasync function addPlaylistToFirebase(e) {\r\n\t\te.preventDefault();\r\n\t\tif (!playlistName.length) setError(\"Playlist has to have a name\")\r\n\t\telse if (!chosenAuthors.length) setError(\"Playlist has to have at least 1 author\")\r\n\t\telse {\r\n\t\t\tif (chosenAuthors.length > playlist.authors.length) {\r\n\t\t\t\tconst newAuthors = chosenAuthors.filter((author) => {\r\n\t\t\t\t\treturn !playlist.authors.find((a) => a.uid === author.uid);\r\n\t\t\t\t});\r\n\t\t\t\tnewAuthors.forEach(async (author) => {\r\n\t\t\t\t\tconst authorRef = await firestore\r\n\t\t\t\t\t\t.collection(\"users\")\r\n\t\t\t\t\t\t.doc(author.uid)\r\n\t\t\t\t\t\t.get();\r\n\t\t\t\t\tconst authorData = authorRef.data();\r\n\t\t\t\t\tconst authorPlaylists = authorData.ownPlaylists;\r\n\t\t\t\t\tauthorPlaylists.push(playlist.id);\r\n\t\t\t\t\tfirestore.collection(\"users\").doc(author.uid).update({\r\n\t\t\t\t\t\townPlaylists: authorPlaylists,\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else if (chosenAuthors.length < playlist.authors.length) {\r\n\t\t\t\tconst newAuthors = playlist.authors.filter((author) => {\r\n\t\t\t\t\treturn !chosenAuthors.find((a) => a.uid === author.uid);\r\n\t\t\t\t});\r\n\t\t\t\tnewAuthors.forEach(async (author) => {\r\n\t\t\t\t\tconst authorRef = await firestore\r\n\t\t\t\t\t\t.collection(\"users\")\r\n\t\t\t\t\t\t.doc(author.uid)\r\n\t\t\t\t\t\t.get();\r\n\t\t\t\t\tconst authorData = authorRef.data();\r\n\t\t\t\t\tconst authorPlaylists = authorData.ownPlaylists;\r\n\t\t\t\t\tconst filteredPlaylists = authorPlaylists.filter(\r\n\t\t\t\t\t\t(playlistId) => playlistId !== playlist.id\r\n\t\t\t\t\t);\r\n\t\t\t\t\tfirestore.collection(\"users\").doc(author.uid).update({\r\n\t\t\t\t\t\townPlaylists: filteredPlaylists,\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tfirestore\r\n\t\t\t\t.collection(\"playlists\")\r\n\t\t\t\t.doc(playlist.id)\r\n\t\t\t\t.update({\r\n\t\t\t\t\tid: playlist.id,\r\n\t\t\t\t\tname: playlistName,\r\n\t\t\t\t\tsongs: chosenSongs,\r\n\t\t\t\t\tauthors: chosenAuthors,\r\n\t\t\t\t\timage: playlistCover,\r\n\t\t\t\t\tlistens: playlist.listens,\r\n\t\t\t\t\tcreationDate: releaseDate,\r\n\t\t\t\t\tsubscribers: playlist.subscribers,\r\n\t\t\t\t\tisAlbum: playlistStatus === 1,\r\n\t\t\t\t\timageColors: imageColors,\r\n\t\t\t\t\tisPrivate: isPlaylistPrivate === 1,\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\tsetCompleted(true);\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\timageLocalPath,\r\n\t\tsetImageColors,\r\n\t\tplaylistName,\r\n\t\tsetPlaylistName,\r\n\t\tauthorsInputValue,\r\n\t\tsetAuthorsInputValue,\r\n\t\tsetAllAuthors,\r\n\t\tchosenAuthors,\r\n\t\tremoveAuthorFromList,\r\n\t\tloadingAuthors,\r\n\t\tallAuthors,\r\n\t\taddAuthor,\r\n\t\tsongsSearch,\r\n\t\tsetSongsSearch,\r\n\t\tsetAllSongs,\r\n\t\tloadingSongs,\r\n\t\tallSongs,\r\n\t\tchosenSongs,\r\n\t\tsetChosenSongs,\r\n\t\tsetPlaylistStatus,\r\n\t\tplaylistStatus,\r\n\t\tisPlaylistPrivate,\r\n\t\tsetIsPlaylistPrivate,\r\n\t\tsetPlaylistCover,\r\n\t\treleaseDate,\r\n\t\tsetReleaseDate,\r\n\t\tsetImageLocalPath,\r\n\t\taddPlaylistToFirebase,\r\n\t\tloading,\r\n\t\tcompleted,\r\n\t\tsetCompleted,\r\n\t\terror,\r\n\t\tsetError\r\n\t}\r\n}\r\n\r\nexport default useCustomizeAlbum\r\n","import React from \"react\";\r\nimport { ColorExtractor } from \"react-color-extractor\";\r\nimport { FiXCircle } from \"react-icons/fi\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { PersonTiny } from \"../../../../entities/user/ui/organisms/person-tiny\";\r\nimport { SongList } from \"../../../../features/song/ui/templates/song-list\";\r\nimport DownloadButton from \"../../../../shared/ui/atoms/download-button\";\r\nimport Input from \"../../../../shared/ui/atoms/input\";\r\nimport { RadioBtn } from \"../../../../shared/ui/atoms/radio-button\";\r\nimport SubmitButton from \"../../../../shared/ui/atoms/submit-button\";\r\nimport SearchBar from \"../../../../shared/ui/organisms/search-bar\";\r\nimport { LoadingCircle } from \"../../../loading/ui/atoms/loading-circle\";\r\nimport useCustomizeAlbum from \"../../lib/hooks/use-customize-album\";\r\n\r\nexport const CustomizeAlbum = ({ playlist }) => {\r\n  const { currentUser } = useAuth();\r\n  const {\r\n    imageLocalPath,\r\n    setImageColors,\r\n    playlistName,\r\n    setPlaylistName,\r\n    authorsInputValue,\r\n    setAuthorsInputValue,\r\n    setAllAuthors,\r\n    chosenAuthors,\r\n    removeAuthorFromList,\r\n    loadingAuthors,\r\n    allAuthors,\r\n    addAuthor,\r\n    songsSearch,\r\n    setSongsSearch,\r\n    setAllSongs,\r\n    loadingSongs,\r\n    allSongs,\r\n    chosenSongs,\r\n    setChosenSongs,\r\n    setPlaylistStatus,\r\n    playlistStatus,\r\n    isPlaylistPrivate,\r\n    setIsPlaylistPrivate,\r\n    setPlaylistCover,\r\n    releaseDate,\r\n    setReleaseDate,\r\n    setImageLocalPath,\r\n    addPlaylistToFirebase,\r\n    loading,\r\n    completed,\r\n    setCompleted,\r\n    error,\r\n    setError,\r\n  } = useCustomizeAlbum(playlist);\r\n\r\n  return (\r\n    <div className=\"AddSong\">\r\n      <ColorExtractor\r\n        src={imageLocalPath}\r\n        getColors={(colors) => setImageColors(colors)}\r\n      />\r\n      <Input\r\n        title={\"Playlist name\"}\r\n        value={playlistName}\r\n        setValue={setPlaylistName}\r\n        placeholder=\"Enter playlist name\"\r\n      />\r\n      <div>\r\n        <h3>Playlist authors</h3>\r\n        <SearchBar\r\n          value={authorsInputValue}\r\n          setValue={setAuthorsInputValue}\r\n          setResultAuthorList={setAllAuthors}\r\n          defaultSearchMode={\"users\"}\r\n          inputText={\"Search for authors\"}\r\n        />\r\n        <div className=\"chosenAuthorsList\">\r\n          {chosenAuthors.map((author) => {\r\n            return (\r\n              <div className=\"chosenAuthorItem\">\r\n                <span>{author.displayName}</span>\r\n                <FiXCircle\r\n                  onClick={() =>\r\n                    author.uid === currentUser.uid\r\n                      ? null\r\n                      : removeAuthorFromList(author)\r\n                  }\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"authorsResult\">\r\n          {loadingAuthors ? (\r\n            <div\r\n              style={{ position: \"relative\", width: \"100%\", height: \"50px\" }}\r\n            >\r\n              <LoadingCircle />\r\n            </div>\r\n          ) : (\r\n            allAuthors.map((data, index) => {\r\n              return (\r\n                <PersonTiny\r\n                  data={data}\r\n                  onClick={() => addAuthor(data)}\r\n                  style={\r\n                    chosenAuthors.includes(data.uid)\r\n                      ? { background: \"var(--green)\" }\r\n                      : {}\r\n                  }\r\n                  key={index}\r\n                />\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <label>\r\n        <h3>Search for songs</h3>\r\n        <SearchBar\r\n          value={songsSearch}\r\n          setValue={setSongsSearch}\r\n          setAllFoundSongs={setAllSongs}\r\n          defaultSearchMode={\"songs\"}\r\n          inputText={\"Search for songs\"}\r\n        />\r\n        <div className=\"authorsResult\">\r\n          {loadingSongs ? (\r\n            <div\r\n              style={{ position: \"relative\", width: \"100%\", height: \"50px\" }}\r\n            >\r\n              <LoadingCircle />\r\n            </div>\r\n          ) : (\r\n            <SongList\r\n              listOfSongs={allSongs}\r\n              source={\"no\"}\r\n              listOfChosenSongs={chosenSongs}\r\n              setListOfSongs={setChosenSongs}\r\n            />\r\n          )}\r\n        </div>\r\n      </label>\r\n\r\n      {currentUser.isAdmin || currentUser.isAuthor ? (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-start\",\r\n            margin: \"15px 0\",\r\n          }}\r\n        >\r\n          <RadioBtn\r\n            label=\"Playlist\"\r\n            onClick={() => setPlaylistStatus(0)}\r\n            currentActive={playlistStatus}\r\n            id={0}\r\n          />\r\n          <RadioBtn\r\n            label=\"Album\"\r\n            onClick={() => setPlaylistStatus(1)}\r\n            currentActive={playlistStatus}\r\n            id={1}\r\n          />\r\n        </div>\r\n      ) : null}\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"flex-start\",\r\n          margin: \"15px 0\",\r\n        }}\r\n      >\r\n        <RadioBtn\r\n          label=\"Not Private\"\r\n          onClick={() => setIsPlaylistPrivate(0)}\r\n          currentActive={isPlaylistPrivate}\r\n          id={0}\r\n        />\r\n        <RadioBtn\r\n          label=\"Private\"\r\n          onClick={() => setIsPlaylistPrivate(1)}\r\n          currentActive={isPlaylistPrivate}\r\n          id={1}\r\n        />\r\n      </div>\r\n\r\n      {(currentUser.isAdmin || currentUser.isAuthor) && (\r\n        <Input\r\n          title={\"Release Date\"}\r\n          type={\"date\"}\r\n          value={releaseDate}\r\n          setValue={setReleaseDate}\r\n          placeholder={\"Enter release date\"}\r\n        />\r\n      )}\r\n\r\n      <DownloadButton\r\n        text=\"Download playlist cover\"\r\n        place={\"songsImages/\"}\r\n        setItemSrc={setPlaylistCover}\r\n        setImageLocalPath={setImageLocalPath}\r\n      />\r\n\r\n      <SubmitButton\r\n        text={\"Update playlist\"}\r\n        action={addPlaylistToFirebase}\r\n        isLoading={loading}\r\n        completed={completed}\r\n        setCompleted={setCompleted}\r\n        bottomMessage={\"Playlist was updated\"}\r\n        errorMessage={error}\r\n        setErrorMessage={setError}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { firestore } from \"../../../firebase\"\r\n\r\nexport const addAuthorToLibrary = async (authorData, currentUser) => {\r\n\tconst addedAuthors = (await firestore.collection('users').doc(currentUser.uid).get()).data().addedAuthors\r\n\taddedAuthors.push(authorData.uid)\r\n\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\taddedAuthors: addedAuthors\r\n\t})\r\n\tlet subscribers = authorData.subscribers\r\n\tsubscribers++\r\n\tfirestore.collection('users').doc(authorData.uid).update({\r\n\t\tsubscribers: subscribers\r\n\t})\r\n}","import { firestore } from \"../../../firebase\"\r\n\r\nexport default function addFriend(friendData, currentUser) {\r\n\tconst updatedDataForFriend = friendData.friends\r\n\tconst updatedDataForCurrentUser = currentUser.friends\r\n\tupdatedDataForFriend.push({ status: 'requested', uid: currentUser.uid })\r\n\tupdatedDataForCurrentUser.push({ status: 'awaiting', uid: friendData.uid })\r\n\r\n\tfirestore.collection('users').doc(friendData.uid).update({\r\n\t\tfriends: updatedDataForFriend\r\n\t})\r\n\r\n\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\tfriends: updatedDataForCurrentUser\r\n\t})\r\n\r\n}","import { firestore } from \"../../../firebase\";\r\nimport filterArrayWithArray from \"../../../shared/lib/filter-array-with-array\";\r\n\r\nconst deleteAuthorFromLibrary = async (authorData, currentUser, yourSongs) => {\r\n\t/** \r\n\t\t–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç –≤—Å–µ –ø–µ—Å–Ω–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª—è—Ç—å, —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É—è—Å—å –¥–≤—É–º—è —Å–æ–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏\r\n\t\t1. –ü–µ—Å–Ω–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å, —Å–æ–¥–µ—Ä–∂–∞—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞–≤—Ç–æ—Ä–∞ –Ω—É–∂–Ω–æ–≥–æ –Ω–∞–º\r\n\t\t2. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–≤—Ç–æ—Ä–æ–≤ —É —ç—Ç–∏—Ö –ø–µ—Å–µ–Ω, –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö —é–∑–µ—Ä –ø–æ–¥–ø–∏—Å–∞–Ω, –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –¥–≤—É—Ö, —Ç–æ –µ—Å—Ç—å\r\n\t\t—á—Ç–æ–±—ã –Ω–µ–ª—å–∑—è –±—ã–ª–æ —É–¥–∞–ª–∏—Ç—å —Ç—Ä–µ–∫–∏, –∞–≤—Ç–æ—Ä—ã –∫–æ—Ç–æ—Ä—ã—Ö –≤—Å–µ –µ—â–µ –µ—Å—Ç—å –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ\r\n\t*/\r\n\tconst songsNotToDelete = yourSongs.filter((song) => {\r\n\t\treturn !song.authors.find((author) => author.uid === authorData.uid)\r\n\t\t\t|| currentUser.addedAuthors.length - filterArrayWithArray(currentUser.addedAuthors, song.authors.map((author) => author.uid)).length > 1\r\n\t})\r\n\r\n\tconst filteredAuthors = currentUser.addedAuthors.filter((authorId) => authorId !== authorData.uid)\r\n\tconst subscribersCount = (await firestore.collection('users').doc(authorData.uid).get()).data().subscribers\r\n\r\n\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\taddedSongs: songsNotToDelete.map((song) => song.id),\r\n\t\taddedAuthors: filteredAuthors\r\n\t})\r\n\r\n\tfirestore.collection('users').doc(authorData.uid).update({\r\n\t\tsubscribers: subscribersCount - 1\r\n\t})\r\n\r\n}\r\n\r\nexport default deleteAuthorFromLibrary","import React, { useEffect, useState } from \"react\";\r\nimport { FiHeadphones, FiUserPlus } from \"react-icons/fi\";\r\nimport { ImCheckmark } from \"react-icons/im\";\r\nimport { PersonTinyVerticalItem } from \"../atoms/person-tiny-vertical-item\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport displayDate from \"../../../../shared/lib/display-date\";\r\nimport { SeeMoreRoundButton } from \"../../../../shared/ui/atoms/see-more-round-button\";\r\nimport { LoadingCircle } from \"../../../loading/ui/atoms/loading-circle\";\r\nimport { FriendsToShareWith } from \"../../../share/ui/organisms/friends-to-share-with\";\r\nimport { TinyPersonsList } from \"../templates/tiny-persons-list\";\r\n\r\nexport const AuthorInfo = ({ author }) => {\r\n  const { setContent } = useModal();\r\n  const { yourFriends } = useSong();\r\n  const [friendsThatHaveThisSong, setFriendsThatHaveThisAuthor] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  async function findFriendsThatHaveThisAuthor() {\r\n    setLoading(true);\r\n    setFriendsThatHaveThisAuthor([]);\r\n    yourFriends.forEach((friend) => {\r\n      if (author.isAuthor) {\r\n        if (friend.addedAuthors.includes(author.uid))\r\n          setFriendsThatHaveThisAuthor((prev) => [...prev, friend]);\r\n      } else {\r\n        if (friend.friends.find((person) => person.uid === author.uid))\r\n          setFriendsThatHaveThisAuthor((prev) => [...prev, friend]);\r\n      }\r\n    });\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    findFriendsThatHaveThisAuthor();\r\n  }, [author.uid]);\r\n\r\n  return (\r\n    <div className=\"SongInfo\">\r\n      <div\r\n        className=\"songImage\"\r\n        style={{ backgroundImage: `url(${author.photoURL})` }}\r\n      ></div>\r\n      <div className=\"songInfoContent\">\r\n        <div style={{ display: \"flex\", flexDirection: \"column-reverse\" }}>\r\n          <h3 style={{ color: author.imageColors[1] }}>\r\n            {author.displayName}\r\n            {author.isVerified ? (\r\n              <ImCheckmark\r\n                style={{\r\n                  color: author.imageColors[0],\r\n                  width: \"15px\",\r\n                  height: \"15px\",\r\n                  marginLeft: \"5px\",\r\n                }}\r\n              />\r\n            ) : null}\r\n          </h3>\r\n          <span style={{ opacity: \".5\", fontWeight: 500, fontSize: \".7em\" }}>\r\n            {author.isAuthor ? \"Author\" : \"User\"}\r\n          </span>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            opacity: \"0.6\",\r\n            fontSize: \".9em\",\r\n            position: \"relative\",\r\n          }}\r\n          className=\"listensAndDate\"\r\n        >\r\n          <p\r\n            className=\"infoListens\"\r\n            style={{ marginRight: \"20px\", position: \"relative\" }}\r\n          >\r\n            {author.numberOfListenersPerMonth}\r\n            <FiHeadphones />\r\n          </p>\r\n          <p\r\n            className=\"infoListens\"\r\n            style={{ marginRight: \"20px\", position: \"relative\" }}\r\n          >\r\n            {author.subscribers} <FiUserPlus />\r\n          </p>\r\n          <span>{displayDate(author.regDate)}</span>\r\n        </div>\r\n        <h4 style={{ margin: \"10px 0\" }}>\r\n          {friendsThatHaveThisSong.length > 0\r\n            ? \"Friends subscribed\"\r\n            : \"None of your friends subscribed\"}\r\n        </h4>\r\n        {!loading ? (\r\n          <div style={{ display: \"flex\" }}>\r\n            {friendsThatHaveThisSong.length > 0 ? (\r\n              <>\r\n                {friendsThatHaveThisSong.map((person, index) => {\r\n                  if (index < 2)\r\n                    return (\r\n                      <PersonTinyVerticalItem\r\n                        person={person}\r\n                        key={person.uid}\r\n                      />\r\n                    );\r\n                })}\r\n                {friendsThatHaveThisSong.length > 2 ? (\r\n                  <SeeMoreRoundButton\r\n                    onClick={() =>\r\n                      setContent(\r\n                        <TinyPersonsList\r\n                          listOfPeople={friendsThatHaveThisSong}\r\n                          title={`Friends subscribed to ${author.displayName}`}\r\n                        />\r\n                      )\r\n                    }\r\n                  />\r\n                ) : null}\r\n              </>\r\n            ) : (\r\n              <button\r\n                className=\"shareBtn\"\r\n                style={{ minHeight: \"35px\", background: author.imageColors[0] }}\r\n                onClick={() => {\r\n                  setContent(\r\n                    <FriendsToShareWith item={author} whatToShare={\"author\"} />\r\n                  );\r\n                }}\r\n              >\r\n                Share\r\n              </button>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div style={{ position: \"relative\", height: \"50px\" }}>\r\n            <LoadingCircle top={\"50%\"} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { FiFlag, FiInfo, FiShare } from \"react-icons/fi\";\r\nimport { FriendsToShareWith } from \"../../../share/ui/organisms/friends-to-share-with\";\r\nimport { AlbumInfo } from \"../../../album/ui/organisms/album-info\";\r\nimport { AuthorInfo } from \"../organisms/author-info\";\r\nexport const AuthorMoreWindow = ({ data }) => {\r\n  const { setContent } = useModal();\r\n  return (\r\n    <div\r\n      className=\"AuthorMoreWindow\"\r\n      style={{ top: \"110%\", bottom: \"auto\" }}\r\n      onClick={(e) => e.stopPropagation()}\r\n    >\r\n      <div\r\n        className=\"songItemMenuWindowItem\"\r\n        onClick={() => {\r\n          setContent(\r\n            <FriendsToShareWith\r\n              item={data}\r\n              whatToShare={data.authors !== undefined ? \"playlist\" : \"author\"}\r\n            />\r\n          );\r\n        }}\r\n      >\r\n        <FiShare />\r\n        Share\r\n      </div>\r\n      <div\r\n        className=\"songItemMenuWindowItem\"\r\n        onClick={() => {\r\n          setContent(\r\n            data.authors !== undefined ? (\r\n              <AlbumInfo album={data} />\r\n            ) : (\r\n              <AuthorInfo author={data} />\r\n            )\r\n          );\r\n        }}\r\n      >\r\n        <FiInfo />\r\n        Info\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { ColorExtractor } from \"react-color-extractor\";\r\nimport { MdModeEdit } from \"react-icons/md\";\r\nimport { firestore, storage } from \"../../../../firebase\";\r\nexport const CustomizeAuthor = ({ author }) => {\r\n  const [authorName, setPlaylistName] = useState(author.displayName);\r\n  const [authorCover, setAuthorCover] = useState(author.photoURL);\r\n  const [imageLocalPath, setImageLocalPath] = useState(\"\");\r\n  const [imageColors, setImageColors] = useState(author.imageColors);\r\n\r\n  async function onFileChange(e, place, setFunc) {\r\n    const file = e.target.files[0];\r\n    setImageLocalPath(URL.createObjectURL(file));\r\n    const storageRef = storage.ref();\r\n    const fileRef = storageRef.child(place + file.name);\r\n    await fileRef.put(file);\r\n    setFunc(await fileRef.getDownloadURL());\r\n  }\r\n\r\n  function updateAuthorInFirebase(e) {\r\n    e.preventDefault();\r\n    firestore.collection(\"users\").doc(author.uid).update({\r\n      displayName: authorName,\r\n      photoURL: authorCover,\r\n      imageColors: imageColors,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"AddSong\">\r\n      <ColorExtractor\r\n        src={imageLocalPath}\r\n        getColors={(colors) => setImageColors(colors)}\r\n      />\r\n      <form onSubmit={(e) => e.preventDefault()}>\r\n        <div\r\n          style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}\r\n        >\r\n          <div\r\n            className=\"chatInfoImage\"\r\n            style={{ backgroundImage: `url(${authorCover})` }}\r\n          >\r\n            <label className=\"changePhoto\">\r\n              <MdModeEdit />\r\n              Change photo\r\n              <input\r\n                type=\"file\"\r\n                style={{ display: \"none\" }}\r\n                onChange={(e) => onFileChange(e, \"chatCovers/\", setAuthorCover)}\r\n              />\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <label>\r\n          <h3>Your name</h3>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter your name\"\r\n            value={authorName}\r\n            onChange={(e) => setPlaylistName(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <button\r\n          type=\"button\"\r\n          className=\"addSongBtn\"\r\n          onClick={updateAuthorInFirebase}\r\n        >\r\n          Update author\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useRef, useState } from \"react\";\r\nimport { BiDoorOpen, BiLoaderAlt } from \"react-icons/bi\";\r\nimport { CgCheckO } from \"react-icons/cg\";\r\nimport {\r\n  FiEdit2,\r\n  FiInfo,\r\n  FiMoreVertical,\r\n  FiPlusCircle,\r\n  FiSettings,\r\n  FiShare,\r\n  FiTrash,\r\n  FiUserCheck,\r\n  FiUserPlus,\r\n} from \"react-icons/fi\";\r\nimport { IoMdExit } from \"react-icons/io\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { useScreen } from \"../../../../contexts/screen\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { addPlaylistToLibrary } from \"../../../../entities/playlist/lib/add-playlist-to-library\";\r\nimport { deletePlaylist } from \"../../../../entities/playlist/lib/delete-playlist\";\r\nimport { quitPlaylist } from \"../../../../entities/playlist/lib/quit-playlist\";\r\nimport { removePlaylistFromLibrary } from \"../../../../entities/playlist/lib/remove-playlist-from-library\";\r\nimport useOutsideClick from \"../../../../shared/lib/hooks/use-outside-click\";\r\nimport { GoBackBtn } from \"../../../../shared/ui/atoms/go-back-button\";\r\nimport { Hint } from \"../../../../shared/ui/atoms/hint\";\r\nimport { AlbumInfo } from \"../../../album/ui/organisms/album-info\";\r\nimport { CustomizeAlbum } from \"../../../album/ui/organisms/customize-album\";\r\nimport { addAuthorToLibrary } from \"../../../author/lib/add-author-to-library\";\r\nimport addFriend from \"../../../author/lib/add-friend\";\r\nimport deleteAuthorFromLibrary from \"../../../author/lib/delete-author-from-library\";\r\nimport { deleteFriend } from \"../../../author/lib/delete-friend\";\r\nimport { AuthorMoreWindow } from \"../../../author/ui/molecules/author-more-window\";\r\nimport { AuthorInfo } from \"../../../author/ui/organisms/author-info\";\r\nimport { CustomizeAuthor } from \"../../../author/ui/organisms/customize-author\";\r\nimport { FriendsToShareWith } from \"../../../share/ui/organisms/friends-to-share-with\";\r\n\r\nconst TopButtons = ({ data, headerColors }) => {\r\n  const { currentUser, logout } = useAuth();\r\n  const { isMobile } = useScreen();\r\n  const { yourSongs } = useSong();\r\n  const [openMoreWindow, setOpenMoreWindow] = useState(false);\r\n  const {\r\n    toggleModal,\r\n    setContent,\r\n    openConfirm,\r\n    closeConfirm,\r\n    openBottomMessage,\r\n  } = useModal();\r\n  const moreWindowRef = useRef(null);\r\n  useOutsideClick(moreWindowRef, setOpenMoreWindow);\r\n  function whatButtonToRender() {\r\n    if (data.authors) {\r\n      if (\r\n        currentUser.ownPlaylists.includes(data.id) &&\r\n        data.authors.length === 1\r\n      )\r\n        return (\r\n          <button\r\n            onClick={() =>\r\n              openConfirm(\r\n                \"Are you sure you want to DELETE this playlist forever?!\",\r\n                \"Yes, pretty sure\",\r\n                \"No, I Don't!\",\r\n                () => {\r\n                  deletePlaylist(data.id);\r\n                  closeConfirm();\r\n                  openBottomMessage(`Playlist ${data.name} was deleted`);\r\n                }\r\n              )\r\n            }\r\n          >\r\n            <Hint text={\"delete playlist\"} direction={\"bottom\"} />\r\n            <FiTrash />\r\n          </button>\r\n        );\r\n      else if (currentUser.ownPlaylists.includes(data.id))\r\n        return (\r\n          <button\r\n            onClick={() =>\r\n              openConfirm(\r\n                \"Are you sure you want to quit this playlist?\",\r\n                \"Yes, pretty sure\",\r\n                \"No, I Don't!\",\r\n                () => {\r\n                  quitPlaylist(data, currentUser);\r\n                  closeConfirm();\r\n                  openBottomMessage(`You left ${data.name}`);\r\n                }\r\n              )\r\n            }\r\n          >\r\n            <Hint text={\"quit playlist\"} direction={\"bottom\"} />\r\n            <BiDoorOpen />\r\n          </button>\r\n        );\r\n      else if (currentUser.addedPlaylists.includes(data.id))\r\n        return (\r\n          <button\r\n            onClick={() =>\r\n              openConfirm(\r\n                \"Are you sure you want to remove this playlist from library?\",\r\n                \"Yes, pretty sure\",\r\n                \"No-no-no, go away\",\r\n                () => {\r\n                  removePlaylistFromLibrary(data, currentUser);\r\n                  closeConfirm();\r\n                  openBottomMessage(\"Playlist was removed from library\");\r\n                }\r\n              )\r\n            }\r\n          >\r\n            <Hint text={\"remove playlist from library\"} direction={\"bottom\"} />\r\n            <CgCheckO />\r\n          </button>\r\n        );\r\n      else\r\n        return (\r\n          <button\r\n            onClick={() => {\r\n              addPlaylistToLibrary(data, currentUser);\r\n              openBottomMessage(`Playlist ${data.name} was added to library`);\r\n            }}\r\n          >\r\n            <Hint text={\"add playlist\"} direction={\"bottom\"} />\r\n            <FiPlusCircle />\r\n          </button>\r\n        );\r\n    } else {\r\n      if (currentUser.addedAuthors.includes(data.uid))\r\n        return (\r\n          <button\r\n            onClick={() => {\r\n              openConfirm(\r\n                \"If you unsubscribe from this author, all his tracks will be removed from your library. Are you sure you want to do this?\",\r\n                \"Yes\",\r\n                \"No\",\r\n                () => {\r\n                  deleteAuthorFromLibrary(data, currentUser, yourSongs);\r\n                  openBottomMessage(\r\n                    `You unsubscribed from ${data.displayName}`\r\n                  );\r\n                  closeConfirm();\r\n                }\r\n              );\r\n            }}\r\n          >\r\n            <Hint text={\"delete author from library\"} direction={\"bottom\"} />\r\n            <CgCheckO />\r\n          </button>\r\n        );\r\n      else if (currentUser.uid === data.uid)\r\n        return (\r\n          <Link to={\"/settings\"}>\r\n            <button>\r\n              <Hint text={\"settings\"} direction={\"bottom\"} />\r\n              <FiSettings />\r\n            </button>\r\n          </Link>\r\n        );\r\n      else if (\r\n        !data.isAuthor &&\r\n        currentUser.friends.find(\r\n          (friend) => friend.uid === data.uid && friend.status === \"added\"\r\n        )\r\n      )\r\n        return (\r\n          <button\r\n            onClick={() =>\r\n              openConfirm(\r\n                `Are you sure you want to unfriend ${data.displayName}?`,\r\n                \"Yes, pretty sure\",\r\n                \"No-no-no, go away\",\r\n                () => {\r\n                  deleteFriend(currentUser, data);\r\n                  closeConfirm();\r\n                  openBottomMessage(`${data.displayName} was unfriended`);\r\n                }\r\n              )\r\n            }\r\n          >\r\n            <Hint text={\"remove from friend list\"} direction={\"bottom\"} />\r\n            <FiUserCheck />\r\n          </button>\r\n        );\r\n      else if (\r\n        !data.isAuthor &&\r\n        currentUser.friends.find(\r\n          (friend) => friend.uid === data.uid && friend.status === \"awaiting\"\r\n        )\r\n      )\r\n        //–ó–∞—á–µ–º –∑–¥–µ—Å—å —ç—Ç–æ—Ç onClick?\r\n        return (\r\n          <button onClick={addFriend}>\r\n            <Hint text={\"waiting for response\"} direction={\"bottom\"} />\r\n            <BiLoaderAlt style={{ animation: \"loading 1s infinite linear\" }} />\r\n          </button>\r\n        );\r\n      else if (!data.isAuthor)\r\n        return (\r\n          <button\r\n            onClick={() => {\r\n              addFriend(data, currentUser);\r\n              openBottomMessage(\r\n                `Friend request was sent to ${data.displayName}`\r\n              );\r\n            }}\r\n          >\r\n            <Hint text={\"add friend\"} direction={\"bottom\"} />\r\n            <FiUserPlus />\r\n          </button>\r\n        );\r\n      else\r\n        return (\r\n          <button\r\n            onClick={() => {\r\n              addAuthorToLibrary(data, currentUser);\r\n              openBottomMessage(\r\n                `${data.displayName} was added to your library`\r\n              );\r\n            }}\r\n          >\r\n            <Hint text={\"subscribe\"} direction={\"bottom\"} />\r\n            <FiPlusCircle />\r\n          </button>\r\n        );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"headerBtns\" style={{ background: headerColors[2] }}>\r\n      <GoBackBtn />\r\n      <div style={{ display: \"flex\" }}>\r\n        <div className=\"headerBackBtn\">{whatButtonToRender()}</div>\r\n        <div className=\"headerMoreBtn\" ref={moreWindowRef}>\r\n          <button\r\n            onClick={\r\n              !isMobile\r\n                ? () => setOpenMoreWindow(!openMoreWindow)\r\n                : () => {\r\n                    toggleModal();\r\n                    setContent(<AuthorMoreWindow data={data} />);\r\n                  }\r\n            }\r\n          >\r\n            <Hint text={\"more\"} direction={\"bottom\"} />\r\n            <FiMoreVertical />\r\n          </button>\r\n          {openMoreWindow ? (\r\n            <div\r\n              className=\"songItemMenuWindow\"\r\n              style={{ top: \"110%\", bottom: \"auto\" }}\r\n              onClick={(e) => e.stopPropagation()}\r\n            >\r\n              {(data.authors &&\r\n                data.authors.find(\r\n                  (person) => person.uid === currentUser.uid\r\n                )) ||\r\n              (data.authors && currentUser.isAdmin) ? (\r\n                <div\r\n                  className=\"songItemMenuWindowItem\"\r\n                  onClick={() => {\r\n                    toggleModal();\r\n                    setContent(<CustomizeAlbum playlist={data} />);\r\n                  }}\r\n                >\r\n                  <FiEdit2 />\r\n                  Edit\r\n                </div>\r\n              ) : data.uid === currentUser.uid && !data.isAuthor ? (\r\n                <div\r\n                  className=\"songItemMenuWindowItem\"\r\n                  onClick={() => {\r\n                    toggleModal();\r\n                    setContent(<CustomizeAuthor author={data} />);\r\n                  }}\r\n                >\r\n                  <FiEdit2 />\r\n                  Edit\r\n                </div>\r\n              ) : null}\r\n              <div\r\n                className=\"songItemMenuWindowItem\"\r\n                onClick={() => {\r\n                  toggleModal();\r\n                  setContent(\r\n                    <FriendsToShareWith\r\n                      item={data}\r\n                      whatToShare={\r\n                        data.authors !== undefined ? \"playlist\" : \"author\"\r\n                      }\r\n                    />\r\n                  );\r\n                }}\r\n              >\r\n                <FiShare />\r\n                Share\r\n              </div>\r\n              <div\r\n                className=\"songItemMenuWindowItem\"\r\n                onClick={() => {\r\n                  toggleModal();\r\n                  setContent(\r\n                    data.authors !== undefined ? (\r\n                      <AlbumInfo album={data} />\r\n                    ) : (\r\n                      <AuthorInfo author={data} />\r\n                    )\r\n                  );\r\n                }}\r\n              >\r\n                <FiInfo />\r\n                Info\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      {currentUser.uid === data.uid ? (\r\n        <button\r\n          onClick={() =>\r\n            openConfirm(\r\n              \"Are you sure you want to quit?\",\r\n              \"Yes, pretty sure\",\r\n              \"No, I Don't!\",\r\n              () => {\r\n                logout();\r\n                closeConfirm();\r\n              }\r\n            )\r\n          }\r\n        >\r\n          <Hint text={\"quit\"} direction={\"bottom\"} />\r\n          <IoMdExit />\r\n        </button>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopButtons;\r\n","import { firestore } from \"../../../firebase\"\r\n\r\nexport const deletePlaylist = (playlistId) => {\r\n\tfirestore.collection(\"users\").where(\"addedPlaylists\", \"array-contains\", playlistId).get().then((listOfPeople) => {\r\n\t\tlistOfPeople.docs.forEach(person => {\r\n\t\t\tconst personFilteredPlaylists = person.data().addedPlaylists.filter(pId => pId !== playlistId)\r\n\t\t\tfirestore.collection('users').doc(person.data().uid).update({\r\n\t\t\t\taddedPlaylists: personFilteredPlaylists\r\n\t\t\t})\r\n\t\t})\r\n\t})\r\n\tfirestore.collection(\"users\").where(\"ownPlaylists\", \"array-contains\", playlistId).get().then((listOfPeople) => {\r\n\t\tlistOfPeople.docs.forEach(person => {\r\n\t\t\tconst personFilteredPlaylists = person.data().addedPlaylists.filter(pId => pId !== playlistId)\r\n\t\t\tfirestore.collection('users').doc(person.data().uid).update({\r\n\t\t\t\townPlaylists: personFilteredPlaylists\r\n\t\t\t})\r\n\t\t})\r\n\t})\r\n\tfirestore.collection('search').doc(playlistId).delete().then(() => {\r\n\t\tfirestore.collection('playlists').doc(playlistId).delete()\r\n\t})\r\n}","import { firestore } from \"../../../firebase\"\r\n\r\nexport const quitPlaylist = (playlist, currentUser) => {\r\n\t//logic for quiting playlist where it has more than one participant\r\n\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\townPlaylists: currentUser.ownPlaylists.filter(id => id !== playlist.id)\r\n\t})\r\n\tfirestore.collection('playlists').doc(playlist.id).update({\r\n\t\tauthors: playlist.authors.filter(author => author.uid !== currentUser.uid)\r\n\t})\r\n}","import { firestore } from \"../../../firebase\"\r\n\r\nexport const deleteFriend = (currentUser, data) => {\r\n\tlet filteredUserFriends = currentUser.friends.filter(friend => friend.uid !== data.uid)\r\n\tlet filteredOtherUserFriends = data.friends.filter(friend => friend.uid !== currentUser.uid)\r\n\r\n\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\tfriends: filteredUserFriends\r\n\t})\r\n\r\n\tfirestore.collection('users').doc(data.uid).update({\r\n\t\tfriends: filteredOtherUserFriends\r\n\t})\r\n}","import React from \"react\";\r\nimport { BiAlbum } from \"react-icons/bi\";\r\nimport { CgLock } from \"react-icons/cg\";\r\nimport { FiHeadphones, FiUserPlus } from \"react-icons/fi\";\r\nimport { ImCheckmark } from \"react-icons/im\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\nimport { useSong } from \"../../contexts/song\";\r\nimport { useAlbumAuthors } from \"../../entities/playlist/lib/hooks/use-album-authors\";\r\nimport bigNumberFormat from \"../../shared/lib/big-number-format\";\r\nimport displayDate from \"../../shared/lib/display-date\";\r\nimport { Hint } from \"../../shared/ui/atoms/hint\";\r\nimport { LastSeen } from \"../../shared/ui/atoms/last-seen\";\r\nimport { SmallImages } from \"../album/ui/atoms/small-images\";\r\nimport { ChatWithFriendButton } from \"../author/ui/molecules/chat-with-friend-button\";\r\nimport { LastSongListened } from \"../author/ui/molecules/last-song-listened\";\r\nimport TopButtons from \"./ui/molecules/top-buttons\";\r\n\r\nexport const Header = ({ data, headerColors }) => {\r\n  const { displayAuthors } = useSong();\r\n  const [albumAuthors, authorsImages] = useAlbumAuthors(data);\r\n  const { currentUser } = useAuth();\r\n  const isFriend = currentUser.friends.find(\r\n    (friend) => friend.uid === data.uid && friend.status === \"added\"\r\n  );\r\n\r\n  function displayCreationDateIfExists() {\r\n    return data.creationDate !== undefined ? (\r\n      <div className=\"headerListenersAndSubsItem\">\r\n        <Hint text={\"creation date\"} style={{ fontSize: \"0.8em\" }} />\r\n        <span>{displayDate(data.creationDate)}</span>\r\n      </div>\r\n    ) : null;\r\n  }\r\n\r\n  function isAlbumOrIsAuthor() {\r\n    return data.authors !== undefined ? (\r\n      data.isAlbum ? (\r\n        <h5>Album</h5>\r\n      ) : (\r\n        <h5>Playlist</h5>\r\n      )\r\n    ) : data.isAuthor ? (\r\n      <h5>Author</h5>\r\n    ) : (\r\n      <h5>\r\n        User{\" \"}\r\n        {data.authors === undefined && isFriend ? (\r\n          <LastSeen userUID={data.uid} />\r\n        ) : null}\r\n      </h5>\r\n    );\r\n  }\r\n\r\n  function showCreatorsIfExist() {\r\n    return data.authors !== undefined ? (\r\n      <div className=\"headerAuthorsImagesAndNames\">\r\n        <SmallImages imagesList={authorsImages} borderColor={headerColors[2]} />\r\n        <div className=\"headerAuthors\">\r\n          {displayAuthors(albumAuthors, \", \")}\r\n        </div>\r\n      </div>\r\n    ) : null;\r\n  }\r\n\r\n  function findIfIsVerified() {\r\n    return data.isVerified ? (\r\n      <ImCheckmark style={{ color: headerColors[0] }} />\r\n    ) : null;\r\n  }\r\n\r\n  function findIfIsPrivate() {\r\n    return data.isPrivate ? <CgLock /> : null;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"Header\"\r\n      style={\r\n        headerColors.length\r\n          ? {\r\n              background: `linear-gradient(45deg, ${headerColors[2]}, ${headerColors[0]})`,\r\n            }\r\n          : { background: \"var(--yellowAndPinkGrad)\" }\r\n      }\r\n    >\r\n      <TopButtons data={data} headerColors={headerColors} />\r\n      <div\r\n        className=\"headerAuthorsImage\"\r\n        style={\r\n          data.authors === undefined\r\n            ? {\r\n                animation: \"floatingBorderRadius 10s infinite ease-in-out\",\r\n                backgroundImage: `url(${data.photoURL})`,\r\n                position: \"relative\",\r\n              }\r\n            : {\r\n                backgroundImage: `url(${data.image})`,\r\n                position: \"relative\",\r\n                backgroundColor: \"var(--red)\",\r\n              }\r\n        }\r\n      >\r\n        {data.authors !== undefined && !data.image ? (\r\n          <BiAlbum\r\n            style={{\r\n              position: \"absolute\",\r\n              left: \"50%\",\r\n              top: \"50%\",\r\n              transform: \"translate(-50%, -50%)\",\r\n              width: \"60px\",\r\n              height: \"60px\",\r\n            }}\r\n          />\r\n        ) : null}\r\n      </div>\r\n      <div className=\"headerAuthorInfo\">\r\n        <div className=\"headerAuthorsName\">\r\n          {isAlbumOrIsAuthor()}\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              margin: \"2px 0 10px 0\",\r\n            }}\r\n          >\r\n            <>\r\n              <h1>{data.displayName || data.name}</h1>\r\n            </>\r\n            {findIfIsVerified()}\r\n            {findIfIsPrivate()}\r\n            {!!data.displayName && isFriend && (\r\n              <LastSongListened data={data} loading={false} />\r\n            )}\r\n          </div>\r\n        </div>\r\n        {showCreatorsIfExist()}\r\n\r\n        <div className=\"headerListenersAndSubs\">\r\n          <div className=\"headerListenersAndSubsItem\">\r\n            <Hint\r\n              text={\r\n                (data.listens ?? data.numberOfListenersPerMonth) + \" listens\"\r\n              }\r\n              style={{ fontSize: \"0.8em\" }}\r\n            />\r\n            <span>\r\n              {bigNumberFormat(data.listens ?? data.numberOfListenersPerMonth)}\r\n            </span>\r\n            <FiHeadphones />\r\n          </div>\r\n          <div className=\"headerListenersAndSubsItem\">\r\n            <Hint\r\n              text={data.subscribers + \" subscribers\"}\r\n              style={{ fontSize: \"0.8em\" }}\r\n            />\r\n            <span>{bigNumberFormat(data.subscribers)}</span>\r\n            <FiUserPlus />\r\n          </div>\r\n          {displayCreationDateIfExists()}\r\n        </div>\r\n        {isFriend ? (\r\n          <ChatWithFriendButton data={data} color={headerColors[3]} />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ContentContainer = ({ children, ...props }) => {\r\n  return (\r\n    <div className=\"content-container\" {...props}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useRouteMatch } from \"react-router\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { LoadingCircle } from \"../../features/loading/ui/atoms/loading-circle\";\r\nimport { SongList } from \"../../features/song/ui/templates/song-list\";\r\nimport { Header } from \"../../features/template-header/header\";\r\nimport { firestore } from \"../../firebase\";\r\nimport { fetchItemList } from \"../../shared/lib/fetch-item-list\";\r\nimport { ContentContainer } from \"../../shared/ui/atoms/content-container\";\r\n\r\nconst AlbumPage = () => {\r\n  const match = useRouteMatch(\"/albums/:albumId\");\r\n  const [playlistSongs, setPlaylistSongs] = useState([]);\r\n  const [headerColors, setHeaderColors] = useState([]);\r\n  const { albumId } = match.params;\r\n  const [albumData, setAlbumData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const history = useHistory();\r\n  async function fetchAlbumsData() {\r\n    firestore\r\n      .collection(\"playlists\")\r\n      .doc(albumId)\r\n      .onSnapshot((doc) => {\r\n        if (doc.exists) {\r\n          setAlbumData(doc.data());\r\n          setHeaderColors(doc.data().imageColors);\r\n        } else {\r\n          history.push(\"/not-found\");\r\n        }\r\n      });\r\n  }\r\n\r\n  function fetchSongsInAlbum() {\r\n    if (albumData.songs?.length)\r\n      fetchItemList(\r\n        albumData.songs,\r\n        \"songs\",\r\n        setPlaylistSongs,\r\n        (res) => res,\r\n        () => setLoading(false)\r\n      );\r\n    else setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchAlbumsData();\r\n  }, [albumId, firestore]);\r\n\r\n  useEffect(() => {\r\n    fetchSongsInAlbum();\r\n  }, [albumData]);\r\n\r\n  return (\r\n    <div className=\"AlbumPage\" style={{ animation: \"zoomIn .2s forwards\" }}>\r\n      {loading ? (\r\n        <LoadingCircle top={\"50%\"} />\r\n      ) : (\r\n        <>\r\n          <Header\r\n            data={albumData}\r\n            headerColors={headerColors}\r\n            setHeaderColors={setHeaderColors}\r\n          />\r\n          <ContentContainer\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              minHeight: \"100%\",\r\n              borderRadius: \"25px 25px 0 0\",\r\n              flex: \"1 1 auto\",\r\n              position: \"relative\",\r\n              overflow: \"hidden\",\r\n              boxShadow: \"0px 0px 100px #060606\",\r\n            }}\r\n          >\r\n            <div\r\n              className=\"content-background\"\r\n              style={{\r\n                background: `linear-gradient(360deg, black, ${headerColors[0]})`,\r\n              }}\r\n            ></div>\r\n            <SongList\r\n              listOfSongs={playlistSongs}\r\n              source={{\r\n                source: `/albums/${albumData.id}`,\r\n                name: albumData.name,\r\n                image: albumData.image,\r\n                songsList: playlistSongs,\r\n              }}\r\n              showSearch\r\n              defaultSearchMode={\"songs\"}\r\n              displayIfEmpty={\"No songs\"}\r\n            />\r\n          </ContentContainer>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlbumPage;\r\n","import React from 'react'\r\nimport { FiCheck, FiX } from 'react-icons/fi'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const FriendRequestItem = ({person, addFriend, rejectFriend}) => {\r\n\treturn (\r\n\t\t<div className = 'FriendRequestItem'>\r\n\t\t\t<Link to = {`/authors/${person.uid}`}>\r\n\t\t\t\t<div className = \"friendRequestImageAndName\">  \r\n\t\t\t\t\t<div className=\"requestImage\">\r\n\t\t\t\t\t\t<img loading = \"lazy\" src={person.photoURL} alt=\"\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h3>{person.displayName}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t\t<div className=\"requestButtons\">\r\n\t\t\t\t<button style = {{color:'var(--green)'}} onClick = {()=>addFriend(person.uid)}>\r\n\t\t\t\t\t<FiCheck/>\r\n\t\t\t\t\t<span>Add</span> \r\n\t\t\t\t</button>\r\n\t\t\t\t<button style = {{color:'var( --lightRed)'}} onClick = {()=>rejectFriend(person.uid)}>\r\n\t\t\t\t\t<FiX/>\r\n\t\t\t\t\t<span>Reject</span> \r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { firestore } from \"../../../../firebase\";\r\n\r\nconst useFriendRequest = () => {\r\n  const { currentUser } = useAuth();\r\n  const [friendRequests, setFriendRequests] = useState([]);\r\n  function fetchFriendRequests() {\r\n    const tempArray = [];\r\n    currentUser.friends.forEach(async (friendObj, i) => {\r\n      if (friendObj.status === \"requested\") {\r\n        const personData = (\r\n          await firestore.collection(\"users\").doc(friendObj.uid).get()\r\n        ).data();\r\n        tempArray.push(personData);\r\n        if (i === currentUser.friends.length - 1) setFriendRequests(tempArray);\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchFriendRequests();\r\n  }, [JSON.stringify(currentUser.friends)]);\r\n\r\n  function addFriend(uid) {\r\n    const friendsList = currentUser.friends;\r\n    const otherUserFriendList = friendRequests.find(\r\n      (person) => person.uid === uid\r\n    ).friends;\r\n    friendsList.find((obj) => obj.uid === uid).status = \"added\";\r\n    otherUserFriendList.find((obj) => obj.uid === currentUser.uid).status =\r\n      \"added\";\r\n\r\n    firestore.collection(\"users\").doc(currentUser.uid).update({\r\n      friends: friendsList,\r\n    });\r\n    firestore.collection(\"users\").doc(uid).update({\r\n      friends: otherUserFriendList,\r\n    });\r\n\r\n    setFriendRequests((arrOfReqs) => arrOfReqs.filter((el) => el.uid !== uid));\r\n  }\r\n\r\n  function rejectFriend(uid) {\r\n    const friendsList = currentUser.friends.filter((obj) => obj.uid !== uid);\r\n    firestore\r\n      .collection(\"users\")\r\n      .doc(uid)\r\n      .get()\r\n      .then((res) => {\r\n        const otherUserFriendList = res\r\n          .data()\r\n          .friends.filter((obj) => obj.uid !== currentUser.uid);\r\n        firestore.collection(\"users\").doc(currentUser.uid).update({\r\n          friends: friendsList,\r\n        });\r\n        firestore.collection(\"users\").doc(uid).update({\r\n          friends: otherUserFriendList,\r\n        });\r\n        setFriendRequests((arrOfReqs) =>\r\n          arrOfReqs.filter((el) => el.uid !== uid)\r\n        );\r\n      });\r\n  }\r\n\r\n  return [friendRequests, addFriend, rejectFriend];\r\n};\r\n\r\nexport default useFriendRequest;\r\n","import React from \"react\";\r\nimport { FriendRequestItem } from \"../atoms/friend-request-item\";\r\nimport useFriendRequest from \"../../lib/hooks/use-friend-request\";\r\n\r\nexport const FriendRequest = () => {\r\n  const [friendRequests, addFriend, rejectFriend] = useFriendRequest();\r\n\r\n  return (\r\n    <>\r\n      {friendRequests.map((person, index) => {\r\n        return (\r\n          <FriendRequestItem\r\n            person={person}\r\n            key={index}\r\n            addFriend={addFriend}\r\n            rejectFriend={rejectFriend}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n","export default function findIfSongIsNew(song){\r\n\tconst songReleaseDate = new Date(song.releaseDate)\r\n\t//1 814 400 000 - 3 weeks\r\n\tif((new Date().getTime() - songReleaseDate.getTime()) < 1814400000) return true\r\n\r\n\treturn false\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { SongList } from \"../../../../features/song/ui/templates/song-list\";\r\nimport findIfSongIsNew from \"../../../../entities/song/lib/find-if-song-is-new\";\r\n\r\nimport { fetchItemList } from \"../../../../shared/lib/fetch-item-list\";\r\n\r\nexport const TopSongs = ({ authorId, authorsData, headerColors }) => {\r\n  const [popularSongs, setPopularSongs] = useState([]);\r\n  const [newSongs, setNewSongs] = useState([]);\r\n\r\n  async function findAuthorsSongs() {\r\n    if (authorsData.isAuthor) {\r\n      fetchItemList(authorsData.ownSongs, \"songs\", setPopularSongs, (res) => {\r\n        res.forEach((songData) => {\r\n          if (findIfSongIsNew(songData) && !newSongs.includes(songData))\r\n            setNewSongs((prevSongs) => [...prevSongs, songData]);\r\n        });\r\n        return res.sort((a, b) => b.listens - a.listens);\r\n      });\r\n    } else {\r\n      fetchItemList(\r\n        authorsData.addedSongs.slice(0).reverse(),\r\n        \"songs\",\r\n        setPopularSongs\r\n      );\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    findAuthorsSongs();\r\n    setNewSongs([]);\r\n  }, [authorsData.ownSongs]);\r\n\r\n  return authorsData.isAuthor ? (\r\n    <div className=\"TopSongs\">\r\n      <SongList\r\n        listOfSongs={newSongs}\r\n        source={{\r\n          source: `/authors/${authorsData.uid}`,\r\n          name: authorsData.displayName,\r\n          image: authorsData.photoURL,\r\n          songsList: newSongs,\r\n        }}\r\n        isNewSong\r\n      />\r\n      <SongList\r\n        listOfSongs={popularSongs}\r\n        source={{\r\n          source: `/authors/${authorsData.uid}`,\r\n          name: authorsData.displayName,\r\n          image: authorsData.photoURL,\r\n          songsList: popularSongs,\r\n        }}\r\n        title={\"Popular Songs\"}\r\n        showListens\r\n        showCount\r\n        isHorizontal\r\n      />\r\n    </div>\r\n  ) : (\r\n    <SongList\r\n      listOfSongs={popularSongs}\r\n      source={{\r\n        source: `/authors/${authorsData.uid}`,\r\n        name: authorsData.displayName + \"'s Library\",\r\n        image: authorsData.photoURL,\r\n        songsList: popularSongs,\r\n      }}\r\n      title={authorsData.displayName + \"'s Library\"}\r\n      showListens\r\n      showCount\r\n      isHorizontal\r\n    />\r\n  );\r\n};\r\n","import { firestore } from \"../../../firebase\";\r\n\r\nexport const findAuthorsAlbums = async (authorsData, setAuthorsPlaylists, currentUserUID, setLoading) => {\r\n\tsetAuthorsPlaylists([])\r\n\tconst tempArray = []\r\n\tif (authorsData.ownPlaylists !== undefined && authorsData.ownPlaylists.length !== 0) {\r\n\t\tauthorsData.ownPlaylists.forEach(async (playlistId, index) => {\r\n\t\t\tconst playlistData = (await firestore.collection(\"playlists\").doc(playlistId).get()).data()\r\n\t\t\tif (playlistData && (!playlistData.isPrivate || (authorsData.uid === currentUserUID && playlistData.isPrivate))) tempArray.push(playlistData)\r\n\t\t\tif (index === authorsData.ownPlaylists.length - 1) {\r\n\t\t\t\ttempArray.sort((a, b) => new Date(b.creationDate).getTime() - new Date(a.creationDate).getTime())\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t\tsetAuthorsPlaylists(tempArray)\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t}\r\n}","import React from \"react\";\r\nimport Logo from \"../../../../shared/ui/images/Logo3.svg\";\r\nexport const DeletedPlaylist = () => {\r\n  return (\r\n    <div style={{ textDecoration: \"none\" }} className=\"playlistWrapper\">\r\n      <div\r\n        className=\"playlistItem\"\r\n        style={{\r\n          background: `var(--playlistsColor)`,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <img\r\n          loading=\"lazy\"\r\n          src={Logo}\r\n          alt=\"\"\r\n          style={{ width: \"70px\", height: \"70px\", filter: \"grayscale(80%)\" }}\r\n        />\r\n      </div>\r\n      <h4 style={{ display: \"flex\", alignItems: \"center\", margin: \"5px 0\" }}>\r\n        Playlist was deleted\r\n      </h4>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect } from 'react'\r\nimport { useAuth } from '../../../../contexts/auth'\r\nimport { useSong } from '../../../../contexts/song'\r\nimport sortUserPlaylists from '../../../../features/author/lib/sort-user-playlists'\r\nimport { firestore } from '../../../../firebase'\r\n\r\nexport const usePlaylistSongs = (playlist, playlistSongs, setPlaylistSongs) => {\r\n\tconst { currentSongPlaylistSource, playSong, setCurrentSongQueue, setCurrentSong, setPlay, songRef, setCurrentSongInQueue, setCurrentSongPlaylistSource } = useSong()\r\n\tconst { currentUser } = useAuth()\r\n\tfunction fetchSongsInAlbum() {\r\n\t\tsetPlaylistSongs([])\r\n\t\tif (playlist.length !== 0) {\r\n\t\t\tplaylist.songs.map(async songId => {\r\n\t\t\t\tlet albumSong = (await firestore.collection('songs').doc(songId).get()).data()\r\n\t\t\t\tsetPlaylistSongs(prev => [...prev, albumSong])\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tfunction playChosenPlaylist(e) {\r\n\t\te.preventDefault()\r\n\t\tif (currentSongPlaylistSource.name === playlist.name) {\r\n\t\t\tplaySong()\r\n\t\t\treturn\r\n\t\t}\r\n\t\tfetchSongsInAlbum()\r\n\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (playlistSongs.length) {\r\n\t\t\tconst source = { source: `/albums/${playlist.id}`, name: playlist.name, image: playlist.image, songsList: playlistSongs }\r\n\t\t\tconst listSongsIds = playlistSongs.map(song => song.id)\r\n\t\t\tsetCurrentSongQueue(playlistSongs)\r\n\t\t\tsetCurrentSongInQueue(0)\r\n\t\t\tsetCurrentSong(playlistSongs[0].id)\r\n\t\t\tsongRef.current.play()\r\n\t\t\tsetPlay(true)\r\n\t\t\tsetCurrentSongPlaylistSource(source)\r\n\t\t\tfirestore.collection('users').doc(currentUser.uid).update({\r\n\t\t\t\tlastSongPlayed: playlistSongs[0].id,\r\n\t\t\t\tlastQueue: {\r\n\t\t\t\t\timage: source.image,\r\n\t\t\t\t\tname: source.name,\r\n\t\t\t\t\tsongsList: listSongsIds,\r\n\t\t\t\t\tsource: source.source\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tsortUserPlaylists(playlist, currentUser)\r\n\t\t}\r\n\t}, [playlistSongs.length])\r\n\r\n\treturn playChosenPlaylist\r\n}\r\n","import React, { memo, useState } from \"react\";\r\nimport { BiAlbum } from \"react-icons/bi\";\r\nimport { BsPauseFill, BsPlayFill } from \"react-icons/bs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../contexts/auth\";\r\nimport { useScreen } from \"../../../contexts/screen\";\r\nimport { useSong } from \"../../../contexts/song\";\r\nimport getShortString from \"../../../shared/lib/get-short-string\";\r\nimport { AddToListCircle } from \"../../../shared/ui/molecules/add-to-list-circle\";\r\nimport saveSearchHistory from \"../../../features/search/lib/save-search-history\";\r\nimport { DeletedPlaylist } from \"./molecules/deleted-playlist\";\r\nimport { usePlaylistSongs } from \"../lib/hooks/use-playlist-songs\";\r\nexport const PlaylistItem = memo(\r\n  ({\r\n    playlist = null,\r\n    listOfChosenAlbums,\r\n    setListOfChosenAlbums,\r\n    shouldSaveSearchHistory,\r\n  }) => {\r\n    const playlistDate = new Date(playlist?.creationDate);\r\n    const { isMobile } = useScreen();\r\n    const { currentUser } = useAuth();\r\n    const { currentSongPlaylistSource, play } = useSong();\r\n    const [playlistSongs, setPlaylistSongs] = useState([]);\r\n    const playSongsInPlaylist = usePlaylistSongs(\r\n      playlist,\r\n      playlistSongs,\r\n      setPlaylistSongs\r\n    );\r\n\r\n    const handleSaveSearchHistory = () => {\r\n      if (shouldSaveSearchHistory)\r\n        saveSearchHistory(currentUser.uid, playlist.id, \"playlists\");\r\n    };\r\n\r\n    return playlist !== null ? (\r\n      <Link\r\n        to={`/albums/${playlist.id}`}\r\n        style={{ textDecoration: \"none\" }}\r\n        className=\"playlistWrapper\"\r\n        onClick={handleSaveSearchHistory}\r\n      >\r\n        <AddToListCircle\r\n          listOfChosenItems={listOfChosenAlbums}\r\n          setListOfChosenItems={setListOfChosenAlbums}\r\n          itemId={playlist.id}\r\n        />\r\n        <div\r\n          className=\"playlistItem\"\r\n          style={\r\n            playlist.image\r\n              ? { background: playlist.imageColors[0] }\r\n              : { background: \"var(--yellowAndPinkGrad)\" }\r\n          }\r\n        >\r\n          <img src={playlist.image} alt=\"\" loading=\"lazy\" />\r\n          {!playlist.image && (\r\n            <BiAlbum\r\n              style={{\r\n                position: \"absolute\",\r\n                left: \"50%\",\r\n                top: \"50%\",\r\n                transform: \"translate(-50%, -50%)\",\r\n                width: \"60px\",\r\n                height: \"60px\",\r\n              }}\r\n            />\r\n          )}\r\n          {!isMobile ? (\r\n            <button onClick={playSongsInPlaylist}>\r\n              {currentSongPlaylistSource.name === playlist.name && play ? (\r\n                <BsPauseFill />\r\n              ) : (\r\n                <BsPlayFill />\r\n              )}\r\n            </button>\r\n          ) : null}\r\n        </div>\r\n        <h4 style={{ display: \"flex\", alignItems: \"center\", margin: \"5px 0\" }}>\r\n          {getShortString(playlist.name, isMobile ? 10 : 15)}\r\n          <span\r\n            style={{\r\n              fontSize: \".6em\",\r\n              opacity: 0.6,\r\n              fontWeight: \"500\",\r\n              marginLeft: \"7px\",\r\n            }}\r\n          >\r\n            {playlist.isAlbum\r\n              ? playlist.songs.length === 1\r\n                ? \"single\"\r\n                : \"album\"\r\n              : \"playlist\"}\r\n          </span>\r\n        </h4>\r\n        <h5 style={{ margin: \"5px 0\" }}>{playlistDate.getFullYear()}</h5>\r\n      </Link>\r\n    ) : (\r\n      <DeletedPlaylist />\r\n    );\r\n  }\r\n);\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { FiChevronLeft, FiChevronRight } from \"react-icons/fi\";\r\nimport { PlaylistItem } from \"../../../../entities/playlist/ui/playlist-item\";\r\nimport { LoadingCircle } from \"../../../loading/ui/atoms/loading-circle\";\r\n\r\nexport const AlbumList = ({\r\n  listOfAlbums,\r\n  title = \"\",\r\n  loading = true,\r\n  listOfChosenAlbums,\r\n  setListOfChosenAlbums,\r\n  saveSearchHistory,\r\n}) => {\r\n  const [scrollLeft, setScrollLeft] = useState(0);\r\n  const wrapperRef = useRef(null);\r\n  const [shouldRenderRightArrow, setShouldRenderRightArrow] = useState(false);\r\n  function scrollToLeft() {\r\n    const prev = wrapperRef.current.scrollLeft;\r\n    wrapperRef.current.scrollLeft = prev - 220;\r\n    setScrollLeft(prev - 220);\r\n  }\r\n  function scrollToRight() {\r\n    const prev = wrapperRef.current.scrollLeft;\r\n    wrapperRef.current.scrollLeft = prev + 220;\r\n    setScrollLeft(prev + 220);\r\n  }\r\n  useEffect(() => {\r\n    if (listOfAlbums.length > 0 && !loading) {\r\n      const scrollBiggerThanScreen =\r\n        wrapperRef.current.scrollWidth > wrapperRef.current.offsetWidth;\r\n      if (scrollBiggerThanScreen) setShouldRenderRightArrow(true);\r\n    }\r\n  }, [listOfAlbums]);\r\n  return listOfAlbums.length > 0 ? (\r\n    loading ? (\r\n      <LoadingCircle />\r\n    ) : (\r\n      <div className=\"AuthorsList\">\r\n        {title.length !== 0 ? <h2>{title}</h2> : null}\r\n        <div\r\n          className=\"authorsWrapper\"\r\n          ref={wrapperRef}\r\n          onScroll={(e) => setScrollLeft(e.target.scrollLeft)}\r\n        >\r\n          {listOfAlbums.map((playlist, index) => {\r\n            return (\r\n              <PlaylistItem\r\n                playlist={playlist}\r\n                key={index}\r\n                listOfChosenAlbums={listOfChosenAlbums}\r\n                setListOfChosenAlbums={setListOfChosenAlbums}\r\n                shouldSaveSearchHistory={saveSearchHistory}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"authorsShiftButtons\">\r\n          <button\r\n            onClick={scrollToLeft}\r\n            style={\r\n              scrollLeft <= 0 ? { visibility: \"hidden\", opacity: \"0\" } : {}\r\n            }\r\n          >\r\n            <FiChevronLeft />\r\n          </button>\r\n          <button\r\n            onClick={scrollToRight}\r\n            style={\r\n              shouldRenderRightArrow &&\r\n              wrapperRef.current &&\r\n              wrapperRef.current.scrollWidth -\r\n                wrapperRef.current.offsetWidth !==\r\n                scrollLeft\r\n                ? {}\r\n                : { visibility: \"hidden\", opacity: \"0\" }\r\n            }\r\n          >\r\n            <FiChevronRight />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  ) : null;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { findAuthorsAlbums } from \"../../lib/find-authors-albums\";\r\nimport { AlbumList } from \"../../../album/ui/template/album-list\";\r\n\r\nexport const Playlists = ({ authorsData }) => {\r\n  const { currentUser } = useAuth();\r\n  const [authorsPlaylists, setAuthorsPlaylists] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    findAuthorsAlbums(\r\n      authorsData,\r\n      setAuthorsPlaylists,\r\n      currentUser.uid,\r\n      setLoading\r\n    );\r\n  }, [authorsData.ownPlaylists]);\r\n\r\n  return (\r\n    <AlbumList\r\n      listOfAlbums={authorsPlaylists}\r\n      title={currentUser.isAuthor ? \"Albums\" : \"Playlists\"}\r\n      loading={loading}\r\n    />\r\n  );\r\n};\r\n","import { firestore } from \"../../firebase\"\r\n\r\nfunction findSimilarArtistsNames(authorsSongsArr, authorsData, setSimilarAuthors) {\r\n\tlet peopleArray = []\r\n\tauthorsSongsArr.forEach((song) => {\r\n\t\tlet newAuthors = song.authors\r\n\t\tif (newAuthors.length !== 0) {\r\n\t\t\tpeopleArray.push(newAuthors)\r\n\t\t}\r\n\t})\r\n\tpeopleArray = peopleArray.flat()\r\n\tconst uniqueAuthorsSet = new Set(peopleArray.map(people=>people.uid).filter(id=>id!==authorsData.uid))\r\n\tconst uniqueAuthorsIdsArray = Array.from(uniqueAuthorsSet)\r\n\tconst uniqueAuthorsDataArray = []\r\n\tfor (let i = 0; i < uniqueAuthorsIdsArray.length; i++) {\r\n\t\tfor (let j = 0; j < peopleArray.length; j++) {\r\n\t\t\tif(uniqueAuthorsIdsArray[i] === peopleArray[j].uid){\r\n\t\t\t\tuniqueAuthorsDataArray.push(peopleArray[j])\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\tsetSimilarAuthors(uniqueAuthorsDataArray)\r\n\treturn uniqueAuthorsDataArray\r\n}\r\n\r\nexport default async function findSimilarArtists(authorsData, setSimilarAuthors) {\r\n\tif (authorsData !== undefined && authorsData.ownSongs !== undefined && authorsData.ownSongs.length !== 0) {\r\n\t\tconst authorsSongsArray = []\r\n\t\tauthorsData.ownSongs.forEach(async (songId, index)=>{\r\n\t\t\tconst songData = (await firestore.collection('songs').doc(songId).get()).data()\r\n\t\t\tauthorsSongsArray.push(songData)\r\n\t\t\tif(index === authorsData.ownSongs.length - 1){\r\n\t\t\t\treturn findSimilarArtistsNames(authorsSongsArray, authorsData, setSimilarAuthors)\r\n\t\t\t}\r\n\t\t})\r\n\r\n\r\n\t}\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\n\r\nimport { AddToListCircle } from \"../../../../shared/ui/molecules/add-to-list-circle\";\r\nimport saveSearchHistory from \"../../../search/lib/save-search-history\";\r\n\r\nexport const AuthorItemBig = ({\r\n  data,\r\n  listOfChosenAuthors,\r\n  setListOfChosenAuthors,\r\n  shouldSaveSearchHistory = false,\r\n}) => {\r\n  const { currentUser } = useAuth();\r\n\r\n  const handleSaveSearchHistory = () => {\r\n    if (shouldSaveSearchHistory)\r\n      saveSearchHistory(currentUser.uid, data.uid, \"users\");\r\n  };\r\n\r\n  return (\r\n    <Link\r\n      to={`/authors/${data.uid}`}\r\n      className=\"AuthorItemBig\"\r\n      onClick={handleSaveSearchHistory}\r\n    >\r\n      <AddToListCircle\r\n        listOfChosenItems={listOfChosenAuthors}\r\n        setListOfChosenItems={setListOfChosenAuthors}\r\n        itemId={data.uid}\r\n      />\r\n      <div>\r\n        <div\r\n          className=\"AuthorItemBigImage\"\r\n          style={{ background: data.imageColors && data.imageColors[0] }}\r\n        >\r\n          <img src={data.photoURL} alt=\"\" loading=\"lazy\" />\r\n        </div>\r\n        <h3>{data.displayName}</h3>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { FiChevronLeft, FiChevronRight } from \"react-icons/fi\";\r\nimport { AuthorItemBig } from \"../molecules/author-item-big\";\r\n\r\nexport const AuthorsList = ({\r\n  listOfAuthors,\r\n  title = \"\",\r\n  listOfChosenAuthors,\r\n  setListOfChosenAuthors,\r\n  saveSearchHistory,\r\n}) => {\r\n  const [scrollLeft, setScrollLeft] = useState(0);\r\n  const wrapperRef = useRef(null);\r\n  const [shouldRenderRightArrow, setShouldRenderRightArrow] = useState(false);\r\n  function scrollToLeft() {\r\n    const prev = wrapperRef.current.scrollLeft;\r\n    wrapperRef.current.scrollLeft = prev - 200;\r\n    setScrollLeft(prev - 200);\r\n  }\r\n  function scrollToRight() {\r\n    const prev = wrapperRef.current.scrollLeft;\r\n    wrapperRef.current.scrollLeft = prev + 200;\r\n    setScrollLeft(prev + 200);\r\n  }\r\n  useEffect(() => {\r\n    if (listOfAuthors.length > 0) {\r\n      const scrollBiggerThanScreen =\r\n        wrapperRef.current.scrollWidth > wrapperRef.current.offsetWidth;\r\n      if (scrollBiggerThanScreen) setShouldRenderRightArrow(true);\r\n    }\r\n  }, [listOfAuthors]);\r\n  return listOfAuthors.length > 0 ? (\r\n    <div className=\"AuthorsList\">\r\n      {title.length !== 0 ? <h2>{title}</h2> : null}\r\n      <div\r\n        className=\"authorsWrapper\"\r\n        ref={wrapperRef}\r\n        onScroll={(e) => setScrollLeft(e.target.scrollLeft)}\r\n      >\r\n        {listOfAuthors.map((author) => {\r\n          return (\r\n            <AuthorItemBig\r\n              data={author}\r\n              key={author.uid}\r\n              listOfChosenAuthors={listOfChosenAuthors}\r\n              setListOfChosenAuthors={setListOfChosenAuthors}\r\n              shouldSaveSearchHistory={saveSearchHistory}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"authorsShiftButtons\">\r\n        <button\r\n          onClick={scrollToLeft}\r\n          style={scrollLeft <= 0 ? { visibility: \"hidden\", opacity: \"0\" } : {}}\r\n        >\r\n          <FiChevronLeft />\r\n        </button>\r\n        <button\r\n          onClick={scrollToRight}\r\n          style={\r\n            shouldRenderRightArrow &&\r\n            wrapperRef.current !== null &&\r\n            wrapperRef.current.scrollWidth - wrapperRef.current.offsetWidth !==\r\n              scrollLeft\r\n              ? {}\r\n              : { visibility: \"hidden\", opacity: \"0\" }\r\n          }\r\n        >\r\n          <FiChevronRight />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport findSimilarArtists from \"../../../../shared/lib/find-similar-artists\";\r\nimport { AuthorsList } from \"../templates/authors-list\";\r\n\r\nexport const SimilarArtists = ({ data }) => {\r\n  const [similarArtists, setSimilarArtists] = useState([]);\r\n\r\n  useEffect(() => {\r\n    findSimilarArtists(data, setSimilarArtists);\r\n  }, [data]);\r\n  return (\r\n    <AuthorsList listOfAuthors={similarArtists} title={\"Similar Authors\"} />\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nexport const FullScreenLoading = ({loading}) => {\r\n\treturn (\r\n\t\t<div className = \"FullScreenLoading\" style = {loading?{}:{opacity:'0', visibility:'hidden'}}>\r\n\t\t\t<img loading = \"lazy\" src=\"https://icon-library.com/images/spinner-icon-gif/spinner-icon-gif-28.jpg\" alt=\"\"/>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport { findVariationsOfName } from \"../../../../shared/lib/find-variations-of-name\";\r\nimport getUID from \"../../../../shared/lib/get-uid\";\r\n\r\nconst useAddPlaylist = () => {\r\n  const { currentUser } = useAuth();\r\n  const [playlistName, setPlaylistName] = useState(\"\");\r\n  const [playlistCover, setPlaylistCover] = useState(\"\");\r\n  const [authorsInputValue, setAuthorsInputValue] = useState(\"\");\r\n  const [allAuthors, setAllAuthors] = useState([]);\r\n  const [chosenAuthors, setChosenAuthors] = useState(\r\n    !currentUser.isAdmin\r\n      ? [\r\n          {\r\n            uid: currentUser.uid,\r\n            photoURL: currentUser.photoURL,\r\n            displayName: currentUser.displayName,\r\n          },\r\n        ]\r\n      : []\r\n  );\r\n  const [releaseDate, setReleaseDate] = useState(\r\n    currentUser.isAdmin ? \"\" : new Date().toString()\r\n  );\r\n  const [songsSearch, setSongsSearch] = useState(\"\");\r\n  const [allSongs, setAllSongs] = useState([]);\r\n  const [chosenSongs, setChosenSongs] = useState([]);\r\n  const [playlistStatus, setPlaylistStatus] = useState(0);\r\n  const [isPlaylistPrivate, setIsPlaylistPrivate] = useState(0);\r\n  const [imageLocalPath, setImageLocalPath] = useState(\"\");\r\n  const [imageColors, setImageColors] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [loadingPlaylist, setLoadingPlaylist] = useState(false);\r\n  const [completed, setCompleted] = useState(false);\r\n\r\n  function removeAuthorFromList(data) {\r\n    const filtered = chosenAuthors.filter((people) => people.uid !== data.uid);\r\n    return setChosenAuthors(filtered);\r\n  }\r\n\r\n  function removeSongFromList(data) {\r\n    const filtered = chosenSongs.filter((song) => song !== data);\r\n    return setChosenSongs(filtered);\r\n  }\r\n\r\n  function addAuthor(data) {\r\n    if (!chosenAuthors.some((person) => person.uid === data.uid)) {\r\n      return setChosenAuthors((prev) => [\r\n        ...prev,\r\n        {\r\n          uid: data.uid,\r\n          displayName: data.displayName,\r\n          photoURL: data.photoURL,\r\n        },\r\n      ]);\r\n    }\r\n\r\n    removeAuthorFromList(data);\r\n  }\r\n\r\n  async function addPlaylistToFirebase(e) {\r\n    e.preventDefault();\r\n    const uid = getUID();\r\n    if (playlistName.length === 0)\r\n      setErrorMessage(\"Playlist has to have some name\");\r\n    else if (chosenAuthors.length === 0)\r\n      setErrorMessage(\"Playlist has to have at least 1 author\");\r\n    else if (releaseDate.length === 0)\r\n      setErrorMessage(\"You have to set release date for a playlist\");\r\n    else {\r\n      setLoadingPlaylist(true);\r\n      firestore\r\n        .collection(\"playlists\")\r\n        .doc(uid)\r\n        .set({\r\n          id: uid,\r\n          name: playlistName,\r\n          songs: chosenSongs,\r\n          authors: chosenAuthors,\r\n          image: playlistCover,\r\n          listens: 0,\r\n          creationDate: releaseDate,\r\n          subscribers: 0,\r\n          isAlbum: playlistStatus === 1,\r\n          imageColors: imageColors,\r\n          isPrivate: isPlaylistPrivate === true,\r\n        })\r\n        .then(() => {\r\n          setAllAuthors([]);\r\n          setAuthorsInputValue(\"\");\r\n          setChosenAuthors([]);\r\n          setPlaylistCover(\"\");\r\n          setPlaylistName(\"\");\r\n          setReleaseDate(\"\");\r\n          setSongsSearch(\"\");\r\n          setChosenSongs([]);\r\n          setIsPlaylistPrivate(0);\r\n          setLoadingPlaylist(false);\r\n          setCompleted(true);\r\n        })\r\n        .catch((err) => {\r\n          setErrorMessage(err);\r\n          setLoadingPlaylist(false);\r\n        });\r\n\r\n      chosenAuthors.forEach(async (author) => {\r\n        const authorRef = await firestore\r\n          .collection(\"users\")\r\n          .doc(author.uid)\r\n          .get();\r\n        const authorData = authorRef.data();\r\n        const authorPlaylists = authorData.ownPlaylists;\r\n        authorPlaylists.push(uid);\r\n        firestore.collection(\"users\").doc(author.uid).update({\r\n          ownPlaylists: authorPlaylists,\r\n        });\r\n      });\r\n\r\n      firestore\r\n        .collection(\"search\")\r\n        .doc(uid)\r\n        .set({\r\n          place: \"playlists\",\r\n          uid: uid,\r\n          rank: 0,\r\n          variantsOfName: findVariationsOfName(playlistName),\r\n        });\r\n    }\r\n  }\r\n\r\n  return {\r\n    playlistName,\r\n    setPlaylistName,\r\n    imageLocalPath,\r\n    loadingPlaylist,\r\n    setImageColors,\r\n    authorsInputValue,\r\n    setAuthorsInputValue,\r\n    setAllAuthors,\r\n    chosenAuthors,\r\n    removeAuthorFromList,\r\n    allAuthors,\r\n    addAuthor,\r\n    songsSearch,\r\n    setSongsSearch,\r\n    setAllSongs,\r\n    setPlaylistStatus,\r\n    removeSongFromList,\r\n    chosenSongs,\r\n    allSongs,\r\n    setChosenSongs,\r\n    playlistStatus,\r\n    isPlaylistPrivate,\r\n    setIsPlaylistPrivate,\r\n    setPlaylistCover,\r\n    releaseDate,\r\n    setReleaseDate,\r\n    setImageLocalPath,\r\n    completed,\r\n    setCompleted,\r\n    addPlaylistToFirebase,\r\n    setChosenAuthors,\r\n    errorMessage,\r\n    setErrorMessage,\r\n  };\r\n};\r\n\r\nexport default useAddPlaylist;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { FiChevronLeft, FiChevronRight } from \"react-icons/fi\";\r\nimport { PersonTinyVerticalItem } from \"../atoms/person-tiny-vertical-item\";\r\nimport { firestore } from \"../../../../firebase\";\r\n\r\nexport const PersonTinyList = ({ data, title }) => {\r\n  const [listOfPeople, setListOfPeople] = useState([]);\r\n  const [scrollLeft, setScrollLeft] = useState(0);\r\n  const wrapperRef = useRef(null);\r\n  const [shouldRenderRightArrow, setShouldRenderRightArrow] = useState(false);\r\n  function scrollToLeft() {\r\n    const prev = wrapperRef.current.scrollLeft;\r\n    wrapperRef.current.scrollLeft = prev - 200;\r\n    setScrollLeft(prev - 200);\r\n  }\r\n  function scrollToRight() {\r\n    const prev = wrapperRef.current.scrollLeft;\r\n    wrapperRef.current.scrollLeft = prev + 200;\r\n    setScrollLeft(prev + 200);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (listOfPeople.length > 0) {\r\n      const scrollBiggerThanScreen =\r\n        wrapperRef.current.scrollWidth > wrapperRef.current.offsetWidth;\r\n      if (scrollBiggerThanScreen) setShouldRenderRightArrow(true);\r\n    }\r\n  }, [listOfPeople]);\r\n\r\n  function fetchFriends() {\r\n    setListOfPeople([]);\r\n    data.friends.forEach(async (personObj) => {\r\n      if (personObj.status === \"added\") {\r\n        const personData = (\r\n          await firestore.collection(\"users\").doc(personObj.uid).get()\r\n        ).data();\r\n        setListOfPeople((prev) => [...prev, personData]);\r\n      }\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    setListOfPeople([]);\r\n    fetchFriends();\r\n  }, [data.uid]);\r\n  return listOfPeople.length > 0 ? (\r\n    <div className=\"PersonTinyList\">\r\n      {title && <h2>{title}</h2>}\r\n      <div style={{ position: \"relative\" }}>\r\n        <div\r\n          className=\"personTinyListWrapper\"\r\n          ref={wrapperRef}\r\n          onScroll={(e) => setScrollLeft(e.target.scrollLeft)}\r\n        >\r\n          {listOfPeople.map((person, index) => {\r\n            return <PersonTinyVerticalItem person={person} key={person.uid} />;\r\n          })}\r\n        </div>\r\n        <div className=\"authorsShiftButtons\">\r\n          <button\r\n            onClick={scrollToLeft}\r\n            style={\r\n              scrollLeft <= 0 ? { visibility: \"hidden\", opacity: \"0\" } : {}\r\n            }\r\n          >\r\n            <FiChevronLeft />\r\n          </button>\r\n          <button\r\n            onClick={scrollToRight}\r\n            style={\r\n              shouldRenderRightArrow &&\r\n              wrapperRef.current &&\r\n              wrapperRef.current.scrollWidth -\r\n                wrapperRef.current.offsetWidth !==\r\n                scrollLeft\r\n                ? {}\r\n                : { visibility: \"hidden\", opacity: \"0\" }\r\n            }\r\n          >\r\n            <FiChevronRight />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { ColorExtractor } from \"react-color-extractor\";\r\nimport { FiXCircle } from \"react-icons/fi\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { SongItem } from \"../../../../entities/song/ui/song-item\";\r\nimport { PersonTiny } from \"../../../../entities/user/ui/organisms/person-tiny\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport { findVariationsOfName } from \"../../../../shared/lib/find-variations-of-name\";\r\nimport getUID from \"../../../../shared/lib/get-uid\";\r\nimport DownloadButton from \"../../../../shared/ui/atoms/download-button\";\r\nimport Input from \"../../../../shared/ui/atoms/input\";\r\nimport { RadioBtn } from \"../../../../shared/ui/atoms/radio-button\";\r\nimport SubmitButton from \"../../../../shared/ui/atoms/submit-button\";\r\nimport SearchBar from \"../../../../shared/ui/organisms/search-bar\";\r\nimport { FullScreenLoading } from \"../../../loading/ui/atoms/full-screen-loading\";\r\nimport useAddPlaylist from \"../../lib/hooks/use-add-playlist\";\r\nimport { PersonTinyList } from \"../templates/person-tiny-list\";\r\nimport { TinyPersonsList } from \"../templates/tiny-persons-list\";\r\n\r\nexport const AddPlaylist = () => {\r\n  const { currentUser } = useAuth();\r\n  const { yourFriends } = useSong();\r\n\r\n  const {\r\n    playlistName,\r\n    setPlaylistName,\r\n    imageLocalPath,\r\n    loadingPlaylist,\r\n    setImageColors,\r\n    authorsInputValue,\r\n    setAuthorsInputValue,\r\n    setAllAuthors,\r\n    chosenAuthors,\r\n    removeAuthorFromList,\r\n    allAuthors,\r\n    addAuthor,\r\n    songsSearch,\r\n    setSongsSearch,\r\n    setAllSongs,\r\n    setPlaylistStatus,\r\n    removeSongFromList,\r\n    chosenSongs,\r\n    allSongs,\r\n    setChosenSongs,\r\n    playlistStatus,\r\n    isPlaylistPrivate,\r\n    setIsPlaylistPrivate,\r\n    setPlaylistCover,\r\n    releaseDate,\r\n    setReleaseDate,\r\n    setImageLocalPath,\r\n    completed,\r\n    setCompleted,\r\n    addPlaylistToFirebase,\r\n    setChosenAuthors,\r\n    errorMessage,\r\n    setErrorMessage,\r\n  } = useAddPlaylist();\r\n\r\n  return (\r\n    <div className=\"AddSong\">\r\n      <FullScreenLoading loading={loadingPlaylist} />\r\n      <ColorExtractor\r\n        src={imageLocalPath}\r\n        getColors={(colors) => setImageColors(colors)}\r\n      />\r\n      <div>\r\n        <Input\r\n          title={\"Playlist name\"}\r\n          value={playlistName}\r\n          setValue={setPlaylistName}\r\n          placeholder={\"Enter playlist name\"}\r\n        />\r\n        <label>\r\n          <h3>Playlist authors</h3>\r\n          <SearchBar\r\n            value={authorsInputValue}\r\n            setValue={setAuthorsInputValue}\r\n            setResultAuthorList={setAllAuthors}\r\n            defaultSearchMode={\"users\"}\r\n            defaultAuthorsListValue={yourFriends}\r\n            inputText={\"Search for authors\"}\r\n          />\r\n          <div className=\"chosenAuthorsList\">\r\n            {chosenAuthors.map((author) => {\r\n              return (\r\n                <div className=\"chosenAuthorItem\">\r\n                  <span>{author.displayName}</span>\r\n                  <FiXCircle\r\n                    onClick={() =>\r\n                      author.uid === currentUser.uid\r\n                        ? null\r\n                        : removeAuthorFromList(author)\r\n                    }\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"authorsResult\">\r\n            {allAuthors.map((data, index) => {\r\n              return (\r\n                <PersonTiny\r\n                  data={data}\r\n                  onClick={() => addAuthor(data)}\r\n                  style={\r\n                    chosenAuthors.includes(data.uid)\r\n                      ? { background: \"var(--green)\" }\r\n                      : {}\r\n                  }\r\n                  key={index}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </label>\r\n\r\n        <h3>Search for songs</h3>\r\n        <SearchBar\r\n          value={songsSearch}\r\n          setValue={setSongsSearch}\r\n          setAllFoundSongs={setAllSongs}\r\n          defaultSearchMode={\"songs\"}\r\n          inputText={\"Search for songs\"}\r\n        />\r\n        <div className=\"chosenAuthorsList\">\r\n          {chosenSongs.map((songId) => {\r\n            const songName = allSongs.find((song) => song.id === songId).name;\r\n            return (\r\n              <div className=\"chosenAuthorItem\">\r\n                <span>{songName}</span>\r\n                <FiXCircle onClick={() => removeSongFromList(songId)} />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"authorsResult\">\r\n          {allSongs.map((data, index) => {\r\n            return (\r\n              <SongItem\r\n                song={data}\r\n                localIndex={index}\r\n                listOfChosenSongs={chosenSongs}\r\n                setListOfSongs={setChosenSongs}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {currentUser.isAdmin || currentUser.isAuthor ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-start\",\r\n              margin: \"15px 0\",\r\n            }}\r\n          >\r\n            <RadioBtn\r\n              label=\"Playlist\"\r\n              onClick={() => setPlaylistStatus(0)}\r\n              currentActive={playlistStatus}\r\n              id={0}\r\n            />\r\n            <RadioBtn\r\n              label=\"Album\"\r\n              onClick={() => setPlaylistStatus(1)}\r\n              currentActive={playlistStatus}\r\n              id={1}\r\n            />\r\n          </div>\r\n        ) : null}\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-start\",\r\n            margin: \"15px 0\",\r\n          }}\r\n        >\r\n          <RadioBtn\r\n            label=\"Not Private\"\r\n            onClick={() => setIsPlaylistPrivate(0)}\r\n            currentActive={isPlaylistPrivate}\r\n            id={0}\r\n          />\r\n          <RadioBtn\r\n            label=\"Private\"\r\n            onClick={() => setIsPlaylistPrivate(1)}\r\n            currentActive={isPlaylistPrivate}\r\n            id={1}\r\n          />\r\n        </div>\r\n\r\n        {(currentUser.isAdmin || currentUser.isAuthor) && (\r\n          <Input\r\n            title={\"Release Date\"}\r\n            type={\"date\"}\r\n            value={releaseDate}\r\n            setValue={setReleaseDate}\r\n            placeholder={\"Enter release date\"}\r\n          />\r\n        )}\r\n        <DownloadButton\r\n          text={\"Download playlist cover\"}\r\n          place={\"songsImages/\"}\r\n          setItemSrc={setPlaylistCover}\r\n          setImageLocalPath={setImageLocalPath}\r\n        />\r\n        <SubmitButton\r\n          text={\"Add playlists\"}\r\n          action={addPlaylistToFirebase}\r\n          isLoading={loadingPlaylist}\r\n          completed={completed}\r\n          setCompleted={setCompleted}\r\n          bottomMessage={\"Playlist was uploaded to database\"}\r\n          errorMessage={errorMessage}\r\n          setErrorMessage={setErrorMessage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { ColorExtractor } from \"react-color-extractor\";\r\nimport { FiXCircle } from \"react-icons/fi\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { PersonTiny } from \"../../../../entities/user/ui/organisms/person-tiny\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport { findVariationsOfName } from \"../../../../shared/lib/find-variations-of-name\";\r\nimport getUID from \"../../../../shared/lib/get-uid\";\r\nimport DownloadButton from \"../../../../shared/ui/atoms/download-button\";\r\nimport Input from \"../../../../shared/ui/atoms/input\";\r\nimport SubmitButton from \"../../../../shared/ui/atoms/submit-button\";\r\nimport SearchBar from \"../../../../shared/ui/organisms/search-bar\";\r\nimport { transformLyricsToArrayOfObjects } from \"../../../full-screen-player/lib/transform-lyrics-to-array-of-object\";\r\nimport { FullScreenLoading } from \"../../../loading/ui/atoms/full-screen-loading\";\r\n\r\nexport const AddSong = () => {\r\n  const { openBottomMessage } = useModal();\r\n  const { currentUser } = useAuth();\r\n  const [songName, setSongName] = useState(\"\");\r\n  const [songCover, setSongCover] = useState(\"\");\r\n  const [songSrc, setSongSrc] = useState(\"\");\r\n  const [authorsInputValue, setAuthorsInputValue] = useState(\"\");\r\n  const [allAuthors, setAllAuthors] = useState([]);\r\n  const [chosenAuthors, setChosenAuthors] = useState(\r\n    !currentUser.isAdmin\r\n      ? [\r\n          {\r\n            uid: currentUser.uid,\r\n            photoURL: currentUser.photoURL,\r\n            displayName: currentUser.displayName,\r\n          },\r\n        ]\r\n      : []\r\n  );\r\n  const [releaseDate, setReleaseDate] = useState(\"\");\r\n  const [lyrics, setLyrics] = useState(\"\");\r\n  const [imageLocalPath, setImageLocalPath] = useState(\"\");\r\n  const [imageColors, setImageColors] = useState([]);\r\n  const [loadingAuthors, setLoadingAuthors] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [completed, setCompleted] = useState(false);\r\n  const [loadingSong, setLoadingSong] = useState(false);\r\n\r\n  function removeAuthorFromList(data) {\r\n    const filtered = chosenAuthors.filter((people) => people.uid !== data.uid);\r\n    return setChosenAuthors(filtered);\r\n  }\r\n\r\n  function addAuthor(data) {\r\n    if (!chosenAuthors.some((person) => person.uid === data.uid)) {\r\n      return setChosenAuthors((prev) => [\r\n        ...prev,\r\n        {\r\n          uid: data.uid,\r\n          displayName: data.displayName,\r\n          photoURL: data.photoURL,\r\n        },\r\n      ]);\r\n    }\r\n\r\n    removeAuthorFromList(data);\r\n  }\r\n\r\n  async function addSongToFirebase(e) {\r\n    e.preventDefault();\r\n\r\n    let uid = getUID();\r\n    setErrorMessage(\"\");\r\n    if (songName.length === 0) setErrorMessage(\"Song has to have some name\");\r\n    else if (chosenAuthors.length === 0)\r\n      setErrorMessage(\"Song has to have at least 1 author\");\r\n    else if (releaseDate.length === 0)\r\n      setErrorMessage(\"You have to set release date for a song\");\r\n    else if (songCover.length === 0)\r\n      setErrorMessage(\"You didn't load song cover\");\r\n    else if (songSrc.length === 0) setErrorMessage(\"You didn't load song file\");\r\n    else {\r\n      setLoadingSong(true);\r\n      firestore\r\n        .collection(\"songs\")\r\n        .doc(uid)\r\n        .set({\r\n          id: uid,\r\n          name: songName,\r\n          songSrc: songSrc,\r\n          authors: chosenAuthors,\r\n          cover: songCover,\r\n          listens: 0,\r\n          releaseDate: releaseDate,\r\n          lyrics: transformLyricsToArrayOfObjects(lyrics),\r\n          imageColors: imageColors,\r\n        })\r\n        .then(() => {\r\n          setAllAuthors([]);\r\n          setAuthorsInputValue(\"\");\r\n          setChosenAuthors([]);\r\n          setLyrics([]);\r\n          setSongCover(\"\");\r\n          setSongName(\"\");\r\n          setSongSrc(\"\");\r\n          setReleaseDate(\"\");\r\n          setLyrics([]);\r\n          setCompleted(true);\r\n          setImageColors([]);\r\n          setLoadingSong(false);\r\n        })\r\n        .catch((err) => {\r\n          setErrorMessage(err);\r\n          setLoadingSong(false);\r\n        });\r\n\r\n      chosenAuthors.forEach(async (author) => {\r\n        const authorRef = await firestore\r\n          .collection(\"users\")\r\n          .doc(author.uid)\r\n          .get();\r\n        const authorData = authorRef.data();\r\n        const authorSongs = authorData.ownSongs;\r\n        authorSongs.push(uid);\r\n        firestore.collection(\"users\").doc(author.uid).update({\r\n          ownSongs: authorSongs,\r\n        });\r\n      });\r\n\r\n      firestore\r\n        .collection(\"search\")\r\n        .doc(uid)\r\n        .set({\r\n          place: \"songs\",\r\n          uid: uid,\r\n          rank: 0,\r\n          variantsOfName: findVariationsOfName(songName),\r\n        });\r\n    }\r\n  }\r\n\r\n  function manuallyChangeColor(e, i) {\r\n    imageColors[i] = e.target.value;\r\n    setImageColors([...imageColors]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"AddSong\">\r\n      <FullScreenLoading loading={loadingSong} />\r\n      <ColorExtractor\r\n        src={imageLocalPath}\r\n        getColors={(colors) => setImageColors(colors)}\r\n      />\r\n      <div>\r\n        <Input\r\n          title={\"Song name\"}\r\n          value={songName}\r\n          setValue={setSongName}\r\n          placeholder={\"Enter song name\"}\r\n        />\r\n        <label>\r\n          <h3>Song authors</h3>\r\n          <SearchBar\r\n            value={authorsInputValue}\r\n            setValue={setAuthorsInputValue}\r\n            setResultAuthorList={setAllAuthors}\r\n            defaultSearchMode={\"users\"}\r\n            inputText={\"Search for authors\"}\r\n          />\r\n          <div className=\"chosenAuthorsList\">\r\n            {chosenAuthors.map((author) => {\r\n              return (\r\n                <div className=\"chosenAuthorItem\">\r\n                  <span>{author.displayName}</span>\r\n                  <FiXCircle\r\n                    onClick={() => {\r\n                      if (currentUser.isAdmin) removeAuthorFromList(author);\r\n                      else if (author.uid !== currentUser.uid)\r\n                        removeAuthorFromList(author);\r\n                    }}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"authorsResult\">\r\n            {allAuthors.map((data, index) => {\r\n              return (\r\n                <PersonTiny\r\n                  data={data}\r\n                  onClick={() => addAuthor(data)}\r\n                  style={\r\n                    chosenAuthors.includes(data.uid)\r\n                      ? { background: \"var(--green)\" }\r\n                      : {}\r\n                  }\r\n                  key={index}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </label>\r\n\r\n        <Input\r\n          title={\"Release Date\"}\r\n          type={\"date\"}\r\n          value={releaseDate}\r\n          setValue={setReleaseDate}\r\n          placeholder={\"Enter release date\"}\r\n        />\r\n\r\n        <div style={{ width: \"100%\", display: \"flex\" }}>\r\n          {imageColors.map((color, index) => {\r\n            return (\r\n              <input\r\n                type=\"color\"\r\n                value={color}\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"60px\",\r\n                  padding: \"0\",\r\n                  borderRadius: \"0px\",\r\n                }}\r\n                onChange={(e) => {\r\n                  manuallyChangeColor(e, index);\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <DownloadButton\r\n          text={\"Download song cover\"}\r\n          place={\"songsImages/\"}\r\n          setItemSrc={setSongCover}\r\n          setImageLocalPath={setImageLocalPath}\r\n        />\r\n        <DownloadButton\r\n          text={\"Download song file\"}\r\n          place={\"songs/\"}\r\n          setItemSrc={setSongSrc}\r\n        />\r\n        <label>\r\n          <textarea\r\n            name=\"\"\r\n            id=\"\"\r\n            placeholder={\"Add song lyrics\"}\r\n            value={lyrics}\r\n            onChange={(e) => setLyrics(e.target.value)}\r\n          ></textarea>\r\n        </label>\r\n        <SubmitButton\r\n          text={\"Add song\"}\r\n          action={addSongToFirebase}\r\n          isLoading={loadingSong}\r\n          completed={completed}\r\n          setCompleted={setCompleted}\r\n          bottomMessage={\"Song was uploaded to database\"}\r\n          errorMessage={errorMessage}\r\n          setErrorMessage={setErrorMessage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nexport const Slider = ({pages, currentPage, setCurrentPage}) => {\r\n\treturn (\r\n\t\t<div className = \"Slider\">\r\n\t\t\t{pages.map((pageName, index)=>{\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className = {\"sliderItem \" + (index === currentPage?\"current\":\"\")} key = {index} onClick = {()=>setCurrentPage(index)}>\r\n\t\t\t\t\t\t{pageName}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { FiPlus } from \"react-icons/fi\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { AddPlaylist } from \"../organisms/add-playlist\";\r\nimport { AddSong } from \"../organisms/add-song\";\r\nimport { Slider } from \"../../../../shared/ui/molecules/slider\";\r\n\r\nexport const AddWindow = ({ data }) => {\r\n  const { currentUser } = useAuth();\r\n  const [openAddSongWindow, setOpenAddSongWindow] = useState(false);\r\n  const [currentSliderPage, setCurrentSliderPage] = useState(0);\r\n  const sliderPages = [<AddSong />, <AddPlaylist />];\r\n  return (currentUser.isAdmin || data.isAuthor) &&\r\n    data.uid === currentUser.uid ? (\r\n    <div className=\"AddSong\">\r\n      <button\r\n        onClick={() => setOpenAddSongWindow(!openAddSongWindow)}\r\n        style={openAddSongWindow ? { background: \"var(--red)\" } : {}}\r\n        className=\"openAddSongWindowBtn\"\r\n      >\r\n        <FiPlus\r\n          style={openAddSongWindow ? { transform: \"rotate(45deg)\" } : {}}\r\n        />\r\n      </button>\r\n      <div\r\n        className=\"addSongWindow\"\r\n        style={openAddSongWindow ? { display: \"flex\" } : {}}\r\n      >\r\n        <Slider\r\n          pages={[\"Song\", \"Playlist\"]}\r\n          currentPage={currentSliderPage}\r\n          setCurrentPage={setCurrentSliderPage}\r\n        />\r\n        {sliderPages[currentSliderPage]}\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useRouteMatch } from \"react-router\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Header } from \"../../features/template-header/header\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\nimport { useModal } from \"../../contexts/modal\";\r\nimport { FriendRequest } from \"../../features/author/ui/molecules/friend-request\";\r\nimport { TopSongs } from \"../../features/author/ui/molecules/top-songs\";\r\nimport { Playlists } from \"../../features/author/ui/organisms/playlists\";\r\nimport { SimilarArtists } from \"../../features/author/ui/organisms/similar-artists\";\r\nimport { AddWindow } from \"../../features/author/ui/templates/add-window\";\r\nimport { PersonTinyList } from \"../../features/author/ui/templates/person-tiny-list\";\r\nimport { LoadingCircle } from \"../../features/loading/ui/atoms/loading-circle\";\r\nimport { firestore } from \"../../firebase\";\r\nimport { ContentContainer } from \"../../shared/ui/atoms/content-container\";\r\nimport \"./style.css\";\r\n\r\nconst AuthorPage = () => {\r\n  const match = useRouteMatch(\"/authors/:authorId\");\r\n  const { currentUser } = useAuth();\r\n  const [headerColors, setHeaderColors] = useState([]);\r\n  const { authorId } = match.params;\r\n  const [authorsData, setAuthorsData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const history = useHistory();\r\n  const { openBottomMessage } = useModal();\r\n  async function fetchAuthorsData() {\r\n    const response = firestore.collection(\"users\").doc(authorId);\r\n    response\r\n      .get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          setAuthorsData(doc.data());\r\n          setHeaderColors(doc.data().imageColors);\r\n          setLoading(false);\r\n        } else {\r\n          history.push(\"/not-found\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        openBottomMessage(\"Failed to load author's data\", \"failure\");\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchAuthorsData();\r\n  }, [authorId]);\r\n  return (\r\n    <>\r\n      <div className=\"AuthorPage\" style={{ animation: \"zoomIn .2s forwards\" }}>\r\n        {loading ? (\r\n          <LoadingCircle />\r\n        ) : (\r\n          <>\r\n            <Header\r\n              data={authorsData}\r\n              headerColors={headerColors}\r\n              setHeaderColors={setHeaderColors}\r\n            />\r\n            <ContentContainer\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                minHeight: \"100%\",\r\n                borderRadius: \"25px 25px 0 0\",\r\n                flex: \"auto\",\r\n                position: \"relative\",\r\n                overflow: \"hidden\",\r\n                boxShadow: \"0px 0px 100px #060606\",\r\n              }}\r\n            >\r\n              <div\r\n                className=\"content-background\"\r\n                style={{\r\n                  background: `linear-gradient(360deg, black, ${headerColors[0]})`,\r\n                }}\r\n              ></div>\r\n              {currentUser.uid === authorsData.uid ? <FriendRequest /> : null}\r\n              <AddWindow data={authorsData} />\r\n              <TopSongs\r\n                author={authorId}\r\n                authorsData={authorsData}\r\n                headerColors={headerColors}\r\n              />\r\n              {authorsData.friends && !authorsData.isAuthor && (\r\n                <PersonTinyList data={authorsData} title={\"Friends\"} />\r\n              )}\r\n              <Playlists\r\n                authorsData={authorsData}\r\n                headerColors={headerColors}\r\n              />\r\n              {authorsData.isAuthor ? (\r\n                <SimilarArtists data={authorsData} />\r\n              ) : null}\r\n            </ContentContainer>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthorPage;\r\n","import React from \"react\";\r\nexport const AmountOfUnseenMessages = ({ amountOfUnseen }) => {\r\n  return (\r\n    amountOfUnseen !== 0 && (\r\n      <div className=\"AmountOfUnseenMessages\">{amountOfUnseen}</div>\r\n    )\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nexport const SeenByCircle = ({listOfSeen}) => {\r\n\treturn (\r\n\t\t<div className = \"SeenByCircle\" style = {listOfSeen !== undefined? listOfSeen.length <= 1?{opacity:'1', visibility:'visible'}:{}:null}></div>\r\n\t)\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { SmallImages } from \"../../../album/ui/atoms/small-images\";\r\nexport const TypingAnimation = ({ typingPeople }) => {\r\n  const [typingPeopleData, setTypingPeopleData] = useState([]);\r\n  const { currentUser } = useAuth();\r\n  useEffect(() => {\r\n    setTypingPeopleData([]);\r\n    typingPeople.map(async (personId) => {\r\n      const personData = (\r\n        await firestore.collection(\"users\").doc(personId).get()\r\n      ).data();\r\n      if (personData?.uid !== currentUser.uid)\r\n        setTypingPeopleData((prev) => [...prev, personData]);\r\n    });\r\n  }, [typingPeople]);\r\n\r\n  return (\r\n    typingPeopleData.length > 0 && (\r\n      <div className=\"typingWrapper\">\r\n        <SmallImages\r\n          imagesList={typingPeopleData.map((person) => person?.photoURL)}\r\n          borderColor={\"var(--navItemColor)\"}\r\n        />\r\n        <div className=\"TypingAnimation\">\r\n          <span className=\"typingCircle\"></span>\r\n          <span className=\"typingCircle\"></span>\r\n          <span className=\"typingCircle\"></span>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BiAlbum } from \"react-icons/bi\";\r\nimport { BsDot } from \"react-icons/bs\";\r\nimport { FiMusic, FiUser } from \"react-icons/fi\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { SeenByCircle } from \"../../../dialogue/ui/atoms/seen-by-circle\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport { TypingAnimation } from \"../../../dialogue/ui/atoms/typing-animation\";\r\nimport getShortString from \"../../../../shared/lib/get-short-string\";\r\n\r\nexport const LastSentMessage = ({\r\n  sender,\r\n  isGroup,\r\n  message,\r\n  showUnseenCircle = false,\r\n  messageLen = 30,\r\n  chatId,\r\n  typing = false,\r\n}) => {\r\n  const { currentUser } = useAuth();\r\n  const [lastAttachedItem, setLastAttachedItem] = useState(\"\");\r\n  const [shouldPutDot, setShouldPutDot] = useState(false);\r\n  const [lastMessage, setLastMessage] = useState(\"\");\r\n  const messageIcons = [null, <FiMusic />, <BiAlbum />, <FiUser />];\r\n  const [lastIcon, setLastIcon] = useState(0);\r\n\r\n  async function findWhatToWriteUnderName() {\r\n    setLastMessage(\"\");\r\n    if (message !== undefined) {\r\n      const lastAttachedItem = message;\r\n      setLastMessage((str) => (str += lastAttachedItem.message));\r\n      setShouldPutDot(lastAttachedItem.message.length !== 0);\r\n      if (lastAttachedItem.attachedSongs.length) {\r\n        const songName = (\r\n          await firestore\r\n            .collection(\"songs\")\r\n            .doc(lastAttachedItem.attachedSongs[0])\r\n            .get()\r\n        ).data().name;\r\n        setLastIcon(1);\r\n        setLastAttachedItem((str) => (str += songName));\r\n      }\r\n      if (lastAttachedItem.attachedAlbums.length) {\r\n        const playlistName = await firestore\r\n          .collection(\"playlists\")\r\n          .doc(lastAttachedItem.attachedAlbums[0])\r\n          .get();\r\n        if (playlistName.exists)\r\n          setLastAttachedItem((str) => (str += playlistName.data().name));\r\n        else setLastAttachedItem((str) => (str += \"Deleted Album \"));\r\n        setLastIcon(2);\r\n      }\r\n      if (lastAttachedItem.attachedAuthors.length) {\r\n        const authorName = (\r\n          await firestore\r\n            .collection(\"users\")\r\n            .doc(lastAttachedItem.attachedAuthors[0])\r\n            .get()\r\n        ).data().displayName;\r\n        setLastIcon(3);\r\n        setLastAttachedItem((str) => (str += authorName));\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    findWhatToWriteUnderName();\r\n  }, [message.id]);\r\n  return !typing ? (\r\n    <div className=\"messageShowOutside\">\r\n      <span\r\n        style={\r\n          message.sender === currentUser.uid || (!!sender && isGroup)\r\n            ? { marginRight: \"5px\" }\r\n            : {}\r\n        }\r\n      >\r\n        {\" \"}\r\n        {`${\r\n          message.sender === currentUser.uid\r\n            ? \"You: \"\r\n            : isGroup\r\n            ? sender\r\n              ? sender.displayName + \": \"\r\n              : \"\"\r\n            : \"\"\r\n        }`}\r\n      </span>\r\n      {getShortString(lastMessage, messageLen)}\r\n      {shouldPutDot && lastAttachedItem.length ? <BsDot /> : null}\r\n      {messageIcons[lastIcon]}\r\n      {lastAttachedItem}\r\n      {showUnseenCircle && <SeenByCircle listOfSeen={message.seenBy} />}\r\n    </div>\r\n  ) : (\r\n    <TypingAnimation typingPeople={[sender.uid]} />\r\n  );\r\n};\r\n","export function amountOfUnseenMessages(messages, currentUser) {\r\n\treturn messages.reduce((accum, message) => {\r\n\t\tif (message.sender !== currentUser.uid) {\r\n\t\t\tif (message.seenBy !== undefined) {\r\n\t\t\t\tif (!message.seenBy.includes(currentUser.uid)) {\r\n\t\t\t\t\treturn ++accum\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn accum\r\n\t}, 0)\r\n}","import { useEffect, useState } from 'react'\r\nimport { firestore } from '../../../firebase'\r\n\r\nconst useUserOnline = (userUID) => {\r\n\tconst [isOnline, setIsOnline] = useState(false)\r\n\tuseEffect(() => {\r\n\t\tconst unsubscribe = firestore.collection('users').doc(userUID)\r\n\t\t\t.onSnapshot(doc => {\r\n\t\t\t\tif (userUID !== undefined) {\r\n\t\t\t\t\tconst fiveMinutesAgo = new Date().getTime() - 300000\r\n\t\t\t\t\tconst isOnline = doc.data().online > fiveMinutesAgo\r\n\t\t\t\t\tsetIsOnline(isOnline)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\treturn () => {\r\n\t\t\tunsubscribe()\r\n\t\t}\r\n\t}, [userUID])\r\n\r\n\treturn isOnline\r\n}\r\n\r\nexport default useUserOnline\r\n","import React from \"react\";\r\nimport useUserOnline from \"../../lib/hooks/use-user-online\";\r\n\r\nexport const IsOnlineCircle = ({ userUID }) => {\r\n  const isOnline = useUserOnline(userUID);\r\n\r\n  return isOnline ? <div className=\"onlineCircle\" /> : null;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { AmountOfUnseenMessages } from \"../atoms/amount-of-unseen-messages\";\r\nimport { firestore } from \"../../../../firebase\";\r\n\r\nimport { LastSentMessage } from \"../molecules/last-sent-message\";\r\nimport { amountOfUnseenMessages } from \"../../lib/amount-of-unseen-messages\";\r\nimport { IsOnlineCircle } from \"../../../../shared/ui/atoms/is-online-circle\";\r\nimport displayDate from \"../../../../shared/lib/display-date\";\r\n\r\nexport const ChatItem = ({ chatData }) => {\r\n  const { currentUser } = useAuth();\r\n  const { chatName, chatImage, participants } = chatData;\r\n  const [otherPerson, setOtherPerson] = useState({});\r\n  const [amountOfUnseen, setAmountOfUnseen] = useState(0);\r\n  const [messages, setMessages] = useState(chatData.messages);\r\n  const [typing, setTyping] = useState(false);\r\n\r\n  useEffect(() => {\r\n    firestore\r\n      .collection(\"chats\")\r\n      .doc(chatData.id)\r\n      .onSnapshot((snapshot) => {\r\n        setMessages(snapshot.data().messages);\r\n        setTyping(!!snapshot.data().typing.length);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setAmountOfUnseen(amountOfUnseenMessages(messages, currentUser));\r\n  }, []);\r\n\r\n  async function fetchOtherPerson() {\r\n    if (!chatName) {\r\n      const otherPersonId = participants.find(\r\n        (personId) => personId !== currentUser.uid\r\n      );\r\n      const person = (\r\n        await firestore.collection(\"users\").doc(otherPersonId).get()\r\n      ).data();\r\n      setOtherPerson(person);\r\n    } else {\r\n      const otherPersonId = messages[messages.length - 1]?.sender;\r\n      const person = (\r\n        await firestore.collection(\"users\").doc(otherPersonId).get()\r\n      ).data();\r\n      setOtherPerson(person);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchOtherPerson();\r\n  }, []);\r\n  return chatData ? (\r\n    <Link to={`/chat/${chatData.id}`}>\r\n      <div className={\"ChatItem \" + (amountOfUnseen > 0 ? \"unseen\" : \"\")}>\r\n        <div className=\"chatItemImage\">\r\n          <img loading=\"lazy\" src={chatImage || otherPerson.photoURL} alt=\"\" />\r\n        </div>\r\n        {!chatName && <IsOnlineCircle userUID={otherPerson.uid} />}\r\n        <div style={{ width: \"100%\" }}>\r\n          <h4\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <span>{chatName || otherPerson.displayName}</span>\r\n            <div>\r\n              {messages.length ? (\r\n                <span\r\n                  style={{ opacity: \".6\", fontWeight: \"500\", fontSize: \".8em\" }}\r\n                >\r\n                  {displayDate(\r\n                    messages[messages.length - 1].sentTime,\r\n                    chatData &&\r\n                      Date.now() -\r\n                        new Date(\r\n                          messages[messages.length - 1].sentTime\r\n                        ).getTime() >\r\n                        86000000\r\n                      ? 0\r\n                      : 2\r\n                  )}\r\n                </span>\r\n              ) : null}\r\n              <AmountOfUnseenMessages amountOfUnseen={amountOfUnseen} />\r\n            </div>\r\n          </h4>\r\n          {messages.length ? (\r\n            <p\r\n              style={\r\n                messages[messages.length - 1].sender !== currentUser.uid\r\n                  ? { color: \"#fff\" }\r\n                  : {}\r\n              }\r\n            >\r\n              {\r\n                <LastSentMessage\r\n                  sender={otherPerson}\r\n                  isGroup={chatName.length}\r\n                  message={messages[messages.length - 1]}\r\n                  showUnseenCircle\r\n                  typing={typing}\r\n                />\r\n              }\r\n            </p>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  ) : null;\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { createChat } from \"../../../../shared/lib/create-—Åhat\";\r\nimport { findChatURL } from \"../../../../shared/lib/find-chat-url\";\r\nimport getUID from \"../../../../shared/lib/get-uid\";\r\n\r\nconst useCreateChat = () => {\r\n  const { currentUser } = useAuth();\r\n  const { toggleModal } = useModal();\r\n  const { yourFriends } = useSong();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [foundFriends, setFoundFriends] = useState(yourFriends);\r\n  const [chosenFriends, setChosenFriends] = useState([]);\r\n  const [chatCover, setChatCover] = useState(\"\");\r\n  const [chatName, setChatName] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const chatId = getUID();\r\n  const history = useHistory();\r\n  const [shouldCreate, setShouldCreate] = useState(false);\r\n  const [friendChatId, setFriendChatId] = useState(0);\r\n  const [allowedToCreate, setAllowedToCreate] = useState(false);\r\n  useEffect(() => {\r\n    if (chosenFriends.length >= 1) {\r\n      findChatURL(chosenFriends, currentUser, setShouldCreate, setFriendChatId);\r\n    }\r\n  }, [chosenFriends]);\r\n\r\n  useEffect(() => {\r\n    if (chosenFriends.length) {\r\n      if (chosenFriends.length > 1) {\r\n        if (chatName.length) setAllowedToCreate(true);\r\n        else setAllowedToCreate(false);\r\n      } else setAllowedToCreate(true);\r\n    } else setAllowedToCreate(false);\r\n  }, [chosenFriends.length, chatName]);\r\n\r\n  const handleCreateChat = () => {\r\n    if (shouldCreate) {\r\n      if (allowedToCreate) {\r\n        createChat(\r\n          [currentUser.uid, ...chosenFriends],\r\n          chatId,\r\n          chatName,\r\n          chatCover,\r\n          [currentUser.uid]\r\n        ).then(() => {\r\n          history.push(`/chat/${chatId}`);\r\n          toggleModal();\r\n        });\r\n      } else setErrorMessage(\"Chat has to have a name\");\r\n    } else {\r\n      history.push(`/chat/${friendChatId}`);\r\n      toggleModal();\r\n    }\r\n  };\r\n\r\n  return {\r\n    searchValue,\r\n    setSearchValue,\r\n    foundFriends,\r\n    setFoundFriends,\r\n    chosenFriends,\r\n    setChosenFriends,\r\n    chatName,\r\n    setChatName,\r\n    setChatCover,\r\n    handleCreateChat,\r\n    shouldCreate,\r\n    allowedToCreate,\r\n    errorMessage,\r\n    setErrorMessage,\r\n  };\r\n};\r\n\r\nexport default useCreateChat;\r\n","import React from \"react\";\r\nimport { TinyPersonsList } from \"../../../author/ui/templates/tiny-persons-list\";\r\nimport DownloadButton from \"../../../../shared/ui/atoms/download-button\";\r\nimport Input from \"../../../../shared/ui/atoms/input\";\r\nimport SubmitButton from \"../../../../shared/ui/atoms/submit-button\";\r\nimport SearchBar from \"../../../../shared/ui/organisms/search-bar\";\r\nimport useCreateChat from \"../../lib/hooks/use-create-chat\";\r\n\r\nexport const CreateChat = () => {\r\n  const {\r\n    searchValue,\r\n    setSearchValue,\r\n    foundFriends,\r\n    setFoundFriends,\r\n    chosenFriends,\r\n    setChosenFriends,\r\n    chatName,\r\n    setChatName,\r\n    setChatCover,\r\n    handleCreateChat,\r\n    shouldCreate,\r\n    allowedToCreate,\r\n    errorMessage,\r\n    setErrorMessage,\r\n  } = useCreateChat();\r\n\r\n  // console.log(\r\n  //   chosenFriends.length > 0 &&\r\n  //     ((shouldCreate && allowedToCreate) || !shouldCreate)\r\n  // );\r\n\r\n  return (\r\n    <div className=\"CreateChat\">\r\n      <SearchBar\r\n        value={searchValue}\r\n        setValue={setSearchValue}\r\n        setResultAuthorList={setFoundFriends}\r\n        focus\r\n        inputText={\"Search for friends\"}\r\n        defaultSearchMode={\"users\"}\r\n      />\r\n      <TinyPersonsList\r\n        listOfPeople={foundFriends}\r\n        chosenArray={chosenFriends}\r\n        setChosenArray={setChosenFriends}\r\n        lastSeen\r\n      />\r\n      {chosenFriends.length > 1 && shouldCreate && (\r\n        <>\r\n          <Input\r\n            title=\"Chat name\"\r\n            value={chatName}\r\n            setValue={setChatName}\r\n            placeholder=\"Enter chat name\"\r\n          />\r\n          <DownloadButton\r\n            title={\"Chat image\"}\r\n            text={\"Download chat image\"}\r\n            place={\"chatCovers/\"}\r\n            setItemSrc={setChatCover}\r\n            setImageLocalPath={() => null}\r\n          />\r\n        </>\r\n      )}\r\n      <SubmitButton\r\n        text={shouldCreate ? \"Create Chat\" : \"Go to chat\"}\r\n        action={handleCreateChat}\r\n        isActive={\r\n          chosenFriends.length > 0 &&\r\n          ((shouldCreate && allowedToCreate) || !shouldCreate)\r\n        }\r\n        errorMessage={errorMessage}\r\n        setErrorMessage={setErrorMessage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import \"./style.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { FiPlus } from \"react-icons/fi\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\nimport { useModal } from \"../../contexts/modal\";\r\nimport { ChatItem } from \"../../features/chats/ui/organisms/chat-item\";\r\nimport { CreateChat } from \"../../features/chats/ui/organisms/create-chat\";\r\nimport { LoadingCircle } from \"../../features/loading/ui/atoms/loading-circle\";\r\nimport { fetchItemList } from \"../../shared/lib/fetch-item-list\";\r\nimport { ContentContainer } from \"../../shared/ui/atoms/content-container\";\r\n\r\nconst ChatPage = () => {\r\n  const [yourChats, setYourChats] = useState([]);\r\n  const { toggleModal, setContent } = useModal();\r\n  const { currentUser } = useAuth();\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    fetchItemList(\r\n      currentUser.chats,\r\n      \"chats\",\r\n      setYourChats,\r\n      (res) =>\r\n        res.sort((a, b) => {\r\n          if (a.messages.length && b.messages.length) {\r\n            return (\r\n              new Date(b.messages[b.messages.length - 1].sentTime).getTime() -\r\n              new Date(a.messages[a.messages.length - 1].sentTime).getTime()\r\n            );\r\n          }\r\n        }),\r\n      () => setLoading(false)\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ animation: \"zoomIn .2s forwards\", minHeight: \"100%\" }}>\r\n      <ContentContainer>\r\n        <div\r\n          style={{\r\n            marginBottom: \"10px\",\r\n            display: \"flex\",\r\n            alignItems: \"start\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <button\r\n            className=\"standartButton\"\r\n            onClick={() => {\r\n              toggleModal();\r\n              setContent(<CreateChat />);\r\n            }}\r\n          >\r\n            <FiPlus />\r\n            Create chat\r\n          </button>\r\n        </div>\r\n        {loading ? (\r\n          <LoadingCircle />\r\n        ) : (\r\n          <div className=\"chatsWrapper\">\r\n            {yourChats.length ? (\r\n              yourChats.map((chat, index) => {\r\n                return <ChatItem chatData={chat} key={index} />;\r\n              })\r\n            ) : (\r\n              <h3>No chats</h3>\r\n            )}\r\n          </div>\r\n        )}\r\n      </ContentContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n","import React from \"react\";\r\nimport displayDate from \"../../../../shared/lib/display-date\";\r\n\r\nexport const DateOnTop = ({ date }) => {\r\n  return <div className=\"DateOnTop\">{displayDate(date)}</div>;\r\n};\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useAuth } from '../../../../contexts/auth';\r\nimport { useModal } from '../../../../contexts/modal';\r\nimport { firestore } from '../../../../firebase';\r\n\r\nconst useChatHeader = (data) => {\r\n\tconst { currentUser } = useAuth();\r\n\r\n\tconst [otherPerson, setOtherPerson] = useState({});\r\n\tconst [headerColors, setHeaderColors] = useState(\r\n\t\t!!data.chatName ? [] : data.imageColors\r\n\t);\r\n\tasync function fetchOtherPerson() {\r\n\t\tconst otherPersonId = data.participants.find(\r\n\t\t\t(personId) => personId !== currentUser.uid\r\n\t\t);\r\n\t\tconst person = (\r\n\t\t\tawait firestore.collection(\"users\").doc(otherPersonId).get()\r\n\t\t).data();\r\n\t\tsetOtherPerson(person);\r\n\t\tsetHeaderColors(person.imageColors);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!data.chatName.length) {\r\n\t\t\tfetchOtherPerson();\r\n\t\t}\r\n\t}, [data.id]);\r\n\r\n\treturn [otherPerson, headerColors]\r\n}\r\n\r\nexport default useChatHeader\r\n","import { firestore } from \"../../../firebase\"\r\nimport { sendMessage } from \"./send-message\"\r\n\r\n\r\nconst leaveChat = async (chatId, user) => {\r\n\tconst chatData = (await firestore.collection('chats').doc(chatId).get()).data()\r\n\r\n\tconst newParticipants = chatData.participants.filter((participantId) => participantId !== user.uid)\r\n\tsendMessage(chatId, chatData, \"soundbubble\", `${user.displayName} left the chat`)\r\n\tfirestore.collection('chats').doc(chatId).update({\r\n\t\tparticipants: newParticipants\r\n\t})\r\n}\r\n\r\nexport default leaveChat","import React from \"react\";\r\nimport { FiLogOut, FiX } from \"react-icons/fi\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport Button from \"../../../../shared/ui/atoms/button\";\r\nimport { Hint } from \"../../../../shared/ui/atoms/hint\";\r\nimport leaveChat from \"../../lib/leave-chat\";\r\nimport { ChatInfo } from \"../organisms/chat-info\";\r\n\r\nconst LeaveChatButton = ({ chat, user }) => {\r\n  const { currentUser } = useAuth();\r\n  const { openConfirm, closeConfirm, setContent } = useModal();\r\n  const isCurrentUserLeaving = currentUser.uid === user.uid;\r\n  return (\r\n    <>\r\n      <Hint text={isCurrentUserLeaving ? \"quit chat\" : \"kick\"} />\r\n      <Button\r\n        onClick={() =>\r\n          openConfirm(\r\n            `Are you sure you want to ${\r\n              isCurrentUserLeaving ? \"leave\" : `kick ${user.displayName} `\r\n            } from this chat?`,\r\n            \"Yes\",\r\n            \"No\",\r\n            () => {\r\n              leaveChat(chat.id, user);\r\n              closeConfirm();\r\n              setContent(<ChatInfo data={chat} />);\r\n            }\r\n          )\r\n        }\r\n        icon={isCurrentUserLeaving ? <FiLogOut /> : <FiX />}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeaveChatButton;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { AlbumList } from \"../../../album/ui/template/album-list\";\r\nimport { AuthorsList } from \"../../../../features/author/ui/templates/authors-list\";\r\nimport { SongList } from \"../../../../features/song/ui/templates/song-list\";\r\nimport { LoadingCircle } from \"../../../loading/ui/atoms/loading-circle\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport { fetchItemList } from \"../../../../shared/lib/fetch-item-list\";\r\nimport { Slider } from \"../../../../shared/ui/molecules/slider\";\r\nexport const AttachmentList = ({ chatId }) => {\r\n  const [attachmentList, setAttachmentList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [sliderCurrentPage, setSliderCurrentPage] = useState(0);\r\n  const attachmentContent = [\r\n    <SongList\r\n      listOfSongs={attachmentList}\r\n      source={{\r\n        source: `/chat/${chatId}`,\r\n        name: `Chat with ${chatId}`,\r\n        image: \"\",\r\n        songsList: attachmentList,\r\n      }}\r\n    />,\r\n    <AuthorsList listOfAuthors={attachmentList} />,\r\n    <AlbumList listOfAlbums={attachmentList} loading={loading} />,\r\n  ];\r\n  async function fetchAttachedData(attachedType, firebaseCollection) {\r\n    const chatData = await firestore.collection(\"chats\").doc(chatId).get();\r\n    chatData.data().messages.forEach((message) => {\r\n      if (message[attachedType].length > 0) {\r\n        fetchItemList(\r\n          message[attachedType],\r\n          firebaseCollection,\r\n          setAttachmentList,\r\n          (res) => res,\r\n          () => setLoading(false),\r\n          undefined,\r\n          1\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    switch (sliderCurrentPage) {\r\n      case 0:\r\n        fetchAttachedData(\"attachedSongs\", \"songs\").then(() =>\r\n          setLoading(false)\r\n        );\r\n        break;\r\n      case 1:\r\n        fetchAttachedData(\"attachedAuthors\", \"users\").then(() =>\r\n          setLoading(false)\r\n        );\r\n        break;\r\n      case 2:\r\n        fetchAttachedData(\"attachedAlbums\", \"playlists\").then(() =>\r\n          setLoading(false)\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [sliderCurrentPage]);\r\n\r\n  useEffect(() => {\r\n    setAttachmentList([]);\r\n  }, [chatId]);\r\n\r\n  return (\r\n    <div className=\"AttachmentList\">\r\n      <Slider\r\n        pages={[\"Songs\", \"Authors\", \"Playlists\"]}\r\n        currentPage={sliderCurrentPage}\r\n        setCurrentPage={(page) => {\r\n          setSliderCurrentPage(page);\r\n          setLoading(true);\r\n          setAttachmentList([]);\r\n        }}\r\n      />\r\n      {loading ? (\r\n        <LoadingCircle />\r\n      ) : attachmentList.length > 0 ? (\r\n        attachmentContent[sliderCurrentPage]\r\n      ) : (\r\n        <h2>Nothing here</h2>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","const filterArrayOfObjectsWithArray = (whatToFilter, withWhatToFilter, filterParametr = 'uid', isInverted = true) => {\r\n\treturn isInverted ? whatToFilter.filter(\r\n\t\t(item) => !withWhatToFilter.includes(item[filterParametr])\r\n\t) : whatToFilter.filter(\r\n\t\t(item) => withWhatToFilter.includes(item[filterParametr])\r\n\t)\r\n}\r\n\r\nexport default filterArrayOfObjectsWithArray;","import { firestore } from \"../../../firebase\"\r\nimport { sendMessage } from \"./send-message\"\r\n\r\nconst addPeopleToChat = async (chatId, people, setLoading, setCompleted) => {\r\n\tsetLoading(true)\r\n\tsetCompleted(false)\r\n\tconst chatData = (await firestore.collection('chats').doc(chatId).get()).data()\r\n\tconst newParticipants = chatData.participants\r\n\tpeople.forEach(person => newParticipants.push(person.uid));\r\n\r\n\tfirestore.collection('chats').doc(chatId).update({\r\n\t\tparticipants: newParticipants\r\n\t})\r\n\r\n\tpeople.forEach(({ uid, chats }) => {\r\n\t\tfirestore.collection('users').doc(uid).update({\r\n\t\t\tchats: [...chats, chatId]\r\n\t\t})\r\n\t})\r\n\r\n\tsendMessage(chatId, chatData, \"soundbubble\", `${people.map(({ displayName }) => displayName)} entered the chat`)\r\n\tsetLoading(false)\r\n\tsetCompleted(true)\r\n}\r\n\r\nexport default addPeopleToChat","import React, { useState } from \"react\";\r\n\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport filterArrayOfObjectsWithArray from \"../../../../shared/lib/filter-array-of-objects-with-array\";\r\nimport SubmitButton from \"../../../../shared/ui/atoms/submit-button\";\r\nimport SearchBar from \"../../../../shared/ui/organisms/search-bar\";\r\nimport { TinyPersonsList } from \"../../../author/ui/templates/tiny-persons-list\";\r\nimport addPeopleToChat from \"../../lib/add-people-to-chat\";\r\n\r\nconst AddPeopleToChat = ({ chat }) => {\r\n  const { yourFriends } = useSong();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [foundFriends, setFoundFriends] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [completed, setCompleted] = useState(false);\r\n  const filteredFriends = filterArrayOfObjectsWithArray(\r\n    yourFriends,\r\n    chat.participants\r\n  );\r\n  const [chosenFriends, setChosenFriends] = useState([]);\r\n  return (\r\n    <div>\r\n      <SearchBar\r\n        value={searchValue}\r\n        setValue={setSearchValue}\r\n        setResultAuthorList={setFoundFriends}\r\n        defaultSearchMode=\"authors\"\r\n        defaultAuthorsListValue={filteredFriends}\r\n      />\r\n      <TinyPersonsList\r\n        listOfPeople={foundFriends}\r\n        chosenArray={chosenFriends}\r\n        setChosenArray={setChosenFriends}\r\n        lastSeen\r\n      />\r\n      {!!chosenFriends.length && (\r\n        <SubmitButton\r\n          text={`Add ${chosenFriends.length} friends`}\r\n          action={() =>\r\n            addPeopleToChat(\r\n              chat.id,\r\n              filterArrayOfObjectsWithArray(\r\n                yourFriends,\r\n                chosenFriends,\r\n                \"uid\",\r\n                false\r\n              ),\r\n              setLoading,\r\n              setCompleted\r\n            )\r\n          }\r\n          isLoading={loading}\r\n          completed={completed}\r\n          setCompleted={setCompleted}\r\n          bottomMessage={`${chosenFriends.length} friends have been added to ${chat.chatName}`}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPeopleToChat;\r\n","import { useEffect, useState } from \"react\";\r\nimport { ColorExtractor } from \"react-color-extractor\";\r\nimport { FiSettings, FiUserPlus } from \"react-icons/fi\";\r\nimport { ImAttachment } from \"react-icons/im\";\r\nimport { MdModeEdit } from \"react-icons/md\";\r\nimport { RiVolumeUpLine } from \"react-icons/ri\";\r\nimport { PersonTiny } from \"../../../../entities/user/ui/organisms/person-tiny\";\r\nimport { LoadingCircle } from \"../../../loading/ui/atoms/loading-circle\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { firestore, storage } from \"../../../../firebase\";\r\nimport { fetchItemList } from \"../../../../shared/lib/fetch-item-list\";\r\nimport getShortString from \"../../../../shared/lib/get-short-string\";\r\nimport Button from \"../../../../shared/ui/atoms/button\";\r\nimport Input from \"../../../../shared/ui/atoms/input\";\r\nimport { Slider } from \"../../../../shared/ui/molecules/slider\";\r\nimport LeaveChatButton from \"../atoms/leave-chat-button\";\r\nimport { AttachmentList } from \"../molecules/attachment-list\";\r\nimport AddPeopleToChat from \"./add-people-to-chat\";\r\n\r\nexport const ChatInfo = ({ data }) => {\r\n  const { currentUser } = useAuth();\r\n  const [participants, setParticipants] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [chatNameValue, setChatNameValue] = useState(data.chatName);\r\n  const [newChatPhoto, setNewChatPhoto] = useState(data.chatImage);\r\n  const [newImageLocalPath, setNewImageLocalPath] = useState(\"\");\r\n  const [newImageColors, setNewImageColors] = useState(data.imageColors || []);\r\n  const { setContent } = useModal();\r\n  const [participantsPage, setParticipantsPage] = useState(0);\r\n  const [showUpdateBtn, setShowUpdateBtn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchItemList(\r\n      data.participants,\r\n      \"users\",\r\n      setParticipants,\r\n      (res) => res,\r\n      () => setLoading(false)\r\n    );\r\n  }, [data.id]);\r\n  useEffect(() => {\r\n    if (\r\n      chatNameValue.trim() !== data.chatName.trim() ||\r\n      newChatPhoto !== data.chatImage\r\n    ) {\r\n      setShowUpdateBtn(true);\r\n    } else setShowUpdateBtn(false);\r\n  }, [chatNameValue, newChatPhoto]);\r\n\r\n  useEffect(() => {\r\n    setChatNameValue(data.chatName);\r\n  }, [data.id]);\r\n\r\n  useEffect(() => {\r\n    setChatNameValue(data.chatName);\r\n    setNewChatPhoto(data.chatImage);\r\n  }, [data.chatName, data.chatImage]);\r\n\r\n  function updateChatInfo() {\r\n    firestore.collection(\"chats\").doc(data.id).update({\r\n      chatName: chatNameValue,\r\n      chatImage: newChatPhoto,\r\n      imageColors: newImageColors,\r\n    });\r\n  }\r\n\r\n  async function onFileChange(e, place, setFunc) {\r\n    const file = e.target.files[0];\r\n    setNewImageLocalPath(URL.createObjectURL(file));\r\n    const storageRef = storage.ref();\r\n    const fileRef = storageRef.child(place + file.name);\r\n    await fileRef.put(file);\r\n    setFunc(await fileRef.getDownloadURL());\r\n  }\r\n  return (\r\n    <div className=\"ChatInfo\">\r\n      <ColorExtractor\r\n        src={newImageLocalPath}\r\n        getColors={(colors) => setNewImageColors(colors)}\r\n      />\r\n      <div className=\"chatInfoImageAndName\">\r\n        <div className=\"chatInfoImage\">\r\n          <label className=\"changePhoto\">\r\n            <MdModeEdit />\r\n            Change photo\r\n            <input\r\n              type=\"file\"\r\n              style={{ display: \"none\" }}\r\n              onChange={(e) => onFileChange(e, \"chatCovers/\", setNewChatPhoto)}\r\n            />\r\n          </label>\r\n          <img loading=\"lazy\" src={newChatPhoto} alt=\"\" />\r\n        </div>\r\n        <div>\r\n          <Input\r\n            value={chatNameValue}\r\n            setValue={setChatNameValue}\r\n            placeholder={\"Enter chat name\"}\r\n            required\r\n          />\r\n          <div className=\"chatInfoButtons\">\r\n            <button className=\"chatInfoButton\">\r\n              <FiSettings />\r\n              Settings\r\n            </button>\r\n            <button\r\n              className=\"chatInfoButton\"\r\n              onClick={() => setContent(<AttachmentList chatId={data.id} />)}\r\n            >\r\n              <ImAttachment />\r\n              {getShortString(\"Attachments\", 7)}\r\n            </button>\r\n            <button className=\"chatInfoButton\">\r\n              <RiVolumeUpLine />\r\n              Sound\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {showUpdateBtn ? (\r\n          <button className=\"standartButton\" onClick={updateChatInfo}>\r\n            Update Chat\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <h4>Chat participants</h4>\r\n        <Button\r\n          text={\"Add\"}\r\n          icon={<FiUserPlus />}\r\n          onClick={() => setContent(<AddPeopleToChat chat={data} />)}\r\n        />\r\n      </div>\r\n      <Slider\r\n        pages={[\"All participants\", \"Administrators\"]}\r\n        currentPage={participantsPage}\r\n        setCurrentPage={setParticipantsPage}\r\n      />\r\n      {!loading ? (\r\n        participants.map((person) => {\r\n          if (participantsPage === 1) {\r\n            if (data.admins.includes(person.uid))\r\n              return <PersonTiny data={person} key={person.uid} lastSeen />;\r\n          } else\r\n            return (\r\n              <PersonTiny\r\n                data={person}\r\n                key={person.uid}\r\n                lastSeen\r\n                rightButton={\r\n                  person.uid === currentUser.uid ? (\r\n                    <LeaveChatButton chat={data} user={currentUser} />\r\n                  ) : data.admins.includes(currentUser.uid) ? (\r\n                    <LeaveChatButton chat={data} user={person} />\r\n                  ) : null\r\n                }\r\n              />\r\n            );\r\n        })\r\n      ) : (\r\n        <LoadingCircle />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { firestore } from \"../../firebase\"\r\n\r\nconst fetchCollection = async (collection) => {\r\n\tconst docs = (await firestore.collection(collection).get()).docs.map((doc) => doc.data())\r\n\treturn docs\r\n}\r\n\r\nexport default fetchCollection","import React from \"react\";\r\nimport { firestore } from \"../../../../firebase\";\r\n\r\nexport const WallpaperItem = ({ chatId, image, currentWallpaper }) => {\r\n  function changeChatWallpaper() {\r\n    firestore.collection(\"chats\").doc(chatId).update({\r\n      wallpaper: image,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"WallpaperItem \" + (image === currentWallpaper ? \"active\" : \"\")\r\n      }\r\n      onClick={changeChatWallpaper}\r\n      style={\r\n        image === \"undefined\" ? { background: \"var(--playlistsColor)\" } : {}\r\n      }\r\n    >\r\n      {image !== \"undefined\" ? <img loading=\"lazy\" src={image} alt=\"\" /> : null}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { LoadingCircle } from \"../../../loading/ui/atoms/loading-circle\";\r\nimport fetchCollection from \"../../../../shared/lib/fetch-collection\";\r\nimport { WallpaperItem } from \"../atoms/wallpaper-item\";\r\n\r\nexport const Wallpapers = ({ chatId, currentWallpaper }) => {\r\n  const [wallpapers, setwallpapers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchCollection(\"chatWallpapers\").then((res) => setwallpapers(res));\r\n  }, []);\r\n\r\n  return !!wallpapers ? (\r\n    <div className=\"Wallpapers\">\r\n      <h2>Wallpapers</h2>\r\n      <div className=\"wallpapreWrapper\">\r\n        <WallpaperItem chatId={chatId} image={\"undefined\"} />\r\n        {wallpapers.map((wallpaper, index) => {\r\n          return (\r\n            <WallpaperItem\r\n              chatId={chatId}\r\n              image={wallpaper.image}\r\n              key={wallpaper.id}\r\n              currentWallpaper={currentWallpaper}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <LoadingCircle />\r\n  );\r\n};\r\n","import React, { useRef, useState } from \"react\";\r\nimport { FiFolder, FiImage, FiInfo, FiMoreHorizontal } from \"react-icons/fi\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport useOutsideClick from \"../../../../shared/lib/hooks/use-outside-click\";\r\nimport { ChatInfo } from \"../organisms/chat-info\";\r\nimport { AttachmentList } from \"./attachment-list\";\r\nimport { Wallpapers } from \"./wallpapers\";\r\n\r\nexport const ChatMoreBtn = ({ chatId, currentWallpaper, data }) => {\r\n  const [openMoreWindow, setOpenMoreWindow] = useState();\r\n  const { toggleModal, setContent } = useModal();\r\n  const chatMoreBtnRef = useRef(null);\r\n  useOutsideClick(chatMoreBtnRef, setOpenMoreWindow);\r\n  return (\r\n    <div className=\"ChatMoreBtn\" ref={chatMoreBtnRef}>\r\n      <button onClick={() => setOpenMoreWindow(!openMoreWindow)}>\r\n        <FiMoreHorizontal />\r\n      </button>\r\n      <div\r\n        className=\"chatHeaderMenuWindow\"\r\n        style={!openMoreWindow ? { display: \"none\" } : {}}\r\n      >\r\n        {data.participants.length > 2 ? (\r\n          <div\r\n            className=\"chatHeaderMenuWindowItem\"\r\n            onClick={() => {\r\n              toggleModal();\r\n              setContent(<ChatInfo data={data} />);\r\n            }}\r\n          >\r\n            <FiInfo />\r\n            <span>Info</span>\r\n          </div>\r\n        ) : null}\r\n        {/* <div className=\"chatHeaderMenuWindowItem\">\r\n\t\t\t\t\t<FiSearch/>\r\n\t\t\t\t\t<span>Search messages</span>\r\n\t\t\t\t</div> */}\r\n        <div\r\n          className=\"chatHeaderMenuWindowItem\"\r\n          onClick={() => {\r\n            toggleModal();\r\n            setContent(<AttachmentList chatId={chatId} />);\r\n          }}\r\n        >\r\n          <FiFolder />\r\n          <span>Attachments</span>\r\n        </div>\r\n        <div\r\n          className=\"chatHeaderMenuWindowItem\"\r\n          onClick={() => {\r\n            toggleModal();\r\n            setContent(\r\n              <Wallpapers chatId={chatId} currentWallpaper={currentWallpaper} />\r\n            );\r\n          }}\r\n        >\r\n          <FiImage />\r\n          <span>Change wallpaper</span>\r\n        </div>\r\n        {/* <div className=\"chatHeaderMenuWindowItem\">\r\n\t\t\t\t\t<FiTrash/>\r\n\t\t\t\t\t<span>Delete chat</span>\r\n\t\t\t\t</div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { GoBackBtn } from \"../../../../shared/ui/atoms/go-back-button\";\r\nimport { LastSeen } from \"../../../../shared/ui/atoms/last-seen\";\r\nimport useChatHeader from \"../../lib/hooks/use-chat-header\";\r\nimport { ChatMoreBtn } from \"../molecules/chat-more-button\";\r\nimport { ChatInfo } from \"./chat-info\";\r\n\r\nexport const ChatHeader = ({ data }) => {\r\n  const { toggleModal, setContent } = useModal();\r\n  const [otherPerson, headerColors] = useChatHeader(data);\r\n\r\n  return (\r\n    <div\r\n      className=\"ChatHeader\"\r\n      style={\r\n        headerColors?.length\r\n          ? {\r\n              background: `linear-gradient(45deg, ${headerColors[0]}, ${headerColors[1]})`,\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      <GoBackBtn />\r\n      {data.chatName.length === 0 ? (\r\n        <Link\r\n          className=\"chatHeaderImageAndName\"\r\n          to={`/authors/${otherPerson.uid}`}\r\n        >\r\n          <div\r\n            className=\"chatHeaderImage\"\r\n            style={{\r\n              backgroundImage: `url(${otherPerson.photoURL || data.chatImage})`,\r\n            }}\r\n          />\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <h4>{otherPerson.displayName || data.chatName}</h4>\r\n            <LastSeen userUID={otherPerson.uid} />\r\n          </div>\r\n        </Link>\r\n      ) : (\r\n        <div\r\n          className=\"chatHeaderImageAndName\"\r\n          onClick={() => {\r\n            toggleModal();\r\n            setContent(<ChatInfo data={data} />);\r\n          }}\r\n        >\r\n          <div\r\n            className=\"chatHeaderImage\"\r\n            style={{\r\n              backgroundImage: `url(${otherPerson.photoURL || data.chatImage})`,\r\n            }}\r\n          />\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <h4>{otherPerson.displayName || data.chatName}</h4>\r\n            <LastSeen userUID={otherPerson.uid} />\r\n          </div>\r\n        </div>\r\n      )}\r\n      <ChatMoreBtn\r\n        chatId={data.id}\r\n        data={data}\r\n        currentWallpaper={data.wallpaper}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","export function whatToWriteInResponseToItem(referedMessage) {\r\n\treturn referedMessage.attachedSongs.length ? \"Audio\" :\r\n\t\treferedMessage.attachedAlbums.length ? \"Album\" :\r\n\t\t\treferedMessage.attachedAuthors.length ? \"Author\" :\r\n\t\t\t\treferedMessage.inResponseToMessage && referedMessage.inResponseToMessage.length ? \"Forwarded message\" : \"\"\r\n}","import React from \"react\";\r\nimport { FiX } from \"react-icons/fi\";\r\nexport const AttachedItemsInChatInput = ({\r\n  list,\r\n  attachedItems,\r\n  setAttachedItems,\r\n  icon,\r\n}) => {\r\n  const findName = (itemId) =>\r\n    list.find((item) => item.id === itemId || item.uid === itemId);\r\n\r\n  function removeItemFromAttached(attachedItems, setItems, itemId) {\r\n    setItems(attachedItems.filter((id) => id !== itemId));\r\n  }\r\n  return (\r\n    <div className=\"AttachedItemsInChatInput\">\r\n      {attachedItems.map((itemId, index) => {\r\n        return (\r\n          <div className=\"attachedSongItem\" key={itemId}>\r\n            {icon}\r\n            <span>{findName(itemId).name || findName(itemId).displayName}</span>\r\n            <button\r\n              className=\"removeMessageFromResponse\"\r\n              onClick={() =>\r\n                removeItemFromAttached(attachedItems, setAttachedItems, itemId)\r\n              }\r\n            >\r\n              <FiX />\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NotAllowedToSendMessagesWrapper = styled.div`\r\n  background: var(--yellowAndOrangeGrad);\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: 600;\r\n  box-sizing: border-box;\r\n\r\n  @media (max-width: 800px) {\r\n    font-size: 0.8em;\r\n  }\r\n`;\r\n\r\nconst NotAllowedToSendMessages = () => {\r\n  return (\r\n    <NotAllowedToSendMessagesWrapper>\r\n      You are not allowed to send any messages since this person is not in your\r\n      friend list\r\n    </NotAllowedToSendMessagesWrapper>\r\n  );\r\n};\r\n\r\nexport default NotAllowedToSendMessages;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport { useAuth } from '../../../../contexts/auth';\r\nimport { useSong } from '../../../../contexts/song';\r\nimport { firestore } from '../../../../firebase';\r\nimport useOutsideClick from '../../../../shared/lib/hooks/use-outside-click';\r\nimport { sendMessage } from '../send-message';\r\n\r\nconst useChatInput = (chatId, chatData, inResponseToMessage, setInResponseToMessage, messageText, setMessageText, otherMessages) => {\r\n\tconst { currentUser } = useAuth();\r\n\tconst [openAttachWindow, setOpenAttachWindow] = useState(false);\r\n\tconst { yourSongs, yourAuthors, yourPlaylists } = useSong();\r\n\tconst [searchValue, setSearchValue] = useState(\"\");\r\n\tconst [allFoundSongs, setAllFoundSongs] = useState(yourSongs);\r\n\tconst [attachedSongs, setAttachedSongs] = useState([]);\r\n\tconst [attachedAlbums, setAttachedAlbums] = useState([]);\r\n\tconst [attachedAuthors, setAttachedAuthors] = useState([]);\r\n\tconst [resultPlaylists, setResultPlaylists] = useState(yourPlaylists);\r\n\tconst [resultAuthorList, setResultAuthorList] = useState(yourAuthors);\r\n\tconst [inResponseNames, setInResponseNames] = useState([]);\r\n\tconst [attachedSongsNames, setAttachedSongsNames] = useState([]);\r\n\tconst attachWindowRef = useRef(null);\r\n\r\n\r\n\tuseOutsideClick(attachWindowRef, setOpenAttachWindow);\r\n\r\n\tfunction sendMessageFull() {\r\n\t\tsendMessage(\r\n\t\t\tchatId,\r\n\t\t\tchatData,\r\n\t\t\tcurrentUser.uid,\r\n\t\t\tmessageText,\r\n\t\t\tattachedSongs,\r\n\t\t\tattachedAlbums,\r\n\t\t\tattachedAuthors,\r\n\t\t\tinResponseToMessage\r\n\t\t);\r\n\t\tsetMessageText(\"\");\r\n\t\tsetAttachedSongs([]);\r\n\t\tsetAttachedAuthors([]);\r\n\t\tsetAttachedAlbums([]);\r\n\t\tsetInResponseToMessage([]);\r\n\t\tsetOpenAttachWindow(false);\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tif (searchValue.length === 0) {\r\n\t\t\tsetAllFoundSongs(yourSongs);\r\n\t\t}\r\n\t}, [searchValue]);\r\n\r\n\tfunction removeMessageFromResponseList(messageId) {\r\n\t\tsetInResponseToMessage(\r\n\t\t\tinResponseToMessage.filter((id) => id !== messageId)\r\n\t\t);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (messageText.length === 0) {\r\n\t\t\tfirestore\r\n\t\t\t\t.collection(\"chats\")\r\n\t\t\t\t.doc(chatId)\r\n\t\t\t\t.update({\r\n\t\t\t\t\ttyping: chatData.typing.filter((id) => id !== currentUser.uid),\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tif (!chatData.typing.includes(currentUser.uid)) {\r\n\t\t\t\tconst tempArray = chatData.typing;\r\n\t\t\t\ttempArray.push(currentUser.uid);\r\n\t\t\t\tfirestore.collection(\"chats\").doc(chatId).update({\r\n\t\t\t\t\ttyping: tempArray,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [messageText]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetInResponseNames([]);\r\n\t\tinResponseToMessage.forEach(async (id) => {\r\n\t\t\tconst name = (\r\n\t\t\t\tawait firestore\r\n\t\t\t\t\t.collection(\"users\")\r\n\t\t\t\t\t.doc(otherMessages[id].sender)\r\n\t\t\t\t\t.get()\r\n\t\t\t).data().displayName;\r\n\t\t\tsetInResponseNames((prev) => [...prev, name]);\r\n\t\t});\r\n\t}, [inResponseToMessage.length]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetAttachedSongsNames([]);\r\n\t\tattachedSongs.forEach(async (id) => {\r\n\t\t\tconst name = (await firestore.collection(\"songs\").doc(id).get()).data()\r\n\t\t\t\t.name;\r\n\t\t\tsetAttachedSongsNames((prev) => [...prev, name]);\r\n\t\t});\r\n\t}, [attachedSongs.length]);\r\n\r\n\treturn {\r\n\t\topenAttachWindow,\r\n\t\tsetOpenAttachWindow,\r\n\t\tattachWindowRef,\r\n\t\tsearchValue,\r\n\t\tsetSearchValue,\r\n\t\tsetAllFoundSongs,\r\n\t\tsetResultPlaylists,\r\n\t\tsetResultAuthorList,\r\n\t\tallFoundSongs,\r\n\t\tsetAttachedSongs,\r\n\t\tresultAuthorList,\r\n\t\tresultPlaylists,\r\n\t\tattachedAuthors,\r\n\t\tattachedAlbums,\r\n\t\tattachedSongs,\r\n\t\tsetAttachedAuthors,\r\n\t\tsetAttachedAlbums,\r\n\t\tattachedSongsNames,\r\n\t\tremoveMessageFromResponseList,\r\n\t\tinResponseNames,\r\n\t\tsendMessageFull,\r\n\t}\r\n}\r\n\r\nexport default useChatInput\r\n","import React, { memo, useEffect, useRef, useState } from \"react\";\r\nimport { BiAlbum } from \"react-icons/bi\";\r\nimport { CgMusicNote } from \"react-icons/cg\";\r\nimport { FiUser, FiX } from \"react-icons/fi\";\r\nimport { ImAttachment } from \"react-icons/im\";\r\nimport { MdSend } from \"react-icons/md\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport { whatToWriteInResponseToItem } from \"../../lib/what-to-write-in-response-item\";\r\n\r\nimport useOutsideClick from \"../../../../shared/lib/hooks/use-outside-click\";\r\nimport SearchBar from \"../../../../shared/ui/organisms/search-bar\";\r\nimport { AlbumList } from \"../../../album/ui/template/album-list\";\r\nimport { AuthorsList } from \"../../../../features/author/ui/templates/authors-list\";\r\nimport { SongList } from \"../../../../features/song/ui/templates/song-list\";\r\nimport { AttachedItemsInChatInput } from \"../molecules/attached-items-in-chat-input\";\r\nimport getShortString from \"../../../../shared/lib/get-short-string\";\r\nimport { sendMessage } from \"../../lib/send-message\";\r\nimport useChatHeader from \"../../lib/hooks/use-chat-header\";\r\nimport NotAllowedToSendMessages from \"../molecules/not-allowed-to-send-messages\";\r\nimport useChatInput from \"../../lib/hooks/use-chat-input\";\r\n\r\nexport const ChatInput = memo(\r\n  ({\r\n    chatId,\r\n    chatData,\r\n    messageText,\r\n    setMessageText,\r\n    inResponseToMessage,\r\n    setInResponseToMessage,\r\n    otherMessages,\r\n  }) => {\r\n    const [otherPerson, headerColors] = useChatHeader(chatData);\r\n    const { yourFriends } = useSong();\r\n    const { currentUser } = useAuth();\r\n    const {\r\n      openAttachWindow,\r\n      setOpenAttachWindow,\r\n      attachWindowRef,\r\n      searchValue,\r\n      setSearchValue,\r\n      setAllFoundSongs,\r\n      setResultPlaylists,\r\n      setResultAuthorList,\r\n      allFoundSongs,\r\n      setAttachedSongs,\r\n      resultAuthorList,\r\n      resultPlaylists,\r\n      attachedAuthors,\r\n      attachedAlbums,\r\n      attachedSongs,\r\n      setAttachedAuthors,\r\n      setAttachedAlbums,\r\n      attachedSongsNames,\r\n      removeMessageFromResponseList,\r\n      inResponseNames,\r\n      sendMessageFull,\r\n    } = useChatInput(\r\n      chatId,\r\n      chatData,\r\n      inResponseToMessage,\r\n      setInResponseToMessage,\r\n      messageText,\r\n      setMessageText,\r\n      otherMessages\r\n    );\r\n\r\n    if (\r\n      !!otherPerson.uid &&\r\n      !yourFriends.find((friend) => friend.uid === otherPerson.uid)\r\n    ) {\r\n      return <NotAllowedToSendMessages />;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className=\"chatInput\"\r\n        style={\r\n          openAttachWindow\r\n            ? {\r\n                borderRadius:\r\n                  \"0 0 var(--standartBorderRadius) var(--standartBorderRadius)\",\r\n                transition: \".2s\",\r\n              }\r\n            : {}\r\n        }\r\n        ref={attachWindowRef}\r\n      >\r\n        <div\r\n          className=\"attachWindow\"\r\n          style={openAttachWindow ? { height: \"400px\", opacity: \"1\" } : {}}\r\n        >\r\n          {openAttachWindow ? (\r\n            <div\r\n              style={\r\n                openAttachWindow\r\n                  ? {\r\n                      maxHeight: \"100%\",\r\n                      overflow: \"hidden\",\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                    }\r\n                  : { display: \"none\" }\r\n              }\r\n            >\r\n              <SearchBar\r\n                value={searchValue}\r\n                setValue={setSearchValue}\r\n                setAllFoundSongs={setAllFoundSongs}\r\n                setResultPlaylists={setResultPlaylists}\r\n                setResultAuthorList={setResultAuthorList}\r\n              />\r\n              <div style={{ height: \"100%\", overflowY: \"auto\" }}>\r\n                <SongList\r\n                  listOfSongs={allFoundSongs}\r\n                  source={\"no\"}\r\n                  listOfChosenSongs={attachedSongs}\r\n                  setListOfSongs={setAttachedSongs}\r\n                />\r\n                <AuthorsList\r\n                  listOfAuthors={resultAuthorList}\r\n                  listOfChosenAuthors={attachedAuthors}\r\n                  setListOfChosenAuthors={setAttachedAuthors}\r\n                />\r\n                <AlbumList\r\n                  listOfAlbums={resultPlaylists}\r\n                  loading={false}\r\n                  listOfChosenAlbums={attachedAlbums}\r\n                  setListOfChosenAlbums={setAttachedAlbums}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        <div\r\n          className=\"inResponseArea\"\r\n          style={\r\n            inResponseToMessage.length ||\r\n            attachedSongs.length ||\r\n            attachedAuthors.length ||\r\n            attachedAlbums.length\r\n              ? {}\r\n              : {\r\n                  height: \"0\",\r\n                  padding: \"0\",\r\n                  opacity: \"0\",\r\n                  top: \"0\",\r\n                  visibility: \"hidden\",\r\n                }\r\n          }\r\n        >\r\n          <div className=\"responseMessages\">\r\n            {inResponseToMessage.map((id, index) => {\r\n              return (\r\n                <div className=\"responseItem\" key={id}>\r\n                  <h5\r\n                    style={\r\n                      otherMessages[id].sender === currentUser.uid\r\n                        ? { color: \"var(--lightPurple)\" }\r\n                        : {}\r\n                    }\r\n                  >\r\n                    {inResponseNames[index]}\r\n                  </h5>\r\n                  <p>\r\n                    {getShortString(otherMessages[id].message, 35)}\r\n                    <span\r\n                      style={{\r\n                        marginLeft: \"5px\",\r\n                        color: \"var(--reallyLightBlue)\",\r\n                      }}\r\n                    >\r\n                      {whatToWriteInResponseToItem(otherMessages[id])}\r\n                    </span>\r\n                  </p>\r\n                  <button\r\n                    onClick={() => removeMessageFromResponseList(id)}\r\n                    className=\"removeMessageFromResponse\"\r\n                  >\r\n                    <FiX />\r\n                  </button>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <AttachedItemsInChatInput\r\n            list={allFoundSongs}\r\n            attachedItems={attachedSongs}\r\n            setAttachedItems={setAttachedSongs}\r\n            icon={<CgMusicNote />}\r\n          />\r\n          <AttachedItemsInChatInput\r\n            list={resultAuthorList}\r\n            attachedItems={attachedAuthors}\r\n            setAttachedItems={setAttachedAuthors}\r\n            icon={<FiUser />}\r\n          />\r\n          <AttachedItemsInChatInput\r\n            list={resultPlaylists}\r\n            attachedItems={attachedAlbums}\r\n            setAttachedItems={setAttachedAlbums}\r\n            icon={<BiAlbum />}\r\n          />\r\n        </div>\r\n        <div className=\"attachAndEmojis\">\r\n          <div className=\"attachBtn\">\r\n            <button\r\n              onClick={() => {\r\n                setOpenAttachWindow(!openAttachWindow);\r\n              }}\r\n            >\r\n              <ImAttachment />\r\n            </button>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            style={{\r\n              background: \"var(--lightGrey)\",\r\n              border: \"none\",\r\n              outline: \"none\",\r\n              minHeight: \"100%\",\r\n            }}\r\n            value={messageText}\r\n            onChange={(e) => {\r\n              setMessageText(e.target.value);\r\n            }}\r\n            onKeyDown={(e) => {\r\n              if (e.key === \"Enter\") {\r\n                sendMessageFull();\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n        <button\r\n          className=\"sendBtn\"\r\n          onClick={() => {\r\n            sendMessageFull();\r\n          }}\r\n        >\r\n          <MdSend />\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import { useEffect, useState } from 'react'\r\nimport { firestore } from '../../../../firebase'\r\n\r\nconst useChat = (chatData) => {\r\n\tconst [participantsData, setParticipantsData] = useState({})\r\n\tconst [attachedData, setAttachedData] = useState({ \"songs\": {}, \"playlists\": {}, \"users\": {} })\r\n\r\n\tconst fetchParticipants = () => {\r\n\t\tconst tempArray = chatData.participants.map(async (itemId) => {\r\n\t\t\treturn (await firestore.collection('users').doc(itemId).get()).data()\r\n\t\t})\r\n\r\n\t\tPromise.all(tempArray).then((res) => {\r\n\t\t\tconst tempObj = {}\r\n\r\n\t\t\tres.forEach((el) => {\r\n\t\t\t\ttempObj[el.uid] = el\r\n\t\t\t})\r\n\r\n\t\t\tsetParticipantsData(tempObj)\r\n\t\t})\r\n\t}\r\n\r\n\tconst fetchAttachedItems = (list, place) => {\r\n\t\tlist.forEach(async (itemId) => {\r\n\t\t\tlet itemData = await firestore.collection(place).doc(itemId).get();\r\n\t\t\tif (itemData.exists) setAttachedData((prev) => {\r\n\t\t\t\tconst temp = prev\r\n\t\t\t\ttemp[place][itemData.data()?.id ?? itemData.data()?.uid] = itemData.data()\r\n\t\t\t\treturn { ...temp }\r\n\t\t\t});\r\n\t\t\telse setAttachedData((prev) => {\r\n\t\t\t\tconst temp = prev\r\n\t\t\t\ttemp[itemData.data()?.id ?? itemData.data()?.uid] = null\r\n\t\t\t\treturn { ...temp }\r\n\t\t\t});\r\n\t\t})\r\n\t}\r\n\r\n\tconst fetchAllAttached = () => {\r\n\t\tchatData.messages.forEach((message) => {\r\n\t\t\tfetchAttachedItems(message.attachedSongs, 'songs')\r\n\t\t\tfetchAttachedItems(message.attachedAlbums, 'playlists')\r\n\t\t\tfetchAttachedItems(message.attachedAuthors, 'users')\r\n\t\t});\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchParticipants()\r\n\t\tfetchAllAttached()\r\n\t}, [])\r\n\r\n\treturn { participantsData, attachedData }\r\n}\r\n\r\nexport default useChat\r\n","import { useEffect, useState } from \"react\"\r\n\r\nexport default function useOnScreen(ref) {\r\n\r\n\tconst [isIntersecting, setIntersecting] = useState(false)\r\n \r\n\tconst observer = new IntersectionObserver(\r\n\t  ([entry]) => setIntersecting(entry.isIntersecting)\r\n\t)\r\n \r\n\tuseEffect(() => {\r\n\t  observer.observe(ref.current)\r\n\t  // Remove the observer as soon as the component is unmounted\r\n\t  return () => { observer.disconnect() }\r\n\t}, [])\r\n \r\n\treturn isIntersecting\r\n }","import { useEffect, useRef } from 'react'\r\nimport { useAuth } from '../../../../contexts/auth'\r\nimport { firestore } from '../../../../firebase'\r\nimport useOnScreen from '../../../../shared/lib/hooks/use-on-screen'\r\n\r\nconst useMarkMessageRead = (chatId, messageData, otherMessages) => {\r\n\tconst messageRef = useRef()\r\n\tconst isVisible = useOnScreen(messageRef)\r\n\tconst { currentUser } = useAuth()\r\n\r\n\tuseEffect(() => {\r\n\t\tif (messageData.seenBy !== undefined) {\r\n\t\t\tif (currentUser.uid !== messageData.sender && isVisible) {\r\n\t\t\t\tif (!messageData.seenBy.includes(currentUser.uid)) {\r\n\t\t\t\t\tconst tempMessages = otherMessages\r\n\t\t\t\t\ttempMessages[messageData.id].seenBy.push(currentUser.uid)\r\n\t\t\t\t\tfirestore.collection('chats').doc(chatId).update({\r\n\t\t\t\t\t\tmessages: tempMessages\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, [isVisible])\r\n\r\n\treturn [messageRef, isVisible]\r\n}\r\n\r\nexport default useMarkMessageRead\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport useMarkMessageRead from \"../../lib/hooks/use-mark-message-read\";\r\n\r\nconst SystemMessageWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  opacity: 0.5;\r\n`;\r\n\r\nconst SystemMessage = ({ chatId, message, messageList }) => {\r\n  const [messageRef, isVisible] = useMarkMessageRead(\r\n    chatId,\r\n    message,\r\n    messageList\r\n  );\r\n  return (\r\n    <SystemMessageWrapper ref={messageRef}>\r\n      {message.message}\r\n    </SystemMessageWrapper>\r\n  );\r\n};\r\n\r\nexport default SystemMessage;\r\n","import React, { useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport displayDate from \"../../../../shared/lib/display-date\";\r\nimport { whatToWriteInResponseToItem } from \"../../lib/what-to-write-in-response-item\";\r\n\r\nconst ResponseItemWrapper = styled.div`\r\n  .response-name-and-date {\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    h5 {\r\n      color: ${({ areYouSender }) =>\r\n        areYouSender ? \"var(--lightPurple)\" : \"\"};\r\n    }\r\n\r\n    div {\r\n      font-size: 0.7em;\r\n      opacity: 0.8;\r\n      margin-left: 10px;\r\n    }\r\n  }\r\n\r\n  .response-message {\r\n    display: flex;\r\n    row-gap: 7px;\r\n    span {\r\n      color: var(--reallyLightBlue);\r\n    }\r\n  }\r\n`;\r\n\r\nconst ResponseItem = ({ allMessages, messageId, participantsData }) => {\r\n  const messageData = useMemo(() => allMessages[messageId], []);\r\n  const { currentUser } = useAuth();\r\n\r\n  return (\r\n    <ResponseItemWrapper\r\n      className=\"responseItem\"\r\n      areYouSender={messageData.sender === currentUser.uid}\r\n    >\r\n      <span className=\"response-name-and-date\">\r\n        <h5>{participantsData[messageData.sender]?.displayName}</h5>\r\n        <div>{displayDate(messageData.sentTime, 2)}</div>\r\n      </span>\r\n      <p className=\"response-message\">\r\n        {messageData.message}\r\n        <span style={{}}>{whatToWriteInResponseToItem(messageData)}</span>\r\n      </p>\r\n    </ResponseItemWrapper>\r\n  );\r\n};\r\n\r\nexport default ResponseItem;\r\n","import React, { useMemo } from \"react\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useScreen } from \"../../../../contexts/screen\";\r\nimport { PlaylistItem } from \"../../../../entities/playlist/ui/playlist-item\";\r\nimport { SongItem } from \"../../../../entities/song/ui/song-item\";\r\nimport displayDate from \"../../../../shared/lib/display-date\";\r\nimport { AuthorItemBig } from \"../../../author/ui/molecules/author-item-big\";\r\nimport { whatToWriteInResponseToItem } from \"../../lib/what-to-write-in-response-item\";\r\nimport ResponseItem from \"./response-item\";\r\n\r\nconst MessageItemBody = ({\r\n  showPhoto,\r\n  messageData,\r\n  attachedData,\r\n  participantsData,\r\n  senderData,\r\n  allMessages,\r\n}) => {\r\n  const {\r\n    message,\r\n    inResponseToMessage,\r\n    attachedSongs,\r\n    attachedAuthors,\r\n    attachedAlbums,\r\n    sentTime,\r\n  } = messageData;\r\n\r\n  const { screenHeight } = useScreen();\r\n  const messageSentTime = useMemo(() => displayDate(sentTime, 2), []);\r\n  const { currentUser } = useAuth();\r\n\r\n  return (\r\n    <div className=\"messageItemBody\">\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          marginBottom: \"5px\",\r\n        }}\r\n      >\r\n        <h5 className=\"messageUserName\">{senderData?.displayName}</h5>\r\n        <div style={{ fontSize: \".7em\", opacity: \".8\", marginLeft: \"10px\" }}>\r\n          {messageSentTime}\r\n        </div>\r\n      </div>\r\n      {inResponseToMessage !== null &&\r\n        inResponseToMessage.map((messageId, index) => {\r\n          return (\r\n            <ResponseItem\r\n              messageId={messageId}\r\n              key={index}\r\n              allMessages={allMessages}\r\n              participantsData={participantsData}\r\n            />\r\n          );\r\n        })}\r\n      <div>\r\n        <p>{message}</p>\r\n        {attachedSongs.map((songId, key) => {\r\n          if (attachedData.songs[songId])\r\n            return (\r\n              <SongItem\r\n                song={attachedData.songs[songId]}\r\n                localIndex={key}\r\n                key={key}\r\n                position={screenHeight}\r\n              />\r\n            );\r\n        })}\r\n        {attachedAlbums.map((albumId, index) => {\r\n          if (attachedData.playlists[albumId])\r\n            return (\r\n              <PlaylistItem\r\n                playlist={attachedData.playlists[albumId]}\r\n                key={index}\r\n              />\r\n            );\r\n        })}\r\n        {attachedAuthors.map((authorId, index) => {\r\n          if (attachedData.users[authorId])\r\n            return (\r\n              <AuthorItemBig data={attachedData.users[authorId]} key={index} />\r\n            );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageItemBody;\r\n","import React, { memo, useEffect, useMemo, useState } from \"react\";\r\nimport { BiShare } from \"react-icons/bi\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useScreen } from \"../../../../contexts/screen\";\r\nimport useMarkMessageRead from \"../../lib/hooks/use-mark-message-read\";\r\nimport MessageItemBody from \"../atoms/message-item.body\";\r\nimport { SeenByCircle } from \"../atoms/seen-by-circle\";\r\n\r\nexport const MessageItem = memo(\r\n  ({\r\n    messageData,\r\n    chatId,\r\n    showPhoto = true,\r\n    otherMessages,\r\n    inResponseToMessageArr,\r\n    setInResponseToMessageArr,\r\n    participantsData,\r\n    attachedData,\r\n  }) => {\r\n    const { currentUser } = useAuth();\r\n    const { isMobile } = useScreen();\r\n    const { sender, id } = messageData;\r\n    const senderData = useMemo(\r\n      () => participantsData[sender],\r\n      [participantsData, sender]\r\n    );\r\n\r\n    const [messageRef, isVisible] = useMarkMessageRead(\r\n      chatId,\r\n      messageData,\r\n      otherMessages\r\n    );\r\n    const [swipeDeltaX, setSwipeDeltaX] = useState(0);\r\n    const [transformTransition, setTransformTransition] = useState(0);\r\n    const handlers = useSwipeable({\r\n      onSwiping: (event) => {\r\n        if (event.deltaX < 0) setSwipeDeltaX(event.deltaX);\r\n      },\r\n    });\r\n    const refPassthrough = (el) => {\r\n      // call useSwipeable ref prop with el\r\n      handlers.ref(el);\r\n\r\n      // set myRef el so you can access it yourself\r\n      messageRef.current = el;\r\n    };\r\n\r\n    function addMessageToResponseList() {\r\n      if (!inResponseToMessageArr.includes(id)) {\r\n        setInResponseToMessageArr((prev) => [...prev, id]);\r\n      }\r\n    }\r\n\r\n    function returnToInitial() {\r\n      let dropDelta;\r\n      clearTimeout(dropDelta);\r\n      setTransformTransition(0.2);\r\n      dropDelta = setTimeout(() => {\r\n        setSwipeDeltaX(0);\r\n        setTransformTransition(0);\r\n      }, 200);\r\n    }\r\n\r\n    useEffect(() => {\r\n      if (swipeDeltaX < -160) {\r\n        returnToInitial();\r\n        addMessageToResponseList();\r\n      }\r\n    }, [swipeDeltaX]);\r\n\r\n    return (\r\n      <div\r\n        className={\"MessageItem \" + (sender === currentUser.uid ? \"your\" : \"\")}\r\n        ref={messageRef}\r\n        style={\r\n          showPhoto\r\n            ? {\r\n                paddingBottom: \"15px\",\r\n                transform: `translateX(${swipeDeltaX}px)`,\r\n                transition: transformTransition,\r\n              }\r\n            : {\r\n                transform: `translateX(${swipeDeltaX}px)`,\r\n                transition: transformTransition,\r\n              }\r\n        }\r\n        onTouchEnd={returnToInitial}\r\n      >\r\n        <div className=\"messageItemImage\">\r\n          {showPhoto ? (\r\n            <img loading=\"lazy\" src={senderData?.photoURL} alt=\"\" />\r\n          ) : null}\r\n        </div>\r\n        <MessageItemBody\r\n          showPhoto={showPhoto}\r\n          messageData={messageData}\r\n          attachedData={attachedData}\r\n          participantsData={participantsData}\r\n          senderData={senderData}\r\n          allMessages={otherMessages}\r\n        />\r\n        <SeenByCircle listOfSeen={messageData.seenBy} />\r\n        <button\r\n          className=\"respondToMessageBtn\"\r\n          onClick={addMessageToResponseList}\r\n          style={isMobile ? { opacity: -swipeDeltaX / 80 } : {}}\r\n        >\r\n          <BiShare />\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport { FiChevronDown } from \"react-icons/fi\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NewMessagesPlateWrapper = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  font-weight: 500;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  background: #2c2c2c;\r\n  position: relative;\r\n\r\n  svg {\r\n    position: absolute;\r\n    top: 50%;\r\n    right: 10px;\r\n    transform: translateY(-50%);\r\n  }\r\n`;\r\n\r\nconst NewMessagesPlate = ({ isNotSeen = false }) => {\r\n  return (\r\n    isNotSeen && (\r\n      <NewMessagesPlateWrapper>\r\n        New messages\r\n        <FiChevronDown />\r\n      </NewMessagesPlateWrapper>\r\n    )\r\n  );\r\n};\r\n\r\nexport default NewMessagesPlate;\r\n","import React, { memo, useEffect, useMemo, useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport displayDate from \"../../../../shared/lib/display-date\";\r\nimport { MessageItem } from \"../molecules/message-item\";\r\nimport NewMessagesPlateWrapper from \"../atoms/new-messages-plate\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\n\r\nexport const MessageField = memo(\r\n  ({\r\n    message,\r\n    index,\r\n    messageList,\r\n    chatId,\r\n    inResponseToMessage,\r\n    setInResponseToMessage,\r\n    scrollToMessageRef,\r\n    scrollToMessageId,\r\n    setScrollToMessageId,\r\n    setDateRefsArray,\r\n    participantsData,\r\n    attachedData,\r\n    isNotSeen,\r\n  }) => {\r\n    const [showPhoto, setShowPhoto] = useState(false);\r\n    const [showDate, setShowDate] = useState(false);\r\n\r\n    const dateRef = useRef(null);\r\n    useEffect(() => {\r\n      if (index === messageList.length - 1) setShowPhoto(true);\r\n      else if (messageList[index + 1].sender !== messageList[index].sender)\r\n        setShowPhoto(true);\r\n      else if (\r\n        displayDate(messageList[index + 1].sentTime) !==\r\n        displayDate(messageList[index].sentTime)\r\n      )\r\n        setShowPhoto(true);\r\n\r\n      if (index === 0) setShowDate(true);\r\n      else if (\r\n        displayDate(messageList[index].sentTime) !==\r\n        displayDate(messageList[index - 1].sentTime)\r\n      ) {\r\n        setShowDate(true);\r\n      }\r\n    }, [messageList.length]);\r\n\r\n    useEffect(() => {\r\n      if (dateRef.current !== null) {\r\n        setDateRefsArray((prev) => [...prev, dateRef]);\r\n      }\r\n    }, [showDate]);\r\n\r\n    return (\r\n      <>\r\n        {showDate ? (\r\n          <div\r\n            ref={dateRef}\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              padding: \"10px 0\",\r\n            }}\r\n          >\r\n            {displayDate(message.sentTime)}\r\n          </div>\r\n        ) : null}\r\n        <NewMessagesPlateWrapper isNotSeen={isNotSeen} />\r\n        <MessageItem\r\n          messageData={message}\r\n          chatId={chatId}\r\n          key={message.id}\r\n          scrollToMessageRef={scrollToMessageRef}\r\n          scrollToMessageId={scrollToMessageId}\r\n          setScrollToMessageId={setScrollToMessageId}\r\n          showPhoto={showPhoto}\r\n          otherMessages={messageList}\r\n          inResponseToMessageArr={inResponseToMessage}\r\n          setInResponseToMessageArr={setInResponseToMessage}\r\n          participantsData={participantsData}\r\n          attachedData={attachedData}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n);\r\n","import React, { memo, useMemo, useRef } from \"react\";\r\nimport { Virtuoso } from \"react-virtuoso\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useScreen } from \"../../../../contexts/screen\";\r\nimport useChat from \"../../lib/hooks/use-chat\";\r\nimport { TypingAnimation } from \"../atoms/typing-animation\";\r\nimport SystemMessage from \"../molecules/system-message\";\r\nimport { MessageField } from \"./message-field\";\r\n\r\nexport const ChatMessagesWindow = memo(\r\n  ({\r\n    chatId,\r\n    chatData,\r\n    messageList,\r\n    findTopDate,\r\n    inResponseToMessage,\r\n    setInResponseToMessage,\r\n    setDateRefsArray,\r\n  }) => {\r\n    const { screenHeight } = useScreen();\r\n    const messagesWindowRef = useRef(null);\r\n    const { participantsData, attachedData } = useChat(chatData);\r\n    const { currentUser } = useAuth();\r\n    const isNotSeenIndex = useMemo(() => {\r\n      return messageList.findIndex(\r\n        (message) =>\r\n          !!message.seenBy && !message.seenBy.includes(currentUser.uid)\r\n      );\r\n    }, []);\r\n\r\n    return (\r\n      <Virtuoso\r\n        increaseViewportBy={{ top: 50, bottom: 50 }}\r\n        style={{\r\n          height: screenHeight - 105 + \"px\",\r\n          scrollBehavior: \"initial\",\r\n          overflowX: \"hidden\",\r\n          marginTop: 0,\r\n        }}\r\n        data={messageList}\r\n        totalCount={messageList.length}\r\n        initialTopMostItemIndex={\r\n          isNotSeenIndex !== -1\r\n            ? isNotSeenIndex - 10\r\n            : messageList?.length > 20\r\n            ? messageList?.length - 1\r\n            : 0\r\n        }\r\n        components={{\r\n          Footer: () => {\r\n            return <TypingAnimation typingPeople={chatData.typing} />;\r\n          },\r\n        }}\r\n        followOutput\r\n        itemContent={(index, message) => {\r\n          return message.sender !== \"soundbubble\" ? (\r\n            <MessageField\r\n              message={message}\r\n              index={index}\r\n              key={message.id}\r\n              messageList={messageList}\r\n              chatId={chatId}\r\n              setDateRefsArray={setDateRefsArray}\r\n              inResponseToMessage={inResponseToMessage}\r\n              setInResponseToMessage={setInResponseToMessage}\r\n              participantsData={participantsData}\r\n              attachedData={attachedData}\r\n              isNotSeen={isNotSeenIndex === index}\r\n            />\r\n          ) : (\r\n            <SystemMessage\r\n              chatId={chatId}\r\n              message={message}\r\n              messageList={messageList}\r\n            />\r\n          );\r\n        }}\r\n        onScroll={findTopDate}\r\n        ref={messagesWindowRef}\r\n      />\r\n    );\r\n  }\r\n);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\nimport { useRealTimeMessages } from \"../../features/dialogue/lib/hooks/use-realtime-messages\";\r\nimport { DateOnTop } from \"../../features/dialogue/ui/atoms/date-on-top\";\r\nimport { ChatHeader } from \"../../features/dialogue/ui/organisms/chat-header\";\r\nimport { ChatInput } from \"../../features/dialogue/ui/organisms/chat-input\";\r\nimport { ChatMessagesWindow } from \"../../features/dialogue/ui/organisms/chat-messages-window\";\r\nimport { LoadingCircle } from \"../../features/loading/ui/atoms/loading-circle\";\r\n\r\nconst DialoguePage = () => {\r\n  const match = useRouteMatch(\"/chat/:chatId\");\r\n  const { currentUser } = useAuth();\r\n  const { chatId } = match.params;\r\n  const [messageText, setMessageText] = useState(\"\");\r\n  const [inResponseToMessage, setInResponseToMessage] = useState([]);\r\n  const [dateRefsArray, setDateRefsArray] = useState([]);\r\n  const history = useHistory();\r\n  const [chatData, messageList, loading, currentDateOnTop, findTopDate] =\r\n    useRealTimeMessages(chatId, dateRefsArray);\r\n\r\n  useEffect(() => {\r\n    if (chatData === undefined) {\r\n      history.push(\"/not-found\");\r\n    } else if (chatData?.participants !== undefined) {\r\n      if (!chatData.participants.includes(currentUser.uid))\r\n        history.push(\"/chat\");\r\n    }\r\n  }, [chatData]);\r\n\r\n  return chatData !== null && chatData !== undefined ? (\r\n    <div className=\"DialoguePage\" style={{ height: \"100%\" }}>\r\n      {loading ? (\r\n        <LoadingCircle top={\"50%\"} />\r\n      ) : (\r\n        <>\r\n          <ChatHeader data={chatData} />\r\n          <DateOnTop date={currentDateOnTop} />\r\n          <ChatMessagesWindow\r\n            chatId={chatId}\r\n            chatData={chatData}\r\n            messageList={messageList}\r\n            findTopDate={findTopDate}\r\n            setDateRefsArray={setDateRefsArray}\r\n            inResponseToMessage={inResponseToMessage}\r\n            setInResponseToMessage={setInResponseToMessage}\r\n          />\r\n          <ChatInput\r\n            chatId={chatId}\r\n            chatData={chatData}\r\n            messageText={messageText}\r\n            setMessageText={setMessageText}\r\n            inResponseToMessage={inResponseToMessage}\r\n            setInResponseToMessage={setInResponseToMessage}\r\n            otherMessages={messageList}\r\n          />\r\n        </>\r\n      )}\r\n      {chatData?.wallpaper !== \"undefined\" ? (\r\n        <img\r\n          loading=\"lazy\"\r\n          src={chatData.wallpaper}\r\n          className=\"chatWallpaper\"\r\n          alt=\"\"\r\n        />\r\n      ) : null}\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default DialoguePage;\r\n","import { useEffect, useState } from 'react'\r\nimport { firestore } from '../../../../firebase'\r\n\r\n/**\r\n\t  * Returns [chatData, messageList, loading, currentDateOnTop, findTopDate]\r\n*/\r\nexport const useRealTimeMessages = (chatId, dateRefsArray) => {\r\n\tconst [chatData, setChatData] = useState(null)\r\n\tconst [messageList, setMessageList] = useState([])\r\n\tconst [loading, setLoading] = useState(true)\r\n\tconst [currentDateOnTop, setCurrentDateOnTop] = useState(\"\")\r\n\tfunction findTopDate(e) {\r\n\t\tdateRefsArray.forEach(ref => {\r\n\t\t\tif (ref.current !== null) {\r\n\t\t\t\tif (ref.current.offsetTop - 20 <= e.target.scrollTop) setCurrentDateOnTop(ref.current.innerHTML)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst unsubscribe = firestore.collection('chats').doc(chatId)\r\n\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\tsetChatData(snapshot.data())\r\n\t\t\t\tsetMessageList(snapshot.data()?.messages)\r\n\t\t\t\tsetCurrentDateOnTop(snapshot.data()?.messages.length ? snapshot.data().messages[snapshot.data().messages.length - 1].sentTime : new Date().toString())\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t})\r\n\t\treturn () => {\r\n\t\t\tunsubscribe()\r\n\t\t}\r\n\t}, [chatId])\r\n\r\n\r\n\treturn [chatData, messageList, loading, currentDateOnTop, findTopDate]\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { ContentContainer } from \"../../shared/ui/atoms/content-container\";\r\nimport { SongList } from \"../../features/song/ui/templates/song-list\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\nimport { firestore } from \"../../firebase\";\r\nimport { fetchItemList } from \"../../shared/lib/fetch-item-list\";\r\nimport { GoBackBtn } from \"../../shared/ui/atoms/go-back-button\";\r\n\r\nconst HistoryPage = () => {\r\n  const [historySongsIds, setHistorySongsIds] = useState([]);\r\n  const [historySongs, setHistorySongs] = useState([]);\r\n  const { currentUser } = useAuth();\r\n  useEffect(() => {\r\n    firestore\r\n      .collection(\"history\")\r\n      .doc(currentUser.uid)\r\n      .onSnapshot((res) => {\r\n        setHistorySongsIds(res.data().history);\r\n      });\r\n  }, [firestore]);\r\n\r\n  useEffect(() => {\r\n    fetchItemList(historySongsIds, \"songs\", setHistorySongs);\r\n  }, [historySongsIds]);\r\n  return (\r\n    <div className=\"HistoryPage\" style={{ animation: \"zoomIn .2s forwards\" }}>\r\n      <ContentContainer>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <GoBackBtn />\r\n          <h2 style={{ margin: \"0px\", marginLeft: \"8px\" }}>History</h2>\r\n        </div>\r\n        <SongList\r\n          listOfSongs={historySongs}\r\n          source={{\r\n            source: `/history`,\r\n            name: \"History\",\r\n            image:\r\n              \"https://www.seekpng.com/png/full/781-7815113_history-icon-white-png.png\",\r\n            songsList: historySongs,\r\n          }}\r\n          showCount\r\n          showSearch\r\n          displayIfEmpty={\"Nothing here\"}\r\n        />\r\n      </ContentContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BiChevronLeft, BiChevronRight } from \"react-icons/bi\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport checkNumber from \"../../../../shared/lib/check-number\";\r\nimport { AuthorItemBig } from \"../../../author/ui/molecules/author-item-big\";\r\nimport { LoadingCircle } from \"../../../loading/ui/atoms/loading-circle\";\r\n\r\nimport { PlaylistItem } from \"../../../../entities/playlist/ui/playlist-item\";\r\nimport { SongItem } from \"../../../../entities/song/ui/song-item\";\r\nexport const MainBanner = () => {\r\n  const [bannerColors, setBannerColors] = useState([]);\r\n  const [currentSliderPage, setcurrentSliderPage] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [topAuthor, setTopAuthor] = useState({});\r\n  const [topSong, setTopSong] = useState({});\r\n  const [topAlbum, setTopAlbum] = useState({});\r\n\r\n  async function findTop(setFunc, list, criterion) {\r\n    const response = (\r\n      await firestore.collection(list).orderBy(criterion, \"desc\").limit(1).get()\r\n    ).docs[0].data();\r\n    setFunc(response);\r\n    setBannerColors((prev) => [...prev, response.imageColors[0]]);\r\n    if (list === \"playlists\") setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    findTop(setTopAuthor, \"users\", \"subscribers\");\r\n    findTop(setTopSong, \"songs\", \"listens\");\r\n    findTop(setTopAlbum, \"playlists\", \"listens\");\r\n  }, []);\r\n  return (\r\n    <div\r\n      className=\"MainBanner\"\r\n      style={{ background: bannerColors[currentSliderPage] }}\r\n    >\r\n      {loading ? (\r\n        <LoadingCircle />\r\n      ) : (\r\n        <>\r\n          <div className=\"slider\">\r\n            <div\r\n              className={\r\n                \"sliderItem \" + (currentSliderPage === 0 ? \"current\" : \"\")\r\n              }\r\n              style={{ transform: `translateX(-${currentSliderPage * 100}%)` }}\r\n            >\r\n              <h3>Most popular artist on platform</h3>\r\n              <AuthorItemBig data={topAuthor} />\r\n            </div>\r\n            <div\r\n              className={\r\n                \"sliderItem \" + (currentSliderPage === 1 ? \"current\" : \"\")\r\n              }\r\n              style={{ transform: `translateX(-${currentSliderPage * 100}%)` }}\r\n            >\r\n              <h3>Most popular song on platform</h3>\r\n              <SongItem song={topSong} localIndex={0} showListens />\r\n            </div>\r\n            <div\r\n              className={\r\n                \"sliderItem \" + (currentSliderPage === 2 ? \"current\" : \"\")\r\n              }\r\n              style={{ transform: `translateX(-${currentSliderPage * 100}%)` }}\r\n            >\r\n              <h3>Most popular album on platform</h3>\r\n              <PlaylistItem playlist={topAlbum} />\r\n            </div>\r\n          </div>\r\n          <div className=\"sliderBtns\">\r\n            <button\r\n              onClick={() =>\r\n                setcurrentSliderPage(checkNumber(currentSliderPage - 1, 2, 0))\r\n              }\r\n            >\r\n              <BiChevronLeft />\r\n            </button>\r\n            <button\r\n              onClick={() =>\r\n                setcurrentSliderPage(checkNumber(currentSliderPage + 1, 2, 0))\r\n              }\r\n            >\r\n              <BiChevronRight />\r\n            </button>\r\n          </div>\r\n          {/* <BlurredBg circleColor = \"#fff\"/> */}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { SongList } from \"../../../../features/song/ui/templates/song-list\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport findIfSongIsNew from \"../../../../entities/song/lib/find-if-song-is-new\";\r\nimport { firestore } from \"../../../../firebase\";\r\n\r\nexport const RecentSongs = () => {\r\n  const { yourAuthors } = useSong();\r\n  const [recentSongs, setRecentSongs] = useState([]);\r\n  function findRecentSongs() {\r\n    const tempSongsIds = [];\r\n    yourAuthors.forEach((author, i) => {\r\n      author.ownSongs.forEach(async (songId) => {\r\n        let songData = (\r\n          await firestore.collection(\"songs\").doc(songId).get()\r\n        ).data();\r\n        if (findIfSongIsNew(songData) && !tempSongsIds.includes(songData.id)) {\r\n          setRecentSongs((prev) => [...prev, songData]);\r\n          tempSongsIds.push(songData.id);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      yourAuthors !== undefined &&\r\n      yourAuthors.length !== 0 &&\r\n      recentSongs.length === 0\r\n    )\r\n      findRecentSongs();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <SongList\r\n        listOfSongs={recentSongs}\r\n        source={{\r\n          source: `/home`,\r\n          name: \"New Songs\",\r\n          image: \"\",\r\n          songsList: recentSongs,\r\n        }}\r\n        title={\"New Songs\"}\r\n        isNewSong\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { AuthorsList } from \"../../../../features/author/ui/templates/authors-list\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport findSimilarArtists from \"../../../../shared/lib/find-similar-artists\";\r\n\r\nexport const RecommendedAuthors = () => {\r\n  const { yourAuthors } = useSong();\r\n  const [recommendationAuthors, setRecommendationAuthors] = useState([]);\r\n\r\n  const [uniqueAuthors, setUniqueAuthors] = useState([]);\r\n  const { currentUser } = useAuth();\r\n  useEffect(() => {\r\n    if (yourAuthors !== undefined) {\r\n      yourAuthors.forEach((author) => {\r\n        findSimilarArtists(author, setRecommendationAuthors);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    recommendationAuthors.forEach((author) => {\r\n      const uniqueAuthorsUIDSArray = uniqueAuthors.map((author) => author.uid);\r\n      if (\r\n        !currentUser.addedAuthors.includes(author.uid) &&\r\n        !uniqueAuthorsUIDSArray.includes(author.uid)\r\n      ) {\r\n        setUniqueAuthors((prev) => [...prev, author]);\r\n      }\r\n    });\r\n  }, [recommendationAuthors]);\r\n  return (\r\n    <div className=\"RecommendedAuthors\">\r\n      <AuthorsList\r\n        listOfAuthors={uniqueAuthors}\r\n        title={\"Recommended Authors\"}\r\n      />\r\n      {/* <h2>Recommended Authors</h2>\r\n\t\t\t<div className=\"artistsWrapper\">\r\n\t\t\t\t{uniqueAuthors.map((author, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<AuthorItemBig data={author} key={index} />\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</div> */}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nexport const ImportantMessage = ({message, image, button}) => {\r\n\treturn (\r\n\t\t<div className = \"importantMessage\">\r\n\t\t\t<div>\r\n\t\t\t\t{image?<img loading = \"lazy\" src={image} alt=\"\" />:null}\r\n\t\t\t\t<h3>{message}</h3>\r\n\t\t\t\t{button?button:null}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { SongList } from \"../../../../features/song/ui/templates/song-list\";\r\nimport { ImportantMessage } from \"../../../../shared/ui/atoms/important-message\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { firestore } from \"../../../../firebase\";\r\n\r\nexport const RecommendedSongs = () => {\r\n  const { yourAuthors } = useSong();\r\n  const { currentUser } = useAuth();\r\n  const [recommendedSongs, setRecommendedSongs] = useState([]);\r\n  function fetchRecommendedSongs() {\r\n    const tempSongsIds = [];\r\n    yourAuthors.forEach((author, i) => {\r\n      author.ownSongs.forEach(async (songId, index) => {\r\n        let songData = (\r\n          await firestore.collection(\"songs\").doc(songId).get()\r\n        ).data();\r\n        if (\r\n          !currentUser.addedSongs.includes(songId) &&\r\n          !tempSongsIds.includes(songData.id) &&\r\n          index <= 3\r\n        ) {\r\n          setRecommendedSongs((prev) => [...prev, songData]);\r\n          tempSongsIds.push(songData.id);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchRecommendedSongs();\r\n  }, []);\r\n  return (\r\n    <div className=\"RecommendedSongs\">\r\n      <SongList\r\n        listOfSongs={recommendedSongs}\r\n        source={{\r\n          source: `/home`,\r\n          name: \"Recommended Songs\",\r\n          image: \"\",\r\n          songsList: recommendedSongs,\r\n        }}\r\n        title={\"Recommended Songs\"}\r\n        displayIfEmpty={\r\n          <ImportantMessage\r\n            message={\r\n              \"No songs recommended. Add favorite authors so we could know what to recommend\"\r\n            }\r\n            image={\r\n              \"https://i.pinimg.com/originals/b2/3d/f6/b23df649311586e74a8455c92eb3d76b.png\"\r\n            }\r\n          />\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { SongList } from \"../../../../features/song/ui/templates/song-list\";\r\nimport { LoadingCircle } from \"../../../loading/ui/atoms/loading-circle\";\r\nimport { firestore } from \"../../../../firebase\";\r\n\r\nexport const Top15Songs = () => {\r\n  const [topSongs, setTopSongs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  function fetchTopSongs() {\r\n    firestore\r\n      .collection(\"songs\")\r\n      .orderBy(\"listens\", \"desc\")\r\n      .limit(15)\r\n      .get()\r\n      .then((res) => {\r\n        res.docs.forEach((song) => {\r\n          setTopSongs((prev) => [...prev, song.data()]);\r\n        });\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchTopSongs();\r\n  }, []);\r\n  return !loading ? (\r\n    <SongList\r\n      listOfSongs={topSongs}\r\n      source={{\r\n        source: `/home`,\r\n        name: \"Top 15 Songs\",\r\n        image:\r\n          \"https://media.istockphoto.com/vectors/fire-icon-illustration-for-design-stock-vector-vector-id931601050?k=6&m=931601050&s=170667a&w=0&h=fhRQfwwsW6aXK9OSDM-yj842SFFl2Q9ll6ch-xCK5es=\",\r\n        songsList: topSongs,\r\n      }}\r\n      title={\"Top 15 Songs\"}\r\n      showListens\r\n      showCount\r\n    />\r\n  ) : (\r\n    <LoadingCircle />\r\n  );\r\n};\r\n","import { MainBanner } from \"../../features/home/ui/organisms/main-banner\";\r\nimport { RecentSongs } from \"../../features/home/ui/organisms/recent-songs\";\r\nimport { RecommendedAuthors } from \"../../features/home/ui/organisms/recommended-authors\";\r\nimport { RecommendedSongs } from \"../../features/home/ui/organisms/recommended-songs\";\r\nimport { Top15Songs } from \"../../features/home/ui/organisms/top-15-Songs\";\r\nimport { ContentContainer } from \"../../shared/ui/atoms/content-container\";\r\nimport \"./style.css\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div style={{ animation: \"zoomIn .2s forwards\" }} className=\"HomePage\">\r\n      <MainBanner />\r\n      <ContentContainer>\r\n        <RecentSongs />\r\n        <Top15Songs />\r\n        <RecommendedSongs />\r\n        <RecommendedAuthors />\r\n      </ContentContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useState } from \"react\";\r\nimport { ContentContainer } from \"../../../shared/ui/atoms/content-container\";\r\nimport { useSong } from \"../../../contexts/song\";\r\nimport { AuthorItemBig } from \"../../../features/author/ui/molecules/author-item-big\";\r\nimport SearchBar from \"../../../shared/ui/organisms/search-bar\";\r\n\r\nconst AuthorsPage = () => {\r\n  const { yourAuthors } = useSong();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [displayAuthors, setDisplayAuthors] = useState(yourAuthors);\r\n  return (\r\n    <div className=\"AuthorsPage\">\r\n      <ContentContainer>\r\n        <SearchBar\r\n          value={searchValue}\r\n          setValue={setSearchValue}\r\n          setResultAuthorList={setDisplayAuthors}\r\n          defaultSearchMode={\"users\"}\r\n          defaultAuthorsListValue={yourAuthors}\r\n          inputText=\"Search for authors\"\r\n        />\r\n        <div className=\"authorsContainer\">\r\n          {displayAuthors.map((authorData) => {\r\n            return <AuthorItemBig data={authorData} key={authorData.uid} />;\r\n          })}\r\n        </div>\r\n      </ContentContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthorsPage;\r\n","import React from \"react\";\r\nimport { FiPlus } from \"react-icons/fi\";\r\nimport styled from \"styled-components\";\r\nimport { AddPlaylist } from \"../../../../features/author/ui/organisms/add-playlist\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\n\r\nconst CreatePlaylistWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: var(--chatsColor);\r\n  border-radius: var(--standartBorderRadius);\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: 0.15s, 0.1s box-shadow;\r\n\r\n  & .text {\r\n    transition: 0.15s;\r\n    height: 25px;\r\n  }\r\n\r\n  &:hover .add-circle {\r\n    transform: scale(1.3);\r\n  }\r\n\r\n  &:hover .text {\r\n    opacity: 0;\r\n    height: 0;\r\n  }\r\n\r\n  &:hover {\r\n    transform: scale(0.93);\r\n  }\r\n\r\n  &:active {\r\n    transform: scale(0.9);\r\n    box-shadow: 0 0 0 7px #ffffff5e;\r\n  }\r\n\r\n  & .add-circle {\r\n    width: 60px;\r\n    height: 60px;\r\n    border-radius: 100%;\r\n    background: var(--playlistsColor);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-bottom: 10px;\r\n    transition: 0.2s;\r\n\r\n    svg {\r\n      width: 30px;\r\n      height: 30px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CreatePlaylist = () => {\r\n  const { toggleModal, setContent } = useModal();\r\n\r\n  return (\r\n    <CreatePlaylistWrapper\r\n      onClick={() => {\r\n        toggleModal();\r\n        setContent(<AddPlaylist />);\r\n      }}\r\n      className=\"playlistItem\"\r\n    >\r\n      <span className=\"add-circle\">\r\n        <FiPlus />\r\n      </span>\r\n      <span className=\"text\">Add playlist</span>\r\n    </CreatePlaylistWrapper>\r\n  );\r\n};\r\n\r\nexport default CreatePlaylist;\r\n","import React, { useState } from \"react\";\r\nimport { ContentContainer } from \"../../../shared/ui/atoms/content-container\";\r\nimport { useSong } from \"../../../contexts/song\";\r\nimport { PlaylistItem } from \"../../../entities/playlist/ui/playlist-item\";\r\nimport SearchBar from \"../../../shared/ui/organisms/search-bar\";\r\nimport CreatePlaylist from \"../ui/atoms/create-playlist\";\r\n\r\nconst PlaylistsPage = () => {\r\n  const { yourPlaylists } = useSong();\r\n  const [playlistsDisplay, setPlaylistsDisplay] = useState(yourPlaylists);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"PlaylistsPage\">\r\n      <ContentContainer>\r\n        <div style={{ display: \"flex\" }} className=\"searchAndCreatePlaylist\">\r\n          <SearchBar\r\n            value={searchValue}\r\n            setValue={setSearchValue}\r\n            setResultPlaylists={setPlaylistsDisplay}\r\n            defaultSearchMode={\"playlists\"}\r\n            defaultPlaylistsListValue={yourPlaylists}\r\n            inputText=\"Search for playlist name\"\r\n          />\r\n        </div>\r\n        <div className=\"playlistsContainer\">\r\n          <CreatePlaylist />\r\n          {playlistsDisplay &&\r\n            playlistsDisplay.map((playlist, index) => {\r\n              return <PlaylistItem playlist={playlist} key={playlist.id} />;\r\n            })}\r\n        </div>\r\n      </ContentContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlaylistsPage;\r\n","import React, { useState } from \"react\";\r\nimport { BiAlbum } from \"react-icons/bi\";\r\nimport { BsPauseFill, BsPlayFill } from \"react-icons/bs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useScreen } from \"../../../../contexts/screen\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { usePlaylistSongs } from \"../../../../entities/playlist/lib/hooks/use-playlist-songs\";\r\nimport getShortString from \"../../../../shared/lib/get-short-string\";\r\nexport const LibraryPlaylistItem = ({ playlist }) => {\r\n  const { currentSongPlaylistSource, play } = useSong();\r\n  const { isMobile } = useScreen();\r\n  const [playlistSongs, setPlaylistSongs] = useState([]);\r\n  const playSongsInPlaylist = usePlaylistSongs(\r\n    playlist,\r\n    playlistSongs,\r\n    setPlaylistSongs\r\n  );\r\n\r\n  return (\r\n    <Link to={`/albums/${playlist.id}`} className=\"playlistWrapper\">\r\n      <div\r\n        className=\"library playlistItem\"\r\n        style={{ backgroundImage: `url(${playlist.image})` }}\r\n      >\r\n        <h2 style={{ background: playlist.imageColors[2] }}>\r\n          {getShortString(playlist.name, 10)}\r\n        </h2>\r\n        {!playlist.image ? (\r\n          <BiAlbum\r\n            style={{\r\n              position: \"absolute\",\r\n              left: \"50%\",\r\n              top: \"50%\",\r\n              transform: \"translate(-50%, -50%)\",\r\n              width: \"60px\",\r\n              height: \"60px\",\r\n            }}\r\n          />\r\n        ) : null}\r\n        {!isMobile ? (\r\n          <button onClick={playSongsInPlaylist}>\r\n            {currentSongPlaylistSource.name === playlist.name && play ? (\r\n              <BsPauseFill />\r\n            ) : (\r\n              <BsPlayFill />\r\n            )}\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/wave2.f62cb572.svg\";","import React, { memo, useMemo } from \"react\";\r\nimport { FiPlus } from \"react-icons/fi\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { useScreen } from \"../../../../contexts/screen\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { LibraryPlaylistItem } from \"../../../../pages/library/ui/molecules/library-playlist-item\";\r\nimport Button from \"../../../../shared/ui/atoms/button\";\r\nimport { AddPlaylist } from \"../../../author/ui/organisms/add-playlist\";\r\nimport { findVisiblePlaylists } from \"../../lib/find-visible-playlists\";\r\nimport wave from \"../../../../shared/ui/images/wave2.svg\";\r\n\r\nconst Playlists = memo(() => {\r\n  const { yourPlaylists } = useSong();\r\n  const { screenWidth } = useScreen();\r\n  const { toggleModal, setContent } = useModal();\r\n  const playlistsVisible = useMemo(\r\n    () => findVisiblePlaylists(screenWidth),\r\n    [screenWidth]\r\n  );\r\n\r\n  return (\r\n    <div className=\"playLists\">\r\n      <div className=\"playlistContent\">\r\n        {yourPlaylists.length ? (\r\n          yourPlaylists.map((p, index) => {\r\n            if (index < playlistsVisible) {\r\n              return <LibraryPlaylistItem playlist={p} key={index} />;\r\n            }\r\n          })\r\n        ) : (\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              left: \"50%\",\r\n              top: \"40%\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              transform: \"translate(-50%, -50%)\",\r\n            }}\r\n          >\r\n            <h3>You don't have playlists</h3>\r\n            <Button\r\n              text=\"Add playlist\"\r\n              icon={<FiPlus />}\r\n              onClick={() => {\r\n                toggleModal();\r\n                setContent(<AddPlaylist />);\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"playlistsBackground\">\r\n        <img loading=\"lazy\" src={wave} alt=\"wave\" />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Playlists;\r\n","export const findVisiblePlaylists = (screenWidth) => {\r\n\tif(screenWidth < 1990 && screenWidth >= 1780) return 7\r\n\telse if(screenWidth < 1780 && screenWidth >= 1570) return 6\r\n\telse if(screenWidth < 1570 && screenWidth >= 1360) return 5\r\n\telse if(screenWidth < 1360 && screenWidth >= 1150) return 4\r\n\telse if(screenWidth < 1150 && screenWidth >= 1000) return 3\r\n\telse if(screenWidth < 1000 && screenWidth >= 892) return 6\r\n\telse if(screenWidth < 892 && screenWidth >= 754) return 5\r\n\telse if(screenWidth < 754 && screenWidth >= 614) return 4\r\n\telse if(screenWidth < 614 && screenWidth >= 464) return 3\r\n\telse return 2\r\n}","import React, { memo } from \"react\";\r\nimport { useAuth } from \"../../../contexts/auth\";\r\nimport { useSong } from \"../../../contexts/song\";\r\nimport Playlists from \"../../../features/library/ui/organisms/playlists\";\r\nimport { SongList } from \"../../../features/song/ui/templates/song-list\";\r\n\r\nconst SongsPage = memo(() => {\r\n  const { yourSongs } = useSong();\r\n  const { currentUser } = useAuth();\r\n\r\n  return (\r\n    <div className=\"SongsPage\">\r\n      <Playlists />\r\n      <div className=\"yourSongsList\">\r\n        <SongList\r\n          listOfSongs={yourSongs}\r\n          source={{\r\n            source: \"/library\",\r\n            name: \"Your Library\",\r\n            image: currentUser.photoURL,\r\n            songsList: yourSongs,\r\n          }}\r\n          showSearch\r\n          showhistory\r\n          displayIfEmpty={<h3>Your library is empty</h3>}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default SongsPage;\r\n","import React, { useState } from \"react\";\r\nimport { Slider } from \"../../shared/ui/molecules/slider\";\r\nimport \"./ui/style.css\";\r\nimport { AuthorsPage, PlaylistsPage, SongsPage } from \"./pages\";\r\n\r\nconst LibraryPage = () => {\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const libraryPages = [<SongsPage />, <PlaylistsPage />, <AuthorsPage />];\r\n  return (\r\n    <div className=\"LibraryPage\" style={{ animation: \"zoomIn .2s forwards\" }}>\r\n      <Slider\r\n        pages={[\"Songs\", \"Playlists\", \"Authors\"]}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n      {libraryPages[currentPage]}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibraryPage;\r\n","import React from \"react\";\r\nimport Logo from \"../../ui/images/Logo3.svg\";\r\nexport const TitleAndLogo = ({ title }) => {\r\n  return (\r\n    <div className=\"titleAndLogo\">\r\n      <div className=\"title\">\r\n        <h1>{title}</h1>\r\n      </div>\r\n      <div className=\"logo\">\r\n        <img loading=\"lazy\" src={Logo} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\n\r\nexport const ErrorPlate = ({ errorMessage }) => {\r\n  const { openBottomMessage } = useModal();\r\n  useEffect(() => {\r\n    if (errorMessage) {\r\n      openBottomMessage(errorMessage, \"failure\");\r\n    }\r\n  }, [errorMessage]);\r\n  return errorMessage && <div className=\"Alert\">{errorMessage}</div>;\r\n};\r\n","import React from 'react'\r\n\r\nexport const BlurredBg = () => {\r\n\treturn (\r\n\t\t<div className = \"BlurredBg\">\r\n\t\t\t<div className=\"circle circle1\"></div>\r\n\t\t\t<div className=\"circle circle2\"></div>\r\n\t\t\t<div className=\"circle circle3\"></div>\r\n\t\t\t<div className=\"circle circle4\"></div>\r\n\t\t\t<div className=\"circle circle5\"></div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TitleAndLogo } from \"../../shared/ui/atoms/title-and-logo\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\nimport { FullScreenLoading } from \"../../features/loading/ui/atoms/full-screen-loading\";\r\nimport { ErrorPlate } from \"../../features/login/ui/atoms/error-plate\";\r\nimport { SIGNUP_ROUTE } from \"../../shared/data/consts\";\r\nimport { BlurredBg } from \"../../shared/ui/atoms/blurred-background\";\r\nimport Input from \"../../shared/ui/atoms/input\";\r\n\r\nconst LogInPage = () => {\r\n  const { login } = useAuth();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const isValid = email.length !== 0 && password.length !== 0;\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!isValid) {\r\n      return setErrorMessage(\"One of your fields is totaly empty\");\r\n    }\r\n    await login(email, password, setErrorMessage, setLoading);\r\n  }\r\n  return (\r\n    <div className=\"In-Up-Container\">\r\n      <div className=\"CentralPlate\">\r\n        <FullScreenLoading loading={loading} />\r\n        <TitleAndLogo title=\"Log In\" />\r\n        <ErrorPlate errorMessage={errorMessage} />\r\n        <div className=\"inner-plate-content\">\r\n          <Input\r\n            type=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            setValue={setEmail}\r\n            margin\r\n          />\r\n          <Input\r\n            type=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={password}\r\n            setValue={setPassword}\r\n            margin\r\n          />\r\n          <div className=\"inAndUpBtns\">\r\n            <button className=\"upBtn\" disabled={loading} onClick={handleSubmit}>\r\n              Log In\r\n            </button>\r\n            <Link to={SIGNUP_ROUTE}>\r\n              <button className=\"inBtn\">Create new account</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <BlurredBg />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogInPage;\r\n","import React from 'react'\r\n\r\nexport const Loading = ({currentTime, timeSpan, id}) => {\r\n\treturn (\r\n\t\t<div className = \"Loading\" id = {id}>\r\n\t\t\t<div className=\"outer\" style = {{pointerEvents:'none'}}>\r\n\t\t\t\t<div className=\"inner\" style = {currentTime/timeSpan < 1?{width:(currentTime/timeSpan)*100 + \"%\"}:{width:0 + \"%\", opacity:'0'}}></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FiCornerLeftUp, FiCornerRightDown } from \"react-icons/fi\";\r\nimport { Loading } from \"../../../full-screen-player/ui/atoms/loading\";\r\n\r\nconst LyricsWrapper = styled.div`\r\n  max-height: 490px;\r\n  width: 1000px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  row-gap: 10px;\r\n  scroll-behavior: smooth;\r\n\r\n  .lyrics-list {\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n    height: 100%;\r\n    scroll-snap-type: y mandatory;\r\n    scroll-padding-top: 50px;\r\n\r\n    .Loading {\r\n      max-width: 70%;\r\n      width: auto;\r\n    }\r\n  }\r\n\r\n  .lyricsBlock {\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n    font-size: 1.8em;\r\n    font-weight: 700;\r\n    margin: 10px 0;\r\n    user-select: none;\r\n    cursor: pointer;\r\n    border-radius: var(--standartBorderRadius2);\r\n    transform: scale(0.75) translateX(-80px);\r\n    opacity: 0.7;\r\n\r\n    &:hover {\r\n      background: #ffffff5c;\r\n    }\r\n\r\n    &.current {\r\n      background: #ffffff5c;\r\n      scroll-snap-align: start;\r\n      transform: scale(1) translateX(0);\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  .loading-buttons {\r\n    display: flex;\r\n    justify-content: center;\r\n    column-gap: 4px;\r\n    width: 100%;\r\n    min-height: 40px;\r\n\r\n    button {\r\n      background: var(--transparentWhite);\r\n      min-height: 100%;\r\n      width: 100%;\r\n      border-radius: var(--standartBorderRadius3);\r\n      font-weight: 700;\r\n      color: #fff;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n\r\n      svg {\r\n        margin-right: 7px;\r\n        width: 16px;\r\n        height: 16px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Lyrics = ({\r\n  lyrics,\r\n  setLyrics,\r\n  currentParagraph,\r\n  setCurrentParagraph,\r\n  currentTime,\r\n}) => {\r\n  const [loadingButtons, setLoadingButtons] = useState(null);\r\n\r\n  const insertBlock = (index, text) => {\r\n    const temp = lyrics;\r\n    const insertData = { text, startTime: \"undefined\" };\r\n    if (index === -1) temp.unshift(insertData);\r\n    else if (index === lyrics.length) temp.push(insertData);\r\n    else temp.splice(index, 0, insertData);\r\n\r\n    setLyrics([...temp]);\r\n  };\r\n\r\n  const handleLyricsBlockClick = (index, text) => {\r\n    if (!!loadingButtons) {\r\n      if (loadingButtons === \"before\") insertBlock(index, text);\r\n      else insertBlock(index + 1, text);\r\n    }\r\n  };\r\n\r\n  const defineCurrentParagraphLight = () => {\r\n    if (\r\n      currentParagraph !== lyrics.length - 1 &&\r\n      parseFloat(lyrics[currentParagraph + 1].startTime) <= currentTime\r\n    ) {\r\n      return setCurrentParagraph(currentParagraph + 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!!lyrics.length) defineCurrentParagraphLight();\r\n  }, [currentTime]);\r\n\r\n  return (\r\n    <LyricsWrapper>\r\n      <div className=\"loading-buttons\">\r\n        {!loadingButtons && (\r\n          <>\r\n            <button onClick={() => setLoadingButtons(\"before\")}>\r\n              <FiCornerLeftUp />\r\n              Place loading before\r\n            </button>\r\n            <button onClick={() => setLoadingButtons(\"after\")}>\r\n              <FiCornerRightDown />\r\n              Place loading after\r\n            </button>\r\n          </>\r\n        )}\r\n\r\n        {!!loadingButtons && (\r\n          <>\r\n            <h5>Choose block to insert loading {loadingButtons} it</h5>\r\n            <button onClick={() => setLoadingButtons(null)}>Cancel</button>\r\n          </>\r\n        )}\r\n      </div>\r\n      <div className=\"lyrics-list\">\r\n        {lyrics.map((lyricItem, i) => {\r\n          if (lyricItem.text === \"@loading\")\r\n            return (\r\n              <Loading\r\n                currentTime={currentTime - lyrics[i].startTime}\r\n                timeSpan={lyrics[i + 1].startTime - lyrics[i].startTime}\r\n                id={i}\r\n              />\r\n            );\r\n          else\r\n            return (\r\n              <div\r\n                className={\r\n                  \"lyricsBlock \" + (currentParagraph === i && \"current\")\r\n                }\r\n                onClick={() => handleLyricsBlockClick(i, \"@loading\")}\r\n              >\r\n                {lyricItem.text}\r\n              </div>\r\n            );\r\n        })}\r\n      </div>\r\n    </LyricsWrapper>\r\n  );\r\n};\r\n\r\nexport default Lyrics;\r\n","import React from \"react\";\r\nimport { FaPause, FaPlay } from \"react-icons/fa\";\r\nimport styled from \"styled-components\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\n\r\nconst SongImageAndNameWrapper = styled.div`\r\n  width: 100%;\r\n  max-width: 800px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .song-image {\r\n    width: 300px;\r\n    height: 300px;\r\n    background-size: cover;\r\n    background-position: center center;\r\n    border-radius: var(--standartBorderRadius);\r\n  }\r\n`;\r\n\r\nconst SongImageAndName = ({ song, chooseSongItem, play }) => {\r\n  return (\r\n    <SongImageAndNameWrapper>\r\n      <div\r\n        className=\"song-image\"\r\n        style={{ backgroundImage: `url(${song.cover})` }}\r\n      />\r\n      <div>\r\n        <h3>{song.name}</h3>\r\n        <button\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            chooseSongItem();\r\n          }}\r\n        >\r\n          {play ? <FaPause /> : <FaPlay />}\r\n        </button>\r\n      </div>\r\n    </SongImageAndNameWrapper>\r\n  );\r\n};\r\n\r\nexport default SongImageAndName;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TimelineWrapper = styled.div``;\r\n\r\nconst Timeline = () => {\r\n  return (\r\n    <TimelineWrapper>\r\n      <input type=\"range\" name=\"\" id=\"\" />\r\n    </TimelineWrapper>\r\n  );\r\n};\r\n\r\nexport default Timeline;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ContentContainer } from \"../../shared/ui/atoms/content-container\";\r\nimport Lyrics from \"../../features/lyrics-editing/ui/molecules/lyrics\";\r\nimport SongImageAndName from \"../../features/lyrics-editing/ui/molecules/song-image-and-name\";\r\nimport TimelineWrapper from \"../../features/lyrics-editing/ui/molecules/timeline\";\r\nimport { firestore } from \"../../firebase\";\r\nimport { useSong } from \"../../contexts/song\";\r\nimport { LoadingCircle } from \"../../features/loading/ui/atoms/loading-circle\";\r\nimport checkNumber from \"../../shared/lib/check-number\";\r\n\r\nconst LyricsEditingWrapper = styled(ContentContainer)`\r\n  display: flex;\r\n  justify-content: center;\r\n  animation: zoomIn 0.5s forwards;\r\n  align-items: center;\r\n  height: 100%;\r\n  background: ${({ colors }) =>\r\n    `linear-gradient(45deg, ${colors[2]}, ${colors[3]});`};\r\n\r\n  .lyrics-central-block {\r\n    display: flex;\r\n    flex-direction: column;\r\n    row-gap: 30px;\r\n  }\r\n\r\n  h2 {\r\n    margin: 0;\r\n  }\r\n\r\n  .image-and-lyrics {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst LyricsEditingPage = () => {\r\n  const [songId, setSongId] = useState(\"3e35c47f-2186-4dea-a415-55616c525874\");\r\n  const [songData, setSongData] = useState(null);\r\n  const [lyrics, setLyrics] = useState([\r\n    { text: \"@loading\", startTime: 0 },\r\n    { text: \"Better\", startTime: 4.641579 },\r\n    { text: \"Nothing, baby\", startTime: 5.640871 },\r\n    { startTime: 6.639756, text: \"Nothing feels better\" },\r\n    {\r\n      text: \"I'm not really drunk, I never get that fucked up\",\r\n      startTime: 11.643213,\r\n    },\r\n    { startTime: 14.393152, text: \"I'm not, I'm so sober\" },\r\n    {\r\n      text: \"Love to see you shine in the night like the diamond you are\",\r\n      startTime: 19.133931,\r\n    },\r\n    {\r\n      text: \"(Love to see you shine in the night like the diamond you are)\",\r\n      startTime: 24.379689,\r\n    },\r\n    {\r\n      startTime: 29.122152,\r\n      text: \"I'm good on the side, it's alright, just hold me in the dark\",\r\n    },\r\n    {\r\n      text: \"(I'm good on the side, it's alright, just hold me in the dark)\",\r\n      startTime: 34.127266,\r\n    },\r\n    {\r\n      startTime: 38.618776,\r\n      text: \"No one's gotta know what we do, hit me up when you're bored\",\r\n    },\r\n    {\r\n      text: \"(No one's gotta know what we do, hit me up when you're bored)\",\r\n      startTime: 43.868394,\r\n    },\r\n    { text: \"'Cause I live down the street\", startTime: 48.354129 },\r\n    { text: \"So we meet when you need and it's yours\", startTime: 50.614509 },\r\n    { startTime: 55.110749, text: \"All I hear is...\" },\r\n    { startTime: 56.851265, text: \"Nothing feels better than this\" },\r\n    { text: \"Nothing feels better\", startTime: 58.856013 },\r\n    { text: \"Nothing feels better than this\", startTime: 61.608338 },\r\n    { text: \"Nothing feels better, oh no\", startTime: 64.60475 },\r\n    {\r\n      startTime: 68.105615,\r\n      text: \"We don't gotta hide, this is what you like\",\r\n    },\r\n    { startTime: 70.595909, text: \"I'll admit\" },\r\n    { text: \"Nothing feels better than this\", startTime: 76.091238 },\r\n    {\r\n      text: \"You say we're just friends but I swear when nobody's around\",\r\n      startTime: 78.349369,\r\n    },\r\n    {\r\n      text: \"(You say we're just friends but I swear when nobody's around)\",\r\n      startTime: 82.837355,\r\n    },\r\n    {\r\n      startTime: 87.08135,\r\n      text: \"You keep my hand around your neck, we connect, are you feeling it now?\",\r\n    },\r\n    {\r\n      text: \"(You keep my hand around your neck, we connect, are you feeling it now?)\",\r\n      startTime: 93.081081,\r\n    },\r\n    { startTime: 94.337571, text: \"'Cause I am\" },\r\n    {\r\n      startTime: 96.827651,\r\n      text: \"I got so high the other night, I swear to God, felt my feet lift the ground\",\r\n    },\r\n    {\r\n      text: \"(I got so high the other night, I swear to God I felt my feet lift the ground)\",\r\n      startTime: 102.834804,\r\n    },\r\n    { startTime: 105.574461, text: \"Ooh, yeah\" },\r\n    {\r\n      text: \"Your back against the wall, this is all you've been talking about\",\r\n      startTime: 107.330933,\r\n    },\r\n    { startTime: 113.829185, text: \"In my ears\" },\r\n    { text: \"Nothing feels better than this\", startTime: 115.320862 },\r\n    { startTime: 117.812132, text: \"Nothing feels better\" },\r\n    { text: \"Nothing feels better than this\", startTime: 120.314059 },\r\n    { startTime: 122.816821, text: \"Nothing feels better, oh no\" },\r\n    {\r\n      text: \"We don't gotta hide, this is what you like\",\r\n      startTime: 127.069368,\r\n    },\r\n    { startTime: 131.308451, text: \"I admit\" },\r\n    { startTime: 134.80945, text: \"Nothing feels better than this\" },\r\n    { text: \"Now, left, right, left, right\", startTime: 136.557457 },\r\n    { text: \"Take it back, bring it side to side\", startTime: 140.05821 },\r\n    { text: \"Like that, like that, ayy\", startTime: 143.30038 },\r\n    { text: \"Ooh, now, left, right, left, right\", startTime: 145.794779 },\r\n    { startTime: 149.541102, text: \"Take it back, bring it side to side\" },\r\n    { startTime: 154.042133, text: \"Like\" },\r\n    { text: \"Nothing feels better than this\", startTime: 154.54181 },\r\n    { startTime: 157.035804, text: \"Nothing feels better\" },\r\n    { text: \"Nothing feels better than this\", startTime: 159.541697 },\r\n    { startTime: 162.036662, text: \"Nothing feels better, oh no\" },\r\n    {\r\n      startTime: 166.282294,\r\n      text: \"We don't gotta hide, this is what you like\",\r\n    },\r\n    { startTime: 169.528565, text: \"I admit\" },\r\n    {\r\n      text: \"Nothing feels better than this (Better than this)\",\r\n      startTime: 174.275678,\r\n    },\r\n    { text: \"Nothing feels better than thi\", startTime: \"undefined\" },\r\n  ]);\r\n  const [currentParagraph, setCurrentParagraph] = useState(-1);\r\n\r\n  const {\r\n    setCurrentSong,\r\n    currentSong,\r\n    play,\r\n    songRef,\r\n    setPlay,\r\n    setCurrentSongInQueue,\r\n    currentTime,\r\n  } = useSong();\r\n\r\n  console.log(lyrics);\r\n\r\n  const handleKeyDown = (e) => {\r\n    console.log(play);\r\n    if (e.code === \"Space\") {\r\n      if (!play) {\r\n        chooseSongItem();\r\n      } else {\r\n        if (currentParagraph + 1 === 0) {\r\n          lyrics[currentParagraph + 1].startTime = 0;\r\n          setLyrics([...lyrics]);\r\n          setCurrentParagraph((prev) =>\r\n            checkNumber(prev + 1, lyrics.length - 1)\r\n          );\r\n        } else {\r\n          lyrics[currentParagraph + 1].startTime = currentTime;\r\n          // console.log(lyrics);\r\n          setLyrics([...lyrics]);\r\n          setCurrentParagraph((prev) =>\r\n            checkNumber(prev + 1, lyrics.length - 1)\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    firestore\r\n      .collection(\"songs\")\r\n      .doc(songId)\r\n      .get()\r\n      .then((res) => {\r\n        setSongData(res.data());\r\n        // setLyrics(res.data().lyrics);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!!lyrics) {\r\n      document.addEventListener(\"keypress\", handleKeyDown);\r\n      return () => {\r\n        document.removeEventListener(\"keypress\", handleKeyDown);\r\n      };\r\n    }\r\n  }, [lyrics, play]);\r\n\r\n  const chooseSongItem = () => {\r\n    if (!!songData) {\r\n      setCurrentSong(songData.id);\r\n      setCurrentSongInQueue(0);\r\n      if (songData.id === currentSong && play) {\r\n        songRef.current.pause();\r\n        setPlay(false);\r\n        return;\r\n      }\r\n      songRef.current.play();\r\n      setPlay(true);\r\n    }\r\n  };\r\n\r\n  //TODO: Wave visualizer?\r\n  return !!songData ? (\r\n    <LyricsEditingWrapper colors={songData.imageColors} onClick={handleKeyDown}>\r\n      <div className=\"lyrics-central-block\">\r\n        <div className=\"image-and-lyrics\">\r\n          <SongImageAndName\r\n            song={songData}\r\n            chooseSongItem={chooseSongItem}\r\n            play={play}\r\n          />\r\n          <Lyrics\r\n            lyrics={lyrics}\r\n            setLyrics={setLyrics}\r\n            currentParagraph={currentParagraph}\r\n            setCurrentParagraph={setCurrentParagraph}\r\n            currentTime={currentTime}\r\n          />\r\n        </div>\r\n        <TimelineWrapper chooseSongItem={chooseSongItem} />\r\n      </div>\r\n    </LyricsEditingWrapper>\r\n  ) : (\r\n    <LoadingCircle />\r\n  );\r\n};\r\n\r\nexport default LyricsEditingPage;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nconst PageNotFound = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"PageNotFound\">\r\n      <img\r\n        loading=\"lazy\"\r\n        src=\"https://i.pinimg.com/originals/b2/3d/f6/b23df649311586e74a8455c92eb3d76b.png\"\r\n        alt=\"\"\r\n      />\r\n      <h2>Page not found</h2>\r\n      <button\r\n        className=\"standartButton\"\r\n        onClick={() => history.push(\"/library\")}\r\n      >\r\n        Back to library\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { firestore } from \"../../../../firebase\";\r\n\r\nconst useSearchHistory = () => {\r\n  const [historySongs, setHistorySongs] = useState([]);\r\n  const [historyPlaylists, setHistoryPlaylists] = useState([]);\r\n  const [historyAuthors, setHistoryAuthors] = useState([]);\r\n  const { currentUser } = useAuth();\r\n  useEffect(() => {\r\n    firestore\r\n      .collection(\"searchHistory\")\r\n      .doc(currentUser.uid)\r\n      .get()\r\n      .then((res) => {\r\n        if (res.data()?.history) {\r\n          res.data().history.forEach(async ({ id, type }) => {\r\n            const itemData = (\r\n              await firestore.collection(type).doc(id).get()\r\n            ).data();\r\n            switch (type) {\r\n              case \"songs\":\r\n                setHistorySongs((prev) => [...prev, itemData]);\r\n                break;\r\n              case \"playlists\":\r\n                setHistoryPlaylists((prev) => [...prev, itemData]);\r\n                break;\r\n              case \"users\":\r\n                setHistoryAuthors((prev) => [...prev, itemData]);\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n          });\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return [historySongs, historyPlaylists, historyAuthors];\r\n};\r\n\r\nexport default useSearchHistory;\r\n","import React from \"react\";\r\nimport { AlbumList } from \"../../../album/ui/template/album-list\";\r\nimport { AuthorsList } from \"../../../../features/author/ui/templates/authors-list\";\r\nimport { SongList } from \"../../../../features/song/ui/templates/song-list\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport useSearchHistory from \"../../lib/hooks/use-search-history.jsx\";\r\n\r\nconst SearchHistory = () => {\r\n  const { searchValue } = useAuth();\r\n  const [historySongs, historyPlaylists, historyAuthors] = useSearchHistory();\r\n  return !searchValue ? (\r\n    <div\r\n      className=\"search-history\"\r\n      style={{ animation: \"zoomIn .2s forwards\" }}\r\n    >\r\n      <SongList\r\n        listOfSongs={historySongs}\r\n        source={{\r\n          source: \"/search\",\r\n          name: \"Search\",\r\n          image:\r\n            \"https://www.pngkey.com/png/full/87-872187_lupa-search-icon-white-png.png\",\r\n          songsList: historySongs,\r\n        }}\r\n        title={\"Search history\"}\r\n        showListens\r\n        displayIfEmpty={\"\"}\r\n        isHorizontal\r\n      />\r\n      <AuthorsList listOfAuthors={historyAuthors} />\r\n      <AlbumList listOfAlbums={historyPlaylists} loading={false} />\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default SearchHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport SearchBar from \"../../shared/ui/organisms/search-bar\";\r\nimport { ContentContainer } from \"../../shared/ui/atoms/content-container\";\r\nimport { AlbumList } from \"../../features/album/ui/template/album-list\";\r\nimport { AuthorsList } from \"../../features/author/ui/templates/authors-list\";\r\nimport { SongList } from \"../../features/song/ui/templates/song-list\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\nimport SearchHistory from \"../../features/search/ui/organisms/search-history\";\r\nimport \"./style.css\";\r\n\r\nconst SearchPage = () => {\r\n  const { searchValue, setSearchValue } = useAuth();\r\n  const [resultSongList, setResultSongList] = useState([]);\r\n  const [resultAuthorList, setResultAuthorList] = useState([]);\r\n  const [resultAlbumList, setResultAlbumList] = useState([]);\r\n  const [shadowColor, setShadowColor] = useState(\"\");\r\n  useEffect(() => {\r\n    setResultSongList([]);\r\n    setResultAuthorList([]);\r\n    setResultAlbumList([]);\r\n  }, [searchValue]);\r\n\r\n  useEffect(() => {\r\n    if (resultSongList.length !== 0)\r\n      setShadowColor(resultSongList[0].imageColors[0] + \"a6\");\r\n    else if (resultAuthorList.length !== 0)\r\n      setShadowColor(resultAuthorList[0].imageColors[0] + \"a6\");\r\n    else if (resultAlbumList.length !== 0)\r\n      setShadowColor(resultAlbumList[0].imageColors[0] + \"a6\");\r\n    else setShadowColor(\"\");\r\n  }, [resultSongList, resultAuthorList, resultAlbumList]);\r\n\r\n  return (\r\n    <div\r\n      className=\"SearchPage\"\r\n      style={{\r\n        animation: \"zoomIn .2s forwards\",\r\n      }}\r\n    >\r\n      <ContentContainer>\r\n        <SearchBar\r\n          value={searchValue}\r\n          setValue={setSearchValue}\r\n          allFoundSongs={resultSongList}\r\n          setAllFoundSongs={setResultSongList}\r\n          setResultPlaylists={setResultAlbumList}\r\n          setResultAuthorList={setResultAuthorList}\r\n          focus\r\n        />\r\n        <SearchHistory />\r\n        <SongList\r\n          listOfSongs={resultSongList}\r\n          source={{\r\n            source: \"/search\",\r\n            name: \"Search\",\r\n            image:\r\n              \"https://www.pngkey.com/png/full/87-872187_lupa-search-icon-white-png.png\",\r\n            songsList: resultSongList,\r\n          }}\r\n          title={\"Songs\"}\r\n          showListens\r\n          saveSearchHistory\r\n          displayIfEmpty={\"\"}\r\n          isHorizontal\r\n        />\r\n        <AuthorsList\r\n          listOfAuthors={resultAuthorList}\r\n          title={\"Authors\"}\r\n          saveSearchHistory\r\n        />\r\n        <AlbumList\r\n          listOfAlbums={resultAlbumList}\r\n          title={\"Albums and Playlists\"}\r\n          loading={false}\r\n          saveSearchHistory\r\n        />\r\n        <div\r\n          className=\"colorfullShadow\"\r\n          style={{ background: shadowColor }}\r\n        ></div>\r\n      </ContentContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","import React from \"react\";\r\n\r\nconst AccountSettings = () => {\r\n  return <div>Account</div>;\r\n};\r\n\r\nexport default AccountSettings;\r\n","import React from 'react'\r\n\r\nexport const SwitchToggle = ({boolValue, setBoolValue}) => {\r\n\treturn (\r\n\t\t<div className = \"SwitchToggle\" onClick = {()=>setBoolValue(!boolValue)}>\r\n\t\t\t<div className=\"switchInnerCircle\" style = {boolValue?{transform:'translateX(100%)', background:'var(--green)'}:{}}></div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { SwitchToggle } from \"../molecules/switch-toggle\";\r\n\r\nconst SettingsItemWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  transition: 0.2s;\r\n  padding: 20px 50px;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 2px;\r\n    bottom: 0;\r\n    left: 0%;\r\n    /* transform: translateX(-50%); */\r\n    background: #313131;\r\n  }\r\n\r\n  .icon-and-text {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    user-select: none;\r\n\r\n    svg {\r\n      margin-right: 7px;\r\n      width: 20px;\r\n      height: 20px;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    background: var(--leftSideBarColor);\r\n  }\r\n`;\r\n\r\nconst SettingsItem = ({ icon, text, action }) => {\r\n  const [boolValue, setBoolValue] = useState(false);\r\n\r\n  const handleChangeToggle = (val) => {\r\n    setBoolValue(val);\r\n    if (val && !!action) action();\r\n  };\r\n\r\n  return (\r\n    <SettingsItemWrapper onClick={() => handleChangeToggle(!boolValue)}>\r\n      <div className=\"icon-and-text\">\r\n        {icon}\r\n        {text}\r\n      </div>\r\n      <SwitchToggle boolValue={boolValue} setBoolValue={handleChangeToggle} />\r\n    </SettingsItemWrapper>\r\n  );\r\n};\r\n\r\nexport default SettingsItem;\r\n","import React from \"react\";\r\nimport { FiBell } from \"react-icons/fi\";\r\nimport SettingsItem from \"../atoms/settings-item\";\r\n\r\nconst ChatSettings = () => {\r\n  return (\r\n    <>\r\n      <SettingsItem icon={<FiBell />} text={\"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\"} />\r\n      <SettingsItem icon={<FiBell />} text={\"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\"} />\r\n      <SettingsItem icon={<FiBell />} text={\"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\"} />\r\n      <SettingsItem icon={<FiBell />} text={\"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\"} />\r\n      <SettingsItem icon={<FiBell />} text={\"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\"} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatSettings;\r\n","import React from \"react\";\r\n\r\nconst MusicSettings = () => {\r\n  return <div>Music</div>;\r\n};\r\n\r\nexport default MusicSettings;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport AccountSettings from \"../orgamisms/account-settings\";\r\nimport ChatSettings from \"../orgamisms/chat-settings\";\r\nimport MusicSettings from \"../orgamisms/music-settings\";\r\n\r\nconst SettingsListWrapper = styled.div`\r\n  width: 85%;\r\n  height: 100px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst SettingsList = ({ currentPage }) => {\r\n  const settingsPages = [\r\n    <AccountSettings />,\r\n    <MusicSettings />,\r\n    <ChatSettings />,\r\n  ];\r\n  return (\r\n    <SettingsListWrapper>{settingsPages[currentPage]}</SettingsListWrapper>\r\n  );\r\n};\r\n\r\nexport default SettingsList;\r\n","import styled from \"styled-components\";\r\n\r\nconst SettingsSectionItemWrapper = styled.button`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  /* transition: 0.1s; */\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n  background: ${({ isActive }) =>\r\n    isActive ? \"var(--lightBlue)\" : \"transparent\"};\r\n  color: #fff;\r\n  font-weight: 600;\r\n\r\n  svg {\r\n    margin-right: 7px;\r\n    width: 16px;\r\n    height: 16px;\r\n  }\r\n  /* \r\n  &:hover {\r\n    background: var(--leftSideBarColor);\r\n  } */\r\n`;\r\n\r\nconst SettingsSectionItem = ({ icon, text, onClick, isActive }) => {\r\n  return (\r\n    <SettingsSectionItemWrapper onClick={onClick} isActive={isActive}>\r\n      {icon}\r\n      {text}\r\n    </SettingsSectionItemWrapper>\r\n  );\r\n};\r\n\r\nexport default SettingsSectionItem;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SettingsSectionItem from \"../atoms/settings-section-item\";\r\nimport { BiMusic } from \"react-icons/bi\";\r\nimport { FiMessageCircle, FiUser } from \"react-icons/fi\";\r\n\r\nconst SettingsSectionsWrapper = styled.div`\r\n  width: 15%;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  background: var(--leftSideBarColor);\r\n`;\r\n\r\nconst SettingsSections = ({ currentPage, setCurrentPage }) => {\r\n  return (\r\n    <SettingsSectionsWrapper>\r\n      <SettingsSectionItem\r\n        icon={<FiUser />}\r\n        text={\"Account\"}\r\n        onClick={() => setCurrentPage(0)}\r\n        isActive={currentPage === 0}\r\n      />\r\n      <SettingsSectionItem\r\n        icon={<BiMusic />}\r\n        text={\"Music\"}\r\n        onClick={() => setCurrentPage(1)}\r\n        isActive={currentPage === 1}\r\n      />\r\n      <SettingsSectionItem\r\n        icon={<FiMessageCircle />}\r\n        text={\"Chat\"}\r\n        onClick={() => setCurrentPage(2)}\r\n        isActive={currentPage === 2}\r\n      />\r\n      <SettingsSectionItem\r\n        icon={<BiMusic />}\r\n        text={\"Music\"}\r\n        onClick={() => setCurrentPage(3)}\r\n        isActive={currentPage === 3}\r\n      />\r\n    </SettingsSectionsWrapper>\r\n  );\r\n};\r\n\r\nexport default SettingsSections;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ContentContainer } from \"../../shared/ui/atoms/content-container\";\r\nimport SettingsList from \"./ui/molecules/settings-list\";\r\nimport SettingsSections from \"./ui/molecules/settings-sections\";\r\n\r\nconst SettingsPageWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst SettingsPage = () => {\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  return (\r\n    <ContentContainer>\r\n      <h2>Settings</h2>\r\n      <SettingsPageWrapper>\r\n        <SettingsSections\r\n          setCurrentPage={setCurrentPage}\r\n          currentPage={currentPage}\r\n        />\r\n        <SettingsList currentPage={currentPage} />\r\n      </SettingsPageWrapper>\r\n    </ContentContainer>\r\n  );\r\n};\r\n\r\nexport default SettingsPage;\r\n","import { CHAT_ROUTE, HISTORY_ROUTE, HOME_ROUTE, LIBRARY_ROUTE, LOGIN_ROUTE, NOTFOUND_ROUTE, SEARCH_ROUTE, SIGNUP_ROUTE, TEMPLATE_ALBUM, TEMPLATE_AUTHOR, TEMPLATE_CHAT, SETTINGS_ROUTE, LYRICS_EDITING_ROUTE } from \"../shared/data/consts\";\r\nimport { LibraryPage, ChatPage, PageNotFound, AlbumPage, DialoguePage, AuthorPage, LogInPage, HomePage, SearchPage, HistoryPage, SettingsPage, SignUpPage, LyricsEditingPage } from \"../pages\";\r\nexport const publicRoutes = [\r\n\t{\r\n\t\tpath: LOGIN_ROUTE,\r\n\t\tComponent: LogInPage,\r\n\t},\r\n\t{\r\n\t\tpath: SIGNUP_ROUTE,\r\n\t\tComponent: SignUpPage,\r\n\t}\r\n]\r\n\r\nexport const privateRoutes = [\r\n\t{\r\n\t\tpath: HOME_ROUTE,\r\n\t\tComponent: HomePage,\r\n\t},\r\n\t{\r\n\t\tpath: LIBRARY_ROUTE,\r\n\t\tComponent: LibraryPage,\r\n\t},\r\n\t{\r\n\t\tpath: SEARCH_ROUTE,\r\n\t\tComponent: SearchPage,\r\n\t},\r\n\t{\r\n\t\tpath: CHAT_ROUTE,\r\n\t\tComponent: ChatPage,\r\n\t},\r\n\t{\r\n\t\tpath: NOTFOUND_ROUTE,\r\n\t\tComponent: PageNotFound\r\n\t},\r\n\t{\r\n\t\tpath: TEMPLATE_CHAT,\r\n\t\tComponent: DialoguePage\r\n\t},\r\n\t{\r\n\t\tpath: TEMPLATE_ALBUM,\r\n\t\tComponent: AlbumPage\r\n\t},\r\n\t{\r\n\t\tpath: TEMPLATE_AUTHOR,\r\n\t\tComponent: AuthorPage\r\n\t},\r\n\t{\r\n\t\tpath: HISTORY_ROUTE,\r\n\t\tComponent: HistoryPage\r\n\t},\r\n\t{\r\n\t\tpath: SETTINGS_ROUTE,\r\n\t\tComponent: SettingsPage\r\n\t},\r\n\t{\r\n\t\tpath: LYRICS_EDITING_ROUTE,\r\n\t\tComponent: LyricsEditingPage\r\n\t}\r\n]","import React, { useState } from \"react\";\r\nimport { ColorExtractor } from \"react-color-extractor\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FullScreenLoading } from \"../../features/loading/ui/atoms/full-screen-loading\";\r\nimport { TitleAndLogo } from \"../../shared/ui/atoms/title-and-logo\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\nimport { BlurredBg } from \"../../shared/ui/atoms/blurred-background\";\r\nimport DownloadButton from \"../../shared/ui/atoms/download-button\";\r\nimport Input from \"../../shared/ui/atoms/input\";\r\nimport { RadioBtn } from \"../../shared/ui/atoms/radio-button\";\r\nimport \"./style.css\";\r\nimport { LOGIN_ROUTE } from \"../../shared/data/consts\";\r\n\r\nconst SignUpPage = () => {\r\n  const [currentRoleChoice, setCurrentRoleChoice] = useState(1);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const { signup } = useAuth();\r\n  const [photoURL, setPhotoURL] = useState(\"\");\r\n  const isValid =\r\n    email.length !== 0 && password.length !== 0 && name.length !== 0;\r\n  const [imageLocalPath, setImageLocalPath] = useState(\"\");\r\n  const [imageColors, setImageColors] = useState([]);\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!isValid) {\r\n      return setErrorMessage(\"One of your fields is totaly empty\");\r\n    }\r\n\r\n    await signup(\r\n      email,\r\n      name,\r\n      password,\r\n      currentRoleChoice,\r\n      photoURL,\r\n      imageColors,\r\n      setErrorMessage,\r\n      setLoading\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"In-Up-Container\">\r\n      <ColorExtractor\r\n        src={imageLocalPath}\r\n        getColors={(colors) => setImageColors(colors)}\r\n      />\r\n      <div className=\"CentralPlate\">\r\n        <FullScreenLoading loading={loading} />\r\n        <TitleAndLogo title=\"Sign Up\" />\r\n\r\n        {errorMessage && <div className=\"Alert\">{errorMessage}</div>}\r\n\r\n        <div className=\"inner-plate-content\">\r\n          <Input\r\n            type=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            setValue={setEmail}\r\n            margin\r\n          />\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Enter your name\"\r\n            value={name}\r\n            setValue={setName}\r\n            margin\r\n          />\r\n          <Input\r\n            type=\"password\"\r\n            placeholder=\"Create password\"\r\n            value={password}\r\n            setValue={setPassword}\r\n            margin\r\n          />\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              margin: \"5px 0 15px 0\",\r\n            }}\r\n          >\r\n            <RadioBtn\r\n              label=\"User\"\r\n              onClick={() => setCurrentRoleChoice(0)}\r\n              currentActive={currentRoleChoice}\r\n              id={0}\r\n            />\r\n            <RadioBtn\r\n              label=\"Author\"\r\n              onClick={() => setCurrentRoleChoice(1)}\r\n              currentActive={currentRoleChoice}\r\n              id={1}\r\n            />\r\n          </div>\r\n          <DownloadButton\r\n            text=\"Download photo\"\r\n            place={\"usersImages/\"}\r\n            setItemSrc={setPhotoURL}\r\n            setImageLocalPath={setImageLocalPath}\r\n          />\r\n          <div className=\"inAndUpBtns\">\r\n            <button\r\n              className=\"upBtn\"\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              onClick={handleSubmit}\r\n            >\r\n              Sign Up\r\n            </button>\r\n            <Link to={LOGIN_ROUTE}>\r\n              <button className=\"inBtn\">Already registered</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <BlurredBg />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUpPage;\r\n","import React from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport { privateRoutes } from '../routes'\r\nimport { HOME_ROUTE } from '../../shared/data/consts'\r\n\r\nexport const ContentRouter = () => {\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t{privateRoutes.map(({ path, Component }, i) => {\r\n\t\t\t\treturn <Route path={path} component={Component} exact key={path} />\r\n\t\t\t})}\r\n\t\t\t<Redirect to={HOME_ROUTE} />\r\n\t\t</Switch>\r\n\t)\r\n}\r\n","import React from \"react\";\r\nimport { FaRegCheckCircle, FaRegTimesCircle } from \"react-icons/fa\";\r\nimport { useModal } from \"../../../contexts/modal\";\r\n\r\nexport const MessageWindow = () => {\r\n  const { bottomMessage } = useModal();\r\n\r\n  const findIcon = () => {\r\n    switch (bottomMessage.type) {\r\n      case \"success\":\r\n        return <FaRegCheckCircle />;\r\n      case \"failure\":\r\n        return <FaRegTimesCircle />;\r\n      default:\r\n        return <FaRegCheckCircle />;\r\n    }\r\n  };\r\n\r\n  const findColor = () => {\r\n    switch (bottomMessage.type) {\r\n      case \"success\":\r\n        return { light: \"#69e985\", dark: \"#12321ce6\" };\r\n      case \"failure\":\r\n        return { light: \"#f4546a\", dark: \"#581921d8\" };\r\n      default:\r\n        return { light: \"#69e985\", dark: \"#12321ce6\" };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`bottom-message ${bottomMessage.isOpenned ? \"openned\" : \"\"}`}\r\n      style={{ background: findColor().dark, color: findColor().light }}\r\n    >\r\n      {findIcon()}\r\n      <span>{bottomMessage.message}</span>\r\n    </div>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/notification.cdade1f4.mp3\";","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { LastSentMessage } from \"../molecules/last-sent-message\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport notifSound from \"../../../../shared/music/notification.mp3\";\r\n\r\nconst ChatNotificationWindowWrapper = styled.div`\r\n  color: #fff;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  border-radius: var(--standartBorderRadius2);\r\n  background: #000000b9;\r\n  position: absolute;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  transition: 0.2s;\r\n  transform: translateY(\r\n    ${({ show, index }) => (!show ? \"90px\" : `-${index * 90 + index * 10}px`)}\r\n  );\r\n  opacity: ${({ show }) => (show ? \"1\" : \"0\")};\r\n  width: 250px;\r\n  height: 90px;\r\n\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n\r\n  &:hover {\r\n    background: #1f1f1fb3;\r\n  }\r\n\r\n  .image-and-name {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    font-weight: bold;\r\n\r\n    img {\r\n      width: 25px;\r\n      height: 25px;\r\n      border-radius: 100%;\r\n      margin-right: 7px;\r\n    }\r\n  }\r\n\r\n  .message {\r\n    margin-top: 10px;\r\n    display: flex;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nconst ChatNotificationWindow = ({\r\n  chatId,\r\n  chatName,\r\n  chatImage,\r\n  message,\r\n  userId,\r\n  index,\r\n}) => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    firestore\r\n      .collection(\"users\")\r\n      .doc(userId)\r\n      .get()\r\n      .then((res) => {\r\n        setShow(true);\r\n        const notificationSound = new Audio(notifSound);\r\n        notificationSound.play();\r\n        setUserData(res.data());\r\n        setTimeout(() => {\r\n          setShow(false);\r\n        }, 6000);\r\n      });\r\n  }, []);\r\n\r\n  // TODO: –¥–æ–±–∞–≤–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–∫–ª—é—á–∏—Ç—å —Ç—Ä–µ–∫ –ø–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ –≤ –Ω–µ–º –µ—Å—Ç—å —Ç—Ä–µ–∫\r\n\r\n  return (\r\n    <ChatNotificationWindowWrapper show={show} index={index}>\r\n      <Link to={`/chat/${chatId}`}>\r\n        <div className=\"image-and-name\">\r\n          <img\r\n            src={chatImage?.length ? chatImage : userData?.photoURL}\r\n            alt=\"\"\r\n          />\r\n          {chatName.length ? chatName : userData?.displayName}\r\n        </div>\r\n        <div className=\"message\">\r\n          <LastSentMessage\r\n            sender={userData}\r\n            isGroup={chatName.length}\r\n            message={message}\r\n            messageLen={20}\r\n          />\r\n        </div>\r\n      </Link>\r\n    </ChatNotificationWindowWrapper>\r\n  );\r\n};\r\n\r\nexport default ChatNotificationWindow;\r\n","import React, { useRef } from \"react\";\r\nimport { useModal } from \"../../../contexts/modal\";\r\nimport useOutsideClick from \"../../../shared/lib/hooks/use-outside-click\";\r\n\r\nexport const ConfirmWindow = () => {\r\n  const { isOpenConfirm, confirmContent, setIsOpenConfirm } = useModal();\r\n  const confirmRef = useRef(null);\r\n  useOutsideClick(confirmRef, setIsOpenConfirm);\r\n  return (\r\n    <div\r\n      className=\"modal_darkBg confirm\"\r\n      style={!isOpenConfirm ? { opacity: 0, visibility: \"hidden\" } : {}}\r\n    >\r\n      <div\r\n        className=\"ConfirmWindow\"\r\n        ref={confirmRef}\r\n        style={!isOpenConfirm ? { transform: \"translateY(40px)\" } : {}}\r\n      >\r\n        <h3>{confirmContent.question}</h3>\r\n        <div className=\"confirmButtons\">\r\n          <button onClick={confirmContent.onConfirm} className=\"standartButton\">\r\n            {confirmContent.confirmText}\r\n          </button>\r\n          <button onClick={confirmContent.onReject} className=\"standartButton\">\r\n            {confirmContent.rejectText}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { Loading } from \"../atoms/loading\";\r\nimport { BiCheckCircle, BiDownArrow, BiUpArrow } from \"react-icons/bi\";\r\nimport { FiXCircle } from \"react-icons/fi\";\r\nimport useOnScreen from \"../../../../shared/lib/hooks/use-on-screen\";\r\n\r\nexport const LyricsParagraph = ({\r\n  el,\r\n  index,\r\n  lyricsModeratorMode,\r\n  karaokeModeratorTimes,\r\n  setKaraokeModeratorTimes,\r\n  setInputKaraokeTime,\r\n  inputKaraokeTime,\r\n}) => {\r\n  const {\r\n    currentSongData,\r\n    currentParagraph,\r\n    displayAuthors,\r\n    changeCurrentTime,\r\n    play,\r\n    currentTime,\r\n    currentParagraphRef,\r\n    lyrics,\r\n  } = useSong();\r\n  const paragraphRef = useRef();\r\n  const isVisible = useOnScreen(\r\n    currentParagraph === index ? currentParagraphRef : paragraphRef\r\n  );\r\n  const paragraphStyle =\r\n    currentParagraph === index\r\n      ? {}\r\n      : window.innerWidth > 1000\r\n      ? Math.abs(currentParagraph - index) < 2\r\n        ? { transform: \"scale(.8) translateX(-58px)\" }\r\n        : { transform: \"scale(.75) translateX(-78px)\" }\r\n      : Math.abs(currentParagraph - index) < 2\r\n      ? { transform: \"scale(.8) translateX(-11.5%)\" }\r\n      : { transform: \"scale(.75) translateX(-15.6%)\" };\r\n\r\n  function addLyricsBlock(indexOfRelativeElement, direction) {\r\n    const tempTimes = karaokeModeratorTimes;\r\n    if (direction === \"down\") {\r\n      tempTimes.splice(indexOfRelativeElement + 1, 0, undefined);\r\n      setKaraokeModeratorTimes(tempTimes);\r\n      return currentSongData.lyrics.splice(indexOfRelativeElement + 1, 0, {\r\n        startTime: \"undefined\",\r\n        text: \"@loading\",\r\n      });\r\n    }\r\n\r\n    tempTimes.splice(indexOfRelativeElement, 0, undefined);\r\n    setKaraokeModeratorTimes(tempTimes);\r\n    currentSongData.lyrics.splice(indexOfRelativeElement, 0, {\r\n      startTime: \"undefined\",\r\n      text: \"@loading\",\r\n    });\r\n  }\r\n\r\n  function inputKaraoke(e, index) {\r\n    let tempArray = karaokeModeratorTimes;\r\n    let convertedToNumber = e.target.value;\r\n    tempArray[index] = convertedToNumber;\r\n    setInputKaraokeTime(e.target.value);\r\n    setKaraokeModeratorTimes(tempArray);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\"lyricsBlock \" + (!isVisible ? \"notVisible\" : \"\")}\r\n      key={index}\r\n      id={index}\r\n      onClick={(e) => changeCurrentTime(e, el.startTime)}\r\n      style={\r\n        play\r\n          ? currentParagraph === index\r\n            ? {}\r\n            : Math.abs(currentParagraph - index) < 2\r\n            ? { opacity: 0.5 }\r\n            : { opacity: 0.1 }\r\n          : {}\r\n      }\r\n      ref={currentParagraph === index ? currentParagraphRef : paragraphRef}\r\n    >\r\n      {lyricsModeratorMode === 1 ? (\r\n        <div className=\"lyricsBlockInput\">\r\n          <span onClick={(e) => e.stopPropagation()}>\r\n            {karaokeModeratorTimes[index] !== undefined &&\r\n            karaokeModeratorTimes[index].length !== 0 ? (\r\n              <BiCheckCircle\r\n                style={{\r\n                  background: \"var(--themeColor3)\",\r\n                  color: \"var(--themeColor)\",\r\n                }}\r\n              />\r\n            ) : (\r\n              <FiXCircle />\r\n            )}{\" \"}\r\n          </span>\r\n          <input\r\n            type=\"number\"\r\n            value={karaokeModeratorTimes[index] || inputKaraokeTime}\r\n            onChange={(e) => inputKaraoke(e, index)}\r\n            onClick={(e) => e.stopPropagation()}\r\n          />\r\n          <div\r\n            className=\"addLyricsElementBtns\"\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            <button\r\n              onClick={() => {\r\n                addLyricsBlock(index, \"up\");\r\n              }}\r\n            >\r\n              <BiUpArrow />\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                addLyricsBlock(index, \"down\");\r\n              }}\r\n            >\r\n              <BiDownArrow />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n      {el.text === \"@loading\" ? (\r\n        <Loading\r\n          currentTime={currentTime - lyrics[index].startTime}\r\n          timeSpan={lyrics[index + 1].startTime - lyrics[index].startTime}\r\n          id={index}\r\n        />\r\n      ) : el.text === \"@end\" ? (\r\n        <></>\r\n      ) : (\r\n        <p key={index} id={index} style={paragraphStyle}>\r\n          {el.text}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { BiDotsVerticalRounded, BiShare } from 'react-icons/bi';\r\nimport { RiPlayListFill } from 'react-icons/ri';\r\nimport { TiDocumentText } from 'react-icons/ti';\r\nimport { SongInfo } from '../../features/song/ui/organisms/song-info';\r\n\r\nimport { AddToPlaylists } from '../../features/full-screen-player/ui/molecules/add-to-playlists';\r\nimport { Options } from '../../features/full-screen-player/ui/organisms/options';\r\nimport { Queue } from '../../features/full-screen-player/ui/organisms/queue';\r\nimport { Share } from '../../features/full-screen-player/ui/organisms/share';\r\nimport { Lyrics } from '../../features/full-screen-player/ui/organisms/lyrics';\r\nimport { AuthorsList } from '../../features/full-screen-player/ui/atoms/authors-list';\r\n\r\n\r\nexport const rightSide = [\r\n\t{\r\n\t\tid: 0,\r\n\t\ticon: <BiShare />,\r\n\t\ttitle: 'Share',\r\n\t\tcomponent: Share\r\n\t},\r\n\t{\r\n\t\tid: 1,\r\n\t\ticon: <BiDotsVerticalRounded />,\r\n\t\ttitle: 'More',\r\n\t\tcomponent: Options\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\ticon: <TiDocumentText />,\r\n\t\ttitle: 'Lyrics',\r\n\t\tcomponent: Lyrics\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\ticon: <RiPlayListFill />,\r\n\t\ttitle: 'Queue',\r\n\t\tcomponent: Queue\r\n\t},\r\n\t{\r\n\t\tid: 4,\r\n\t\ticon: null,\r\n\t\ttitle: 'Go To Authors',\r\n\t\tcomponent: AuthorsList\r\n\t},\r\n\t{\r\n\t\tid: 5,\r\n\t\ticon: null,\r\n\t\ttitle: 'Add to playlist',\r\n\t\tcomponent: AddToPlaylists\r\n\t},\r\n\t{\r\n\t\tid: 6,\r\n\t\ticon: null,\r\n\t\ttitle: 'Info',\r\n\t\tcomponent: SongInfo\r\n\t},\r\n]","import React from \"react\";\r\nimport { FaFacebookF, FaTelegramPlane, FaVk } from \"react-icons/fa\";\r\nimport { FiCopy } from \"react-icons/fi\";\r\nimport { AiFillInstagram } from \"react-icons/ai\";\r\nimport { ImWhatsapp } from \"react-icons/im\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { FriendsToShareWith } from \"../../../share/ui/organisms/friends-to-share-with\";\r\nexport const Share = () => {\r\n  const { currentSongData } = useSong();\r\n  const socialMedia = [\r\n    <ImWhatsapp />,\r\n    <FaFacebookF />,\r\n    <FaTelegramPlane />,\r\n    <FaVk />,\r\n    <AiFillInstagram />,\r\n  ];\r\n  return (\r\n    <div className=\"Share\">\r\n      <button className=\"shareCopyLink\">\r\n        <FiCopy />\r\n        Copy link\r\n      </button>\r\n      <div className=\"shareOnSocial\">\r\n        {socialMedia.map((social, index) => {\r\n          return (\r\n            <div className=\"shareSocialIcon\" key={index}>\r\n              {social}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"sharePeopleShort\">\r\n        <FriendsToShareWith item={currentSongData} whatToShare={\"song\"} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { MdPlaylistAdd } from \"react-icons/md\";\r\nimport { BiUserCircle } from \"react-icons/bi\";\r\nimport { FiInfo } from \"react-icons/fi\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport AddOrDeleteButtonFull from \"../molecules/add-or-delete-song-button\";\r\nexport const Options = () => {\r\n  const { currentSongData, setRightSideCurrentPage } = useSong();\r\n  return (\r\n    <div className=\"Options\">\r\n      <div className=\"OptionItem\">\r\n        <AddOrDeleteButtonFull song={currentSongData} />\r\n      </div>\r\n      <div className=\"OptionItem\" onClick={() => setRightSideCurrentPage(4)}>\r\n        <BiUserCircle />\r\n        Go to author\r\n      </div>\r\n      <div className=\"OptionItem\" onClick={() => setRightSideCurrentPage(5)}>\r\n        <MdPlaylistAdd />\r\n        Add to playlist\r\n      </div>\r\n      <div className=\"OptionItem\" onClick={() => setRightSideCurrentPage(6)}>\r\n        <FiInfo />\r\n        Info\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BiCheckCircle, BiDownArrow, BiUpArrow } from \"react-icons/bi\";\r\nimport { FiXCircle } from \"react-icons/fi\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { firestore } from \"../../../../firebase\";\r\nimport { Slider } from \"../../../../shared/ui/molecules/slider\";\r\nimport { LyricsParagraph } from \"../molecules/lyrics-paragraph\";\r\n\r\nexport const Lyrics = () => {\r\n  const {\r\n    setIsThereKaraoke,\r\n    currentSongData,\r\n    setCurrentSongData,\r\n    isThereKaraoke,\r\n    currentParagraph,\r\n    displayAuthors,\r\n    currentParagraphRef,\r\n    lyrics,\r\n    rightSideCurrentPage,\r\n    openFullScreenPlayer,\r\n    openMenu,\r\n  } = useSong();\r\n  const { currentUser } = useAuth();\r\n  const [inputKaraokeTime, setInputKaraokeTime] = useState(0);\r\n  const [karaokeModeratorTimes, setKaraokeModeratorTimes] = useState([]);\r\n  const [lyricsModeratorMode, setLyricsModeratorMode] = useState(0);\r\n  const [canUpdateLyrics, setCanUpdateLyrics] = useState(false);\r\n  useEffect(() => {\r\n    if (\r\n      isThereKaraoke &&\r\n      openMenu &&\r\n      rightSideCurrentPage === 2 &&\r\n      openFullScreenPlayer\r\n    )\r\n      currentParagraphRef.current.scrollIntoView();\r\n  }, [currentParagraph]);\r\n  function inputKaraoke(e, index) {\r\n    let tempArray = karaokeModeratorTimes;\r\n    let convertedToNumber = e.target.value;\r\n    tempArray[index] = convertedToNumber;\r\n    setInputKaraokeTime(e.target.value);\r\n    setKaraokeModeratorTimes(tempArray);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (lyrics && lyrics[0].startTime !== \"undefined\") {\r\n      lyrics.forEach((paragraph) => {\r\n        karaokeModeratorTimes.push(paragraph.startTime);\r\n      });\r\n      setCanUpdateLyrics(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let tempSongData = currentSongData;\r\n    if (tempSongData !== undefined && inputKaraokeTime !== 0) {\r\n      tempSongData.lyrics.forEach((paragraph, index) => {\r\n        paragraph.startTime = karaokeModeratorTimes[index] || \"undefined\";\r\n      });\r\n      setCurrentSongData(tempSongData);\r\n      setIsThereKaraoke(true);\r\n    }\r\n\r\n    if (\r\n      !currentSongData.lyrics?.some(\r\n        (paragraph) => paragraph.startTime === \"undefined\"\r\n      )\r\n    )\r\n      setCanUpdateLyrics(true);\r\n    else setCanUpdateLyrics(false);\r\n  }, [inputKaraokeTime]);\r\n  function updateLyrics() {\r\n    //TODO: add if statement to prevent adding lyrics time spans to not everysingle paragraph block\r\n    firestore.collection(\"songs\").doc(currentSongData.id).update({\r\n      lyrics: currentSongData.lyrics,\r\n    });\r\n  }\r\n\r\n  function addLyricsBlock(indexOfRelativeElement, direction) {\r\n    const tempTimes = karaokeModeratorTimes;\r\n    if (direction === \"down\") {\r\n      tempTimes.splice(indexOfRelativeElement + 1, 0, undefined);\r\n      setKaraokeModeratorTimes(tempTimes);\r\n      return currentSongData.lyrics.splice(indexOfRelativeElement + 1, 0, {\r\n        startTime: \"undefined\",\r\n        text: \"@loading\",\r\n      });\r\n    }\r\n\r\n    tempTimes.splice(indexOfRelativeElement, 0, undefined);\r\n    setKaraokeModeratorTimes(tempTimes);\r\n    currentSongData.lyrics.splice(indexOfRelativeElement, 0, {\r\n      startTime: \"undefined\",\r\n      text: \"@loading\",\r\n    });\r\n  }\r\n\r\n  return lyrics ? (\r\n    <div className=\"Lyrics\">\r\n      {currentUser.isAdmin ? (\r\n        <Slider\r\n          pages={[\"Listen mode\", \"Edit Mode\"]}\r\n          currentPage={lyricsModeratorMode}\r\n          setCurrentPage={setLyricsModeratorMode}\r\n        />\r\n      ) : null}\r\n      {isThereKaraoke\r\n        ? lyrics.map((el, i) => {\r\n            return (\r\n              <LyricsParagraph\r\n                el={el}\r\n                index={i}\r\n                lyricsModeratorMode={lyricsModeratorMode}\r\n                karaokeModeratorTimes={karaokeModeratorTimes}\r\n                setKaraokeModeratorTimes={setKaraokeModeratorTimes}\r\n                setInputKaraokeTime={setInputKaraokeTime}\r\n                inputKaraokeTime={inputKaraoke}\r\n              />\r\n            );\r\n          })\r\n        : lyrics.map((el, i) => {\r\n            return (\r\n              <div className=\"lyricsBlock\" key={i}>\r\n                {lyricsModeratorMode === 1 ? (\r\n                  <div className=\"lyricsBlockInput\">\r\n                    {karaokeModeratorTimes[i] !== undefined &&\r\n                    karaokeModeratorTimes[i].length !== 0 ? (\r\n                      <BiCheckCircle\r\n                        style={{\r\n                          background: \"var(--themeColor3)\",\r\n                          color: \"var(--themeColor)\",\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <FiXCircle />\r\n                    )}\r\n                    <input\r\n                      type=\"number\"\r\n                      value={karaokeModeratorTimes[i] || inputKaraokeTime}\r\n                      onChange={(e) => inputKaraoke(e, i)}\r\n                      onClick={(e) => e.stopPropagation()}\r\n                    />\r\n                    <div className=\"addLyricsElementBtns\">\r\n                      <button onClick={() => addLyricsBlock(i, \"up\")}>\r\n                        <BiUpArrow />\r\n                      </button>\r\n                      <button onClick={() => addLyricsBlock(i, \"down\")}>\r\n                        <BiDownArrow />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ) : null}\r\n                <p>{el.text}</p>\r\n              </div>\r\n            );\r\n          })}\r\n      <h6\r\n        className={\r\n          \"lyricsAuthors \" +\r\n          (currentParagraph === lyrics.length - 1 ? \"active\" : \"\")\r\n        }\r\n      >\r\n        Authors: {displayAuthors()}\r\n      </h6>\r\n      {lyricsModeratorMode === 1 ? (\r\n        <button\r\n          onClick={canUpdateLyrics ? updateLyrics : null}\r\n          className=\"updateLyricsBtn\"\r\n          style={!canUpdateLyrics ? { opacity: 0.3 } : {}}\r\n        >\r\n          Update Lyrics\r\n        </button>\r\n      ) : null}\r\n    </div>\r\n  ) : (\r\n    <h3>No lyrics</h3>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { SongItem } from \"../../../../entities/song/ui/song-item\";\r\nimport getShortString from \"../../../../shared/lib/get-short-string\";\r\n\r\nexport const Queue = () => {\r\n  const {\r\n    currentSongQueue,\r\n    currentSongPlaylistSource,\r\n    setOpenFullScreenPlayer,\r\n  } = useSong();\r\n  return (\r\n    <div className=\"Queue\">\r\n      <div className=\"queueNowIsPlaying\">\r\n        <h5 style={{ marginTop: 2 }}>\r\n          Now is playing:\r\n          <Link\r\n            onClick={() => setOpenFullScreenPlayer(false)}\r\n            to={currentSongPlaylistSource.source}\r\n            className=\"queueAlbumName\"\r\n          >\r\n            <div\r\n              className=\"queueImage\"\r\n              style={currentSongPlaylistSource.image ? {} : { display: \"none\" }}\r\n            >\r\n              <img\r\n                loading=\"lazy\"\r\n                src={currentSongPlaylistSource.image}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <span>{getShortString(currentSongPlaylistSource.name, 25)}</span>\r\n          </Link>\r\n        </h5>\r\n      </div>\r\n      {currentSongQueue.map((song, index) => {\r\n        return <SongItem song={song} localIndex={index} key={index} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useSwipeable } from 'react-swipeable';\r\nimport { useSong } from '../../../../contexts/song';\r\nimport { rightSide } from '../../../../shared/data/player-right-side';\r\nimport checkNumber from '../../../../shared/lib/check-number';\r\nimport useOutsideClick from '../../../../shared/lib/hooks/use-outside-click';\r\nimport useRenderCount from '../../../../shared/lib/hooks/use-render-count';\r\n\r\nconst useFullScreenPlayer = () => {\r\n\tconst {\r\n\t\timgColors,\r\n\t\trightSideCurrentPage,\r\n\t\tsetRightSideCurrentPage,\r\n\t\tsetOpenFullScreenPlayer,\r\n\t\tlyrics,\r\n\t\topenMenu,\r\n\t\tsetOpenMenu,\r\n\t} = useSong();\r\n\r\n\tconst lyricsRef = useRef(null);\r\n\tconst [transformTransition, setTransformTransition] = useState(0.05);\r\n\tconst [mobileMenuTransition, setMobileMenuTransition] = useState(0);\r\n\t// const [swipeDown, setSwipeDown] = useState(false)\r\n\tconst [deltaY, setDeltaY] = useState(0);\r\n\tconst [deltaYMobileMenu, setDeltaYMobileMenu] = useState(0);\r\n\tconst mobileContentScroll = useRef();\r\n\t// setup ref for your usage\r\n\tconst mobileMenuRef = React.useRef();\r\n\tuseOutsideClick(mobileMenuRef, setOpenMenu);\r\n\r\n\tconst handlers = useSwipeable({\r\n\t\t// onSwiped: (eventData) => {setSwipeDown(eventData.dir === 'Down')},\r\n\t\tonSwiping: (event) => {\r\n\t\t\tif (event.deltaY > 0) setDeltaY(event.deltaY);\r\n\t\t},\r\n\t});\r\n\r\n\t// setup ref for your usage\r\n\tconst bgRef = React.useRef();\r\n\r\n\tconst handlersForMobileMenu = useSwipeable({\r\n\t\tonSwiping: (event) => {\r\n\t\t\tevent.event.stopPropagation();\r\n\t\t\tif (\r\n\t\t\t\topenMenu &&\r\n\t\t\t\tmobileContentScroll.current.scrollTop === 0 &&\r\n\t\t\t\tevent.deltaY > 0\r\n\t\t\t)\r\n\t\t\t\tsetDeltaYMobileMenu(event.deltaY);\r\n\t\t\telse if (!openMenu && event.deltaY < 0) setDeltaYMobileMenu(event.deltaY);\r\n\t\t},\r\n\t\tonSwipedLeft: () => {\r\n\t\t\tsetRightSideCurrentPage(checkNumber(rightSideCurrentPage + 1, 3));\r\n\t\t},\r\n\t\tonSwipedRight: () => {\r\n\t\t\tsetRightSideCurrentPage(checkNumber(rightSideCurrentPage - 1, 3));\r\n\t\t},\r\n\t});\r\n\r\n\tfunction returnToInitialMobileMenu() {\r\n\t\tlet dropDelta;\r\n\t\tclearTimeout(dropDelta);\r\n\t\tsetMobileMenuTransition(0);\r\n\t\tdropDelta = setTimeout(() => {\r\n\t\t\tsetMobileMenuTransition(0.2);\r\n\t\t\tsetDeltaYMobileMenu(0);\r\n\t\t}, 300);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (deltaY > 150) {\r\n\t\t\tsetOpenFullScreenPlayer(false);\r\n\t\t}\r\n\t}, [deltaY]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!openMenu && deltaYMobileMenu < -100) {\r\n\t\t\tsetOpenMenu(true);\r\n\t\t\tsetDeltaYMobileMenu(0);\r\n\t\t\tsetMobileMenuTransition(0.2);\r\n\t\t} else if (openMenu && deltaYMobileMenu > 150) {\r\n\t\t\tsetOpenMenu(false);\r\n\t\t\tsetDeltaYMobileMenu(0);\r\n\t\t\tsetMobileMenuTransition(0.2);\r\n\t\t} else {\r\n\t\t\treturnToInitialMobileMenu();\r\n\t\t}\r\n\t}, [deltaYMobileMenu]);\r\n\r\n\tfunction returnToInitial() {\r\n\t\tlet dropDelta;\r\n\t\tclearTimeout(dropDelta);\r\n\t\tsetTransformTransition(0.2);\r\n\t\tdropDelta = setTimeout(() => {\r\n\t\t\tsetDeltaY(0);\r\n\t\t\tsetTransformTransition(0);\r\n\t\t}, 100);\r\n\t}\r\n\r\n\tconst refPassthroughBg = (el) => {\r\n\t\thandlers.ref(el);\r\n\t\tbgRef.current = el;\r\n\t};\r\n\r\n\tconst refPassthroughMobileMenu = (el) => {\r\n\t\thandlersForMobileMenu.ref(el);\r\n\t\tmobileMenuRef.current = el;\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (imgColors.length !== 0) {\r\n\t\t\tdocument.documentElement.style.setProperty(\"--themeColor\", imgColors[1]);\r\n\t\t\tdocument.documentElement.style.setProperty(\"--themeColor2\", imgColors[0]);\r\n\t\t\tdocument.documentElement.style.setProperty(\"--themeColor3\", imgColors[2]);\r\n\t\t\tdocument.documentElement.style.setProperty(\"--themeColor4\", imgColors[5]);\r\n\t\t\tdocument.documentElement.style.setProperty(\r\n\t\t\t\t\"--themeColorTransparent\",\r\n\t\t\t\timgColors[0] + \"6e\"\r\n\t\t\t);\r\n\t\t}\r\n\t}, [imgColors]);\r\n\r\n\tfunction rightSideContent(currentPage) {\r\n\t\tlet RightSidePage = rightSide[currentPage].component;\r\n\t\treturn <RightSidePage />;\r\n\t}\r\n\r\n\tfunction noLyrics() {\r\n\t\treturn lyrics && lyrics.length === 0;\r\n\t}\r\n\r\n\tfunction changeRightSidePage(el) {\r\n\t\tif (el.id === 2 && noLyrics()) return null;\r\n\t\tsetMobileMenuTransition(0.2);\r\n\t\tsetRightSideCurrentPage(el.id);\r\n\t\tsetOpenMenu(true);\r\n\t}\r\n\r\n\treturn {\r\n\t\tdeltaY,\r\n\t\ttransformTransition,\r\n\t\trefPassthroughBg,\r\n\t\thandlers,\r\n\t\treturnToInitial,\r\n\t\tsetOpenFullScreenPlayer,\r\n\t\topenMenu,\r\n\t\tsetOpenMenu,\r\n\t\trightSideCurrentPage,\r\n\t\tnoLyrics,\r\n\t\tchangeRightSidePage,\r\n\t\tlyricsRef,\r\n\t\trightSideContent,\r\n\t\thandlersForMobileMenu,\r\n\t\trefPassthroughMobileMenu,\r\n\t\tdeltaYMobileMenu,\r\n\t\tmobileMenuTransition,\r\n\t\tmobileContentScroll,\r\n\t}\r\n}\r\n\r\nexport default useFullScreenPlayer\r\n","function amountOfZeros(number) {\r\n\treturn number % 10 === number ? \"0\" + number : number\r\n}\r\n\r\nexport default function correctTimeDisplay(seconds) {\r\n\treturn amountOfZeros(Math.floor(seconds / 60)) + \":\" + amountOfZeros(Math.floor(seconds % 60))\r\n}","export function findLenOfAuthors(authors) {\r\n\tlet str = \"\"\r\n\tauthors.forEach(el => {str += el.displayName})\r\n\treturn str.length\r\n}","import React, { memo } from \"react\";\r\nimport { FaBackward, FaForward, FaPause, FaPlay } from \"react-icons/fa\";\r\nimport { TiArrowRepeat, TiArrowShuffle } from \"react-icons/ti\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\n\r\nimport checkNumber from \"../../../../shared/lib/check-number\";\r\nimport displayTime from \"../../../../shared/lib/display-time\";\r\nimport displayAuthorsStr from \"../../../../shared/lib/display-authors-str\";\r\nimport ColorCircles from \"../atoms/color-circles\";\r\nimport { findLenOfAuthors } from \"../../lib/find-len-of-authors\";\r\nexport const Player = memo(\r\n  ({ inputRef, textLimit = 18, linkToAuthors = true }) => {\r\n    const {\r\n      currentSongData,\r\n      currentTime,\r\n      changeCurrentTime,\r\n      songDuration,\r\n      setRepeatMode,\r\n      repeatMode,\r\n      play,\r\n      prevSong,\r\n      playSong,\r\n      nextSong,\r\n      setShuffleMode,\r\n      shuffleMode,\r\n      displayAuthors,\r\n      name,\r\n      authors,\r\n      cover,\r\n      inputRange,\r\n    } = useSong();\r\n    return currentSongData.id !== -1 ? (\r\n      <div className=\"player\">\r\n        <div className=\"playerUpperSide\">\r\n          <div className=\"songCover\">\r\n            <img loading=\"lazy\" src={cover} alt=\"\" />\r\n          </div>\r\n          <div className=\"nameAndAuthors\">\r\n            <h2\r\n              title={name.length > textLimit ? name : null}\r\n              style={{ overflow: \"hidden\" }}\r\n            >\r\n              <div\r\n                style={\r\n                  name.length > textLimit\r\n                    ? {\r\n                        animation: \"outSideText 17s infinite\",\r\n                        whiteSpace: \"nowrap\",\r\n                      }\r\n                    : {}\r\n                }\r\n              >\r\n                {name}\r\n              </div>\r\n            </h2>\r\n            <h3\r\n              style={{ overflow: \"hidden\" }}\r\n              title={authors.map((el) => \" \" + el.displayName)}\r\n            >\r\n              {linkToAuthors ? (\r\n                <div\r\n                  style={\r\n                    findLenOfAuthors(currentSongData.authors) > textLimit\r\n                      ? {\r\n                          animation: \"outSideText 17s infinite\",\r\n                          whiteSpace: \"nowrap\",\r\n                        }\r\n                      : {}\r\n                  }\r\n                >\r\n                  {displayAuthors()}\r\n                </div>\r\n              ) : (\r\n                <div>{displayAuthorsStr(authors, \" & \", 33)}</div>\r\n              )}\r\n            </h3>\r\n          </div>\r\n        </div>\r\n        <div className=\"controlPanel\">\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            ref={inputRef}\r\n            step=\"1\"\r\n            value={currentTime}\r\n            onChange={(event) => {\r\n              changeCurrentTime(event);\r\n            }}\r\n            style={{\r\n              background: `linear-gradient(to right, var(--themeColor2) ${inputRange}%, #fff ${inputRange}%)`,\r\n            }}\r\n          />\r\n          <div className=\"startAndEndTime\">\r\n            <span>{displayTime(currentTime)}</span>\r\n            <span>{displayTime(songDuration)}</span>\r\n          </div>\r\n          <div className=\"btns\">\r\n            <button\r\n              className=\"shuffleBtn\"\r\n              onClick={() => setShuffleMode(checkNumber(shuffleMode + 1, 1))}\r\n              style={\r\n                shuffleMode\r\n                  ? { background: \"var(--reallyTransparentWhite)\" }\r\n                  : {}\r\n              }\r\n            >\r\n              <TiArrowShuffle\r\n                style={shuffleMode ? { color: \"var(--themeColor)\" } : {}}\r\n              />\r\n            </button>\r\n            <button\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                prevSong();\r\n              }}\r\n            >\r\n              <FaBackward />\r\n            </button>\r\n            <button\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                playSong();\r\n              }}\r\n            >\r\n              {play ? <FaPause /> : <FaPlay />}\r\n            </button>\r\n            <button\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                nextSong();\r\n              }}\r\n            >\r\n              <FaForward />\r\n            </button>\r\n            <button\r\n              className=\"repeatBtn\"\r\n              onClick={() => setRepeatMode(checkNumber(repeatMode + 1, 2))}\r\n              style={\r\n                repeatMode\r\n                  ? { background: \"var(--reallyTransparentWhite)\" }\r\n                  : {}\r\n              }\r\n            >\r\n              <TiArrowRepeat\r\n                style={repeatMode ? { color: \"var(--themeColor)\" } : {}}\r\n              />\r\n              <span style={repeatMode === 2 ? { opacity: 1 } : {}}></span>\r\n            </button>\r\n            <ColorCircles play={play} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ) : null;\r\n  }\r\n);\r\n","import React, { memo } from \"react\";\r\nimport { BiChevronLeft } from \"react-icons/bi\";\r\nimport { FiMinus } from \"react-icons/fi\";\r\nimport { HiChevronDown } from \"react-icons/hi\";\r\nimport \"../../../app/index.css\";\r\nimport { useScreen } from \"../../../contexts/screen\";\r\nimport { useSong } from \"../../../contexts/song\";\r\nimport { rightSide } from \"../../../shared/data/player-right-side\";\r\nimport useFullScreenPlayer from \"../lib/hooks/use-full-screen-player\";\r\nimport { Player } from \"./organisms/player\";\r\n\r\nconst FullScreenPlayer = memo(() => {\r\n  const { inputRef, openFullScreenPlayer } = useSong();\r\n  const { isMobile, screenWidth } = useScreen();\r\n  const {\r\n    deltaY,\r\n    transformTransition,\r\n    refPassthroughBg,\r\n    handlers,\r\n    returnToInitial,\r\n    setOpenFullScreenPlayer,\r\n    openMenu,\r\n    setOpenMenu,\r\n    rightSideCurrentPage,\r\n    noLyrics,\r\n    changeRightSidePage,\r\n    lyricsRef,\r\n    rightSideContent,\r\n    handlersForMobileMenu,\r\n    refPassthroughMobileMenu,\r\n    deltaYMobileMenu,\r\n    mobileMenuTransition,\r\n    mobileContentScroll,\r\n  } = useFullScreenPlayer();\r\n\r\n  return (\r\n    <div\r\n      className=\"bg\"\r\n      style={\r\n        openFullScreenPlayer\r\n          ? {\r\n              top: 0,\r\n              opacity: 1,\r\n              visibility: \"visible\",\r\n              zIndex: 10,\r\n              transform: `translateY(${deltaY}px)`,\r\n              borderRadius: `${deltaY < 20 ? deltaY : 20}px ${\r\n                deltaY < 20 ? deltaY : 20\r\n              }px 0 0`,\r\n              transition: `.4s opacity, ${transformTransition}s transform, .4s top, .4s visibility`,\r\n            }\r\n          : {\r\n              transform: `translateY(${deltaY}px)`,\r\n              transition: `.4s opacity, ${transformTransition}s transform, .4s top, .4s visibility`,\r\n            }\r\n      }\r\n      ref={refPassthroughBg}\r\n      {...handlers}\r\n      onTouchEnd={returnToInitial}\r\n    >\r\n      <div\r\n        className=\"closeFullScreen\"\r\n        onClick={() => {\r\n          setOpenFullScreenPlayer(false);\r\n        }}\r\n      >\r\n        {window.innerWidth > 1000 ? (\r\n          <HiChevronDown />\r\n        ) : (\r\n          <FiMinus style={{ opacity: 0.6 }} />\r\n        )}\r\n      </div>\r\n      <div className=\"FullScreenPlayer\">\r\n        <div\r\n          className=\"leftSide\"\r\n          style={\r\n            !openMenu\r\n              ? { width: \"100%\" }\r\n              : isMobile\r\n              ? {\r\n                  opacity: 0.6,\r\n                  visibility: \"visible\",\r\n                  transform: `translateY(20px)`,\r\n                  borderRadius: `10px`,\r\n                  transition: `.4s`,\r\n                }\r\n              : null\r\n          }\r\n        >\r\n          <Player inputRef={inputRef} />\r\n        </div>\r\n        {screenWidth > 1000 ? (\r\n          <div\r\n            className=\"rightSideWrapper\"\r\n            style={\r\n              !openMenu\r\n                ? { transform: \"translateX(calc(100% - 90px))\", width: 0 }\r\n                : {}\r\n            }\r\n          >\r\n            <button\r\n              className=\"menuBtn\"\r\n              style={\r\n                openMenu\r\n                  ? { transform: \"rotate(180deg)\" }\r\n                  : { opacity: 0, visibility: \"hidden\" }\r\n              }\r\n              onClick={() => setOpenMenu(!openMenu)}\r\n            >\r\n              <BiChevronLeft />\r\n            </button>\r\n            <div className=\"rightSideControl\">\r\n              {rightSide.map((el, i) => {\r\n                return (\r\n                  <div\r\n                    className=\"controlIcon\"\r\n                    key={el.id}\r\n                    style={\r\n                      el.id === rightSideCurrentPage && openMenu\r\n                        ? { background: \"var(--themeColor)\" }\r\n                        : el.id === 2 && noLyrics()\r\n                        ? { opacity: 0.4 }\r\n                        : {}\r\n                    }\r\n                    onClick={() => changeRightSidePage(el)}\r\n                  >\r\n                    {el.icon}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div\r\n              className=\"rightSide\"\r\n              ref={lyricsRef}\r\n              style={!openMenu ? { display: \"none\" } : {}}\r\n            >\r\n              {rightSideContent(rightSideCurrentPage)}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div\r\n            className=\"mobilePlayerMenu\"\r\n            {...handlersForMobileMenu}\r\n            ref={refPassthroughMobileMenu}\r\n            style={\r\n              openMenu\r\n                ? {\r\n                    top: `calc(100% - calc(70vh + 55px) + ${deltaYMobileMenu}px)`,\r\n                    transition: `${mobileMenuTransition}s`,\r\n                  }\r\n                : {\r\n                    top: `calc(100% - 55px + ${deltaYMobileMenu}px)`,\r\n                    transition: `${mobileMenuTransition}s`,\r\n                  }\r\n            }\r\n            // onTouchStart = {returnToInitialMobileMenu}\r\n          >\r\n            <div className=\"mobilePlayerMenuClose\">\r\n              <FiMinus\r\n                style={{ opacity: 0.6, width: \"50px\" }}\r\n                onClick={() => setOpenMenu(!openMenu)}\r\n              />\r\n            </div>\r\n            <div className=\"controlIconsWrapper\">\r\n              {rightSide.map((el, i) => {\r\n                if (i <= 3) {\r\n                  return (\r\n                    <div\r\n                      className=\"controlIcon\"\r\n                      key={el.id}\r\n                      style={\r\n                        el.id === rightSideCurrentPage && openMenu\r\n                          ? { background: \"var(--transparentWhite)\" }\r\n                          : el.id === 2 && noLyrics()\r\n                          ? { opacity: 0.4 }\r\n                          : {}\r\n                      }\r\n                      onClick={(e) => changeRightSidePage(el)}\r\n                    >\r\n                      {el.title}\r\n                    </div>\r\n                  );\r\n                }\r\n              })}\r\n            </div>\r\n            <div\r\n              className=\"mobilePlayerMenuContent\"\r\n              ref={mobileContentScroll}\r\n              style={!openMenu ? { opacity: 0 } : {}}\r\n            >\r\n              {rightSideContent(rightSideCurrentPage)}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default FullScreenPlayer;\r\n","import { BiMusic, BiSearch } from \"react-icons/bi\";\r\nimport { FiHome, FiMessageCircle } from \"react-icons/fi\";\r\nimport { CHAT_ROUTE, HOME_ROUTE, LIBRARY_ROUTE, SEARCH_ROUTE } from \"./consts\";\r\n\r\nexport const leftSideBar = [\r\n\t{\r\n\t\tid: 0,\r\n\t\ticon: <FiHome />,\r\n\t\ttitle: 'Home',\r\n\t\tlink: HOME_ROUTE\r\n\t},\r\n\t{\r\n\t\tid: 1,\r\n\t\ticon: <BiMusic />,\r\n\t\ttitle: 'Library',\r\n\t\tlink: LIBRARY_ROUTE\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\ticon: <BiSearch />,\r\n\t\ttitle: 'Search',\r\n\t\tlink: SEARCH_ROUTE\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\ticon: <FiMessageCircle />,\r\n\t\ttitle: 'Chat',\r\n\t\tlink: CHAT_ROUTE\r\n\t},\r\n\r\n]","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport bigNumberFormat from \"../../lib/big-number-format\";\r\n\r\nconst NotificationCircleWrapper = styled.div`\r\n  border-radius: 100%;\r\n  width: 20px;\r\n  height: 20px;\r\n  font-size: 0.7em;\r\n  background: var(--red);\r\n  color: #fff;\r\n  font-weight: bold;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 10px;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nexport const NotificationCircle = ({ value }) => {\r\n  return (\r\n    !!value && (\r\n      <NotificationCircleWrapper className=\"notification-circle\">\r\n        {bigNumberFormat(value)}\r\n      </NotificationCircleWrapper>\r\n    )\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst LeftsideBarContainer = styled.div`\r\n  width: 100%;\r\n  border-radius: var(--standartBorderRadius);\r\n  background: var(--navItemColor);\r\n  color: #fff;\r\n  font-weight: bold;\r\n  min-height: 40px;\r\n  padding: 0.4px 5px;\r\n  box-sizing: border-box;\r\n  scroll-snap-type: y mandatory;\r\n  transition: 0.2s height;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    a {\r\n      text-decoration: none;\r\n    }\r\n  }\r\n\r\n  .personName {\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n  }\r\n`;\r\n\r\nexport default LeftsideBarContainer;\r\n","import { useEffect, useState } from 'react';\r\nimport { useAuth } from '../../../contexts/auth';\r\nimport { firestore } from '../../../firebase';\r\nimport { amountOfUnseenMessages } from '../../chats/lib/amount-of-unseen-messages';\r\n\r\nconst useAmountOfUnseenMessages = () => {\r\n\tconst { currentUser } = useAuth()\r\n\tconst [amount, setAmount] = useState(0)\r\n\r\n\tuseEffect(() => {\r\n\t\tconst unsubscribe = firestore\r\n\t\t\t.collection(\"chats\")\r\n\t\t\t.where(\"participants\", \"array-contains\", currentUser.uid)\r\n\t\t\t.onSnapshot((snapshot) => {\r\n\t\t\t\tsetAmount(0)\r\n\t\t\t\tsnapshot.docs.map((chat) => {\r\n\t\t\t\t\tconst chatData = chat.data()\r\n\t\t\t\t\tsetAmount(prev => prev + amountOfUnseenMessages(chatData.messages, currentUser))\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\treturn () => {\r\n\t\t\tunsubscribe();\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn amount\r\n}\r\n\r\nexport default useAmountOfUnseenMessages\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { NotificationCircle } from \"../../../../shared/ui/atoms/notification-circle\";\r\n\r\nexport default function NavigationItem({\r\n  id,\r\n  title,\r\n  icon,\r\n  link,\r\n  currentPage,\r\n  setCurrentPage,\r\n  notificationValue,\r\n}) {\r\n  return (\r\n    <Link to={link}>\r\n      <div\r\n        className={\"NavigationItem \" + (id === currentPage ? \"active\" : \"\")}\r\n        onClick={() => setCurrentPage(id)}\r\n      >\r\n        <div className=\"icon\">{icon}</div>\r\n        <b>{title}</b>\r\n        <NotificationCircle value={notificationValue} />\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { leftSideBar } from \"../../../../shared/data/left-side-bar\";\r\nimport useAmountOfUnseenMessages from \"../../lib/use-amount-of-unseen-messages\";\r\nimport NavigationItem from \"../atoms/navigation-item\";\r\n\r\nconst NavigationPanel = ({ currentPage, setCurrentPage }) => {\r\n  const [home, library, search, chat] = leftSideBar;\r\n  const amountOfUnseenMessages = useAmountOfUnseenMessages();\r\n  return (\r\n    <div className=\"NavigationPanel\">\r\n      <NavigationItem\r\n        key={0}\r\n        id={home.id}\r\n        title={home.title}\r\n        icon={home.icon}\r\n        link={home.link}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n      <NavigationItem\r\n        key={1}\r\n        id={library.id}\r\n        title={library.title}\r\n        icon={library.icon}\r\n        link={library.link}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n      <NavigationItem\r\n        key={2}\r\n        id={search.id}\r\n        title={search.title}\r\n        icon={search.icon}\r\n        link={search.link}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n      <NavigationItem\r\n        key={3}\r\n        id={chat.id}\r\n        title={chat.title}\r\n        icon={chat.icon}\r\n        link={chat.link}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n        notificationValue={amountOfUnseenMessages}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavigationPanel;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst OnlineCircleAnimationWrapper = styled.div`\r\n  width: 10px;\r\n  height: 10px;\r\n  background: var(--red);\r\n  box-shadow: 0 0 10px var(--red);\r\n  border-radius: 100%;\r\n  position: relative;\r\n\r\n  @keyframes waveAnimation {\r\n    0% {\r\n      opacity: 0;\r\n      transform: scale(0.95);\r\n    }\r\n    60% {\r\n      opacity: 0.5;\r\n      transform: scale(2);\r\n    }\r\n    100% {\r\n      opacity: 0;\r\n      transform: scale(0.95);\r\n    }\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    width: 10px;\r\n    height: 10px;\r\n    background: var(--red);\r\n    filter: brightness(0.3);\r\n    border-radius: 100%;\r\n    animation: waveAnimation 1.5s infinite;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\nconst OnlineCircleAnimation = () => {\r\n  return <OnlineCircleAnimationWrapper></OnlineCircleAnimationWrapper>;\r\n};\r\n\r\nexport default OnlineCircleAnimation;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BiShare } from \"react-icons/bi\";\r\nimport { FiMessageCircle, FiMusic } from \"react-icons/fi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\n\r\nimport { createChat } from \"../../../../shared/lib/create-—Åhat\";\r\nimport { findChatURL } from \"../../../../shared/lib/find-chat-url\";\r\nimport getShortString from \"../../../../shared/lib/get-short-string\";\r\nimport useUserOnline from \"../../../../shared/lib/hooks/use-user-online\";\r\nimport { Hint } from \"../../../../shared/ui/atoms/hint\";\r\nimport { IsOnlineCircle } from \"../../../../shared/ui/atoms/is-online-circle\";\r\nimport OnlineCircleAnimation from \"../../../../shared/ui/atoms/online-circle-animation\";\r\nimport useLastSongListened from \"../../../author/lib/hooks/use-last-song-listened\";\r\nimport shareWithFriends from \"../../../share/lib/share-with-friends\";\r\n\r\nexport const Person = ({ index, friend }) => {\r\n  const { currentUser } = useAuth();\r\n  const { openBottomMessage } = useModal();\r\n  const [friendChatId, setFriendChatId] = useState(0);\r\n  const [shouldCreate, setShouldCreate] = useState(false);\r\n  const [sendAnimation, setSendAnimation] = useState(\"\");\r\n  const { currentSong, currentSongData } = useSong();\r\n  const [loadingSendSong, setLoadingSendSong] = useState(false);\r\n  const isOnline = useUserOnline(friend.uid);\r\n  const [song, chooseSongItem] = useLastSongListened(friend);\r\n\r\n  useEffect(() => {\r\n    findChatURL([friend.uid], currentUser, setShouldCreate, setFriendChatId);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (sendAnimation?.length > 0) {\r\n      setLoadingSendSong(true);\r\n      setTimeout(() => {\r\n        setSendAnimation(\"\");\r\n        setLoadingSendSong(false);\r\n      }, 600);\r\n    }\r\n  }, [sendAnimation]);\r\n  return (\r\n    <div className=\"person\" key={index} id={friend.uid}>\r\n      <img\r\n        loading=\"lazy\"\r\n        src={currentSongData.cover}\r\n        alt=\"\"\r\n        className={\"sendSongImage \" + sendAnimation}\r\n      />\r\n\r\n      <div className=\"personBtns\">\r\n        <Link to={`/chat/${friendChatId}`}>\r\n          <button\r\n            onClick={() => {\r\n              if (shouldCreate)\r\n                createChat([currentUser.uid, friend.uid], friendChatId);\r\n            }}\r\n          >\r\n            <Hint text={\"chat\"} />\r\n            <FiMessageCircle />\r\n          </button>\r\n        </Link>\r\n\r\n        <button onClick={chooseSongItem}>\r\n          <Hint\r\n            text={\r\n              isOnline\r\n                ? getShortString(\r\n                    `${song?.name} | ${song?.authors[0].displayName}` ||\r\n                      \"No song data\",\r\n                    20\r\n                  )\r\n                : \"last listened song\"\r\n            }\r\n          />\r\n          {isOnline ? <OnlineCircleAnimation /> : <FiMusic />}\r\n        </button>\r\n\r\n        <button\r\n          onClick={() => {\r\n            if (!loadingSendSong) {\r\n              shareWithFriends({\r\n                shareList: [friend.uid],\r\n                currentUser,\r\n                itemId: currentSong,\r\n                whatToShare: \"song\",\r\n                setShouldCreate,\r\n                setFriendChatId,\r\n              });\r\n              setSendAnimation(\"sendAnimation\");\r\n              openBottomMessage(\r\n                `${currentSongData.name} was sent to ${friend.displayName}`\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          <Hint text={\"share\"} />\r\n          <BiShare />\r\n        </button>\r\n      </div>\r\n      <Link className=\"personImg\" to={`/authors/${friend.uid}`}>\r\n        <img loading=\"lazy\" src={friend.photoURL} alt=\"\" />\r\n      </Link>\r\n      <IsOnlineCircle userUID={friend.uid} />\r\n      <div className=\"personName\" style={{ pointerEvents: \"none\" }}>\r\n        {getShortString(friend.displayName, 12)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { BiAlbum } from \"react-icons/bi\";\r\nimport { FiCheck, FiPlayCircle, FiPlusCircle, FiShare } from \"react-icons/fi\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { FriendsToShareWith } from \"../../../share/ui/organisms/friends-to-share-with\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { useAddOrDeleteSong } from \"../../../../entities/playlist/lib/hooks/use-add-or-delete-song\";\r\nimport { usePlaylistSongs } from \"../../../../entities/playlist/lib/hooks/use-playlist-songs\";\r\nimport getShortString from \"../../../../shared/lib/get-short-string\";\r\nimport { Hint } from \"../../../../shared/ui/atoms/hint\";\r\n\r\nexport const TinyPlaylist = ({ playlist }) => {\r\n  const { toggleModal, setContent } = useModal();\r\n  const [playlistSongs, setPlaylistSongs] = useState([]);\r\n  const playSongsInPlaylist = usePlaylistSongs(\r\n    playlist,\r\n    playlistSongs,\r\n    setPlaylistSongs\r\n  );\r\n  const [addFunc, isAdded] = useAddOrDeleteSong(playlist);\r\n  const { currentUser } = useAuth();\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"TinyPlaylist\">\r\n      <div className=\"TinyPlaylistBtns\">\r\n        {playlist.authors.find((author) => author.uid === currentUser.uid) ? (\r\n          <button onClick={addFunc}>\r\n            {isAdded ? (\r\n              <>\r\n                <Hint text={`remove song`} />\r\n                <FiCheck />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Hint text={\"add song\"} />\r\n                <FiPlusCircle />\r\n              </>\r\n            )}\r\n          </button>\r\n        ) : (\r\n          <button\r\n            onClick={() => {\r\n              toggleModal();\r\n              setContent(\r\n                <FriendsToShareWith item={playlist} whatToShare={\"playlist\"} />\r\n              );\r\n            }}\r\n          >\r\n            <Hint text={\"share\"} />\r\n            <FiShare />\r\n          </button>\r\n        )}\r\n        <Link to={`/albums/${playlist.id}`}>\r\n          <button>\r\n            <Hint text={\"album\"} />\r\n            <BiAlbum />\r\n          </button>\r\n        </Link>\r\n        <button onClick={playSongsInPlaylist}>\r\n          <Hint text={\"play\"} />\r\n          <FiPlayCircle />\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"TinyPlaylistImg\"\r\n        style={{\r\n          backgroundImage: `url(${playlist.image})`,\r\n          display: \"inline-block\",\r\n          backgroundPosition: \"center center\",\r\n          backgroundSize: \"cover\",\r\n          position: \"relative\",\r\n        }}\r\n        onClick={() => history.push(`/albums/${playlist.id}`)}\r\n      >\r\n        {!playlist.image ? (\r\n          <BiAlbum\r\n            style={{\r\n              position: \"absolute\",\r\n              left: \"50%\",\r\n              top: \"50%\",\r\n              transform: \"translate(-50%, -50%)\",\r\n              width: \"20px\",\r\n              height: \"20px\",\r\n            }}\r\n          />\r\n        ) : null}\r\n      </div>\r\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n        <span>{getShortString(playlist.name, 12)}</span>\r\n        <span style={{ fontSize: \"0.8em\", color: \"grey\", fontWeight: \"500\" }}>\r\n          {playlist.isAlbum ? \"album\" : \"playlist\"}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { memo, useEffect, useState } from \"react\";\r\nimport { BiFolderPlus, BiFullscreen } from \"react-icons/bi\";\r\nimport { FiChevronDown, FiChevronUp } from \"react-icons/fi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AddPlaylist } from \"../../../../features/author/ui/organisms/add-playlist\";\r\nimport { FriendsToShareWith } from \"../../../share/ui/organisms/friends-to-share-with\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { useModal } from \"../../../../contexts/modal\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport Logo from \"../../../../shared/ui/images/Logo3.svg\";\r\nimport { leftSideBar } from \"../../../../shared/data/left-side-bar\";\r\nimport getShortString from \"../../../../shared/lib/get-short-string\";\r\nimport normalizeString from \"../../../../shared/lib/normalize-string\";\r\nimport { NotificationCircle } from \"../../../../shared/ui/atoms/notification-circle\";\r\nimport \"../style.css\";\r\nimport { Player } from \"../../../full-screen-player/ui/organisms/player\";\r\nimport LeftsideBarContainer from \"../atoms/container\";\r\nimport NavigationPanel from \"../molecules/navigation-panel\";\r\nimport { Person } from \"../molecules/person\";\r\nimport { TinyPlaylist } from \"../molecules/tiny-playlist\";\r\nimport useRenderCount from \"../../../../shared/lib/hooks/use-render-count\";\r\n\r\nexport const LeftsideBar = memo(() => {\r\n  const { currentUser } = useAuth();\r\n  const [userNotifications, setUserNotifications] = useState(0);\r\n  const {\r\n    leftSideBarInputRef,\r\n    setOpenFullScreenPlayer,\r\n    currentSongData,\r\n    yourFriends,\r\n    yourPlaylists,\r\n  } = useSong();\r\n  const { toggleModal, setContent } = useModal();\r\n  const [currentFriendToPlaylistPage, setCurrentFriendToPlaylistPage] =\r\n    useState(0);\r\n  const [currentPage, setCurrentPage] = useState(() => {\r\n    let page = leftSideBar.find((el, i) => {\r\n      if (window.location.hash.includes(normalizeString(el.title))) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    });\r\n    return page === undefined ? -1 : page.id;\r\n  });\r\n\r\n  useEffect(() => {\r\n    setUserNotifications(\r\n      currentUser.friends.reduce((acc, friend) => {\r\n        if (friend.status === \"requested\") return acc + 1;\r\n        else return acc;\r\n      }, 0)\r\n    );\r\n  }, [JSON.stringify(currentUser.friends)]);\r\n\r\n  return (\r\n    <div className=\"LeftsideBar\">\r\n      <div className=\"logo\">\r\n        <img loading=\"lazy\" src={Logo} alt=\"\" />\r\n        <h3>Soundbubble</h3>\r\n      </div>\r\n      <LeftsideBarContainer onClick={() => setCurrentPage(-1)}>\r\n        <Link to={`/authors/${currentUser.uid}`}>\r\n          <div\r\n            className=\"person\"\r\n            style={currentPage === -1 ? { background: \"var(--blue)\" } : {}}\r\n          >\r\n            <NotificationCircle value={userNotifications} />\r\n            <div\r\n              className=\"personImg\"\r\n              style={{ backgroundImage: `url(${currentUser.photoURL})` }}\r\n            ></div>\r\n            <div className=\"personName\">\r\n              {getShortString(currentUser.displayName, 11)}\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      </LeftsideBarContainer>\r\n      <NavigationPanel\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n      <LeftsideBarContainer className=\"leftSideBarContainer friendsAndPlaylists\">\r\n        <span\r\n          style={{\r\n            display: !currentFriendToPlaylistPage ? \"block\" : \"none\",\r\n            animation: \"scrollFromBottom .2s forwards\",\r\n          }}\r\n        >\r\n          {yourFriends.length > 0 ? (\r\n            <>\r\n              {yourFriends.map((friend, index) => {\r\n                if (index <= 2) {\r\n                  return <Person index={friend.uid} friend={friend} />;\r\n                }\r\n                return null;\r\n              })}\r\n              <h4\r\n                className=\"seeMoreBtn\"\r\n                onClick={() => {\r\n                  toggleModal();\r\n                  setContent(\r\n                    <FriendsToShareWith\r\n                      item={currentSongData}\r\n                      whatToShare={\"song\"}\r\n                    />\r\n                  );\r\n                }}\r\n              >\r\n                See more\r\n              </h4>\r\n            </>\r\n          ) : (\r\n            <h4\r\n              style={{\r\n                alignSelf: \"center\",\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              No friends added\r\n            </h4>\r\n          )}\r\n        </span>\r\n        <span\r\n          style={{\r\n            display: currentFriendToPlaylistPage ? \"block\" : \"none\",\r\n            animation: \"scrollFromTop .2s forwards\",\r\n          }}\r\n        >\r\n          {yourPlaylists.slice(0, 3).map((playlist, index) => {\r\n            return <TinyPlaylist playlist={playlist} key={playlist.id} />;\r\n          })}\r\n          <button\r\n            className=\"createPlaylistBtn\"\r\n            onClick={() => {\r\n              toggleModal();\r\n              setContent(<AddPlaylist />);\r\n            }}\r\n            style={{ margin: \"5px 0\" }}\r\n          >\r\n            <BiFolderPlus />\r\n            Create Playlist\r\n          </button>\r\n        </span>\r\n        <div className=\"upAndDownBtns\">\r\n          <button\r\n            onClick={() => setCurrentFriendToPlaylistPage(0)}\r\n            style={!currentFriendToPlaylistPage ? { opacity: \"0.3\" } : {}}\r\n          >\r\n            <FiChevronUp />\r\n          </button>\r\n          <button\r\n            onClick={() => setCurrentFriendToPlaylistPage(1)}\r\n            style={currentFriendToPlaylistPage ? { opacity: \"0.3\" } : {}}\r\n          >\r\n            <FiChevronDown />\r\n          </button>\r\n        </div>\r\n      </LeftsideBarContainer>\r\n      <div className=\"leftSideBarContainer\">\r\n        {currentSongData.id === -1 ? null : (\r\n          <div className=\"littlePlayer\">\r\n            <Player textLimit={15} inputRef={leftSideBarInputRef} />\r\n            <div\r\n              className=\"fullScreenBtn\"\r\n              onClick={() => setOpenFullScreenPlayer(true)}\r\n            >\r\n              {/* <Hint text = {\"open full screen\"} style = {{fontSize:'0.8em'}}/> */}\r\n              <BiFullscreen />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const MobileControlBarItem = ({\r\n  element,\r\n  currentPage,\r\n  setCurrentPage,\r\n}) => {\r\n  return (\r\n    <Link\r\n      to={element.link}\r\n      className=\"MobileControlBarItem\"\r\n      onClick={() => setCurrentPage(element.id)}\r\n      style={element.id === currentPage ? {} : { opacity: 0.4 }}\r\n    >\r\n      {element.icon}\r\n    </Link>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { BiUserCircle } from \"react-icons/bi\";\r\nimport { useAuth } from \"../../../../contexts/auth\";\r\nimport { leftSideBar } from \"../../../../shared/data/left-side-bar\";\r\nimport normalizeString from \"../../../../shared/lib/normalize-string\";\r\nimport \"../style.css\";\r\nimport { MobileControlBarItem } from \"../atoms/mobile-controlbar-item\";\r\n\r\nexport const BottomControlBar = () => {\r\n  const { currentUser } = useAuth();\r\n  const userElement = {\r\n    icon: <BiUserCircle />,\r\n    link: `/authors/${currentUser.uid}`,\r\n  };\r\n  const [currentPage, setCurrentPage] = useState(() => {\r\n    let page = leftSideBar.find((el, i) => {\r\n      if (window.location.hash.includes(normalizeString(el.title))) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    });\r\n    return page === undefined ? 0 : page.id;\r\n  });\r\n\r\n  return (\r\n    <div className=\"BottomControlBar\">\r\n      {leftSideBar.map((el, i) => {\r\n        return (\r\n          <MobileControlBarItem\r\n            element={el}\r\n            key={i}\r\n            currentPage={currentPage}\r\n            setCurrentPage={setCurrentPage}\r\n          />\r\n        );\r\n      })}\r\n      <MobileControlBarItem\r\n        element={userElement}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSong } from \"../../../../contexts/song\";\r\nimport { Player } from \"../../../full-screen-player/ui/organisms/player\";\r\nimport { BottomControlBar } from \"../molecules/bottom-control-bar\";\r\n\r\nexport const FullBottomSide = () => {\r\n  const { setOpenFullScreenPlayer, inputRange } = useSong();\r\n  return (\r\n    <div className=\"FullBottomSide\">\r\n      <span\r\n        onClick={() => setOpenFullScreenPlayer(true)}\r\n        style={{\r\n          display: \"block\",\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        <Player textLimit={25} linkToAuthors={false} />\r\n        <span\r\n          className=\"mobileSongRange\"\r\n          style={{ width: inputRange + \"%\" }}\r\n        ></span>\r\n      </span>\r\n      <BottomControlBar />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useModal } from \"../../../contexts/modal\";\r\nimport useOutsideClick from \"../../../shared/lib/hooks/use-outside-click\";\r\nimport { useScreen } from \"../../../contexts/screen\";\r\nexport const ModalWindow = ({ ...restProps }) => {\r\n  const { openModal, setOpenModal, content } = useModal();\r\n  const modalRef = useRef(null);\r\n  const { screenHeight } = useScreen();\r\n  useOutsideClick(modalRef, setOpenModal);\r\n  return (\r\n    <div\r\n      className=\"modal_darkBg\"\r\n      style={\r\n        !openModal\r\n          ? { opacity: 0, visibility: \"hidden\" }\r\n          : { height: screenHeight }\r\n      }\r\n    >\r\n      <div\r\n        className=\"ModalWindow\"\r\n        {...restProps}\r\n        ref={modalRef}\r\n        style={\r\n          !openModal\r\n            ? {\r\n                opacity: 0,\r\n                visibility: \"hidden\",\r\n                transform: \"translateY(40px)\",\r\n              }\r\n            : {}\r\n        }\r\n      >\r\n        {content}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { useRouteMatch } from 'react-router';\r\nimport { useAuth } from '../../../contexts/auth';\r\nimport { firestore } from '../../../firebase';\r\n\r\nconst useChatNotifications = () => {\r\n\tconst [notifications, setNotifications] = useState([]);\r\n\tconst { currentUser } = useAuth()\r\n\tconst match = useRouteMatch(\"/chat/:chatId\");\r\n\tconst chatId = match?.params?.chatId\r\n\r\n\tuseEffect(() => {\r\n\t\tconst tempObj = {}\r\n\t\tconst unsubscribe = firestore\r\n\t\t\t.collection(\"chats\")\r\n\t\t\t.where(\"participants\", \"array-contains\", currentUser.uid)\r\n\t\t\t.onSnapshot((snapshot) => {\r\n\t\t\t\tsetNotifications((prev) => {\r\n\t\t\t\t\tconst temp = [...prev];\r\n\t\t\t\t\tsnapshot.docChanges().map(async (doc) => {\r\n\t\t\t\t\t\tconst chatData = doc.doc.data()\r\n\t\t\t\t\t\tif (chatId !== chatData.id) {\r\n\t\t\t\t\t\t\tif (doc.type === 'added') tempObj[chatData.id] = chatData.messages.length\r\n\t\t\t\t\t\t\telse if (doc.type === \"modified\" && chatData.messages.length && !!tempObj[chatData.id] && chatData.messages.length !== tempObj[chatData.id]) {\r\n\t\t\t\t\t\t\t\tconst { id, chatName, chatImage, messages } = chatData;\r\n\t\t\t\t\t\t\t\tconst lastMessage = messages[messages.length - 1];\r\n\t\t\t\t\t\t\t\tconst shouldPushNotif =\r\n\t\t\t\t\t\t\t\t\tlastMessage.sender !== currentUser.uid &&\r\n\t\t\t\t\t\t\t\t\t!lastMessage.seenBy.includes(currentUser.uid)\r\n\r\n\t\t\t\t\t\t\t\tif (shouldPushNotif) {\r\n\t\t\t\t\t\t\t\t\ttemp.push({\r\n\t\t\t\t\t\t\t\t\t\tchatId: id,\r\n\t\t\t\t\t\t\t\t\t\tchatName,\r\n\t\t\t\t\t\t\t\t\t\tchatImage,\r\n\t\t\t\t\t\t\t\t\t\tmessage: messages[messages.length - 1],\r\n\t\t\t\t\t\t\t\t\t\tuserId: messages[messages.length - 1].sender,\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\ttempObj[id] += 1\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn temp;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\treturn () => {\r\n\t\t\tunsubscribe();\r\n\t\t};\r\n\t}, [chatId]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (notifications.length) {\r\n\t\t\tlet timeout;\r\n\t\t\ttimeout = setTimeout(() => {\r\n\t\t\t\tsetNotifications((prev) => prev.slice(1, prev.length));\r\n\t\t\t}, 6200);\r\n\r\n\t\t\treturn () => clearTimeout(timeout)\r\n\t\t}\r\n\t}, [notifications.length]);\r\n\r\n\treturn [notifications, setNotifications]\r\n}\r\n\r\nexport default useChatNotifications\r\n","import { useEffect } from 'react';\r\nimport { useSong } from '../../../contexts/song';\r\n\r\nimport displayAuthorsStr from '../display-authors-str';\r\n\r\n\r\n\r\nexport const useMediaMetadata = () => {\r\n\tconst { currentSongData, currentSongPlaylistSource, nextSong, prevSong, songRef, setPlay } = useSong()\r\n\r\n\tconst updatePositionState = () => {\r\n\t\tnavigator.mediaSession.setPositionState({\r\n\t\t\tduration: songRef.current.duration,\r\n\t\t\tplaybackRate: songRef.current.playbackRate,\r\n\t\t\tposition: songRef.current.currentTime\r\n\t\t});\r\n\t}\r\n\r\n\tfunction playSong() {\r\n\t\tsongRef.current.play()\r\n\t\tsetPlay(true)\r\n\t}\r\n\r\n\tfunction pauseSong() {\r\n\t\tsongRef.current.pause()\r\n\t\tsetPlay(false)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif ('mediaSession' in navigator && currentSongData.id !== -1) {\r\n\t\t\tnavigator.mediaSession.metadata = new window.MediaMetadata({\r\n\t\t\t\ttitle: currentSongData.name,\r\n\t\t\t\tartist: displayAuthorsStr(currentSongData.authors),\r\n\t\t\t\talbum: currentSongPlaylistSource.name,\r\n\t\t\t\tartwork: [\r\n\t\t\t\t\t{ src: currentSongData.cover, sizes: '512x512', type: 'image/png' },\r\n\t\t\t\t]\r\n\t\t\t});\r\n\r\n\t\t\tnavigator.mediaSession.setActionHandler('play', () => { playSong(); });\r\n\t\t\tnavigator.mediaSession.setActionHandler('pause', pauseSong);\r\n\t\t\tnavigator.mediaSession.setActionHandler('stop', pauseSong);\r\n\t\t\tnavigator.mediaSession.setActionHandler('nexttrack', () => { nextSong(); updatePositionState() });\r\n\t\t\tnavigator.mediaSession.setActionHandler('previoustrack', () => { prevSong(); updatePositionState() })\r\n\t\t}\r\n\t}, [currentSongData.id])\r\n}\r\n","import { useEffect, useMemo } from 'react';\r\nimport { useAuth } from '../../../contexts/auth';\r\nimport { firestore } from '../../../firebase';\r\n\r\nconst useUpdateOnlineStatus = () => {\r\n\tconst { currentUser } = useAuth()\r\n\tconst fiveMinutes = useMemo(() => 300000, []);\r\n\r\n\tconst updateOnlineStatus = () => {\r\n\t\tfirestore\r\n\t\t\t.collection(\"users\")\r\n\t\t\t.doc(currentUser.uid)\r\n\t\t\t.update({ online: new Date().getTime() });\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst interval = setInterval(() => {\r\n\t\t\tupdateOnlineStatus()\r\n\t\t}, fiveMinutes);\r\n\t\treturn () => clearInterval(interval);\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tupdateOnlineStatus()\r\n\t}, []);\r\n}\r\n\r\nexport default useUpdateOnlineStatus\r\n","import React from \"react\";\r\nimport { ContentRouter } from \"../../app/routers/content-router\";\r\nimport { useScreen } from \"../../contexts/screen\";\r\nimport { useSong } from \"../../contexts/song\";\r\nimport { useUpdateListenCount } from \"../../entities/song/lib/hooks/use-update-listen-count\";\r\nimport { MessageWindow } from \"../../features/bottom-message/ui/message-window\";\r\nimport ChatNotificationWindow from \"../../features/chats/ui/organisms/chat-notification-window\";\r\nimport { ConfirmWindow } from \"../../features/confirm/ui/confirm-window\";\r\nimport FullScreenPlayer from \"../../features/full-screen-player/ui/full-screen-player\";\r\nimport \"../../features/full-screen-player/ui/style.css\";\r\nimport { LeftsideBar } from \"../../features/leftside-bar/ui/organisms/leftside-bar\";\r\nimport { FullBottomSide } from \"../../features/mobile/ui/organisms/full-bottom-side\";\r\nimport { ModalWindow } from \"../../features/modal/ui/modal-window\";\r\nimport useChatNotifications from \"../lib/hooks/use-chat-notifications\";\r\nimport { useMediaMetadata } from \"../lib/hooks/use-media-metadata\";\r\nimport useUpdateOnlineStatus from \"../lib/hooks/use-update-online-status\";\r\n\r\nexport const ContentWrapper = () => {\r\n  const {\r\n    songRef,\r\n    loadSongData,\r\n    playing,\r\n    songSrc,\r\n    openFullScreenPlayer,\r\n    repeatMode,\r\n    setPlay,\r\n    prevSong,\r\n    currentSongQueue,\r\n    nextSong,\r\n  } = useSong();\r\n  const { isMobile, screenHeight } = useScreen();\r\n  const [notifications, setNotifications] = useChatNotifications();\r\n  // useFriendInviteNotifications();\r\n\r\n  useMediaMetadata();\r\n  useUpdateOnlineStatus();\r\n  const updateListenCount = useUpdateListenCount();\r\n\r\n  function audioEnded() {\r\n    if (repeatMode === 0) {\r\n      songRef.current.pause();\r\n      setPlay(false);\r\n      return prevSong();\r\n    } else if (repeatMode === 1) {\r\n      if (currentSongQueue.length === 1) {\r\n        prevSong();\r\n        updateListenCount();\r\n        return songRef.current.play();\r\n      }\r\n      return nextSong();\r\n    }\r\n    prevSong();\r\n    updateListenCount();\r\n    songRef.current.play();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <audio\r\n        src={songSrc}\r\n        ref={songRef}\r\n        onLoadedData={loadSongData}\r\n        onTimeUpdate={playing}\r\n        onEnded={audioEnded}\r\n      ></audio>\r\n      <div\r\n        className={\"Wrapper \" + (openFullScreenPlayer ? \"turnedOff\" : \"\")}\r\n        style={isMobile ? { height: screenHeight } : { height: \"100vh\" }}\r\n      >\r\n        {!isMobile ? (\r\n          <LeftsideBar />\r\n        ) : window.location.hash.substr(2, 4) === \"chat\" &&\r\n          window.location.hash.length > 6 ? null : (\r\n          <FullBottomSide />\r\n        )}\r\n        <div className=\"Content\">\r\n          <ContentRouter />\r\n        </div>\r\n        <MessageWindow />\r\n        <ModalWindow />\r\n        <ConfirmWindow />\r\n        {notifications.map((notif, index) => {\r\n          return (\r\n            <ChatNotificationWindow\r\n              {...notif}\r\n              index={index}\r\n              notifsLen={notifications.length}\r\n              setNotifications={setNotifications}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <FullScreenPlayer />\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useRef } from 'react'\r\nimport { useSong } from '../../../../contexts/song'\r\nimport { firestore } from '../../../../firebase'\r\n\r\nexport const useUpdateListenCount = () => {\r\n\tlet listenCountTimeOut = useRef()\r\n\tconst { currentSongData, currentSongPlaylistSource, songDuration, play } = useSong()\r\n\tfunction updateListenCount() {\r\n\t\tif (currentSongData.id !== -1) {\r\n\t\t\tlistenCountTimeOut.current = setTimeout(async () => {\r\n\t\t\t\tlet listens = (await firestore.collection('songs').doc(currentSongData.id).get()).data().listens\r\n\t\t\t\t++listens\r\n\t\t\t\tfirestore.collection('songs').doc(currentSongData.id).update({\r\n\t\t\t\t\tlistens: listens\r\n\t\t\t\t})\r\n\r\n\t\t\t\t//update playlist listens\r\n\t\t\t\tif (currentSongPlaylistSource.source.substr(1, 6) === 'albums') {\r\n\t\t\t\t\tconst sourceId = currentSongPlaylistSource.source.substr(8, currentSongPlaylistSource.source.length - 8)\r\n\t\t\t\t\tfirestore.collection('playlists').doc(sourceId).get().then((res) => {\r\n\t\t\t\t\t\tlet listedData = res.data().listens\r\n\t\t\t\t\t\tlistedData++\r\n\t\t\t\t\t\tfirestore.collection('playlists').doc(sourceId).update({\r\n\t\t\t\t\t\t\tlistens: listedData\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//update authors' listens\r\n\t\t\t\tcurrentSongData.authors.forEach(async author => {\r\n\t\t\t\t\tlet authorNumberOfListenersPerMonth = (await firestore.collection('users').doc(author.uid).get()).data().numberOfListenersPerMonth\r\n\t\t\t\t\t++authorNumberOfListenersPerMonth\r\n\t\t\t\t\tfirestore.collection('users').doc(author.uid).update({\r\n\t\t\t\t\t\tnumberOfListenersPerMonth: authorNumberOfListenersPerMonth\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t}, songDuration * 1000 * 0.5)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tclearTimeout(listenCountTimeOut.current)\r\n\t\tif (play) {\r\n\t\t\tupdateListenCount()\r\n\t\t}\r\n\t}, [play, currentSongData.id, songDuration])\r\n\r\n\treturn updateListenCount\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { useAuth } from '../../contexts/auth'\r\nimport { publicRoutes } from '../routes'\r\nimport { LOGIN_ROUTE } from '../../shared/data/consts'\r\nimport { ContentWrapper } from '../../shared/ui/content-wrapper'\r\n\r\nexport const AppRouter = () => {\r\n\tconst { currentUser } = useAuth()\r\n\treturn currentUser.uid ?\r\n\t\t(\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path='/' component={ContentWrapper} />\r\n\t\t\t</Switch>\r\n\t\t) :\r\n\t\t(\r\n\t\t\t<Switch>\r\n\t\t\t\t{publicRoutes.map(({ path, Component }, i) => {\r\n\t\t\t\t\treturn <Route path={path} component={Component} exact={true} key={i} />\r\n\t\t\t\t})}\r\n\t\t\t\t<Redirect to={LOGIN_ROUTE} />\r\n\t\t\t</Switch>\r\n\t\t)\r\n}\r\n","import './index.css';\r\nimport React from 'react'\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { AppRouter } from './routers/app-router';\r\n\r\nexport default function App() {\r\n  return (\r\n    <HashRouter basename=\"/\">\r\n      <AppRouter />\r\n    </HashRouter>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app';\r\nimport { AuthProvider } from './contexts/auth';\r\nimport { ModalClassProvider } from './contexts/modal';\r\nimport { ScreenProvider } from './contexts/screen';\r\nimport { SongProvider } from './contexts/song';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ScreenProvider>\r\n      <AuthProvider>\r\n        <ModalClassProvider>\r\n          <SongProvider>\r\n            <App />\r\n          </SongProvider>\r\n        </ModalClassProvider>\r\n      </AuthProvider>\r\n    </ScreenProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}